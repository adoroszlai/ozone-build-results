<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211208 16:18:18.171" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211208 16:09:54.561" level="INFO">${random} = 94165</msg>
<status status="PASS" starttime="20211208 16:09:54.561" endtime="20211208 16:09:54.561"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:09:54.567" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-94165 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:09:58.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:09:58.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:09:54.563" endtime="20211208 16:09:58.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:09:58.492" level="INFO"/>
<status status="PASS" starttime="20211208 16:09:58.491" endtime="20211208 16:09:58.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:09:58.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:09:58.492" endtime="20211208 16:09:58.493"/>
</kw>
<status status="PASS" starttime="20211208 16:09:54.563" endtime="20211208 16:09:58.493"/>
</kw>
<msg timestamp="20211208 16:09:58.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:09:54.562" endtime="20211208 16:09:58.493"/>
</kw>
<msg timestamp="20211208 16:09:58.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:09:54.562" endtime="20211208 16:09:58.494"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:09:58.494" endtime="20211208 16:09:58.494"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:09:54.560" endtime="20211208 16:09:58.494"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211208 16:09:54.510" endtime="20211208 16:09:58.496"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211208 16:13:41.148" level="INFO">${random} = 88324</msg>
<status status="PASS" starttime="20211208 16:13:41.148" endtime="20211208 16:13:41.148"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:13:41.153" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-88324 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:13:44.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:13:44.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:13:41.150" endtime="20211208 16:13:44.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:13:44.770" level="INFO"/>
<status status="PASS" starttime="20211208 16:13:44.769" endtime="20211208 16:13:44.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:13:44.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:13:44.770" endtime="20211208 16:13:44.771"/>
</kw>
<status status="PASS" starttime="20211208 16:13:41.150" endtime="20211208 16:13:44.771"/>
</kw>
<msg timestamp="20211208 16:13:44.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:13:41.149" endtime="20211208 16:13:44.771"/>
</kw>
<msg timestamp="20211208 16:13:44.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:13:41.149" endtime="20211208 16:13:44.771"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:13:44.772" endtime="20211208 16:13:44.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:13:41.147" endtime="20211208 16:13:44.772"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211208 16:13:41.100" endtime="20211208 16:13:44.774"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:13:48.189" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:13:50.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:13:50.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:13:48.186" endtime="20211208 16:13:50.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:13:50.387" level="INFO"/>
<status status="PASS" starttime="20211208 16:13:50.387" endtime="20211208 16:13:50.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:13:50.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:13:50.388" endtime="20211208 16:13:50.388"/>
</kw>
<status status="PASS" starttime="20211208 16:13:48.185" endtime="20211208 16:13:50.388"/>
</kw>
<msg timestamp="20211208 16:13:50.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:13:48.185" endtime="20211208 16:13:50.389"/>
</kw>
<msg timestamp="20211208 16:13:50.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:13:48.184" endtime="20211208 16:13:50.389"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:13:50.389" endtime="20211208 16:13:50.389"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:13:50.409" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:13:52.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:13:52.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:13:50.402" endtime="20211208 16:13:52.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:13:52.770" level="INFO"/>
<status status="PASS" starttime="20211208 16:13:52.769" endtime="20211208 16:13:52.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:13:52.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:13:52.770" endtime="20211208 16:13:52.771"/>
</kw>
<status status="PASS" starttime="20211208 16:13:50.401" endtime="20211208 16:13:52.771"/>
</kw>
<msg timestamp="20211208 16:13:52.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:13:50.401" endtime="20211208 16:13:52.771"/>
</kw>
<msg timestamp="20211208 16:13:52.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:13:50.390" endtime="20211208 16:13:52.772"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:13:52.772" endtime="20211208 16:13:52.772"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:13:52.775" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:13:57.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:13:57.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:13:52.773" endtime="20211208 16:13:57.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:13:57.614" level="INFO"/>
<status status="PASS" starttime="20211208 16:13:57.614" endtime="20211208 16:13:57.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:13:57.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:13:57.615" endtime="20211208 16:13:57.615"/>
</kw>
<status status="PASS" starttime="20211208 16:13:52.773" endtime="20211208 16:13:57.615"/>
</kw>
<msg timestamp="20211208 16:13:57.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:13:52.773" endtime="20211208 16:13:57.616"/>
</kw>
<msg timestamp="20211208 16:13:57.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:13:52.772" endtime="20211208 16:13:57.616"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:13:57.616" endtime="20211208 16:13:57.616"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:13:48.183" endtime="20211208 16:13:57.616"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211208 16:13:48.134" endtime="20211208 16:13:57.618"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211208 16:14:01.069" level="INFO">${random} = 16141</msg>
<status status="PASS" starttime="20211208 16:14:01.069" endtime="20211208 16:14:01.069"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:14:01.076" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-16141 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:14:04.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:14:04.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:14:01.071" endtime="20211208 16:14:04.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:14:04.724" level="INFO"/>
<status status="PASS" starttime="20211208 16:14:04.723" endtime="20211208 16:14:04.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:14:04.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:14:04.724" endtime="20211208 16:14:04.724"/>
</kw>
<status status="PASS" starttime="20211208 16:14:01.071" endtime="20211208 16:14:04.725"/>
</kw>
<msg timestamp="20211208 16:14:04.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:14:01.070" endtime="20211208 16:14:04.725"/>
</kw>
<msg timestamp="20211208 16:14:04.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:14:01.070" endtime="20211208 16:14:04.725"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:14:04.725" endtime="20211208 16:14:04.726"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:14:01.068" endtime="20211208 16:14:04.726"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211208 16:14:01.020" endtime="20211208 16:14:04.728"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211208 16:13:33.418" level="INFO">${random} = 08884</msg>
<status status="PASS" starttime="20211208 16:13:33.417" endtime="20211208 16:13:33.418"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:13:33.423" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-08884 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:13:37.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:13:37.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:13:33.420" endtime="20211208 16:13:37.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:13:37.591" level="INFO"/>
<status status="PASS" starttime="20211208 16:13:37.591" endtime="20211208 16:13:37.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:13:37.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:13:37.592" endtime="20211208 16:13:37.592"/>
</kw>
<status status="PASS" starttime="20211208 16:13:33.419" endtime="20211208 16:13:37.592"/>
</kw>
<msg timestamp="20211208 16:13:37.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:13:33.419" endtime="20211208 16:13:37.593"/>
</kw>
<msg timestamp="20211208 16:13:37.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:13:33.418" endtime="20211208 16:13:37.593"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:13:37.593" endtime="20211208 16:13:37.593"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:13:33.416" endtime="20211208 16:13:37.594"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211208 16:13:33.367" endtime="20211208 16:13:37.595"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:09:40.379" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:09:42.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:09:42.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:09:40.375" endtime="20211208 16:09:42.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:09:42.351" level="INFO"/>
<status status="PASS" starttime="20211208 16:09:42.350" endtime="20211208 16:09:42.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:09:42.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:09:42.351" endtime="20211208 16:09:42.352"/>
</kw>
<status status="PASS" starttime="20211208 16:09:40.375" endtime="20211208 16:09:42.352"/>
</kw>
<msg timestamp="20211208 16:09:42.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:09:40.375" endtime="20211208 16:09:42.352"/>
</kw>
<msg timestamp="20211208 16:09:42.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:09:40.374" endtime="20211208 16:09:42.352"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:09:42.353" endtime="20211208 16:09:42.353"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:09:42.359" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:09:44.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:09:44.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:09:42.355" endtime="20211208 16:09:44.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:09:44.910" level="INFO"/>
<status status="PASS" starttime="20211208 16:09:44.909" endtime="20211208 16:09:44.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:09:44.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:09:44.910" endtime="20211208 16:09:44.911"/>
</kw>
<status status="PASS" starttime="20211208 16:09:42.354" endtime="20211208 16:09:44.911"/>
</kw>
<msg timestamp="20211208 16:09:44.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:09:42.354" endtime="20211208 16:09:44.911"/>
</kw>
<msg timestamp="20211208 16:09:44.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:09:42.353" endtime="20211208 16:09:44.911"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:09:44.911" endtime="20211208 16:09:44.912"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:09:44.915" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:09:50.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:09:50.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:09:44.913" endtime="20211208 16:09:50.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:09:50.945" level="INFO"/>
<status status="PASS" starttime="20211208 16:09:50.944" endtime="20211208 16:09:50.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:09:50.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:09:50.946" endtime="20211208 16:09:50.946"/>
</kw>
<status status="PASS" starttime="20211208 16:09:44.913" endtime="20211208 16:09:50.947"/>
</kw>
<msg timestamp="20211208 16:09:50.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:09:44.913" endtime="20211208 16:09:50.947"/>
</kw>
<msg timestamp="20211208 16:09:50.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211208 16:09:44.912" endtime="20211208 16:09:50.947"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:09:50.947" endtime="20211208 16:09:50.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:09:40.373" endtime="20211208 16:09:50.948"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211208 16:09:40.324" endtime="20211208 16:09:50.950"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:16:58.195" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211208 16:16:58.194" endtime="20211208 16:16:58.195"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:16:58.196" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:16:58.195" endtime="20211208 16:16:58.196"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:16:58.196" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:16:58.196" endtime="20211208 16:16:58.196"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:16:58.197" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211208 16:16:58.197" endtime="20211208 16:16:58.197"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:16:58.198" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:16:58.199" level="INFO">${version_file_contents} = #Wed Dec 08 16:15:30 UTC 2021
cTime=1638979723337
clusterID=CID-c8369c5d-f498-4948-89fa-feba4ad64845
nodeType=SCM
scmUuid=542db181-3c2b-4a52-b024-d90282c9bb3a
layoutVersion=2
</msg>
<status status="PASS" starttime="20211208 16:16:58.198" endtime="20211208 16:16:58.199"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:16:58.199" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211208 16:16:58.199" endtime="20211208 16:16:58.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:16:58.199" endtime="20211208 16:16:58.200"/>
</kw>
<status status="PASS" starttime="20211208 16:16:58.197" endtime="20211208 16:16:58.200"/>
</kw>
<status status="PASS" starttime="20211208 16:16:58.197" endtime="20211208 16:16:58.200"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:16:58.194" endtime="20211208 16:16:58.200"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:16:58.142" endtime="20211208 16:16:58.201"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211208 16:17:38.288" level="INFO">${random} = 42367</msg>
<status status="PASS" starttime="20211208 16:17:38.288" endtime="20211208 16:17:38.288"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:17:38.293" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-42367 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:17:42.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:17:42.283" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:38.290" endtime="20211208 16:17:42.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:17:42.284" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:42.284" endtime="20211208 16:17:42.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:17:42.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:17:42.285" endtime="20211208 16:17:42.285"/>
</kw>
<status status="PASS" starttime="20211208 16:17:38.289" endtime="20211208 16:17:42.286"/>
</kw>
<msg timestamp="20211208 16:17:42.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:17:38.289" endtime="20211208 16:17:42.286"/>
</kw>
<msg timestamp="20211208 16:17:42.286" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:38.288" endtime="20211208 16:17:42.286"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:42.286" endtime="20211208 16:17:42.287"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:38.287" endtime="20211208 16:17:42.287"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211208 16:17:38.238" endtime="20211208 16:17:42.288"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:17:45.731" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:17:48.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:17:48.242" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:45.727" endtime="20211208 16:17:48.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:17:48.244" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:48.243" endtime="20211208 16:17:48.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:17:48.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:17:48.244" endtime="20211208 16:17:48.245"/>
</kw>
<status status="PASS" starttime="20211208 16:17:45.727" endtime="20211208 16:17:48.245"/>
</kw>
<msg timestamp="20211208 16:17:48.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:17:45.727" endtime="20211208 16:17:48.245"/>
</kw>
<msg timestamp="20211208 16:17:48.245" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:45.726" endtime="20211208 16:17:48.245"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:48.246" endtime="20211208 16:17:48.246"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:17:48.257" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:17:50.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:17:50.664" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:48.248" endtime="20211208 16:17:50.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:17:50.665" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:50.664" endtime="20211208 16:17:50.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:17:50.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:17:50.666" endtime="20211208 16:17:50.666"/>
</kw>
<status status="PASS" starttime="20211208 16:17:48.247" endtime="20211208 16:17:50.667"/>
</kw>
<msg timestamp="20211208 16:17:50.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:17:48.247" endtime="20211208 16:17:50.667"/>
</kw>
<msg timestamp="20211208 16:17:50.667" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:48.246" endtime="20211208 16:17:50.667"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:50.667" endtime="20211208 16:17:50.667"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:17:50.671" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:17:55.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:17:55.349" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:50.669" endtime="20211208 16:17:55.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:17:55.350" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:55.349" endtime="20211208 16:17:55.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:17:55.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:17:55.350" endtime="20211208 16:17:55.351"/>
</kw>
<status status="PASS" starttime="20211208 16:17:50.668" endtime="20211208 16:17:55.351"/>
</kw>
<msg timestamp="20211208 16:17:55.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:17:50.668" endtime="20211208 16:17:55.351"/>
</kw>
<msg timestamp="20211208 16:17:55.352" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:50.668" endtime="20211208 16:17:55.352"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:55.352" endtime="20211208 16:17:55.352"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:45.725" endtime="20211208 16:17:55.353"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211208 16:17:45.678" endtime="20211208 16:17:55.354"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211208 16:17:58.872" level="INFO">${random} = 67253</msg>
<status status="PASS" starttime="20211208 16:17:58.871" endtime="20211208 16:17:58.872"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:17:58.877" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-67253 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:18:02.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:18:02.775" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:58.874" endtime="20211208 16:18:02.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:18:02.776" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:18:02.775" endtime="20211208 16:18:02.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:18:02.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:18:02.776" endtime="20211208 16:18:02.777"/>
</kw>
<status status="PASS" starttime="20211208 16:17:58.873" endtime="20211208 16:18:02.777"/>
</kw>
<msg timestamp="20211208 16:18:02.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:17:58.873" endtime="20211208 16:18:02.777"/>
</kw>
<msg timestamp="20211208 16:18:02.777" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:58.872" endtime="20211208 16:18:02.777"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:18:02.778" endtime="20211208 16:18:02.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:58.870" endtime="20211208 16:18:02.778"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211208 16:17:58.818" endtime="20211208 16:18:02.779"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:01.700" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211208 16:17:01.699" endtime="20211208 16:17:01.700"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:01.700" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:17:01.700" endtime="20211208 16:17:01.701"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:17:01.701" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:17:01.701" endtime="20211208 16:17:01.701"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:17:01.702" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211208 16:17:01.701" endtime="20211208 16:17:01.702"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:17:01.703" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:17:01.703" level="INFO">${version_file_contents} = #Wed Dec 08 16:15:42 UTC 2021
cTime=1638979822143
clusterID=6dd4d9de-f863-4a37-9893-5e542d2677b3
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211208 16:17:01.702" endtime="20211208 16:17:01.703"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:17:01.704" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211208 16:17:01.703" endtime="20211208 16:17:01.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:01.704" endtime="20211208 16:17:01.704"/>
</kw>
<status status="PASS" starttime="20211208 16:17:01.702" endtime="20211208 16:17:01.704"/>
</kw>
<status status="PASS" starttime="20211208 16:17:01.702" endtime="20211208 16:17:01.704"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:01.699" endtime="20211208 16:17:01.705"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:17:01.652" endtime="20211208 16:17:01.705"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:05.157" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211208 16:17:05.156" endtime="20211208 16:17:05.157"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:05.158" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:17:05.157" endtime="20211208 16:17:05.158"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:17:05.158" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:17:05.158" endtime="20211208 16:17:05.158"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:17:05.159" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211208 16:17:05.158" endtime="20211208 16:17:05.159"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:17:05.160" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:17:05.160" level="INFO">${version_file_contents} = #Wed Dec 08 16:15:52 UTC 2021
cTime=1638979824018
clusterID=fd5c6d69-da21-4f9e-8eac-0e9998e3258b
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211208 16:17:05.160" endtime="20211208 16:17:05.160"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:17:05.161" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211208 16:17:05.161" endtime="20211208 16:17:05.161"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:05.161" endtime="20211208 16:17:05.162"/>
</kw>
<status status="PASS" starttime="20211208 16:17:05.159" endtime="20211208 16:17:05.162"/>
</kw>
<status status="PASS" starttime="20211208 16:17:05.159" endtime="20211208 16:17:05.162"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:05.155" endtime="20211208 16:17:05.162"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:17:05.108" endtime="20211208 16:17:05.163"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:08.644" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211208 16:17:08.644" endtime="20211208 16:17:08.644"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:08.645" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:17:08.645" endtime="20211208 16:17:08.645"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:17:08.645" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:17:08.645" endtime="20211208 16:17:08.646"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:17:08.646" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211208 16:17:08.646" endtime="20211208 16:17:08.646"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:17:08.647" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:17:08.647" level="INFO">${version_file_contents} = #Wed Dec 08 16:15:34 UTC 2021
cTime=1638979823722
clusterID=ac01f1cb-9940-4a06-a4e1-09e467d23506
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211208 16:17:08.647" endtime="20211208 16:17:08.648"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:17:08.648" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211208 16:17:08.648" endtime="20211208 16:17:08.648"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:08.648" endtime="20211208 16:17:08.649"/>
</kw>
<status status="PASS" starttime="20211208 16:17:08.647" endtime="20211208 16:17:08.649"/>
</kw>
<status status="PASS" starttime="20211208 16:17:08.646" endtime="20211208 16:17:08.649"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:08.643" endtime="20211208 16:17:08.649"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:17:08.594" endtime="20211208 16:17:08.650"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:12.164" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211208 16:17:12.163" endtime="20211208 16:17:12.164"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:12.164" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:17:12.164" endtime="20211208 16:17:12.164"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:17:12.165" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:17:12.164" endtime="20211208 16:17:12.165"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:17:12.165" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211208 16:17:12.165" endtime="20211208 16:17:12.165"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:17:12.166" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:17:12.167" level="INFO">${version_file_contents} = #Wed Dec 08 16:09:09 UTC 2021
cTime=1638979729013
clusterID=CID-c8369c5d-f498-4948-89fa-feba4ad64845
omUuid=ef75364d-dbab-4396-916b-ac7af9376ad6
nodeType=OM
scmUuid=542db181-3c2b-4a52-b024-d90282c9bb3...</msg>
<status status="PASS" starttime="20211208 16:17:12.166" endtime="20211208 16:17:12.167"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:17:12.167" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211208 16:17:12.167" endtime="20211208 16:17:12.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:12.167" endtime="20211208 16:17:12.168"/>
</kw>
<status status="PASS" starttime="20211208 16:17:12.166" endtime="20211208 16:17:12.168"/>
</kw>
<status status="PASS" starttime="20211208 16:17:12.165" endtime="20211208 16:17:12.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:12.162" endtime="20211208 16:17:12.168"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:17:12.113" endtime="20211208 16:17:12.169"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:15.620" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211208 16:17:15.619" endtime="20211208 16:17:15.620"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:15.620" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:17:15.620" endtime="20211208 16:17:15.620"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:17:15.621" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:17:15.620" endtime="20211208 16:17:15.621"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:17:15.621" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211208 16:17:15.621" endtime="20211208 16:17:15.621"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:17:15.622" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:17:15.623" level="INFO">${version_file_contents} = #Wed Dec 08 16:09:09 UTC 2021
cTime=1638979730715
clusterID=CID-c8369c5d-f498-4948-89fa-feba4ad64845
omUuid=abdf505f-f54b-4050-b0ee-794a16aa6c6c
nodeType=OM
scmUuid=542db181-3c2b-4a52-b024-d90282c9bb3...</msg>
<status status="PASS" starttime="20211208 16:17:15.622" endtime="20211208 16:17:15.623"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:17:15.623" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211208 16:17:15.623" endtime="20211208 16:17:15.623"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:15.623" endtime="20211208 16:17:15.624"/>
</kw>
<status status="PASS" starttime="20211208 16:17:15.622" endtime="20211208 16:17:15.624"/>
</kw>
<status status="PASS" starttime="20211208 16:17:15.621" endtime="20211208 16:17:15.624"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:15.618" endtime="20211208 16:17:15.624"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:17:15.566" endtime="20211208 16:17:15.625"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:19.072" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211208 16:17:19.071" endtime="20211208 16:17:19.072"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:17:19.073" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:17:19.072" endtime="20211208 16:17:19.073"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:17:19.073" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:17:19.073" endtime="20211208 16:17:19.073"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:17:19.074" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211208 16:17:19.073" endtime="20211208 16:17:19.074"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:17:19.075" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:17:19.075" level="INFO">${version_file_contents} = #Wed Dec 08 16:09:09 UTC 2021
cTime=1638979731623
clusterID=CID-c8369c5d-f498-4948-89fa-feba4ad64845
omUuid=a9ba9d5d-ee91-4c14-a062-b59cedcbe485
nodeType=OM
scmUuid=542db181-3c2b-4a52-b024-d90282c9bb3...</msg>
<status status="PASS" starttime="20211208 16:17:19.075" endtime="20211208 16:17:19.075"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:17:19.076" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211208 16:17:19.075" endtime="20211208 16:17:19.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:19.076" endtime="20211208 16:17:19.076"/>
</kw>
<status status="PASS" starttime="20211208 16:17:19.074" endtime="20211208 16:17:19.076"/>
</kw>
<status status="PASS" starttime="20211208 16:17:19.074" endtime="20211208 16:17:19.076"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:19.071" endtime="20211208 16:17:19.077"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:17:19.022" endtime="20211208 16:17:19.078"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211208 16:17:22.574" level="INFO">${random} = 93869</msg>
<status status="PASS" starttime="20211208 16:17:22.574" endtime="20211208 16:17:22.574"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:17:22.579" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-93869 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:17:27.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:17:27.035" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:22.576" endtime="20211208 16:17:27.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:17:27.036" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:27.035" endtime="20211208 16:17:27.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:17:27.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:17:27.036" endtime="20211208 16:17:27.037"/>
</kw>
<status status="PASS" starttime="20211208 16:17:22.576" endtime="20211208 16:17:27.037"/>
</kw>
<msg timestamp="20211208 16:17:27.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:17:22.575" endtime="20211208 16:17:27.037"/>
</kw>
<msg timestamp="20211208 16:17:27.038" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:22.574" endtime="20211208 16:17:27.038"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:27.038" endtime="20211208 16:17:27.038"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:22.573" endtime="20211208 16:17:27.038"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211208 16:17:22.525" endtime="20211208 16:17:27.039"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211208 16:17:30.535" level="INFO">${random} = 24728</msg>
<status status="PASS" starttime="20211208 16:17:30.534" endtime="20211208 16:17:30.535"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:17:30.540" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-24728 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:17:34.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:17:34.765" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:30.536" endtime="20211208 16:17:34.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:17:34.766" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:34.765" endtime="20211208 16:17:34.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:17:34.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:17:34.766" endtime="20211208 16:17:34.767"/>
</kw>
<status status="PASS" starttime="20211208 16:17:30.536" endtime="20211208 16:17:34.767"/>
</kw>
<msg timestamp="20211208 16:17:34.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:17:30.536" endtime="20211208 16:17:34.767"/>
</kw>
<msg timestamp="20211208 16:17:34.767" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:17:30.535" endtime="20211208 16:17:34.768"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:17:34.768" endtime="20211208 16:17:34.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:17:30.533" endtime="20211208 16:17:34.768"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211208 16:17:30.485" endtime="20211208 16:17:34.770"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211208 16:15:23.311" endtime="20211208 16:15:23.311"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:15:23.317" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:16:51.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:16:51.490" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211208 16:15:23.313" endtime="20211208 16:16:51.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:16:51.492" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211208 16:16:51.491" endtime="20211208 16:16:51.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:16:51.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:16:51.492" endtime="20211208 16:16:51.492"/>
</kw>
<status status="PASS" starttime="20211208 16:15:23.312" endtime="20211208 16:16:51.493"/>
</kw>
<msg timestamp="20211208 16:16:51.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:15:23.312" endtime="20211208 16:16:51.493"/>
</kw>
<msg timestamp="20211208 16:16:51.493" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211208 16:15:23.311" endtime="20211208 16:16:51.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:16:51.494" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211208 16:16:51.493" endtime="20211208 16:16:51.494"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:15:23.310" endtime="20211208 16:16:51.494"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211208 16:16:51.495" endtime="20211208 16:16:51.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:16:51.499" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:16:54.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:16:54.540" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20211208 16:16:51.497" endtime="20211208 16:16:54.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:16:54.542" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:353)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:339)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:279)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:158)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211208 16:16:54.541" endtime="20211208 16:16:54.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:16:54.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:16:54.542" endtime="20211208 16:16:54.543"/>
</kw>
<status status="PASS" starttime="20211208 16:16:51.496" endtime="20211208 16:16:54.543"/>
</kw>
<msg timestamp="20211208 16:16:54.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:16:51.496" endtime="20211208 16:16:54.543"/>
</kw>
<msg timestamp="20211208 16:16:54.543" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20211208 16:16:51.496" endtime="20211208 16:16:54.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:16:54.544" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:353)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:339)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:279)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:158)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211208 16:16:54.544" endtime="20211208 16:16:54.544"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:16:51.494" endtime="20211208 16:16:54.544"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20211208 16:15:23.262" endtime="20211208 16:16:54.546"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:21.187" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211208 16:11:21.186" endtime="20211208 16:11:21.187"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:21.187" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:11:21.187" endtime="20211208 16:11:21.187"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:11:21.188" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:11:21.187" endtime="20211208 16:11:21.188"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:11:21.188" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211208 16:11:21.188" endtime="20211208 16:11:21.188"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:11:21.190" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:11:21.191" level="INFO">${version_file_contents} = #Wed Dec 08 16:10:22 UTC 2021
cTime=1638979822143
clusterID=6dd4d9de-f863-4a37-9893-5e542d2677b3
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211208 16:11:21.189" endtime="20211208 16:11:21.191"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:11:21.191" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211208 16:11:21.191" endtime="20211208 16:11:21.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:11:21.191" endtime="20211208 16:11:21.192"/>
</kw>
<status status="PASS" starttime="20211208 16:11:21.189" endtime="20211208 16:11:21.192"/>
</kw>
<status status="PASS" starttime="20211208 16:11:21.188" endtime="20211208 16:11:21.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:11:21.185" endtime="20211208 16:11:21.192"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:11:21.137" endtime="20211208 16:11:21.193"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:24.758" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211208 16:11:24.757" endtime="20211208 16:11:24.758"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:24.758" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:11:24.758" endtime="20211208 16:11:24.758"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:11:24.759" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:11:24.758" endtime="20211208 16:11:24.759"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:11:24.759" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211208 16:11:24.759" endtime="20211208 16:11:24.759"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:11:24.760" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:11:24.761" level="INFO">${version_file_contents} = #Wed Dec 08 16:10:24 UTC 2021
cTime=1638979824018
clusterID=fd5c6d69-da21-4f9e-8eac-0e9998e3258b
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211208 16:11:24.760" endtime="20211208 16:11:24.761"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:11:24.761" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211208 16:11:24.761" endtime="20211208 16:11:24.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:11:24.761" endtime="20211208 16:11:24.762"/>
</kw>
<status status="PASS" starttime="20211208 16:11:24.760" endtime="20211208 16:11:24.762"/>
</kw>
<status status="PASS" starttime="20211208 16:11:24.759" endtime="20211208 16:11:24.762"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:11:24.756" endtime="20211208 16:11:24.762"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:11:24.708" endtime="20211208 16:11:24.763"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:28.306" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211208 16:11:28.305" endtime="20211208 16:11:28.306"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:28.307" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:11:28.306" endtime="20211208 16:11:28.307"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:11:28.307" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:11:28.307" endtime="20211208 16:11:28.307"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:11:28.308" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211208 16:11:28.307" endtime="20211208 16:11:28.308"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:11:28.309" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:11:28.310" level="INFO">${version_file_contents} = #Wed Dec 08 16:10:23 UTC 2021
cTime=1638979823722
clusterID=ac01f1cb-9940-4a06-a4e1-09e467d23506
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211208 16:11:28.309" endtime="20211208 16:11:28.310"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:11:28.310" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211208 16:11:28.310" endtime="20211208 16:11:28.310"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:11:28.311" endtime="20211208 16:11:28.311"/>
</kw>
<status status="PASS" starttime="20211208 16:11:28.308" endtime="20211208 16:11:28.311"/>
</kw>
<status status="PASS" starttime="20211208 16:11:28.308" endtime="20211208 16:11:28.311"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:11:28.303" endtime="20211208 16:11:28.311"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:11:28.254" endtime="20211208 16:11:28.312"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:31.881" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211208 16:11:31.880" endtime="20211208 16:11:31.881"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:31.882" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:11:31.881" endtime="20211208 16:11:31.882"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:11:31.882" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:11:31.882" endtime="20211208 16:11:31.882"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:11:31.883" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211208 16:11:31.883" endtime="20211208 16:11:31.883"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:11:31.884" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:11:31.884" level="INFO">${version_file_contents} = #Wed Dec 08 16:09:09 UTC 2021
cTime=1638979729013
clusterID=CID-c8369c5d-f498-4948-89fa-feba4ad64845
omUuid=ef75364d-dbab-4396-916b-ac7af9376ad6
nodeType=OM
scmUuid=542db181-3c2b-4a52-b024-d90282c9bb3...</msg>
<status status="PASS" starttime="20211208 16:11:31.884" endtime="20211208 16:11:31.884"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:11:31.885" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211208 16:11:31.885" endtime="20211208 16:11:31.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:11:31.885" endtime="20211208 16:11:31.886"/>
</kw>
<status status="PASS" starttime="20211208 16:11:31.883" endtime="20211208 16:11:31.886"/>
</kw>
<status status="PASS" starttime="20211208 16:11:31.883" endtime="20211208 16:11:31.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:11:31.880" endtime="20211208 16:11:31.886"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:11:31.831" endtime="20211208 16:11:31.887"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:35.432" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211208 16:11:35.431" endtime="20211208 16:11:35.432"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:35.432" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:11:35.432" endtime="20211208 16:11:35.432"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:11:35.433" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:11:35.432" endtime="20211208 16:11:35.433"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:11:35.433" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211208 16:11:35.433" endtime="20211208 16:11:35.433"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:11:35.435" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:11:35.435" level="INFO">${version_file_contents} = #Wed Dec 08 16:09:09 UTC 2021
cTime=1638979730715
clusterID=CID-c8369c5d-f498-4948-89fa-feba4ad64845
omUuid=abdf505f-f54b-4050-b0ee-794a16aa6c6c
nodeType=OM
scmUuid=542db181-3c2b-4a52-b024-d90282c9bb3...</msg>
<status status="PASS" starttime="20211208 16:11:35.434" endtime="20211208 16:11:35.435"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:11:35.435" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211208 16:11:35.435" endtime="20211208 16:11:35.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:11:35.436" endtime="20211208 16:11:35.436"/>
</kw>
<status status="PASS" starttime="20211208 16:11:35.434" endtime="20211208 16:11:35.437"/>
</kw>
<status status="PASS" starttime="20211208 16:11:35.434" endtime="20211208 16:11:35.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:11:35.430" endtime="20211208 16:11:35.437"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:11:35.377" endtime="20211208 16:11:35.439"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:38.966" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211208 16:11:38.966" endtime="20211208 16:11:38.966"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:38.967" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:11:38.967" endtime="20211208 16:11:38.967"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:11:38.967" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:11:38.967" endtime="20211208 16:11:38.968"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:11:38.968" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211208 16:11:38.968" endtime="20211208 16:11:38.968"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:11:38.969" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:11:38.970" level="INFO">${version_file_contents} = #Wed Dec 08 16:09:09 UTC 2021
cTime=1638979731623
clusterID=CID-c8369c5d-f498-4948-89fa-feba4ad64845
omUuid=a9ba9d5d-ee91-4c14-a062-b59cedcbe485
nodeType=OM
scmUuid=542db181-3c2b-4a52-b024-d90282c9bb3...</msg>
<status status="PASS" starttime="20211208 16:11:38.969" endtime="20211208 16:11:38.970"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:11:38.970" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211208 16:11:38.970" endtime="20211208 16:11:38.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:11:38.970" endtime="20211208 16:11:38.971"/>
</kw>
<status status="PASS" starttime="20211208 16:11:38.969" endtime="20211208 16:11:38.971"/>
</kw>
<status status="PASS" starttime="20211208 16:11:38.968" endtime="20211208 16:11:38.971"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:11:38.965" endtime="20211208 16:11:38.971"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:11:38.916" endtime="20211208 16:11:38.972"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211208 16:11:42.467" level="INFO">${random} = 15762</msg>
<status status="PASS" starttime="20211208 16:11:42.467" endtime="20211208 16:11:42.467"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:11:42.472" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-15762 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:11:46.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:11:46.732" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:42.469" endtime="20211208 16:11:46.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:11:46.734" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:46.733" endtime="20211208 16:11:46.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:11:46.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:11:46.734" endtime="20211208 16:11:46.735"/>
</kw>
<status status="PASS" starttime="20211208 16:11:42.469" endtime="20211208 16:11:46.735"/>
</kw>
<msg timestamp="20211208 16:11:46.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:11:42.468" endtime="20211208 16:11:46.735"/>
</kw>
<msg timestamp="20211208 16:11:46.735" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:42.468" endtime="20211208 16:11:46.735"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:11:46.736" endtime="20211208 16:11:46.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:11:42.466" endtime="20211208 16:11:46.736"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211208 16:11:42.414" endtime="20211208 16:11:46.737"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:11:50.272" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:11:52.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:11:52.971" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:50.268" endtime="20211208 16:11:52.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:11:52.977" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:52.977" endtime="20211208 16:11:52.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:11:52.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:11:52.978" endtime="20211208 16:11:52.980"/>
</kw>
<status status="PASS" starttime="20211208 16:11:50.268" endtime="20211208 16:11:52.981"/>
</kw>
<msg timestamp="20211208 16:11:52.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:11:50.267" endtime="20211208 16:11:52.981"/>
</kw>
<msg timestamp="20211208 16:11:52.981" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:50.267" endtime="20211208 16:11:52.981"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:11:52.981" endtime="20211208 16:11:52.987"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:11:52.993" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:11:55.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:11:55.748" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:52.990" endtime="20211208 16:11:55.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:11:55.750" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:55.749" endtime="20211208 16:11:55.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:11:55.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:11:55.750" endtime="20211208 16:11:55.751"/>
</kw>
<status status="PASS" starttime="20211208 16:11:52.989" endtime="20211208 16:11:55.751"/>
</kw>
<msg timestamp="20211208 16:11:55.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:11:52.989" endtime="20211208 16:11:55.751"/>
</kw>
<msg timestamp="20211208 16:11:55.751" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:52.988" endtime="20211208 16:11:55.751"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:11:55.751" endtime="20211208 16:11:55.752"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:11:55.755" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:12:00.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:12:00.478" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:55.753" endtime="20211208 16:12:00.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:12:00.480" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:12:00.479" endtime="20211208 16:12:00.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:12:00.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:12:00.480" endtime="20211208 16:12:00.481"/>
</kw>
<status status="PASS" starttime="20211208 16:11:55.753" endtime="20211208 16:12:00.481"/>
</kw>
<msg timestamp="20211208 16:12:00.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:11:55.752" endtime="20211208 16:12:00.481"/>
</kw>
<msg timestamp="20211208 16:12:00.481" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:11:55.752" endtime="20211208 16:12:00.481"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:12:00.482" endtime="20211208 16:12:00.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:11:50.266" endtime="20211208 16:12:00.482"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211208 16:11:50.218" endtime="20211208 16:12:00.483"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211208 16:12:03.947" level="INFO">${random} = 61904</msg>
<status status="PASS" starttime="20211208 16:12:03.947" endtime="20211208 16:12:03.947"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211208 16:12:03.952" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-61904 2&gt;&amp;1'.</msg>
<msg timestamp="20211208 16:12:08.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20211208 16:12:08.289" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:12:03.949" endtime="20211208 16:12:08.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211208 16:12:08.290" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:12:08.289" endtime="20211208 16:12:08.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211208 16:12:08.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211208 16:12:08.290" endtime="20211208 16:12:08.291"/>
</kw>
<status status="PASS" starttime="20211208 16:12:03.948" endtime="20211208 16:12:08.291"/>
</kw>
<msg timestamp="20211208 16:12:08.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211208 16:12:03.948" endtime="20211208 16:12:08.291"/>
</kw>
<msg timestamp="20211208 16:12:08.291" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211208 16:12:03.947" endtime="20211208 16:12:08.291"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:12:08.291" endtime="20211208 16:12:08.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:12:03.946" endtime="20211208 16:12:08.292"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211208 16:12:03.898" endtime="20211208 16:12:08.293"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:17.592" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211208 16:11:17.591" endtime="20211208 16:11:17.592"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211208 16:11:17.592" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211208 16:11:17.592" endtime="20211208 16:11:17.593"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211208 16:11:17.593" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211208 16:11:17.593" endtime="20211208 16:11:17.593"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211208 16:11:17.594" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211208 16:11:17.593" endtime="20211208 16:11:17.594"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211208 16:11:17.595" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211208 16:11:17.595" level="INFO">${version_file_contents} = #Wed Dec 08 16:08:43 UTC 2021
cTime=1638979723337
clusterID=CID-c8369c5d-f498-4948-89fa-feba4ad64845
nodeType=SCM
scmUuid=542db181-3c2b-4a52-b024-d90282c9bb3a
layoutVersion=0
</msg>
<status status="PASS" starttime="20211208 16:11:17.595" endtime="20211208 16:11:17.595"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211208 16:11:17.596" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211208 16:11:17.595" endtime="20211208 16:11:17.596"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211208 16:11:17.596" endtime="20211208 16:11:17.596"/>
</kw>
<status status="PASS" starttime="20211208 16:11:17.594" endtime="20211208 16:11:17.596"/>
</kw>
<status status="PASS" starttime="20211208 16:11:17.594" endtime="20211208 16:11:17.597"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211208 16:11:17.591" endtime="20211208 16:11:17.597"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211208 16:11:17.541" endtime="20211208 16:11:17.597"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="173252"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
