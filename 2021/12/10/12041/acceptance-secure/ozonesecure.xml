<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211210 13:25:15.573" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:56:59.317" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:56:59.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:56:59.321" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:56:59.313" endtime="20211210 12:56:59.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:56:59.322" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:56:59.321" endtime="20211210 12:56:59.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:56:59.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:56:59.322" endtime="20211210 12:56:59.323"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.313" endtime="20211210 12:56:59.323"/>
</kw>
<msg timestamp="20211210 12:56:59.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:56:59.312" endtime="20211210 12:56:59.323"/>
</kw>
<msg timestamp="20211210 12:56:59.324" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211210 12:56:59.312" endtime="20211210 12:56:59.324"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:56:59.327" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:56:59.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:56:59.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:56:59.326" endtime="20211210 12:56:59.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:56:59.336" level="INFO"/>
<status status="PASS" starttime="20211210 12:56:59.336" endtime="20211210 12:56:59.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:56:59.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:56:59.337" endtime="20211210 12:56:59.337"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.325" endtime="20211210 12:56:59.338"/>
</kw>
<msg timestamp="20211210 12:56:59.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:56:59.325" endtime="20211210 12:56:59.338"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.324" endtime="20211210 12:56:59.338"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.324" endtime="20211210 12:56:59.338"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.311" endtime="20211210 12:56:59.339"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.311" endtime="20211210 12:56:59.339"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:56:59.345" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:56:59.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:56:59.498" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211210 12:56:59.341" endtime="20211210 12:56:59.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:56:59.500" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Fri, 10 Dec 2021 12:56:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCZn5qvXH6AIu/k/y7JNvgEP4taW8DdMqYrzwqXD7/2he6/SwJA37IOjuSXvCiPTSipbr4+tu57w9TayhZsWR0MtGf
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1639177019477&amp;s=Gr1xZr8yY3j4s+gu4SN9qir69pTQCGopPgNh0ycmEOk="; Path=/; HttpOnly
Last-Modified: Fri, 10 Dec 2021 12:44:18 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211210 12:56:59.499" endtime="20211210 12:56:59.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:56:59.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:56:59.500" endtime="20211210 12:56:59.501"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.340" endtime="20211210 12:56:59.501"/>
</kw>
<msg timestamp="20211210 12:56:59.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:56:59.339" endtime="20211210 12:56:59.501"/>
</kw>
<msg timestamp="20211210 12:56:59.502" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211210 12:56:59.339" endtime="20211210 12:56:59.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:56:59.502" endtime="20211210 12:56:59.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 12:56:59.310" endtime="20211210 12:56:59.503"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:56:59.512" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:56:59.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:56:59.517" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:56:59.510" endtime="20211210 12:56:59.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:56:59.518" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:56:59.517" endtime="20211210 12:56:59.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:56:59.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:56:59.519" endtime="20211210 12:56:59.520"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.509" endtime="20211210 12:56:59.520"/>
</kw>
<msg timestamp="20211210 12:56:59.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:56:59.508" endtime="20211210 12:56:59.520"/>
</kw>
<msg timestamp="20211210 12:56:59.521" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 12:56:59.508" endtime="20211210 12:56:59.521"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:56:59.523" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 12:56:59.521" endtime="20211210 12:56:59.523"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:56:59.527" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:56:59.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:56:59.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:56:59.525" endtime="20211210 12:56:59.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:56:59.540" level="INFO"/>
<status status="PASS" starttime="20211210 12:56:59.540" endtime="20211210 12:56:59.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:56:59.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:56:59.541" endtime="20211210 12:56:59.541"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.525" endtime="20211210 12:56:59.542"/>
</kw>
<msg timestamp="20211210 12:56:59.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:56:59.524" endtime="20211210 12:56:59.542"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.524" endtime="20211210 12:56:59.542"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.523" endtime="20211210 12:56:59.542"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.507" endtime="20211210 12:56:59.542"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.507" endtime="20211210 12:56:59.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:56:59.547" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:34.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:57:34.940" level="INFO">${output} = 2021-12-10 12:57:01,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-12-10 12:57:01,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20211210 12:56:59.545" endtime="20211210 12:57:34.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:34.941" level="INFO">2021-12-10 12:57:01,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-12-10 12:57:01,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-12-10 12:57:01,897 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-12-10 12:57:03,819 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2021-12-10 12:57:03,842 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2021-12-10 12:57:03,842 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2021-12-10 12:57:03,842 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2021-12-10 12:57:03,842 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2021-12-10 12:57:03,842 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-12-10 12:57:03,842 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2021-12-10 12:57:03,842 [main] INFO freon.RandomKeyGenerator: Number of Validate Threads: 1
2021-12-10 12:57:03,842 [main] INFO freon.RandomKeyGenerator: cleanObjects : false
2021-12-10 12:57:03,845 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2021-12-10 12:57:03,849 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-12-10 12:57:03,856 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-12-10 12:57:03,899 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-70250, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2021-12-10 12:57:04,174 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-44653, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2021-12-10 12:57:04,196 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-45016, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2021-12-10 12:57:04,208 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-98063, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2021-12-10 12:57:04,223 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-04103, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2021-12-10 12:57:04,238 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70250/bucket-0-16638, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,312 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-44653/bucket-0-10283, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,335 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45016/bucket-0-95458, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,365 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-98063/bucket-0-54016, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,384 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-04103/bucket-0-51956, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,397 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70250/bucket-1-96412, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,408 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-44653/bucket-1-06285, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,423 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45016/bucket-1-61226, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,434 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-98063/bucket-1-76609, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,444 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-04103/bucket-1-62701, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,454 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70250/bucket-2-69464, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,464 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-44653/bucket-2-97712, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,474 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45016/bucket-2-47247, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,490 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-98063/bucket-2-24049, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,500 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-04103/bucket-2-65113, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,508 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70250/bucket-3-45324, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,518 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-44653/bucket-3-58940, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,527 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45016/bucket-3-53999, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,535 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-98063/bucket-3-15099, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,545 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-04103/bucket-3-59699, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,560 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70250/bucket-4-37121, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,572 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-44653/bucket-4-61433, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,583 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-45016/bucket-4-03582, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,598 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-98063/bucket-4-83570, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,606 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-04103/bucket-4-71869, with testuser as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2021-12-10 12:57:04,867 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-12-10 12:57:05,869 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-12-10 12:57:06,187 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-12-10 12:57:06,528 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-12-10 12:57:06,869 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-12-10 12:57:07,870 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-12-10 12:57:08,871 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-12-10 12:57:09,874 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2021-12-10 12:57:10,875 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2021-12-10 12:57:11,875 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2021-12-10 12:57:12,881 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2021-12-10 12:57:13,884 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2021-12-10 12:57:14,896 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2021-12-10 12:57:15,899 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2021-12-10 12:57:16,900 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2021-12-10 12:57:17,900 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2021-12-10 12:57:18,901 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2021-12-10 12:57:19,901 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2021-12-10 12:57:20,902 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2021-12-10 12:57:21,904 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2021-12-10 12:57:22,904 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2021-12-10 12:57:23,904 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2021-12-10 12:57:24,905 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2021-12-10 12:57:25,906 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2021-12-10 12:57:26,909 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2021-12-10 12:57:27,910 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2021-12-10 12:57:28,910 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2021-12-10 12:57:29,911 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: a3b9c37a397ad4188041dd80621bdeefc46885f2
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,329
Average Time spent in bucket creation: 00:00:00,273
Average Time spent in key creation: 00:00:04,866
Average Time spent in key write: 00:00:01,396
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:32,367
***************************************************</msg>
<status status="PASS" starttime="20211210 12:57:34.940" endtime="20211210 12:57:34.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:34.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:34.941" endtime="20211210 12:57:34.942"/>
</kw>
<status status="PASS" starttime="20211210 12:56:59.544" endtime="20211210 12:57:34.942"/>
</kw>
<msg timestamp="20211210 12:57:34.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:56:59.543" endtime="20211210 12:57:34.943"/>
</kw>
<msg timestamp="20211210 12:57:34.943" level="INFO">${result} = 2021-12-10 12:57:01,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-12-10 12:57:01,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20211210 12:56:59.543" endtime="20211210 12:57:34.943"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:34.944" endtime="20211210 12:57:34.945"/>
</kw>
<status status="PASS" starttime="20211210 12:57:34.944" endtime="20211210 12:57:34.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:34.945" endtime="20211210 12:57:34.945"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 12:56:59.505" endtime="20211210 12:57:34.946"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211210 12:56:59.278" endtime="20211210 12:57:34.947"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:34.960" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:36.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:57:36.468" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211210 12:57:34.958" endtime="20211210 12:57:36.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:36.469" level="INFO">om</msg>
<status status="PASS" starttime="20211210 12:57:36.469" endtime="20211210 12:57:36.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:36.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:36.470" endtime="20211210 12:57:36.471"/>
</kw>
<status status="PASS" starttime="20211210 12:57:34.957" endtime="20211210 12:57:36.471"/>
</kw>
<msg timestamp="20211210 12:57:36.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:57:34.957" endtime="20211210 12:57:36.471"/>
</kw>
<msg timestamp="20211210 12:57:36.472" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211210 12:57:34.957" endtime="20211210 12:57:36.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:36.472" endtime="20211210 12:57:36.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:36.477" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:38.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:57:38.080" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211210 12:57:36.475" endtime="20211210 12:57:38.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:38.081" level="INFO">om</msg>
<status status="PASS" starttime="20211210 12:57:38.080" endtime="20211210 12:57:38.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:38.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:38.081" endtime="20211210 12:57:38.082"/>
</kw>
<status status="PASS" starttime="20211210 12:57:36.474" endtime="20211210 12:57:38.082"/>
</kw>
<msg timestamp="20211210 12:57:38.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:57:36.473" endtime="20211210 12:57:38.083"/>
</kw>
<msg timestamp="20211210 12:57:38.083" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211210 12:57:36.473" endtime="20211210 12:57:38.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:38.083" endtime="20211210 12:57:38.084"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 12:57:34.956" endtime="20211210 12:57:38.084"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:38.090" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:40.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:57:40.366" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:57:38.088" endtime="20211210 12:57:40.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:40.367" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:57:40.367" endtime="20211210 12:57:40.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:40.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:40.368" endtime="20211210 12:57:40.368"/>
</kw>
<status status="PASS" starttime="20211210 12:57:38.087" endtime="20211210 12:57:40.369"/>
</kw>
<msg timestamp="20211210 12:57:40.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:57:38.087" endtime="20211210 12:57:40.369"/>
</kw>
<msg timestamp="20211210 12:57:40.369" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211210 12:57:38.087" endtime="20211210 12:57:40.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:40.370" endtime="20211210 12:57:40.370"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:40.374" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:41.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:57:41.845" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:57:40.372" endtime="20211210 12:57:41.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:41.846" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:57:41.845" endtime="20211210 12:57:41.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:41.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:41.846" endtime="20211210 12:57:41.848"/>
</kw>
<status status="PASS" starttime="20211210 12:57:40.371" endtime="20211210 12:57:41.848"/>
</kw>
<msg timestamp="20211210 12:57:41.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:57:40.371" endtime="20211210 12:57:41.848"/>
</kw>
<msg timestamp="20211210 12:57:41.849" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211210 12:57:40.370" endtime="20211210 12:57:41.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:41.849" endtime="20211210 12:57:41.849"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 12:57:38.086" endtime="20211210 12:57:41.850"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:41.855" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:43.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:57:43.300" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211210 12:57:41.853" endtime="20211210 12:57:43.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:43.302" level="INFO">om</msg>
<status status="PASS" starttime="20211210 12:57:43.301" endtime="20211210 12:57:43.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:43.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:43.303" endtime="20211210 12:57:43.303"/>
</kw>
<status status="PASS" starttime="20211210 12:57:41.852" endtime="20211210 12:57:43.304"/>
</kw>
<msg timestamp="20211210 12:57:43.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:57:41.852" endtime="20211210 12:57:43.304"/>
</kw>
<msg timestamp="20211210 12:57:43.304" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211210 12:57:41.852" endtime="20211210 12:57:43.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:43.304" endtime="20211210 12:57:43.305"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:43.305" endtime="20211210 12:57:43.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:43.309" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:44.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:57:44.874" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211210 12:57:43.307" endtime="20211210 12:57:44.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:44.875" level="INFO">om</msg>
<status status="PASS" starttime="20211210 12:57:44.875" endtime="20211210 12:57:44.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:44.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:44.876" endtime="20211210 12:57:44.876"/>
</kw>
<status status="PASS" starttime="20211210 12:57:43.307" endtime="20211210 12:57:44.877"/>
</kw>
<msg timestamp="20211210 12:57:44.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:57:43.306" endtime="20211210 12:57:44.880"/>
</kw>
<msg timestamp="20211210 12:57:44.881" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211210 12:57:43.306" endtime="20211210 12:57:44.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:44.881" endtime="20211210 12:57:44.882"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:44.882" endtime="20211210 12:57:44.882"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 12:57:41.851" endtime="20211210 12:57:44.882"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:44.887" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:46.346" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 12:57:46.346" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211210 12:57:44.885" endtime="20211210 12:57:46.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:46.347" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211210 12:57:46.346" endtime="20211210 12:57:46.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:46.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:46.348" endtime="20211210 12:57:46.348"/>
</kw>
<msg timestamp="20211210 12:57:46.349" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211210 12:57:44.884" endtime="20211210 12:57:46.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:46.349" endtime="20211210 12:57:46.349"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:46.352" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:47.668" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 12:57:47.668" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211210 12:57:46.350" endtime="20211210 12:57:47.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:47.669" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211210 12:57:47.668" endtime="20211210 12:57:47.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:47.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:47.669" endtime="20211210 12:57:47.670"/>
</kw>
<msg timestamp="20211210 12:57:47.671" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211210 12:57:46.350" endtime="20211210 12:57:47.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:57:47.671" endtime="20211210 12:57:47.671"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 12:57:44.883" endtime="20211210 12:57:47.671"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211210 12:57:34.949" endtime="20211210 12:57:47.673"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 12:57:47.690" level="INFO">${random} = 07394</msg>
<status status="PASS" starttime="20211210 12:57:47.690" endtime="20211210 12:57:47.690"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:57:47.692" level="INFO">${source} = 07394-source</msg>
<status status="PASS" starttime="20211210 12:57:47.690" endtime="20211210 12:57:47.692"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:57:47.694" level="INFO">${target} = 07394-target</msg>
<status status="PASS" starttime="20211210 12:57:47.692" endtime="20211210 12:57:47.694"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:47.697" level="INFO">Running command 'ozone sh volume create 07394-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:51.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:57:51.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:57:47.695" endtime="20211210 12:57:51.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:51.736" level="INFO"/>
<status status="PASS" starttime="20211210 12:57:51.735" endtime="20211210 12:57:51.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:51.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:51.736" endtime="20211210 12:57:51.736"/>
</kw>
<status status="PASS" starttime="20211210 12:57:47.695" endtime="20211210 12:57:51.737"/>
</kw>
<msg timestamp="20211210 12:57:51.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:57:47.694" endtime="20211210 12:57:51.738"/>
</kw>
<status status="PASS" starttime="20211210 12:57:47.694" endtime="20211210 12:57:51.738"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:51.742" level="INFO">Running command 'ozone sh volume create 07394-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:57:55.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:57:55.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:57:51.740" endtime="20211210 12:57:55.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:57:55.968" level="INFO"/>
<status status="PASS" starttime="20211210 12:57:55.967" endtime="20211210 12:57:55.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:57:55.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:57:55.968" endtime="20211210 12:57:55.969"/>
</kw>
<status status="PASS" starttime="20211210 12:57:51.739" endtime="20211210 12:57:55.969"/>
</kw>
<msg timestamp="20211210 12:57:55.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:57:51.739" endtime="20211210 12:57:55.969"/>
</kw>
<status status="PASS" starttime="20211210 12:57:51.738" endtime="20211210 12:57:55.970"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:57:55.974" level="INFO">Running command 'ozone sh bucket create 07394-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:00.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:00.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:57:55.972" endtime="20211210 12:58:00.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:00.357" level="INFO"/>
<status status="PASS" starttime="20211210 12:58:00.357" endtime="20211210 12:58:00.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:00.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:00.358" endtime="20211210 12:58:00.358"/>
</kw>
<status status="PASS" starttime="20211210 12:57:55.972" endtime="20211210 12:58:00.359"/>
</kw>
<msg timestamp="20211210 12:58:00.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:57:55.971" endtime="20211210 12:58:00.359"/>
</kw>
<status status="PASS" starttime="20211210 12:57:55.971" endtime="20211210 12:58:00.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:00.363" level="INFO">Running command 'ozone sh key put 07394-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:07.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:07.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:58:00.361" endtime="20211210 12:58:07.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:07.420" level="INFO"/>
<status status="PASS" starttime="20211210 12:58:07.420" endtime="20211210 12:58:07.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:07.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:07.421" endtime="20211210 12:58:07.423"/>
</kw>
<status status="PASS" starttime="20211210 12:58:00.360" endtime="20211210 12:58:07.423"/>
</kw>
<msg timestamp="20211210 12:58:07.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:00.360" endtime="20211210 12:58:07.423"/>
</kw>
<status status="PASS" starttime="20211210 12:58:00.359" endtime="20211210 12:58:07.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:07.427" level="INFO">Running command 'ozone sh bucket create 07394-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:11.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:11.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:58:07.425" endtime="20211210 12:58:11.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:11.771" level="INFO"/>
<status status="PASS" starttime="20211210 12:58:11.770" endtime="20211210 12:58:11.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:11.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:11.771" endtime="20211210 12:58:11.772"/>
</kw>
<status status="PASS" starttime="20211210 12:58:07.424" endtime="20211210 12:58:11.772"/>
</kw>
<msg timestamp="20211210 12:58:11.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:07.424" endtime="20211210 12:58:11.772"/>
</kw>
<status status="PASS" starttime="20211210 12:58:07.424" endtime="20211210 12:58:11.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:11.776" level="INFO">Running command 'ozone sh bucket link 07394-source/readable-bucket 07394-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:16.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:16.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:58:11.774" endtime="20211210 12:58:16.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:16.141" level="INFO"/>
<status status="PASS" starttime="20211210 12:58:16.140" endtime="20211210 12:58:16.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:16.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:16.141" endtime="20211210 12:58:16.142"/>
</kw>
<status status="PASS" starttime="20211210 12:58:11.774" endtime="20211210 12:58:16.142"/>
</kw>
<msg timestamp="20211210 12:58:16.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:11.774" endtime="20211210 12:58:16.142"/>
</kw>
<status status="PASS" starttime="20211210 12:58:11.773" endtime="20211210 12:58:16.142"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:16.146" level="INFO">Running command 'ozone sh bucket link 07394-source/readable-bucket 07394-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:20.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:20.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:58:16.144" endtime="20211210 12:58:20.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:20.440" level="INFO"/>
<status status="PASS" starttime="20211210 12:58:20.439" endtime="20211210 12:58:20.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:20.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:20.440" endtime="20211210 12:58:20.441"/>
</kw>
<status status="PASS" starttime="20211210 12:58:16.144" endtime="20211210 12:58:20.442"/>
</kw>
<msg timestamp="20211210 12:58:20.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:16.143" endtime="20211210 12:58:20.442"/>
</kw>
<status status="PASS" starttime="20211210 12:58:16.143" endtime="20211210 12:58:20.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:20.446" level="INFO">Running command 'ozone sh bucket link 07394-source/unreadable-bucket 07394-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:24.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:24.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:58:20.444" endtime="20211210 12:58:24.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:24.689" level="INFO"/>
<status status="PASS" starttime="20211210 12:58:24.688" endtime="20211210 12:58:24.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:24.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:24.689" endtime="20211210 12:58:24.690"/>
</kw>
<status status="PASS" starttime="20211210 12:58:20.443" endtime="20211210 12:58:24.690"/>
</kw>
<msg timestamp="20211210 12:58:24.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:20.443" endtime="20211210 12:58:24.691"/>
</kw>
<status status="PASS" starttime="20211210 12:58:20.442" endtime="20211210 12:58:24.691"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:24.695" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 07394-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:28.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:28.822" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:58:24.693" endtime="20211210 12:58:28.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:28.823" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:58:28.822" endtime="20211210 12:58:28.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:28.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:28.823" endtime="20211210 12:58:28.824"/>
</kw>
<status status="PASS" starttime="20211210 12:58:24.692" endtime="20211210 12:58:28.825"/>
</kw>
<msg timestamp="20211210 12:58:28.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:24.692" endtime="20211210 12:58:28.825"/>
</kw>
<status status="PASS" starttime="20211210 12:58:24.691" endtime="20211210 12:58:28.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:28.829" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 07394-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:32.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:32.825" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:58:28.827" endtime="20211210 12:58:32.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:32.827" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:58:32.826" endtime="20211210 12:58:32.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:32.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:32.827" endtime="20211210 12:58:32.827"/>
</kw>
<status status="PASS" starttime="20211210 12:58:28.826" endtime="20211210 12:58:32.828"/>
</kw>
<msg timestamp="20211210 12:58:32.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:28.826" endtime="20211210 12:58:32.828"/>
</kw>
<status status="PASS" starttime="20211210 12:58:28.825" endtime="20211210 12:58:32.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:32.832" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 07394-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:37.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:37.060" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:58:32.830" endtime="20211210 12:58:37.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:37.061" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:58:37.060" endtime="20211210 12:58:37.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:37.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:37.062" endtime="20211210 12:58:37.062"/>
</kw>
<status status="PASS" starttime="20211210 12:58:32.829" endtime="20211210 12:58:37.063"/>
</kw>
<msg timestamp="20211210 12:58:37.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:32.829" endtime="20211210 12:58:37.063"/>
</kw>
<status status="PASS" starttime="20211210 12:58:32.828" endtime="20211210 12:58:37.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:37.067" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 07394-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:41.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:41.426" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:58:37.065" endtime="20211210 12:58:41.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:41.427" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:58:41.426" endtime="20211210 12:58:41.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:41.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:41.427" endtime="20211210 12:58:41.428"/>
</kw>
<status status="PASS" starttime="20211210 12:58:37.065" endtime="20211210 12:58:41.428"/>
</kw>
<msg timestamp="20211210 12:58:41.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:37.065" endtime="20211210 12:58:41.429"/>
</kw>
<status status="PASS" starttime="20211210 12:58:37.063" endtime="20211210 12:58:41.429"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:41.432" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 07394-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:45.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:45.263" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:58:41.431" endtime="20211210 12:58:45.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:45.265" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:58:45.264" endtime="20211210 12:58:45.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:45.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:45.265" endtime="20211210 12:58:45.265"/>
</kw>
<status status="PASS" starttime="20211210 12:58:41.430" endtime="20211210 12:58:45.266"/>
</kw>
<msg timestamp="20211210 12:58:45.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:41.430" endtime="20211210 12:58:45.266"/>
</kw>
<status status="PASS" starttime="20211210 12:58:41.429" endtime="20211210 12:58:45.267"/>
</kw>
<status status="PASS" starttime="20211210 12:57:55.970" endtime="20211210 12:58:45.267"/>
</kw>
<status status="PASS" starttime="20211210 12:57:55.970" endtime="20211210 12:58:45.267"/>
</kw>
<status status="PASS" starttime="20211210 12:57:47.689" endtime="20211210 12:58:45.267"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:45.274" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:45.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:45.278" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:58:45.272" endtime="20211210 12:58:45.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:45.279" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:58:45.278" endtime="20211210 12:58:45.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:45.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:45.279" endtime="20211210 12:58:45.280"/>
</kw>
<status status="PASS" starttime="20211210 12:58:45.271" endtime="20211210 12:58:45.280"/>
</kw>
<msg timestamp="20211210 12:58:45.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:45.271" endtime="20211210 12:58:45.280"/>
</kw>
<msg timestamp="20211210 12:58:45.281" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 12:58:45.271" endtime="20211210 12:58:45.281"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:58:45.283" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 12:58:45.281" endtime="20211210 12:58:45.283"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:45.288" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:45.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:45.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:58:45.285" endtime="20211210 12:58:45.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:45.297" level="INFO"/>
<status status="PASS" starttime="20211210 12:58:45.296" endtime="20211210 12:58:45.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:45.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:45.297" endtime="20211210 12:58:45.297"/>
</kw>
<status status="PASS" starttime="20211210 12:58:45.285" endtime="20211210 12:58:45.298"/>
</kw>
<msg timestamp="20211210 12:58:45.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:45.285" endtime="20211210 12:58:45.298"/>
</kw>
<status status="PASS" starttime="20211210 12:58:45.284" endtime="20211210 12:58:45.298"/>
</kw>
<status status="PASS" starttime="20211210 12:58:45.283" endtime="20211210 12:58:45.298"/>
</kw>
<status status="PASS" starttime="20211210 12:58:45.270" endtime="20211210 12:58:45.299"/>
</kw>
<status status="PASS" starttime="20211210 12:58:45.269" endtime="20211210 12:58:45.299"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:45.302" level="INFO">Running command 'ozone sh bucket link 07394-source/no-such-bucket 07394-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:49.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:49.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:58:45.301" endtime="20211210 12:58:49.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:49.548" level="INFO"/>
<status status="PASS" starttime="20211210 12:58:49.547" endtime="20211210 12:58:49.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:49.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:49.548" endtime="20211210 12:58:49.549"/>
</kw>
<status status="PASS" starttime="20211210 12:58:45.300" endtime="20211210 12:58:49.549"/>
</kw>
<msg timestamp="20211210 12:58:49.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:45.300" endtime="20211210 12:58:49.549"/>
</kw>
<status status="PASS" starttime="20211210 12:58:45.299" endtime="20211210 12:58:49.550"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:49.552" level="INFO">Running command 'ozone sh key list 07394-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:53.519" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 12:58:53.519" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211210 12:58:49.550" endtime="20211210 12:58:53.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:53.520" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211210 12:58:53.520" endtime="20211210 12:58:53.521"/>
</kw>
<msg timestamp="20211210 12:58:53.521" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211210 12:58:49.550" endtime="20211210 12:58:53.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:58:53.521" endtime="20211210 12:58:53.522"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 12:58:45.267" endtime="20211210 12:58:53.522"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:53.530" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:53.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:53.533" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:58:53.528" endtime="20211210 12:58:53.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:53.534" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:58:53.534" endtime="20211210 12:58:53.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:53.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:53.535" endtime="20211210 12:58:53.535"/>
</kw>
<status status="PASS" starttime="20211210 12:58:53.527" endtime="20211210 12:58:53.536"/>
</kw>
<msg timestamp="20211210 12:58:53.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:53.527" endtime="20211210 12:58:53.536"/>
</kw>
<msg timestamp="20211210 12:58:53.536" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 12:58:53.526" endtime="20211210 12:58:53.536"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:58:53.537" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 12:58:53.537" endtime="20211210 12:58:53.537"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:53.541" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:53.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:53.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:58:53.540" endtime="20211210 12:58:53.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:53.550" level="INFO"/>
<status status="PASS" starttime="20211210 12:58:53.550" endtime="20211210 12:58:53.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:53.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:53.551" endtime="20211210 12:58:53.551"/>
</kw>
<status status="PASS" starttime="20211210 12:58:53.539" endtime="20211210 12:58:53.552"/>
</kw>
<msg timestamp="20211210 12:58:53.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:53.539" endtime="20211210 12:58:53.552"/>
</kw>
<status status="PASS" starttime="20211210 12:58:53.538" endtime="20211210 12:58:53.552"/>
</kw>
<status status="PASS" starttime="20211210 12:58:53.538" endtime="20211210 12:58:53.552"/>
</kw>
<status status="PASS" starttime="20211210 12:58:53.525" endtime="20211210 12:58:53.553"/>
</kw>
<status status="PASS" starttime="20211210 12:58:53.524" endtime="20211210 12:58:53.553"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:53.557" level="INFO">Running command 'ozone sh bucket link 07394-source/bucket1 07394-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:58:57.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:58:57.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:58:53.555" endtime="20211210 12:58:57.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:58:57.830" level="INFO"/>
<status status="PASS" starttime="20211210 12:58:57.829" endtime="20211210 12:58:57.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:58:57.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:58:57.830" endtime="20211210 12:58:57.831"/>
</kw>
<status status="PASS" starttime="20211210 12:58:53.554" endtime="20211210 12:58:57.831"/>
</kw>
<msg timestamp="20211210 12:58:57.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:53.554" endtime="20211210 12:58:57.832"/>
</kw>
<status status="PASS" starttime="20211210 12:58:53.553" endtime="20211210 12:58:57.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:58:57.836" level="INFO">Running command 'ozone sh bucket create 07394-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:02.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:02.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:58:57.834" endtime="20211210 12:59:02.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:02.057" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:02.057" endtime="20211210 12:59:02.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:02.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:02.058" endtime="20211210 12:59:02.058"/>
</kw>
<status status="PASS" starttime="20211210 12:58:57.833" endtime="20211210 12:59:02.059"/>
</kw>
<msg timestamp="20211210 12:59:02.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:58:57.833" endtime="20211210 12:59:02.059"/>
</kw>
<status status="PASS" starttime="20211210 12:58:57.832" endtime="20211210 12:59:02.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:02.065" level="INFO">Running command 'ozone sh key put 07394-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:08.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:08.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:02.062" endtime="20211210 12:59:08.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:08.991" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:08.990" endtime="20211210 12:59:08.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:08.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:08.992" endtime="20211210 12:59:08.992"/>
</kw>
<status status="PASS" starttime="20211210 12:59:02.061" endtime="20211210 12:59:08.993"/>
</kw>
<msg timestamp="20211210 12:59:08.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:02.060" endtime="20211210 12:59:08.993"/>
</kw>
<status status="PASS" starttime="20211210 12:59:02.060" endtime="20211210 12:59:08.993"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 12:59:08.995" level="INFO">${postfix} = 65545</msg>
<status status="PASS" starttime="20211210 12:59:08.995" endtime="20211210 12:59:08.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20211210 12:59:08.996" level="INFO">${tmpfile} = /tmp/tempkey-65545</msg>
<status status="PASS" starttime="20211210 12:59:08.995" endtime="20211210 12:59:08.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:09.000" level="INFO">Running command 'ozone sh key get 07394-target/link1/key1 /tmp/tempkey-65545 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:15.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:15.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:08.998" endtime="20211210 12:59:15.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:15.727" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:15.726" endtime="20211210 12:59:15.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:15.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:15.727" endtime="20211210 12:59:15.728"/>
</kw>
<status status="PASS" starttime="20211210 12:59:08.997" endtime="20211210 12:59:15.728"/>
</kw>
<msg timestamp="20211210 12:59:15.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:08.997" endtime="20211210 12:59:15.729"/>
</kw>
<status status="PASS" starttime="20211210 12:59:08.996" endtime="20211210 12:59:15.729"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20211210 12:59:15.732" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-65545 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:15.736" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20211210 12:59:15.729" endtime="20211210 12:59:15.736"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:15.741" level="INFO">Running command 'rm -f /tmp/tempkey-65545 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:15.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:15.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:15.739" endtime="20211210 12:59:15.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:15.745" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:15.744" endtime="20211210 12:59:15.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:15.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:15.745" endtime="20211210 12:59:15.746"/>
</kw>
<status status="PASS" starttime="20211210 12:59:15.738" endtime="20211210 12:59:15.750"/>
</kw>
<msg timestamp="20211210 12:59:15.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:15.738" endtime="20211210 12:59:15.750"/>
</kw>
<status status="PASS" starttime="20211210 12:59:15.737" endtime="20211210 12:59:15.751"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20211210 12:59:15.752" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20211210 12:59:15.751" endtime="20211210 12:59:15.752"/>
</kw>
<msg timestamp="20211210 12:59:15.752" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20211210 12:59:08.994" endtime="20211210 12:59:15.752"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20211210 12:59:15.753" endtime="20211210 12:59:15.753"/>
</kw>
<status status="PASS" starttime="20211210 12:59:08.993" endtime="20211210 12:59:15.753"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 12:58:53.523" endtime="20211210 12:59:15.754"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:15.760" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:15.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:15.764" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:59:15.758" endtime="20211210 12:59:15.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:15.765" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:59:15.764" endtime="20211210 12:59:15.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:15.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:15.766" endtime="20211210 12:59:15.766"/>
</kw>
<status status="PASS" starttime="20211210 12:59:15.757" endtime="20211210 12:59:15.767"/>
</kw>
<msg timestamp="20211210 12:59:15.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:15.757" endtime="20211210 12:59:15.767"/>
</kw>
<msg timestamp="20211210 12:59:15.767" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 12:59:15.756" endtime="20211210 12:59:15.767"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:59:15.768" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 12:59:15.768" endtime="20211210 12:59:15.768"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:15.773" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:15.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:15.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:15.771" endtime="20211210 12:59:15.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:15.786" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:15.785" endtime="20211210 12:59:15.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:15.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:15.787" endtime="20211210 12:59:15.788"/>
</kw>
<status status="PASS" starttime="20211210 12:59:15.770" endtime="20211210 12:59:15.788"/>
</kw>
<msg timestamp="20211210 12:59:15.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:15.770" endtime="20211210 12:59:15.789"/>
</kw>
<status status="PASS" starttime="20211210 12:59:15.769" endtime="20211210 12:59:15.789"/>
</kw>
<status status="PASS" starttime="20211210 12:59:15.769" endtime="20211210 12:59:15.789"/>
</kw>
<status status="PASS" starttime="20211210 12:59:15.755" endtime="20211210 12:59:15.789"/>
</kw>
<status status="PASS" starttime="20211210 12:59:15.755" endtime="20211210 12:59:15.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:15.794" level="INFO">Running command 'ozone sh key put 07394-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:23.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:23.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:15.792" endtime="20211210 12:59:23.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:23.131" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:23.130" endtime="20211210 12:59:23.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:23.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:23.131" endtime="20211210 12:59:23.132"/>
</kw>
<status status="PASS" starttime="20211210 12:59:15.791" endtime="20211210 12:59:23.132"/>
</kw>
<msg timestamp="20211210 12:59:23.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:15.791" endtime="20211210 12:59:23.133"/>
</kw>
<status status="PASS" starttime="20211210 12:59:15.790" endtime="20211210 12:59:23.133"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 12:59:23.135" level="INFO">${postfix} = 96293</msg>
<status status="PASS" starttime="20211210 12:59:23.135" endtime="20211210 12:59:23.136"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20211210 12:59:23.136" level="INFO">${tmpfile} = /tmp/tempkey-96293</msg>
<status status="PASS" starttime="20211210 12:59:23.136" endtime="20211210 12:59:23.136"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:23.141" level="INFO">Running command 'ozone sh key get 07394-source/bucket1/key2 /tmp/tempkey-96293 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:29.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:29.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:23.138" endtime="20211210 12:59:29.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:29.372" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:29.371" endtime="20211210 12:59:29.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:29.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:29.372" endtime="20211210 12:59:29.373"/>
</kw>
<status status="PASS" starttime="20211210 12:59:23.137" endtime="20211210 12:59:29.373"/>
</kw>
<msg timestamp="20211210 12:59:29.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:23.137" endtime="20211210 12:59:29.373"/>
</kw>
<status status="PASS" starttime="20211210 12:59:23.136" endtime="20211210 12:59:29.374"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20211210 12:59:29.376" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-96293 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:29.379" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20211210 12:59:29.374" endtime="20211210 12:59:29.379"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:29.385" level="INFO">Running command 'rm -f /tmp/tempkey-96293 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:29.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:29.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:29.382" endtime="20211210 12:59:29.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:29.387" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:29.387" endtime="20211210 12:59:29.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:29.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:29.388" endtime="20211210 12:59:29.389"/>
</kw>
<status status="PASS" starttime="20211210 12:59:29.381" endtime="20211210 12:59:29.389"/>
</kw>
<msg timestamp="20211210 12:59:29.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:29.381" endtime="20211210 12:59:29.389"/>
</kw>
<status status="PASS" starttime="20211210 12:59:29.379" endtime="20211210 12:59:29.390"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20211210 12:59:29.390" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20211210 12:59:29.390" endtime="20211210 12:59:29.390"/>
</kw>
<msg timestamp="20211210 12:59:29.391" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20211210 12:59:23.134" endtime="20211210 12:59:29.391"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20211210 12:59:29.391" endtime="20211210 12:59:29.391"/>
</kw>
<status status="PASS" starttime="20211210 12:59:23.133" endtime="20211210 12:59:29.392"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 12:59:15.754" endtime="20211210 12:59:29.392"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:29.398" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:29.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:29.401" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:59:29.396" endtime="20211210 12:59:29.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:29.403" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:59:29.402" endtime="20211210 12:59:29.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:29.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:29.403" endtime="20211210 12:59:29.404"/>
</kw>
<status status="PASS" starttime="20211210 12:59:29.395" endtime="20211210 12:59:29.404"/>
</kw>
<msg timestamp="20211210 12:59:29.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:29.395" endtime="20211210 12:59:29.404"/>
</kw>
<msg timestamp="20211210 12:59:29.404" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 12:59:29.394" endtime="20211210 12:59:29.404"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:59:29.405" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 12:59:29.405" endtime="20211210 12:59:29.405"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:29.410" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:29.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:29.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:29.409" endtime="20211210 12:59:29.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:29.420" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:29.419" endtime="20211210 12:59:29.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:29.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:29.420" endtime="20211210 12:59:29.421"/>
</kw>
<status status="PASS" starttime="20211210 12:59:29.408" endtime="20211210 12:59:29.421"/>
</kw>
<msg timestamp="20211210 12:59:29.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:29.407" endtime="20211210 12:59:29.421"/>
</kw>
<status status="PASS" starttime="20211210 12:59:29.406" endtime="20211210 12:59:29.422"/>
</kw>
<status status="PASS" starttime="20211210 12:59:29.406" endtime="20211210 12:59:29.422"/>
</kw>
<status status="PASS" starttime="20211210 12:59:29.394" endtime="20211210 12:59:29.422"/>
</kw>
<status status="PASS" starttime="20211210 12:59:29.393" endtime="20211210 12:59:29.422"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:29.427" level="INFO">Running command 'ozone sh key list 07394-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:33.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:33.785" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211210 12:59:29.424" endtime="20211210 12:59:33.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:33.787" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211210 12:59:33.786" endtime="20211210 12:59:33.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:33.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:33.787" endtime="20211210 12:59:33.788"/>
</kw>
<status status="PASS" starttime="20211210 12:59:29.423" endtime="20211210 12:59:33.788"/>
</kw>
<msg timestamp="20211210 12:59:33.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:29.423" endtime="20211210 12:59:33.789"/>
</kw>
<msg timestamp="20211210 12:59:33.789" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20211210 12:59:29.422" endtime="20211210 12:59:33.789"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:33.793" level="INFO">Running command 'ozone sh key list 07394-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:38.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:38.121" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211210 12:59:33.791" endtime="20211210 12:59:38.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:38.122" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211210 12:59:38.121" endtime="20211210 12:59:38.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:38.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:38.122" endtime="20211210 12:59:38.123"/>
</kw>
<status status="PASS" starttime="20211210 12:59:33.790" endtime="20211210 12:59:38.123"/>
</kw>
<msg timestamp="20211210 12:59:38.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:33.790" endtime="20211210 12:59:38.123"/>
</kw>
<msg timestamp="20211210 12:59:38.124" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211210 12:59:33.789" endtime="20211210 12:59:38.124"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 12:59:38.124" endtime="20211210 12:59:38.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:38.125" endtime="20211210 12:59:38.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:38.126" endtime="20211210 12:59:38.126"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 12:59:29.392" endtime="20211210 12:59:38.126"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:38.133" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:38.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:38.137" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:59:38.131" endtime="20211210 12:59:38.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:38.138" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:59:38.137" endtime="20211210 12:59:38.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:38.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:38.138" endtime="20211210 12:59:38.139"/>
</kw>
<status status="PASS" starttime="20211210 12:59:38.130" endtime="20211210 12:59:38.139"/>
</kw>
<msg timestamp="20211210 12:59:38.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:38.130" endtime="20211210 12:59:38.139"/>
</kw>
<msg timestamp="20211210 12:59:38.140" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 12:59:38.129" endtime="20211210 12:59:38.140"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:59:38.141" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 12:59:38.140" endtime="20211210 12:59:38.141"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:38.148" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:38.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:38.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:38.143" endtime="20211210 12:59:38.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:38.158" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:38.157" endtime="20211210 12:59:38.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:38.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:38.159" endtime="20211210 12:59:38.159"/>
</kw>
<status status="PASS" starttime="20211210 12:59:38.142" endtime="20211210 12:59:38.160"/>
</kw>
<msg timestamp="20211210 12:59:38.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:38.142" endtime="20211210 12:59:38.160"/>
</kw>
<status status="PASS" starttime="20211210 12:59:38.141" endtime="20211210 12:59:38.160"/>
</kw>
<status status="PASS" starttime="20211210 12:59:38.141" endtime="20211210 12:59:38.160"/>
</kw>
<status status="PASS" starttime="20211210 12:59:38.129" endtime="20211210 12:59:38.161"/>
</kw>
<status status="PASS" starttime="20211210 12:59:38.128" endtime="20211210 12:59:38.161"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:38.181" level="INFO">Running command 'ozone sh key delete 07394-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:42.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:42.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:38.162" endtime="20211210 12:59:42.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:42.546" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:42.545" endtime="20211210 12:59:42.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:42.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:42.546" endtime="20211210 12:59:42.547"/>
</kw>
<status status="PASS" starttime="20211210 12:59:38.162" endtime="20211210 12:59:42.547"/>
</kw>
<msg timestamp="20211210 12:59:42.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:38.162" endtime="20211210 12:59:42.547"/>
</kw>
<status status="PASS" starttime="20211210 12:59:38.161" endtime="20211210 12:59:42.548"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:42.552" level="INFO">Running command 'ozone sh key list 07394-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:46.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:46.847" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211210 12:59:42.550" endtime="20211210 12:59:46.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:46.849" level="INFO">key1</msg>
<status status="PASS" starttime="20211210 12:59:46.848" endtime="20211210 12:59:46.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:46.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:46.849" endtime="20211210 12:59:46.850"/>
</kw>
<status status="PASS" starttime="20211210 12:59:42.549" endtime="20211210 12:59:46.850"/>
</kw>
<msg timestamp="20211210 12:59:46.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:42.549" endtime="20211210 12:59:46.851"/>
</kw>
<msg timestamp="20211210 12:59:46.851" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211210 12:59:42.548" endtime="20211210 12:59:46.851"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:46.851" endtime="20211210 12:59:46.852"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 12:59:38.127" endtime="20211210 12:59:46.859"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:46.866" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:46.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:46.869" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:59:46.864" endtime="20211210 12:59:46.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:46.871" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:59:46.870" endtime="20211210 12:59:46.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:46.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:46.871" endtime="20211210 12:59:46.872"/>
</kw>
<status status="PASS" starttime="20211210 12:59:46.863" endtime="20211210 12:59:46.872"/>
</kw>
<msg timestamp="20211210 12:59:46.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:46.863" endtime="20211210 12:59:46.872"/>
</kw>
<msg timestamp="20211210 12:59:46.873" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 12:59:46.862" endtime="20211210 12:59:46.873"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:59:46.874" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 12:59:46.873" endtime="20211210 12:59:46.874"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:46.878" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:46.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:46.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:46.877" endtime="20211210 12:59:46.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:46.887" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:46.886" endtime="20211210 12:59:46.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:46.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:46.887" endtime="20211210 12:59:46.888"/>
</kw>
<status status="PASS" starttime="20211210 12:59:46.876" endtime="20211210 12:59:46.888"/>
</kw>
<msg timestamp="20211210 12:59:46.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:46.876" endtime="20211210 12:59:46.888"/>
</kw>
<status status="PASS" starttime="20211210 12:59:46.875" endtime="20211210 12:59:46.889"/>
</kw>
<status status="PASS" starttime="20211210 12:59:46.874" endtime="20211210 12:59:46.889"/>
</kw>
<status status="PASS" starttime="20211210 12:59:46.862" endtime="20211210 12:59:46.889"/>
</kw>
<status status="PASS" starttime="20211210 12:59:46.861" endtime="20211210 12:59:46.889"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:46.893" level="INFO">Running command 'ozone sh bucket list 07394-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:51.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:51.121" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211210 12:59:46.891" endtime="20211210 12:59:51.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:51.123" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T12:58:49.439Z",
  "modificationTime" : "2021-12-10T12:58:49.439Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T12:58:24.571Z",
  "modificationTime" : "2021-12-10T12:58:45.105Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T12:58:57.641Z",
  "modificationTime" : "2021-12-10T12:58:57.641Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T12:58:16.029Z",
  "modificationTime" : "2021-12-10T12:58:41.202Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T12:58:20.282Z",
  "modificationTime" : "2021-12-10T12:58:20.282Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20211210 12:59:51.122" endtime="20211210 12:59:51.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:51.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:51.123" endtime="20211210 12:59:51.124"/>
</kw>
<status status="PASS" starttime="20211210 12:59:46.890" endtime="20211210 12:59:51.124"/>
</kw>
<msg timestamp="20211210 12:59:51.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:46.890" endtime="20211210 12:59:51.124"/>
</kw>
<msg timestamp="20211210 12:59:51.125" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211210 12:59:46.889" endtime="20211210 12:59:51.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:51.125" endtime="20211210 12:59:51.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:51.126" endtime="20211210 12:59:51.126"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 12:59:46.860" endtime="20211210 12:59:51.127"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:51.133" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:51.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:51.142" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:59:51.131" endtime="20211210 12:59:51.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:51.144" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:59:51.143" endtime="20211210 12:59:51.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:51.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:51.144" endtime="20211210 12:59:51.145"/>
</kw>
<status status="PASS" starttime="20211210 12:59:51.130" endtime="20211210 12:59:51.145"/>
</kw>
<msg timestamp="20211210 12:59:51.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:51.130" endtime="20211210 12:59:51.145"/>
</kw>
<msg timestamp="20211210 12:59:51.146" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 12:59:51.129" endtime="20211210 12:59:51.146"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:59:51.146" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 12:59:51.146" endtime="20211210 12:59:51.146"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:51.152" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:51.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:51.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:51.150" endtime="20211210 12:59:51.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:51.161" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:51.160" endtime="20211210 12:59:51.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:51.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:51.161" endtime="20211210 12:59:51.162"/>
</kw>
<status status="PASS" starttime="20211210 12:59:51.149" endtime="20211210 12:59:51.162"/>
</kw>
<msg timestamp="20211210 12:59:51.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:51.148" endtime="20211210 12:59:51.162"/>
</kw>
<status status="PASS" starttime="20211210 12:59:51.147" endtime="20211210 12:59:51.163"/>
</kw>
<status status="PASS" starttime="20211210 12:59:51.147" endtime="20211210 12:59:51.163"/>
</kw>
<status status="PASS" starttime="20211210 12:59:51.129" endtime="20211210 12:59:51.163"/>
</kw>
<status status="PASS" starttime="20211210 12:59:51.128" endtime="20211210 12:59:51.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:51.167" level="INFO">Running command 'ozone sh bucket info 07394-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:55.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:55.300" level="INFO">${output} = {
  "volumeName" : "07394-target",
  "bucketName" : "link1",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-12-10T12:58:57.641Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211210 12:59:51.165" endtime="20211210 12:59:55.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:55.301" level="INFO">{
  "volumeName" : "07394-target",
  "bucketName" : "link1",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-12-10T12:58:57.641Z",
  "modificationTime" : "2021-12-10T12:58:57.641Z"
}</msg>
<status status="PASS" starttime="20211210 12:59:55.300" endtime="20211210 12:59:55.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:55.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:55.301" endtime="20211210 12:59:55.302"/>
</kw>
<status status="PASS" starttime="20211210 12:59:51.164" endtime="20211210 12:59:55.302"/>
</kw>
<msg timestamp="20211210 12:59:55.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:51.164" endtime="20211210 12:59:55.303"/>
</kw>
<msg timestamp="20211210 12:59:55.303" level="INFO">${result} = {
  "volumeName" : "07394-target",
  "bucketName" : "link1",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-12-10T12:58:57.641Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211210 12:59:51.163" endtime="20211210 12:59:55.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:55.303" endtime="20211210 12:59:55.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:55.304" endtime="20211210 12:59:55.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:55.305" endtime="20211210 12:59:55.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:55.305" endtime="20211210 12:59:55.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:55.306" endtime="20211210 12:59:55.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:55.307" endtime="20211210 12:59:55.307"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 12:59:55.308" endtime="20211210 12:59:55.308"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 12:59:51.127" endtime="20211210 12:59:55.308"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:55.316" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:55.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:55.320" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:59:55.314" endtime="20211210 12:59:55.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:55.321" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:59:55.320" endtime="20211210 12:59:55.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:55.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:55.321" endtime="20211210 12:59:55.322"/>
</kw>
<status status="PASS" starttime="20211210 12:59:55.314" endtime="20211210 12:59:55.322"/>
</kw>
<msg timestamp="20211210 12:59:55.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:55.313" endtime="20211210 12:59:55.323"/>
</kw>
<msg timestamp="20211210 12:59:55.323" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 12:59:55.313" endtime="20211210 12:59:55.323"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:59:55.324" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 12:59:55.323" endtime="20211210 12:59:55.324"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:55.328" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:55.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:55.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:59:55.326" endtime="20211210 12:59:55.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:55.337" level="INFO"/>
<status status="PASS" starttime="20211210 12:59:55.337" endtime="20211210 12:59:55.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:55.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:55.338" endtime="20211210 12:59:55.338"/>
</kw>
<status status="PASS" starttime="20211210 12:59:55.326" endtime="20211210 12:59:55.339"/>
</kw>
<msg timestamp="20211210 12:59:55.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:55.326" endtime="20211210 12:59:55.339"/>
</kw>
<status status="PASS" starttime="20211210 12:59:55.325" endtime="20211210 12:59:55.339"/>
</kw>
<status status="PASS" starttime="20211210 12:59:55.324" endtime="20211210 12:59:55.339"/>
</kw>
<status status="PASS" starttime="20211210 12:59:55.312" endtime="20211210 12:59:55.339"/>
</kw>
<status status="PASS" starttime="20211210 12:59:55.310" endtime="20211210 12:59:55.340"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:55.343" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 07394-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:59:59.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:59:59.258" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:59:55.342" endtime="20211210 12:59:59.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:59:59.259" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 12:59:59.259" endtime="20211210 12:59:59.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:59:59.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:59:59.260" endtime="20211210 12:59:59.260"/>
</kw>
<status status="PASS" starttime="20211210 12:59:55.341" endtime="20211210 12:59:59.261"/>
</kw>
<msg timestamp="20211210 12:59:59.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:55.340" endtime="20211210 12:59:59.261"/>
</kw>
<status status="PASS" starttime="20211210 12:59:55.340" endtime="20211210 12:59:59.261"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:59:59.266" level="INFO">Running command 'ozone sh bucket getacl 07394-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:03.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:03.442" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211210 12:59:59.264" endtime="20211210 13:00:03.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:03.443" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211210 13:00:03.442" endtime="20211210 13:00:03.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:03.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:03.443" endtime="20211210 13:00:03.444"/>
</kw>
<status status="PASS" starttime="20211210 12:59:59.264" endtime="20211210 13:00:03.444"/>
</kw>
<msg timestamp="20211210 13:00:03.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:59:59.263" endtime="20211210 13:00:03.445"/>
</kw>
<msg timestamp="20211210 13:00:03.445" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211210 12:59:59.262" endtime="20211210 13:00:03.445"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:00:03.445" endtime="20211210 13:00:03.446"/>
</kw>
<status status="PASS" starttime="20211210 12:59:59.261" endtime="20211210 13:00:03.446"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:03.453" level="INFO">Running command 'ozone sh bucket getacl 07394-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:07.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:07.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:03.450" endtime="20211210 13:00:07.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:07.630" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:07.629" endtime="20211210 13:00:07.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:07.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:07.630" endtime="20211210 13:00:07.631"/>
</kw>
<status status="PASS" starttime="20211210 13:00:03.449" endtime="20211210 13:00:07.631"/>
</kw>
<msg timestamp="20211210 13:00:07.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:03.449" endtime="20211210 13:00:07.632"/>
</kw>
<msg timestamp="20211210 13:00:07.632" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211210 13:00:03.448" endtime="20211210 13:00:07.632"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:00:07.632" endtime="20211210 13:00:07.633"/>
</kw>
<status status="PASS" starttime="20211210 13:00:03.446" endtime="20211210 13:00:07.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:07.637" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 07394-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:11.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:11.841" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:00:07.635" endtime="20211210 13:00:11.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:11.843" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:00:11.842" endtime="20211210 13:00:11.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:11.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:11.843" endtime="20211210 13:00:11.844"/>
</kw>
<status status="PASS" starttime="20211210 13:00:07.634" endtime="20211210 13:00:11.844"/>
</kw>
<msg timestamp="20211210 13:00:11.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:07.634" endtime="20211210 13:00:11.845"/>
</kw>
<status status="PASS" starttime="20211210 13:00:07.633" endtime="20211210 13:00:11.845"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:11.851" level="INFO">Running command 'ozone sh bucket getacl 07394-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:16.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:16.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:11.849" endtime="20211210 13:00:16.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:16.377" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:16.376" endtime="20211210 13:00:16.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:16.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:16.377" endtime="20211210 13:00:16.378"/>
</kw>
<status status="PASS" starttime="20211210 13:00:11.848" endtime="20211210 13:00:16.378"/>
</kw>
<msg timestamp="20211210 13:00:16.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:11.848" endtime="20211210 13:00:16.379"/>
</kw>
<msg timestamp="20211210 13:00:16.379" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211210 13:00:11.847" endtime="20211210 13:00:16.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:00:16.379" endtime="20211210 13:00:16.380"/>
</kw>
<status status="PASS" starttime="20211210 13:00:11.845" endtime="20211210 13:00:16.380"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:16.385" level="INFO">Running command 'ozone sh bucket getacl 07394-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:20.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:20.468" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211210 13:00:16.383" endtime="20211210 13:00:20.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:20.470" level="INFO">READ</msg>
<status status="PASS" starttime="20211210 13:00:20.469" endtime="20211210 13:00:20.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:20.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:20.470" endtime="20211210 13:00:20.471"/>
</kw>
<status status="PASS" starttime="20211210 13:00:16.383" endtime="20211210 13:00:20.471"/>
</kw>
<msg timestamp="20211210 13:00:20.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:16.382" endtime="20211210 13:00:20.471"/>
</kw>
<msg timestamp="20211210 13:00:20.472" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211210 13:00:16.381" endtime="20211210 13:00:20.472"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:00:20.472" endtime="20211210 13:00:20.472"/>
</kw>
<status status="PASS" starttime="20211210 13:00:16.380" endtime="20211210 13:00:20.472"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 12:59:55.309" endtime="20211210 13:00:20.473"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:20.479" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:20.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:20.484" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:00:20.477" endtime="20211210 13:00:20.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:20.485" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:00:20.485" endtime="20211210 13:00:20.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:20.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:20.486" endtime="20211210 13:00:20.486"/>
</kw>
<status status="PASS" starttime="20211210 13:00:20.477" endtime="20211210 13:00:20.487"/>
</kw>
<msg timestamp="20211210 13:00:20.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:20.476" endtime="20211210 13:00:20.487"/>
</kw>
<msg timestamp="20211210 13:00:20.487" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:00:20.476" endtime="20211210 13:00:20.487"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:00:20.488" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:00:20.488" endtime="20211210 13:00:20.488"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:20.493" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:20.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:20.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:20.491" endtime="20211210 13:00:20.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:20.707" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:20.706" endtime="20211210 13:00:20.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:20.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:20.707" endtime="20211210 13:00:20.708"/>
</kw>
<status status="PASS" starttime="20211210 13:00:20.490" endtime="20211210 13:00:20.708"/>
</kw>
<msg timestamp="20211210 13:00:20.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:20.490" endtime="20211210 13:00:20.708"/>
</kw>
<status status="PASS" starttime="20211210 13:00:20.489" endtime="20211210 13:00:20.709"/>
</kw>
<status status="PASS" starttime="20211210 13:00:20.488" endtime="20211210 13:00:20.709"/>
</kw>
<status status="PASS" starttime="20211210 13:00:20.475" endtime="20211210 13:00:20.709"/>
</kw>
<status status="PASS" starttime="20211210 13:00:20.475" endtime="20211210 13:00:20.709"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:20.713" level="INFO">Running command 'ozone sh bucket link 07394-source/bucket2 07394-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:24.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:24.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:20.711" endtime="20211210 13:00:24.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:24.921" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:24.920" endtime="20211210 13:00:24.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:24.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:24.921" endtime="20211210 13:00:24.922"/>
</kw>
<status status="PASS" starttime="20211210 13:00:20.710" endtime="20211210 13:00:24.923"/>
</kw>
<msg timestamp="20211210 13:00:24.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:20.710" endtime="20211210 13:00:24.923"/>
</kw>
<status status="PASS" starttime="20211210 13:00:20.709" endtime="20211210 13:00:24.923"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:24.926" level="INFO">Running command 'ozone sh bucket create 07394-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:28.840" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:00:28.840" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211210 13:00:24.924" endtime="20211210 13:00:28.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:28.841" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211210 13:00:28.841" endtime="20211210 13:00:28.842"/>
</kw>
<msg timestamp="20211210 13:00:28.842" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211210 13:00:24.923" endtime="20211210 13:00:28.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:00:28.842" endtime="20211210 13:00:28.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:28.847" level="INFO">Running command 'ozone sh bucket create 07394-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:32.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:32.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:28.845" endtime="20211210 13:00:32.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:32.976" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:32.976" endtime="20211210 13:00:32.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:32.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:32.977" endtime="20211210 13:00:32.978"/>
</kw>
<status status="PASS" starttime="20211210 13:00:28.844" endtime="20211210 13:00:32.978"/>
</kw>
<msg timestamp="20211210 13:00:32.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:28.844" endtime="20211210 13:00:32.979"/>
</kw>
<status status="PASS" starttime="20211210 13:00:28.843" endtime="20211210 13:00:32.979"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:32.981" level="INFO">Running command 'ozone sh bucket link 07394-source/bucket1 07394-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:36.913" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:00:36.913" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211210 13:00:32.980" endtime="20211210 13:00:36.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:36.914" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211210 13:00:36.914" endtime="20211210 13:00:36.915"/>
</kw>
<msg timestamp="20211210 13:00:36.915" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211210 13:00:32.979" endtime="20211210 13:00:36.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:00:36.915" endtime="20211210 13:00:36.916"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 13:00:20.474" endtime="20211210 13:00:36.916"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:36.924" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:36.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:36.927" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:00:36.922" endtime="20211210 13:00:36.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:36.929" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:00:36.928" endtime="20211210 13:00:36.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:36.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:36.929" endtime="20211210 13:00:36.929"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.920" endtime="20211210 13:00:36.930"/>
</kw>
<msg timestamp="20211210 13:00:36.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:36.920" endtime="20211210 13:00:36.930"/>
</kw>
<msg timestamp="20211210 13:00:36.931" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:00:36.919" endtime="20211210 13:00:36.932"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:00:36.932" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:00:36.932" endtime="20211210 13:00:36.932"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:36.936" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:36.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:36.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:36.935" endtime="20211210 13:00:36.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:36.946" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:36.945" endtime="20211210 13:00:36.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:36.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:36.946" endtime="20211210 13:00:36.947"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.934" endtime="20211210 13:00:36.947"/>
</kw>
<msg timestamp="20211210 13:00:36.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:36.934" endtime="20211210 13:00:36.947"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.933" endtime="20211210 13:00:36.947"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.933" endtime="20211210 13:00:36.948"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.918" endtime="20211210 13:00:36.948"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.918" endtime="20211210 13:00:36.948"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:36.953" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:36.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:36.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:36.951" endtime="20211210 13:00:36.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:36.958" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:36.957" endtime="20211210 13:00:36.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:36.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:36.958" endtime="20211210 13:00:36.959"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.950" endtime="20211210 13:00:36.959"/>
</kw>
<msg timestamp="20211210 13:00:36.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:36.950" endtime="20211210 13:00:36.959"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.949" endtime="20211210 13:00:36.959"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:36.964" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:36.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:36.968" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:00:36.962" endtime="20211210 13:00:36.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:36.969" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:00:36.968" endtime="20211210 13:00:36.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:36.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:36.969" endtime="20211210 13:00:36.970"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.962" endtime="20211210 13:00:36.970"/>
</kw>
<msg timestamp="20211210 13:00:36.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:36.961" endtime="20211210 13:00:36.970"/>
</kw>
<msg timestamp="20211210 13:00:36.979" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:00:36.961" endtime="20211210 13:00:36.979"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:00:36.980" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:00:36.979" endtime="20211210 13:00:36.980"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:36.984" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:36.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:36.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:36.982" endtime="20211210 13:00:36.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:36.993" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:36.993" endtime="20211210 13:00:36.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:36.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:36.994" endtime="20211210 13:00:36.994"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.982" endtime="20211210 13:00:36.995"/>
</kw>
<msg timestamp="20211210 13:00:36.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:36.981" endtime="20211210 13:00:36.995"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.980" endtime="20211210 13:00:36.995"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.980" endtime="20211210 13:00:36.995"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.960" endtime="20211210 13:00:36.996"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.960" endtime="20211210 13:00:36.996"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:36.998" level="INFO">Running command 'ozone sh key list 07394-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:41.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:41.820" level="INFO">${output} = [ {
  "volumeName" : "07394-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-12-10T12:58:04.805Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211210 13:00:36.997" endtime="20211210 13:00:41.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:41.821" level="INFO">[ {
  "volumeName" : "07394-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-12-10T12:58:04.805Z",
  "modificationTime" : "2021-12-10T12:58:06.994Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211210 13:00:41.821" endtime="20211210 13:00:41.821"/>
</kw>
<msg timestamp="20211210 13:00:41.822" level="INFO">${result} = [ {
  "volumeName" : "07394-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-12-10T12:58:04.805Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211210 13:00:36.996" endtime="20211210 13:00:41.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:00:41.822" endtime="20211210 13:00:41.823"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.949" endtime="20211210 13:00:41.823"/>
</kw>
<status status="PASS" starttime="20211210 13:00:36.948" endtime="20211210 13:00:41.823"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 13:00:36.917" endtime="20211210 13:00:41.823"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:41.830" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:41.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:41.833" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:00:41.828" endtime="20211210 13:00:41.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:41.834" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:00:41.834" endtime="20211210 13:00:41.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:41.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:41.835" endtime="20211210 13:00:41.835"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.827" endtime="20211210 13:00:41.836"/>
</kw>
<msg timestamp="20211210 13:00:41.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:41.827" endtime="20211210 13:00:41.836"/>
</kw>
<msg timestamp="20211210 13:00:41.836" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:00:41.826" endtime="20211210 13:00:41.836"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:00:41.837" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:00:41.837" endtime="20211210 13:00:41.837"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:41.841" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:41.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:41.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:41.840" endtime="20211210 13:00:41.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:41.850" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:41.850" endtime="20211210 13:00:41.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:41.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:41.851" endtime="20211210 13:00:41.851"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.839" endtime="20211210 13:00:41.852"/>
</kw>
<msg timestamp="20211210 13:00:41.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:41.839" endtime="20211210 13:00:41.852"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.838" endtime="20211210 13:00:41.852"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.838" endtime="20211210 13:00:41.852"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.826" endtime="20211210 13:00:41.852"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.825" endtime="20211210 13:00:41.852"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:41.857" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:41.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:41.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:41.855" endtime="20211210 13:00:41.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:41.862" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:41.861" endtime="20211210 13:00:41.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:41.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:41.862" endtime="20211210 13:00:41.862"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.854" endtime="20211210 13:00:41.863"/>
</kw>
<msg timestamp="20211210 13:00:41.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:41.854" endtime="20211210 13:00:41.863"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.854" endtime="20211210 13:00:41.863"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:41.868" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:41.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:41.871" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:00:41.866" endtime="20211210 13:00:41.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:41.872" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:00:41.871" endtime="20211210 13:00:41.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:41.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:41.872" endtime="20211210 13:00:41.873"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.865" endtime="20211210 13:00:41.874"/>
</kw>
<msg timestamp="20211210 13:00:41.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:41.865" endtime="20211210 13:00:41.874"/>
</kw>
<msg timestamp="20211210 13:00:41.874" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:00:41.865" endtime="20211210 13:00:41.874"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:00:41.875" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:00:41.875" endtime="20211210 13:00:41.875"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:41.879" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:41.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:41.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:41.878" endtime="20211210 13:00:41.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:41.888" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:41.887" endtime="20211210 13:00:41.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:41.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:41.888" endtime="20211210 13:00:41.889"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.877" endtime="20211210 13:00:41.889"/>
</kw>
<msg timestamp="20211210 13:00:41.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:41.877" endtime="20211210 13:00:41.889"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.876" endtime="20211210 13:00:41.889"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.875" endtime="20211210 13:00:41.889"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.864" endtime="20211210 13:00:41.890"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.864" endtime="20211210 13:00:41.890"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:41.892" level="INFO">Running command 'ozone sh key list 07394-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:45.798" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:00:45.798" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:07394-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211210 13:00:41.890" endtime="20211210 13:00:45.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:45.799" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:07394-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211210 13:00:45.798" endtime="20211210 13:00:45.799"/>
</kw>
<msg timestamp="20211210 13:00:45.800" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:07394-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20211210 13:00:41.890" endtime="20211210 13:00:45.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:00:45.800" endtime="20211210 13:00:45.801"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.853" endtime="20211210 13:00:45.801"/>
</kw>
<status status="PASS" starttime="20211210 13:00:41.853" endtime="20211210 13:00:45.801"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 13:00:41.824" endtime="20211210 13:00:45.801"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:45.807" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:45.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:45.811" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:00:45.805" endtime="20211210 13:00:45.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:45.812" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:00:45.811" endtime="20211210 13:00:45.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:45.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:45.812" endtime="20211210 13:00:45.813"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.805" endtime="20211210 13:00:45.813"/>
</kw>
<msg timestamp="20211210 13:00:45.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:45.804" endtime="20211210 13:00:45.814"/>
</kw>
<msg timestamp="20211210 13:00:45.814" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:00:45.804" endtime="20211210 13:00:45.814"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:00:45.815" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:00:45.814" endtime="20211210 13:00:45.815"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:45.819" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:45.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:45.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:45.817" endtime="20211210 13:00:45.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:45.828" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:45.827" endtime="20211210 13:00:45.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:45.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:45.828" endtime="20211210 13:00:45.829"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.817" endtime="20211210 13:00:45.829"/>
</kw>
<msg timestamp="20211210 13:00:45.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:45.816" endtime="20211210 13:00:45.829"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.816" endtime="20211210 13:00:45.830"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.815" endtime="20211210 13:00:45.830"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.803" endtime="20211210 13:00:45.830"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.803" endtime="20211210 13:00:45.830"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:45.835" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:45.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:45.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:45.833" endtime="20211210 13:00:45.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:45.839" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:45.839" endtime="20211210 13:00:45.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:45.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:45.840" endtime="20211210 13:00:45.840"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.832" endtime="20211210 13:00:45.841"/>
</kw>
<msg timestamp="20211210 13:00:45.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:45.832" endtime="20211210 13:00:45.841"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.832" endtime="20211210 13:00:45.841"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:45.846" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:45.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:45.849" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:00:45.844" endtime="20211210 13:00:45.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:45.850" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:00:45.850" endtime="20211210 13:00:45.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:45.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:45.851" endtime="20211210 13:00:45.851"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.844" endtime="20211210 13:00:45.852"/>
</kw>
<msg timestamp="20211210 13:00:45.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:45.843" endtime="20211210 13:00:45.852"/>
</kw>
<msg timestamp="20211210 13:00:45.852" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:00:45.843" endtime="20211210 13:00:45.852"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:00:45.853" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:00:45.853" endtime="20211210 13:00:45.853"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:45.858" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:45.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:45.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:45.856" endtime="20211210 13:00:45.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:45.866" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:45.866" endtime="20211210 13:00:45.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:45.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:45.867" endtime="20211210 13:00:45.867"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.855" endtime="20211210 13:00:45.868"/>
</kw>
<msg timestamp="20211210 13:00:45.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:45.855" endtime="20211210 13:00:45.868"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.854" endtime="20211210 13:00:45.868"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.854" endtime="20211210 13:00:45.868"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.842" endtime="20211210 13:00:45.868"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.842" endtime="20211210 13:00:45.868"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:45.872" level="INFO">Running command 'ozone sh bucket info 07394-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:50.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:50.156" level="INFO">${output} = {
  "volumeName" : "07394-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-12-10T12:58:24.571Z...</msg>
<status status="PASS" starttime="20211210 13:00:45.870" endtime="20211210 13:00:50.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:50.157" level="INFO">{
  "volumeName" : "07394-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-12-10T12:58:24.571Z",
  "modificationTime" : "2021-12-10T12:58:45.105Z"
}</msg>
<status status="PASS" starttime="20211210 13:00:50.156" endtime="20211210 13:00:50.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:50.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:50.157" endtime="20211210 13:00:50.158"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.870" endtime="20211210 13:00:50.158"/>
</kw>
<msg timestamp="20211210 13:00:50.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:45.869" endtime="20211210 13:00:50.158"/>
</kw>
<msg timestamp="20211210 13:00:50.159" level="INFO">${result} = {
  "volumeName" : "07394-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-12-10T12:58:24.571Z...</msg>
<status status="PASS" starttime="20211210 13:00:45.869" endtime="20211210 13:00:50.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:00:50.159" endtime="20211210 13:00:50.160"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:00:50.160" endtime="20211210 13:00:50.160"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:50.163" level="INFO">Running command 'ozone sh key list 07394-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:54.157" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:00:54.157" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:07394-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211210 13:00:50.161" endtime="20211210 13:00:54.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:54.158" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:07394-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211210 13:00:54.157" endtime="20211210 13:00:54.158"/>
</kw>
<msg timestamp="20211210 13:00:54.159" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:07394-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20211210 13:00:50.160" endtime="20211210 13:00:54.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:00:54.159" endtime="20211210 13:00:54.160"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.831" endtime="20211210 13:00:54.160"/>
</kw>
<status status="PASS" starttime="20211210 13:00:45.831" endtime="20211210 13:00:54.160"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 13:00:45.802" endtime="20211210 13:00:54.160"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:54.166" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:54.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:54.171" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:00:54.164" endtime="20211210 13:00:54.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:54.172" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:00:54.171" endtime="20211210 13:00:54.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:54.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:54.172" endtime="20211210 13:00:54.173"/>
</kw>
<status status="PASS" starttime="20211210 13:00:54.164" endtime="20211210 13:00:54.173"/>
</kw>
<msg timestamp="20211210 13:00:54.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:54.163" endtime="20211210 13:00:54.174"/>
</kw>
<msg timestamp="20211210 13:00:54.174" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:00:54.163" endtime="20211210 13:00:54.174"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:00:54.175" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:00:54.174" endtime="20211210 13:00:54.175"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:54.179" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:54.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:54.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:54.178" endtime="20211210 13:00:54.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:54.189" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:54.188" endtime="20211210 13:00:54.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:54.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:54.189" endtime="20211210 13:00:54.190"/>
</kw>
<status status="PASS" starttime="20211210 13:00:54.177" endtime="20211210 13:00:54.190"/>
</kw>
<msg timestamp="20211210 13:00:54.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:54.176" endtime="20211210 13:00:54.190"/>
</kw>
<status status="PASS" starttime="20211210 13:00:54.176" endtime="20211210 13:00:54.191"/>
</kw>
<status status="PASS" starttime="20211210 13:00:54.175" endtime="20211210 13:00:54.191"/>
</kw>
<status status="PASS" starttime="20211210 13:00:54.162" endtime="20211210 13:00:54.191"/>
</kw>
<status status="PASS" starttime="20211210 13:00:54.162" endtime="20211210 13:00:54.191"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:54.195" level="INFO">Running command 'ozone sh bucket link 07394-target/loop1 07394-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:00:58.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:00:58.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:54.193" endtime="20211210 13:00:58.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:00:58.397" level="INFO"/>
<status status="PASS" starttime="20211210 13:00:58.397" endtime="20211210 13:00:58.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:00:58.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:00:58.398" endtime="20211210 13:00:58.398"/>
</kw>
<status status="PASS" starttime="20211210 13:00:54.192" endtime="20211210 13:00:58.399"/>
</kw>
<msg timestamp="20211210 13:00:58.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:54.192" endtime="20211210 13:00:58.399"/>
</kw>
<status status="PASS" starttime="20211210 13:00:54.191" endtime="20211210 13:00:58.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:00:58.403" level="INFO">Running command 'ozone sh bucket link 07394-target/loop2 07394-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:02.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:02.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:00:58.401" endtime="20211210 13:01:02.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:02.430" level="INFO"/>
<status status="PASS" starttime="20211210 13:01:02.430" endtime="20211210 13:01:02.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:02.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:02.431" endtime="20211210 13:01:02.431"/>
</kw>
<status status="PASS" starttime="20211210 13:00:58.401" endtime="20211210 13:01:02.432"/>
</kw>
<msg timestamp="20211210 13:01:02.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:00:58.400" endtime="20211210 13:01:02.432"/>
</kw>
<status status="PASS" starttime="20211210 13:00:58.399" endtime="20211210 13:01:02.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:02.436" level="INFO">Running command 'ozone sh bucket link 07394-target/loop3 07394-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:06.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:06.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:01:02.434" endtime="20211210 13:01:06.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:06.308" level="INFO"/>
<status status="PASS" starttime="20211210 13:01:06.307" endtime="20211210 13:01:06.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:06.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:06.308" endtime="20211210 13:01:06.309"/>
</kw>
<status status="PASS" starttime="20211210 13:01:02.434" endtime="20211210 13:01:06.309"/>
</kw>
<msg timestamp="20211210 13:01:06.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:02.433" endtime="20211210 13:01:06.310"/>
</kw>
<status status="PASS" starttime="20211210 13:01:02.433" endtime="20211210 13:01:06.310"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:06.313" level="INFO">Running command 'ozone sh key list 07394-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:10.382" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:01:10.382" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 07394-target</msg>
<status status="PASS" starttime="20211210 13:01:06.311" endtime="20211210 13:01:10.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:10.383" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 07394-target</msg>
<status status="PASS" starttime="20211210 13:01:10.383" endtime="20211210 13:01:10.383"/>
</kw>
<msg timestamp="20211210 13:01:10.384" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 07394-target</msg>
<status status="PASS" starttime="20211210 13:01:06.310" endtime="20211210 13:01:10.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:01:10.384" endtime="20211210 13:01:10.385"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 13:00:54.161" endtime="20211210 13:01:10.385"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:10.392" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:10.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:10.396" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:01:10.391" endtime="20211210 13:01:10.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:10.397" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:01:10.396" endtime="20211210 13:01:10.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:10.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:10.397" endtime="20211210 13:01:10.398"/>
</kw>
<status status="PASS" starttime="20211210 13:01:10.390" endtime="20211210 13:01:10.398"/>
</kw>
<msg timestamp="20211210 13:01:10.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:10.390" endtime="20211210 13:01:10.399"/>
</kw>
<msg timestamp="20211210 13:01:10.399" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:01:10.389" endtime="20211210 13:01:10.399"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:01:10.400" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:01:10.400" endtime="20211210 13:01:10.400"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:10.405" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:10.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:10.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:01:10.403" endtime="20211210 13:01:10.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:10.415" level="INFO"/>
<status status="PASS" starttime="20211210 13:01:10.414" endtime="20211210 13:01:10.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:10.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:10.415" endtime="20211210 13:01:10.416"/>
</kw>
<status status="PASS" starttime="20211210 13:01:10.402" endtime="20211210 13:01:10.416"/>
</kw>
<msg timestamp="20211210 13:01:10.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:10.402" endtime="20211210 13:01:10.417"/>
</kw>
<status status="PASS" starttime="20211210 13:01:10.401" endtime="20211210 13:01:10.417"/>
</kw>
<status status="PASS" starttime="20211210 13:01:10.400" endtime="20211210 13:01:10.417"/>
</kw>
<status status="PASS" starttime="20211210 13:01:10.388" endtime="20211210 13:01:10.417"/>
</kw>
<status status="PASS" starttime="20211210 13:01:10.387" endtime="20211210 13:01:10.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:10.421" level="INFO">Running command 'ozone sh bucket link 07394-source/bucket1 07394-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:14.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:14.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:01:10.419" endtime="20211210 13:01:14.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:14.706" level="INFO"/>
<status status="PASS" starttime="20211210 13:01:14.705" endtime="20211210 13:01:14.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:14.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:14.706" endtime="20211210 13:01:14.706"/>
</kw>
<status status="PASS" starttime="20211210 13:01:10.419" endtime="20211210 13:01:14.707"/>
</kw>
<msg timestamp="20211210 13:01:14.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:10.418" endtime="20211210 13:01:14.707"/>
</kw>
<status status="PASS" starttime="20211210 13:01:10.418" endtime="20211210 13:01:14.707"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:14.711" level="INFO">Running command 'ozone sh key put 07394-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:21.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:21.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:01:14.709" endtime="20211210 13:01:21.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:21.630" level="INFO"/>
<status status="PASS" starttime="20211210 13:01:21.629" endtime="20211210 13:01:21.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:21.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:21.630" endtime="20211210 13:01:21.631"/>
</kw>
<status status="PASS" starttime="20211210 13:01:14.709" endtime="20211210 13:01:21.631"/>
</kw>
<msg timestamp="20211210 13:01:21.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:14.708" endtime="20211210 13:01:21.631"/>
</kw>
<status status="PASS" starttime="20211210 13:01:14.708" endtime="20211210 13:01:21.632"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 13:01:21.634" level="INFO">${postfix} = 69491</msg>
<status status="PASS" starttime="20211210 13:01:21.633" endtime="20211210 13:01:21.634"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20211210 13:01:21.635" level="INFO">${tmpfile} = /tmp/tempkey-69491</msg>
<status status="PASS" starttime="20211210 13:01:21.634" endtime="20211210 13:01:21.635"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:21.638" level="INFO">Running command 'ozone sh key get 07394-target/link1/key3 /tmp/tempkey-69491 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:27.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:27.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:01:21.636" endtime="20211210 13:01:27.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:27.884" level="INFO"/>
<status status="PASS" starttime="20211210 13:01:27.883" endtime="20211210 13:01:27.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:27.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:27.884" endtime="20211210 13:01:27.885"/>
</kw>
<status status="PASS" starttime="20211210 13:01:21.636" endtime="20211210 13:01:27.886"/>
</kw>
<msg timestamp="20211210 13:01:27.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:21.636" endtime="20211210 13:01:27.886"/>
</kw>
<status status="PASS" starttime="20211210 13:01:21.635" endtime="20211210 13:01:27.886"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20211210 13:01:27.888" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-69491 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:27.891" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20211210 13:01:27.886" endtime="20211210 13:01:27.891"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:27.896" level="INFO">Running command 'rm -f /tmp/tempkey-69491 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:27.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:27.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:01:27.894" endtime="20211210 13:01:27.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:27.899" level="INFO"/>
<status status="PASS" starttime="20211210 13:01:27.898" endtime="20211210 13:01:27.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:27.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:27.899" endtime="20211210 13:01:27.900"/>
</kw>
<status status="PASS" starttime="20211210 13:01:27.893" endtime="20211210 13:01:27.900"/>
</kw>
<msg timestamp="20211210 13:01:27.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:27.892" endtime="20211210 13:01:27.901"/>
</kw>
<status status="PASS" starttime="20211210 13:01:27.891" endtime="20211210 13:01:27.901"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20211210 13:01:27.902" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20211210 13:01:27.901" endtime="20211210 13:01:27.902"/>
</kw>
<msg timestamp="20211210 13:01:27.902" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20211210 13:01:21.632" endtime="20211210 13:01:27.902"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20211210 13:01:27.902" endtime="20211210 13:01:27.903"/>
</kw>
<status status="PASS" starttime="20211210 13:01:21.632" endtime="20211210 13:01:27.903"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 13:01:10.386" endtime="20211210 13:01:27.903"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:27.910" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:27.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:27.913" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:01:27.908" endtime="20211210 13:01:27.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:27.915" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:01:27.914" endtime="20211210 13:01:27.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:27.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:27.915" endtime="20211210 13:01:27.916"/>
</kw>
<status status="PASS" starttime="20211210 13:01:27.907" endtime="20211210 13:01:27.916"/>
</kw>
<msg timestamp="20211210 13:01:27.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:27.907" endtime="20211210 13:01:27.917"/>
</kw>
<msg timestamp="20211210 13:01:27.917" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:01:27.906" endtime="20211210 13:01:27.917"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:01:27.918" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:01:27.917" endtime="20211210 13:01:27.918"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:27.922" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:27.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:27.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:01:27.921" endtime="20211210 13:01:27.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:27.932" level="INFO"/>
<status status="PASS" starttime="20211210 13:01:27.931" endtime="20211210 13:01:27.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:27.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:27.932" endtime="20211210 13:01:27.933"/>
</kw>
<status status="PASS" starttime="20211210 13:01:27.920" endtime="20211210 13:01:27.933"/>
</kw>
<msg timestamp="20211210 13:01:27.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:27.919" endtime="20211210 13:01:27.933"/>
</kw>
<status status="PASS" starttime="20211210 13:01:27.919" endtime="20211210 13:01:27.934"/>
</kw>
<status status="PASS" starttime="20211210 13:01:27.918" endtime="20211210 13:01:27.934"/>
</kw>
<status status="PASS" starttime="20211210 13:01:27.906" endtime="20211210 13:01:27.934"/>
</kw>
<status status="PASS" starttime="20211210 13:01:27.905" endtime="20211210 13:01:27.934"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:27.938" level="INFO">Running command 'ozone sh bucket delete 07394-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:31.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:31.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:01:27.936" endtime="20211210 13:01:31.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:31.807" level="INFO"/>
<status status="PASS" starttime="20211210 13:01:31.806" endtime="20211210 13:01:31.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:31.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:31.808" endtime="20211210 13:01:31.808"/>
</kw>
<status status="PASS" starttime="20211210 13:01:27.935" endtime="20211210 13:01:31.809"/>
</kw>
<msg timestamp="20211210 13:01:31.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:27.935" endtime="20211210 13:01:31.809"/>
</kw>
<status status="PASS" starttime="20211210 13:01:27.934" endtime="20211210 13:01:31.809"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:31.813" level="INFO">Running command 'ozone sh bucket list 07394-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:35.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:35.755" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-1...</msg>
<status status="PASS" starttime="20211210 13:01:31.811" endtime="20211210 13:01:35.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:35.757" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T13:00:32.927Z",
  "modificationTime" : "2021-12-10T13:00:32.927Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T12:58:49.439Z",
  "modificationTime" : "2021-12-10T12:58:49.439Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T12:58:24.571Z",
  "modificationTime" : "2021-12-10T12:58:45.105Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T13:00:24.828Z",
  "modificationTime" : "2021-12-10T13:00:24.828Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T13:01:14.439Z",
  "modificationTime" : "2021-12-10T13:01:14.439Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T13:01:06.242Z",
  "modificationTime" : "2021-12-10T13:01:06.242Z",
  "sourceVolume" : "07394-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T13:00:58.166Z",
  "modificationTime" : "2021-12-10T13:00:58.166Z",
  "sourceVolume" : "07394-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T13:01:02.250Z",
  "modificationTime" : "2021-12-10T13:01:02.250Z",
  "sourceVolume" : "07394-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T12:58:16.029Z",
  "modificationTime" : "2021-12-10T12:58:41.202Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-10T12:58:20.282Z",
  "modificationTime" : "2021-12-10T12:58:20.282Z",
  "sourceVolume" : "07394-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20211210 13:01:35.756" endtime="20211210 13:01:35.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:35.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:35.757" endtime="20211210 13:01:35.758"/>
</kw>
<status status="PASS" starttime="20211210 13:01:31.810" endtime="20211210 13:01:35.758"/>
</kw>
<msg timestamp="20211210 13:01:35.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:31.810" endtime="20211210 13:01:35.759"/>
</kw>
<msg timestamp="20211210 13:01:35.759" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "07394-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-12-1...</msg>
<status status="PASS" starttime="20211210 13:01:31.809" endtime="20211210 13:01:35.759"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:01:35.759" endtime="20211210 13:01:35.760"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:35.764" level="INFO">Running command 'ozone sh key list 07394-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:40.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:40.134" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20211210 13:01:35.762" endtime="20211210 13:01:40.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:40.135" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20211210 13:01:40.134" endtime="20211210 13:01:40.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:40.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:40.135" endtime="20211210 13:01:40.138"/>
</kw>
<status status="PASS" starttime="20211210 13:01:35.761" endtime="20211210 13:01:40.138"/>
</kw>
<msg timestamp="20211210 13:01:40.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:35.761" endtime="20211210 13:01:40.138"/>
</kw>
<msg timestamp="20211210 13:01:40.139" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20211210 13:01:35.760" endtime="20211210 13:01:40.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:01:40.139" endtime="20211210 13:01:40.139"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 13:01:27.904" endtime="20211210 13:01:40.140"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20211210 12:57:47.676" endtime="20211210 13:01:40.142"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 13:01:40.169" level="INFO">${random} = 49901</msg>
<status status="PASS" starttime="20211210 13:01:40.169" endtime="20211210 13:01:40.169"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:01:40.170" level="INFO">${prefix} = 49901</msg>
<status status="PASS" starttime="20211210 13:01:40.169" endtime="20211210 13:01:40.170"/>
</kw>
<status status="PASS" starttime="20211210 13:01:40.168" endtime="20211210 13:01:40.170"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:40.175" level="INFO">Running command 'ozone sh volume info /49901-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:44.067" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:01:44.067" level="INFO">${output} = VOLUME_NOT_FOUND Volume 49901-without-scheme is not found</msg>
<status status="PASS" starttime="20211210 13:01:40.173" endtime="20211210 13:01:44.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:44.068" level="INFO">VOLUME_NOT_FOUND Volume 49901-without-scheme is not found</msg>
<status status="PASS" starttime="20211210 13:01:44.068" endtime="20211210 13:01:44.068"/>
</kw>
<msg timestamp="20211210 13:01:44.069" level="INFO">${result} = VOLUME_NOT_FOUND Volume 49901-without-scheme is not found</msg>
<status status="PASS" starttime="20211210 13:01:40.173" endtime="20211210 13:01:44.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:01:44.069" endtime="20211210 13:01:44.070"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:44.074" level="INFO">Running command 'ozone sh volume create /49901-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:48.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:48.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:01:44.072" endtime="20211210 13:01:48.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:48.062" level="INFO"/>
<status status="PASS" starttime="20211210 13:01:48.061" endtime="20211210 13:01:48.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:48.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:48.063" endtime="20211210 13:01:48.063"/>
</kw>
<status status="PASS" starttime="20211210 13:01:44.071" endtime="20211210 13:01:48.064"/>
</kw>
<msg timestamp="20211210 13:01:48.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:44.071" endtime="20211210 13:01:48.064"/>
</kw>
<msg timestamp="20211210 13:01:48.064" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:01:44.070" endtime="20211210 13:01:48.064"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:01:48.065" endtime="20211210 13:01:48.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:48.069" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="49901-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:52.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:52.455" level="INFO">${output} = {
  "metadata": {},
  "name": "49901-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20211210 13:01:48.067" endtime="20211210 13:01:52.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:52.457" level="INFO">{
  "metadata": {},
  "name": "49901-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-12-10T13:01:47.857Z",
  "modificationTime": "2021-12-10T13:01:47.857Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211210 13:01:52.456" endtime="20211210 13:01:52.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:52.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:52.458" endtime="20211210 13:01:52.458"/>
</kw>
<status status="PASS" starttime="20211210 13:01:48.066" endtime="20211210 13:01:52.459"/>
</kw>
<msg timestamp="20211210 13:01:52.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:48.066" endtime="20211210 13:01:52.459"/>
</kw>
<msg timestamp="20211210 13:01:52.459" level="INFO">${result} = {
  "metadata": {},
  "name": "49901-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20211210 13:01:48.065" endtime="20211210 13:01:52.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:01:52.460" endtime="20211210 13:01:52.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:52.464" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="49901-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:01:56.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:01:56.814" level="INFO">${output} = {
  "metadata": {},
  "name": "49901-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20211210 13:01:52.462" endtime="20211210 13:01:56.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:01:56.816" level="INFO">{
  "metadata": {},
  "name": "49901-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-12-10T13:01:47.857Z",
  "modificationTime": "2021-12-10T13:01:47.857Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211210 13:01:56.814" endtime="20211210 13:01:56.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:01:56.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:01:56.816" endtime="20211210 13:01:56.817"/>
</kw>
<status status="PASS" starttime="20211210 13:01:52.461" endtime="20211210 13:01:56.817"/>
</kw>
<msg timestamp="20211210 13:01:56.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:52.461" endtime="20211210 13:01:56.817"/>
</kw>
<msg timestamp="20211210 13:01:56.818" level="INFO">${result} = {
  "metadata": {},
  "name": "49901-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20211210 13:01:52.460" endtime="20211210 13:01:56.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:01:56.818" endtime="20211210 13:01:56.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:01:56.822" level="INFO">Running command 'ozone sh volume setquota /49901-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:00.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:00.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:01:56.820" endtime="20211210 13:02:00.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:00.959" level="INFO"/>
<status status="PASS" starttime="20211210 13:02:00.958" endtime="20211210 13:02:00.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:00.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:00.959" endtime="20211210 13:02:00.960"/>
</kw>
<status status="PASS" starttime="20211210 13:01:56.820" endtime="20211210 13:02:00.961"/>
</kw>
<msg timestamp="20211210 13:02:00.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:01:56.819" endtime="20211210 13:02:00.961"/>
</kw>
<status status="PASS" starttime="20211210 13:01:56.818" endtime="20211210 13:02:00.961"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:00.966" level="INFO">Running command 'ozone sh volume info /49901-without-scheme | jq -r '. | select(.name=="49901-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:05.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:05.124" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:02:00.964" endtime="20211210 13:02:05.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:05.125" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211210 13:02:05.124" endtime="20211210 13:02:05.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:05.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:05.125" endtime="20211210 13:02:05.126"/>
</kw>
<status status="PASS" starttime="20211210 13:02:00.963" endtime="20211210 13:02:05.127"/>
</kw>
<msg timestamp="20211210 13:02:05.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:00.963" endtime="20211210 13:02:05.127"/>
</kw>
<msg timestamp="20211210 13:02:05.127" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:02:00.961" endtime="20211210 13:02:05.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:02:05.128" endtime="20211210 13:02:05.128"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:05.132" level="INFO">Running command 'ozone sh bucket create /49901-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:09.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:09.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:02:05.130" endtime="20211210 13:02:09.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:09.074" level="INFO"/>
<status status="PASS" starttime="20211210 13:02:09.073" endtime="20211210 13:02:09.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:09.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:09.074" endtime="20211210 13:02:09.075"/>
</kw>
<status status="PASS" starttime="20211210 13:02:05.129" endtime="20211210 13:02:09.075"/>
</kw>
<msg timestamp="20211210 13:02:09.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:05.129" endtime="20211210 13:02:09.075"/>
</kw>
<status status="PASS" starttime="20211210 13:02:05.128" endtime="20211210 13:02:09.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:09.080" level="INFO">Running command 'ozone sh bucket info /49901-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:13.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:13.524" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211210 13:02:09.078" endtime="20211210 13:02:13.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:13.525" level="INFO">DISK</msg>
<status status="PASS" starttime="20211210 13:02:13.524" endtime="20211210 13:02:13.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:13.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:13.525" endtime="20211210 13:02:13.527"/>
</kw>
<status status="PASS" starttime="20211210 13:02:09.077" endtime="20211210 13:02:13.527"/>
</kw>
<msg timestamp="20211210 13:02:13.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:09.077" endtime="20211210 13:02:13.528"/>
</kw>
<msg timestamp="20211210 13:02:13.528" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211210 13:02:09.076" endtime="20211210 13:02:13.528"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:02:13.528" endtime="20211210 13:02:13.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:13.533" level="INFO">Running command 'ozone sh bucket info /49901-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:18.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:18.005" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:02:13.531" endtime="20211210 13:02:18.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:18.007" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211210 13:02:18.006" endtime="20211210 13:02:18.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:18.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:18.007" endtime="20211210 13:02:18.008"/>
</kw>
<status status="PASS" starttime="20211210 13:02:13.530" endtime="20211210 13:02:18.008"/>
</kw>
<msg timestamp="20211210 13:02:18.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:13.530" endtime="20211210 13:02:18.008"/>
</kw>
<msg timestamp="20211210 13:02:18.009" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:02:13.529" endtime="20211210 13:02:18.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:02:18.009" endtime="20211210 13:02:18.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:18.014" level="INFO">Running command 'ozone sh bucket info /49901-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:22.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:22.166" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211210 13:02:18.012" endtime="20211210 13:02:22.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:22.167" level="INFO">100</msg>
<status status="PASS" starttime="20211210 13:02:22.166" endtime="20211210 13:02:22.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:22.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:22.168" endtime="20211210 13:02:22.168"/>
</kw>
<status status="PASS" starttime="20211210 13:02:18.012" endtime="20211210 13:02:22.169"/>
</kw>
<msg timestamp="20211210 13:02:22.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:18.011" endtime="20211210 13:02:22.169"/>
</kw>
<msg timestamp="20211210 13:02:22.169" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211210 13:02:18.010" endtime="20211210 13:02:22.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:02:22.170" endtime="20211210 13:02:22.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:22.174" level="INFO">Running command 'ozone sh bucket setquota /49901-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:26.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:26.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:02:22.172" endtime="20211210 13:02:26.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:26.139" level="INFO"/>
<status status="PASS" starttime="20211210 13:02:26.138" endtime="20211210 13:02:26.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:26.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:26.139" endtime="20211210 13:02:26.140"/>
</kw>
<status status="PASS" starttime="20211210 13:02:22.171" endtime="20211210 13:02:26.140"/>
</kw>
<msg timestamp="20211210 13:02:26.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:22.171" endtime="20211210 13:02:26.140"/>
</kw>
<status status="PASS" starttime="20211210 13:02:22.170" endtime="20211210 13:02:26.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:26.145" level="INFO">Running command 'ozone sh bucket info /49901-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:30.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:30.417" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211210 13:02:26.143" endtime="20211210 13:02:30.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:30.419" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211210 13:02:30.418" endtime="20211210 13:02:30.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:30.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:30.419" endtime="20211210 13:02:30.420"/>
</kw>
<status status="PASS" starttime="20211210 13:02:26.142" endtime="20211210 13:02:30.420"/>
</kw>
<msg timestamp="20211210 13:02:30.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:26.142" endtime="20211210 13:02:30.421"/>
</kw>
<msg timestamp="20211210 13:02:30.421" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211210 13:02:26.141" endtime="20211210 13:02:30.421"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:02:30.421" endtime="20211210 13:02:30.422"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:30.426" level="INFO">Running command 'ozone sh bucket info /49901-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:34.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:34.818" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211210 13:02:30.424" endtime="20211210 13:02:34.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:34.820" level="INFO">1000</msg>
<status status="PASS" starttime="20211210 13:02:34.819" endtime="20211210 13:02:34.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:34.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:34.820" endtime="20211210 13:02:34.821"/>
</kw>
<status status="PASS" starttime="20211210 13:02:30.423" endtime="20211210 13:02:34.821"/>
</kw>
<msg timestamp="20211210 13:02:34.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:30.423" endtime="20211210 13:02:34.821"/>
</kw>
<msg timestamp="20211210 13:02:34.822" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211210 13:02:30.422" endtime="20211210 13:02:34.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:02:34.822" endtime="20211210 13:02:34.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:34.827" level="INFO">Running command 'ozone sh bucket list /49901-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:39.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:39.274" level="INFO">${output} = 49901-without-scheme</msg>
<status status="PASS" starttime="20211210 13:02:34.825" endtime="20211210 13:02:39.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:39.276" level="INFO">49901-without-scheme</msg>
<status status="PASS" starttime="20211210 13:02:39.275" endtime="20211210 13:02:39.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:39.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:39.276" endtime="20211210 13:02:39.277"/>
</kw>
<status status="PASS" starttime="20211210 13:02:34.824" endtime="20211210 13:02:39.277"/>
</kw>
<msg timestamp="20211210 13:02:39.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:34.824" endtime="20211210 13:02:39.277"/>
</kw>
<msg timestamp="20211210 13:02:39.278" level="INFO">${result} = 49901-without-scheme</msg>
<status status="PASS" starttime="20211210 13:02:34.823" endtime="20211210 13:02:39.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:02:39.278" endtime="20211210 13:02:39.278"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:39.284" level="INFO">Running command 'ozone sh key put /49901-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:45.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:45.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:02:39.282" endtime="20211210 13:02:45.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:45.877" level="INFO"/>
<status status="PASS" starttime="20211210 13:02:45.876" endtime="20211210 13:02:45.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:45.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:45.877" endtime="20211210 13:02:45.878"/>
</kw>
<status status="PASS" starttime="20211210 13:02:39.281" endtime="20211210 13:02:45.878"/>
</kw>
<msg timestamp="20211210 13:02:45.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:39.280" endtime="20211210 13:02:45.878"/>
</kw>
<status status="PASS" starttime="20211210 13:02:39.280" endtime="20211210 13:02:45.879"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:45.883" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:45.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:45.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:02:45.881" endtime="20211210 13:02:45.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:45.886" level="INFO"/>
<status status="PASS" starttime="20211210 13:02:45.886" endtime="20211210 13:02:45.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:45.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:45.887" endtime="20211210 13:02:45.887"/>
</kw>
<status status="PASS" starttime="20211210 13:02:45.880" endtime="20211210 13:02:45.888"/>
</kw>
<msg timestamp="20211210 13:02:45.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:45.879" endtime="20211210 13:02:45.888"/>
</kw>
<status status="PASS" starttime="20211210 13:02:45.879" endtime="20211210 13:02:45.888"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:45.892" level="INFO">Running command 'ozone sh key get /49901-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:52.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:52.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:02:45.890" endtime="20211210 13:02:52.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:52.184" level="INFO"/>
<status status="PASS" starttime="20211210 13:02:52.184" endtime="20211210 13:02:52.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:52.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:52.185" endtime="20211210 13:02:52.185"/>
</kw>
<status status="PASS" starttime="20211210 13:02:45.890" endtime="20211210 13:02:52.186"/>
</kw>
<msg timestamp="20211210 13:02:52.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:45.889" endtime="20211210 13:02:52.186"/>
</kw>
<status status="PASS" starttime="20211210 13:02:45.888" endtime="20211210 13:02:52.186"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:52.190" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:52.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:52.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:02:52.188" endtime="20211210 13:02:52.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:52.194" level="INFO"/>
<status status="PASS" starttime="20211210 13:02:52.194" endtime="20211210 13:02:52.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:52.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:52.195" endtime="20211210 13:02:52.195"/>
</kw>
<status status="PASS" starttime="20211210 13:02:52.187" endtime="20211210 13:02:52.196"/>
</kw>
<msg timestamp="20211210 13:02:52.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:52.187" endtime="20211210 13:02:52.196"/>
</kw>
<status status="PASS" starttime="20211210 13:02:52.186" endtime="20211210 13:02:52.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:52.200" level="INFO">Running command 'ozone sh key put -t RATIS /49901-without-scheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:58.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:58.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:02:52.198" endtime="20211210 13:02:58.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:58.789" level="INFO"/>
<status status="PASS" starttime="20211210 13:02:58.788" endtime="20211210 13:02:58.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:58.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:58.789" endtime="20211210 13:02:58.790"/>
</kw>
<status status="PASS" starttime="20211210 13:02:52.198" endtime="20211210 13:02:58.790"/>
</kw>
<msg timestamp="20211210 13:02:58.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:52.197" endtime="20211210 13:02:58.790"/>
</kw>
<status status="PASS" starttime="20211210 13:02:52.197" endtime="20211210 13:02:58.791"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:58.794" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:02:58.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:02:58.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:02:58.792" endtime="20211210 13:02:58.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:02:58.798" level="INFO"/>
<status status="PASS" starttime="20211210 13:02:58.797" endtime="20211210 13:02:58.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:02:58.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:02:58.798" endtime="20211210 13:02:58.799"/>
</kw>
<status status="PASS" starttime="20211210 13:02:58.792" endtime="20211210 13:02:58.799"/>
</kw>
<msg timestamp="20211210 13:02:58.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:58.791" endtime="20211210 13:02:58.799"/>
</kw>
<status status="PASS" starttime="20211210 13:02:58.791" endtime="20211210 13:02:58.800"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:02:58.804" level="INFO">Running command 'ozone sh key get /49901-without-scheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:05.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:05.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:02:58.802" endtime="20211210 13:03:05.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:05.281" level="INFO"/>
<status status="PASS" starttime="20211210 13:03:05.280" endtime="20211210 13:03:05.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:05.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:05.282" endtime="20211210 13:03:05.282"/>
</kw>
<status status="PASS" starttime="20211210 13:02:58.801" endtime="20211210 13:03:05.283"/>
</kw>
<msg timestamp="20211210 13:03:05.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:02:58.801" endtime="20211210 13:03:05.283"/>
</kw>
<status status="PASS" starttime="20211210 13:02:58.800" endtime="20211210 13:03:05.283"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:05.289" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:05.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:05.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:03:05.285" endtime="20211210 13:03:05.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:05.291" level="INFO"/>
<status status="PASS" starttime="20211210 13:03:05.290" endtime="20211210 13:03:05.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:05.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:05.291" endtime="20211210 13:03:05.292"/>
</kw>
<status status="PASS" starttime="20211210 13:03:05.284" endtime="20211210 13:03:05.292"/>
</kw>
<msg timestamp="20211210 13:03:05.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:05.284" endtime="20211210 13:03:05.292"/>
</kw>
<status status="PASS" starttime="20211210 13:03:05.283" endtime="20211210 13:03:05.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:05.297" level="INFO">Running command 'ozone sh key info /49901-without-scheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:09.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:09.555" level="INFO">${output} = {
  "volumeName": "49901-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:02:56.137Z",
  "modificationTime": "2021-12-10T13:02:58.3...</msg>
<status status="PASS" starttime="20211210 13:03:05.296" endtime="20211210 13:03:09.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:09.557" level="INFO">{
  "volumeName": "49901-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:02:56.137Z",
  "modificationTime": "2021-12-10T13:02:58.305Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "replicationType": "RATIS",
  "replicationFactor": 3
}</msg>
<status status="PASS" starttime="20211210 13:03:09.556" endtime="20211210 13:03:09.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:09.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:09.557" endtime="20211210 13:03:09.558"/>
</kw>
<status status="PASS" starttime="20211210 13:03:05.295" endtime="20211210 13:03:09.558"/>
</kw>
<msg timestamp="20211210 13:03:09.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:05.294" endtime="20211210 13:03:09.558"/>
</kw>
<msg timestamp="20211210 13:03:09.559" level="INFO">${result} = {
  "volumeName": "49901-without-scheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:02:56.137Z",
  "modificationTime": "2021-12-10T13:02:58.3...</msg>
<status status="PASS" starttime="20211210 13:03:05.293" endtime="20211210 13:03:09.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:03:09.559" endtime="20211210 13:03:09.560"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:09.564" level="INFO">Running command 'ozone sh key delete /49901-without-scheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:13.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:13.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:03:09.561" endtime="20211210 13:03:13.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:13.578" level="INFO"/>
<status status="PASS" starttime="20211210 13:03:13.578" endtime="20211210 13:03:13.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:13.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:13.579" endtime="20211210 13:03:13.579"/>
</kw>
<status status="PASS" starttime="20211210 13:03:09.561" endtime="20211210 13:03:13.580"/>
</kw>
<msg timestamp="20211210 13:03:13.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:09.561" endtime="20211210 13:03:13.580"/>
</kw>
<status status="PASS" starttime="20211210 13:03:09.560" endtime="20211210 13:03:13.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:13.585" level="INFO">Running command 'ozone sh key cp /49901-without-scheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:20.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:20.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:03:13.582" endtime="20211210 13:03:20.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:20.311" level="INFO"/>
<status status="PASS" starttime="20211210 13:03:20.310" endtime="20211210 13:03:20.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:20.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:20.311" endtime="20211210 13:03:20.312"/>
</kw>
<status status="PASS" starttime="20211210 13:03:13.582" endtime="20211210 13:03:20.312"/>
</kw>
<msg timestamp="20211210 13:03:20.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:13.581" endtime="20211210 13:03:20.312"/>
</kw>
<status status="PASS" starttime="20211210 13:03:13.581" endtime="20211210 13:03:20.313"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:20.317" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:20.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:20.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:03:20.315" endtime="20211210 13:03:20.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:20.321" level="INFO"/>
<status status="PASS" starttime="20211210 13:03:20.320" endtime="20211210 13:03:20.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:20.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:20.321" endtime="20211210 13:03:20.322"/>
</kw>
<status status="PASS" starttime="20211210 13:03:20.314" endtime="20211210 13:03:20.322"/>
</kw>
<msg timestamp="20211210 13:03:20.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:20.314" endtime="20211210 13:03:20.322"/>
</kw>
<status status="PASS" starttime="20211210 13:03:20.313" endtime="20211210 13:03:20.323"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:20.326" level="INFO">Running command 'ozone sh key get /49901-without-scheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:26.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:26.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:03:20.324" endtime="20211210 13:03:26.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:26.152" level="INFO"/>
<status status="PASS" starttime="20211210 13:03:26.151" endtime="20211210 13:03:26.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:26.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:26.152" endtime="20211210 13:03:26.153"/>
</kw>
<status status="PASS" starttime="20211210 13:03:20.324" endtime="20211210 13:03:26.153"/>
</kw>
<msg timestamp="20211210 13:03:26.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:20.323" endtime="20211210 13:03:26.154"/>
</kw>
<status status="PASS" starttime="20211210 13:03:20.323" endtime="20211210 13:03:26.154"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:26.158" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:26.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:26.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:03:26.156" endtime="20211210 13:03:26.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:26.162" level="INFO"/>
<status status="PASS" starttime="20211210 13:03:26.161" endtime="20211210 13:03:26.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:26.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:26.162" endtime="20211210 13:03:26.163"/>
</kw>
<status status="PASS" starttime="20211210 13:03:26.155" endtime="20211210 13:03:26.164"/>
</kw>
<msg timestamp="20211210 13:03:26.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:26.155" endtime="20211210 13:03:26.164"/>
</kw>
<status status="PASS" starttime="20211210 13:03:26.154" endtime="20211210 13:03:26.164"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:26.168" level="INFO">Running command 'ozone sh key delete /49901-without-scheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:30.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:30.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:03:26.166" endtime="20211210 13:03:30.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:30.206" level="INFO"/>
<status status="PASS" starttime="20211210 13:03:30.205" endtime="20211210 13:03:30.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:30.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:30.206" endtime="20211210 13:03:30.207"/>
</kw>
<status status="PASS" starttime="20211210 13:03:26.166" endtime="20211210 13:03:30.207"/>
</kw>
<msg timestamp="20211210 13:03:30.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:26.165" endtime="20211210 13:03:30.207"/>
</kw>
<status status="PASS" starttime="20211210 13:03:26.164" endtime="20211210 13:03:30.208"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:30.211" level="INFO">Running command 'ozone sh key get /49901-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:34.149" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:03:34.149" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20211210 13:03:30.209" endtime="20211210 13:03:34.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:34.151" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20211210 13:03:34.149" endtime="20211210 13:03:34.151"/>
</kw>
<msg timestamp="20211210 13:03:34.151" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20211210 13:03:30.208" endtime="20211210 13:03:34.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:03:34.151" endtime="20211210 13:03:34.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:34.156" level="INFO">Running command 'ozone sh key get --force /49901-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:40.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:40.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:03:34.154" endtime="20211210 13:03:40.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:40.616" level="INFO"/>
<status status="PASS" starttime="20211210 13:03:40.616" endtime="20211210 13:03:40.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:40.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:40.617" endtime="20211210 13:03:40.617"/>
</kw>
<status status="PASS" starttime="20211210 13:03:34.153" endtime="20211210 13:03:40.618"/>
</kw>
<msg timestamp="20211210 13:03:40.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:34.153" endtime="20211210 13:03:40.618"/>
</kw>
<msg timestamp="20211210 13:03:40.618" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:03:34.152" endtime="20211210 13:03:40.618"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:03:40.618" endtime="20211210 13:03:40.619"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:40.623" level="INFO">Running command 'ozone sh key info /49901-without-scheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:44.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:44.946" level="INFO">${output} = {
  "volumeName": "49901-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:02:43.218Z",
  "modificationTime": "2021-12-10T13:02:45.409Z",
...</msg>
<status status="PASS" starttime="20211210 13:03:40.621" endtime="20211210 13:03:44.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:44.948" level="INFO">{
  "volumeName": "49901-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:02:43.218Z",
  "modificationTime": "2021-12-10T13:02:45.409Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "replicationType": "RATIS",
  "replicationFactor": 3
}</msg>
<status status="PASS" starttime="20211210 13:03:44.947" endtime="20211210 13:03:44.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:44.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:44.949" endtime="20211210 13:03:44.949"/>
</kw>
<status status="PASS" starttime="20211210 13:03:40.620" endtime="20211210 13:03:44.949"/>
</kw>
<msg timestamp="20211210 13:03:44.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:40.620" endtime="20211210 13:03:44.950"/>
</kw>
<msg timestamp="20211210 13:03:44.950" level="INFO">${result} = {
  "volumeName": "49901-without-scheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:02:43.218Z",
  "modificationTime": "2021-12-10T13:02:45.409Z",
...</msg>
<status status="PASS" starttime="20211210 13:03:40.619" endtime="20211210 13:03:44.950"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:03:44.950" endtime="20211210 13:03:44.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:44.955" level="INFO">Running command 'ozone sh key list /49901-without-scheme/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:49.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:49.199" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211210 13:03:44.953" endtime="20211210 13:03:49.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:49.200" level="INFO">key1</msg>
<status status="PASS" starttime="20211210 13:03:49.200" endtime="20211210 13:03:49.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:49.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:49.201" endtime="20211210 13:03:49.202"/>
</kw>
<status status="PASS" starttime="20211210 13:03:44.952" endtime="20211210 13:03:49.202"/>
</kw>
<msg timestamp="20211210 13:03:49.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:44.952" endtime="20211210 13:03:49.202"/>
</kw>
<msg timestamp="20211210 13:03:49.203" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20211210 13:03:44.951" endtime="20211210 13:03:49.203"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:03:49.203" endtime="20211210 13:03:49.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:49.207" level="INFO">Running command 'ozone sh key rename /49901-without-scheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:53.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:53.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:03:49.205" endtime="20211210 13:03:53.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:53.156" level="INFO"/>
<status status="PASS" starttime="20211210 13:03:53.155" endtime="20211210 13:03:53.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:53.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:53.156" endtime="20211210 13:03:53.157"/>
</kw>
<status status="PASS" starttime="20211210 13:03:49.205" endtime="20211210 13:03:53.157"/>
</kw>
<msg timestamp="20211210 13:03:53.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:49.204" endtime="20211210 13:03:53.157"/>
</kw>
<status status="PASS" starttime="20211210 13:03:49.203" endtime="20211210 13:03:53.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:53.162" level="INFO">Running command 'ozone sh key list /49901-without-scheme/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:03:57.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:03:57.298" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20211210 13:03:53.160" endtime="20211210 13:03:57.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:03:57.299" level="INFO">key2</msg>
<status status="PASS" starttime="20211210 13:03:57.299" endtime="20211210 13:03:57.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:03:57.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:03:57.300" endtime="20211210 13:03:57.300"/>
</kw>
<status status="PASS" starttime="20211210 13:03:53.159" endtime="20211210 13:03:57.301"/>
</kw>
<msg timestamp="20211210 13:03:57.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:53.159" endtime="20211210 13:03:57.301"/>
</kw>
<msg timestamp="20211210 13:03:57.301" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20211210 13:03:53.158" endtime="20211210 13:03:57.301"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:03:57.302" endtime="20211210 13:03:57.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:03:57.306" level="INFO">Running command 'ozone sh key delete /49901-without-scheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:01.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:01.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:03:57.304" endtime="20211210 13:04:01.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:01.168" level="INFO"/>
<status status="PASS" starttime="20211210 13:04:01.167" endtime="20211210 13:04:01.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:01.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:01.168" endtime="20211210 13:04:01.169"/>
</kw>
<status status="PASS" starttime="20211210 13:03:57.304" endtime="20211210 13:04:01.169"/>
</kw>
<msg timestamp="20211210 13:04:01.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:03:57.303" endtime="20211210 13:04:01.170"/>
</kw>
<status status="PASS" starttime="20211210 13:03:57.302" endtime="20211210 13:04:01.170"/>
</kw>
<status status="PASS" starttime="20211210 13:02:39.279" endtime="20211210 13:04:01.170"/>
</kw>
<status status="PASS" starttime="20211210 13:02:39.279" endtime="20211210 13:04:01.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:01.174" level="INFO">Running command 'ozone sh volume clrquota --space-quota /49901-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:05.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:05.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:04:01.172" endtime="20211210 13:04:05.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:05.217" level="INFO"/>
<status status="PASS" starttime="20211210 13:04:05.216" endtime="20211210 13:04:05.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:05.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:05.217" endtime="20211210 13:04:05.218"/>
</kw>
<status status="PASS" starttime="20211210 13:04:01.172" endtime="20211210 13:04:05.218"/>
</kw>
<msg timestamp="20211210 13:04:05.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:01.171" endtime="20211210 13:04:05.218"/>
</kw>
<status status="PASS" starttime="20211210 13:04:01.170" endtime="20211210 13:04:05.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:05.223" level="INFO">Running command 'ozone sh volume info /49901-without-scheme | jq -r '. | select(.name=="49901-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:09.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:09.658" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:04:05.221" endtime="20211210 13:04:09.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:09.659" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:04:09.658" endtime="20211210 13:04:09.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:09.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:09.660" endtime="20211210 13:04:09.660"/>
</kw>
<status status="PASS" starttime="20211210 13:04:05.221" endtime="20211210 13:04:09.661"/>
</kw>
<msg timestamp="20211210 13:04:09.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:05.220" endtime="20211210 13:04:09.661"/>
</kw>
<msg timestamp="20211210 13:04:09.662" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:04:05.219" endtime="20211210 13:04:09.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:04:09.662" endtime="20211210 13:04:09.663"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:09.667" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /49901-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:13.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:13.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:04:09.665" endtime="20211210 13:04:13.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:13.678" level="INFO"/>
<status status="PASS" starttime="20211210 13:04:13.677" endtime="20211210 13:04:13.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:13.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:13.678" endtime="20211210 13:04:13.679"/>
</kw>
<status status="PASS" starttime="20211210 13:04:09.664" endtime="20211210 13:04:13.679"/>
</kw>
<msg timestamp="20211210 13:04:13.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:09.664" endtime="20211210 13:04:13.680"/>
</kw>
<status status="PASS" starttime="20211210 13:04:09.663" endtime="20211210 13:04:13.680"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:13.684" level="INFO">Running command 'ozone sh volume info /49901-without-scheme | jq -r '. | select(.name=="49901-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:18.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:18.240" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:04:13.682" endtime="20211210 13:04:18.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:18.242" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:04:18.241" endtime="20211210 13:04:18.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:18.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:18.242" endtime="20211210 13:04:18.243"/>
</kw>
<status status="PASS" starttime="20211210 13:04:13.682" endtime="20211210 13:04:18.243"/>
</kw>
<msg timestamp="20211210 13:04:18.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:13.681" endtime="20211210 13:04:18.243"/>
</kw>
<msg timestamp="20211210 13:04:18.244" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:04:13.680" endtime="20211210 13:04:18.244"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:04:18.244" endtime="20211210 13:04:18.245"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:18.248" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /49901-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:22.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:22.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:04:18.246" endtime="20211210 13:04:22.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:22.255" level="INFO"/>
<status status="PASS" starttime="20211210 13:04:22.254" endtime="20211210 13:04:22.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:22.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:22.255" endtime="20211210 13:04:22.256"/>
</kw>
<status status="PASS" starttime="20211210 13:04:18.246" endtime="20211210 13:04:22.256"/>
</kw>
<msg timestamp="20211210 13:04:22.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:18.245" endtime="20211210 13:04:22.257"/>
</kw>
<status status="PASS" starttime="20211210 13:04:18.245" endtime="20211210 13:04:22.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:22.261" level="INFO">Running command 'ozone sh bucket info /49901-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:26.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:26.363" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:04:22.259" endtime="20211210 13:04:26.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:26.365" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:04:26.364" endtime="20211210 13:04:26.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:26.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:26.365" endtime="20211210 13:04:26.366"/>
</kw>
<status status="PASS" starttime="20211210 13:04:22.259" endtime="20211210 13:04:26.366"/>
</kw>
<msg timestamp="20211210 13:04:26.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:22.258" endtime="20211210 13:04:26.366"/>
</kw>
<msg timestamp="20211210 13:04:26.367" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:04:22.257" endtime="20211210 13:04:26.367"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:04:26.367" endtime="20211210 13:04:26.367"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:26.373" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /49901-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:30.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:30.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:04:26.370" endtime="20211210 13:04:30.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:30.460" level="INFO"/>
<status status="PASS" starttime="20211210 13:04:30.460" endtime="20211210 13:04:30.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:30.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:30.461" endtime="20211210 13:04:30.461"/>
</kw>
<status status="PASS" starttime="20211210 13:04:26.370" endtime="20211210 13:04:30.462"/>
</kw>
<msg timestamp="20211210 13:04:30.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:26.369" endtime="20211210 13:04:30.462"/>
</kw>
<status status="PASS" starttime="20211210 13:04:26.368" endtime="20211210 13:04:30.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:30.466" level="INFO">Running command 'ozone sh bucket info /49901-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:34.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:34.786" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:04:30.465" endtime="20211210 13:04:34.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:34.787" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:04:34.787" endtime="20211210 13:04:34.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:34.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:34.788" endtime="20211210 13:04:34.788"/>
</kw>
<status status="PASS" starttime="20211210 13:04:30.464" endtime="20211210 13:04:34.789"/>
</kw>
<msg timestamp="20211210 13:04:34.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:30.464" endtime="20211210 13:04:34.789"/>
</kw>
<msg timestamp="20211210 13:04:34.789" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:04:30.463" endtime="20211210 13:04:34.789"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:04:34.790" endtime="20211210 13:04:34.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:34.794" level="INFO">Running command 'ozone sh bucket delete /49901-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:38.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:38.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:04:34.792" endtime="20211210 13:04:38.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:38.990" level="INFO"/>
<status status="PASS" starttime="20211210 13:04:38.989" endtime="20211210 13:04:38.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:38.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:38.990" endtime="20211210 13:04:38.991"/>
</kw>
<status status="PASS" starttime="20211210 13:04:34.791" endtime="20211210 13:04:38.991"/>
</kw>
<msg timestamp="20211210 13:04:38.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:34.791" endtime="20211210 13:04:38.991"/>
</kw>
<status status="PASS" starttime="20211210 13:04:34.790" endtime="20211210 13:04:38.992"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:38.996" level="INFO">Running command 'ozone sh volume delete /49901-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:43.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:43.244" level="INFO">${output} = Volume 49901-without-scheme is deleted</msg>
<status status="PASS" starttime="20211210 13:04:38.993" endtime="20211210 13:04:43.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:43.245" level="INFO">Volume 49901-without-scheme is deleted</msg>
<status status="PASS" starttime="20211210 13:04:43.244" endtime="20211210 13:04:43.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:43.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:43.245" endtime="20211210 13:04:43.246"/>
</kw>
<status status="PASS" starttime="20211210 13:04:38.993" endtime="20211210 13:04:43.246"/>
</kw>
<msg timestamp="20211210 13:04:43.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:38.992" endtime="20211210 13:04:43.247"/>
</kw>
<status status="PASS" starttime="20211210 13:04:38.992" endtime="20211210 13:04:43.247"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:43.251" level="INFO">Running command 'ozone sh volume create /49901-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:47.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:47.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:04:43.249" endtime="20211210 13:04:47.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:47.182" level="INFO"/>
<status status="PASS" starttime="20211210 13:04:47.181" endtime="20211210 13:04:47.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:47.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:47.182" endtime="20211210 13:04:47.183"/>
</kw>
<status status="PASS" starttime="20211210 13:04:43.248" endtime="20211210 13:04:47.183"/>
</kw>
<msg timestamp="20211210 13:04:47.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:43.248" endtime="20211210 13:04:47.183"/>
</kw>
<status status="PASS" starttime="20211210 13:04:43.247" endtime="20211210 13:04:47.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:47.198" level="INFO">Running command 'ozone sh volume info /49901-without-scheme | jq -r '. | select(.name=="49901-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:51.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:51.396" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:04:47.196" endtime="20211210 13:04:51.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:51.397" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:04:51.396" endtime="20211210 13:04:51.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:51.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:51.397" endtime="20211210 13:04:51.398"/>
</kw>
<status status="PASS" starttime="20211210 13:04:47.185" endtime="20211210 13:04:51.398"/>
</kw>
<msg timestamp="20211210 13:04:51.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:47.185" endtime="20211210 13:04:51.398"/>
</kw>
<msg timestamp="20211210 13:04:51.399" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:04:47.184" endtime="20211210 13:04:51.399"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:04:51.399" endtime="20211210 13:04:51.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:51.404" level="INFO">Running command 'ozone sh volume info /49901-without-scheme | jq -r '. | select(.name=="49901-without-scheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:55.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:55.548" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:04:51.402" endtime="20211210 13:04:55.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:55.549" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:04:55.548" endtime="20211210 13:04:55.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:55.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:55.550" endtime="20211210 13:04:55.550"/>
</kw>
<status status="PASS" starttime="20211210 13:04:51.401" endtime="20211210 13:04:55.551"/>
</kw>
<msg timestamp="20211210 13:04:55.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:51.401" endtime="20211210 13:04:55.551"/>
</kw>
<msg timestamp="20211210 13:04:55.551" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:04:51.400" endtime="20211210 13:04:55.551"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:04:55.551" endtime="20211210 13:04:55.552"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:55.556" level="INFO">Running command 'ozone sh bucket create /49901-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:04:59.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:04:59.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:04:55.554" endtime="20211210 13:04:59.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:04:59.511" level="INFO"/>
<status status="PASS" starttime="20211210 13:04:59.510" endtime="20211210 13:04:59.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:04:59.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:04:59.511" endtime="20211210 13:04:59.512"/>
</kw>
<status status="PASS" starttime="20211210 13:04:55.553" endtime="20211210 13:04:59.512"/>
</kw>
<msg timestamp="20211210 13:04:59.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:55.553" endtime="20211210 13:04:59.512"/>
</kw>
<status status="PASS" starttime="20211210 13:04:55.552" endtime="20211210 13:04:59.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:04:59.517" level="INFO">Running command 'ozone sh bucket info /49901-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:03.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:03.787" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:04:59.515" endtime="20211210 13:05:03.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:03.790" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:05:03.788" endtime="20211210 13:05:03.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:03.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:03.790" endtime="20211210 13:05:03.791"/>
</kw>
<status status="PASS" starttime="20211210 13:04:59.514" endtime="20211210 13:05:03.791"/>
</kw>
<msg timestamp="20211210 13:05:03.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:04:59.514" endtime="20211210 13:05:03.791"/>
</kw>
<msg timestamp="20211210 13:05:03.792" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:04:59.513" endtime="20211210 13:05:03.792"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:05:03.792" endtime="20211210 13:05:03.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:03.797" level="INFO">Running command 'ozone sh bucket info /49901-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:08.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:08.474" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:05:03.795" endtime="20211210 13:05:08.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:08.476" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:05:08.475" endtime="20211210 13:05:08.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:08.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:08.476" endtime="20211210 13:05:08.476"/>
</kw>
<status status="PASS" starttime="20211210 13:05:03.794" endtime="20211210 13:05:08.477"/>
</kw>
<msg timestamp="20211210 13:05:08.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:03.794" endtime="20211210 13:05:08.477"/>
</kw>
<msg timestamp="20211210 13:05:08.477" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:05:03.793" endtime="20211210 13:05:08.477"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:05:08.478" endtime="20211210 13:05:08.478"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:08.482" level="INFO">Running command 'ozone sh bucket delete /49901-without-scheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:12.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:12.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:05:08.480" endtime="20211210 13:05:12.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:12.433" level="INFO"/>
<status status="PASS" starttime="20211210 13:05:12.432" endtime="20211210 13:05:12.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:12.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:12.434" endtime="20211210 13:05:12.435"/>
</kw>
<status status="PASS" starttime="20211210 13:05:08.479" endtime="20211210 13:05:12.435"/>
</kw>
<msg timestamp="20211210 13:05:12.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:08.479" endtime="20211210 13:05:12.435"/>
</kw>
<status status="PASS" starttime="20211210 13:05:08.478" endtime="20211210 13:05:12.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:12.440" level="INFO">Running command 'ozone sh volume delete /49901-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:16.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:16.558" level="INFO">${output} = Volume 49901-without-scheme is deleted</msg>
<status status="PASS" starttime="20211210 13:05:12.438" endtime="20211210 13:05:16.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:16.559" level="INFO">Volume 49901-without-scheme is deleted</msg>
<status status="PASS" starttime="20211210 13:05:16.559" endtime="20211210 13:05:16.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:16.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:16.560" endtime="20211210 13:05:16.560"/>
</kw>
<status status="PASS" starttime="20211210 13:05:12.437" endtime="20211210 13:05:16.561"/>
</kw>
<msg timestamp="20211210 13:05:16.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:12.437" endtime="20211210 13:05:16.561"/>
</kw>
<status status="PASS" starttime="20211210 13:05:12.436" endtime="20211210 13:05:16.561"/>
</kw>
<status status="PASS" starttime="20211210 13:01:40.171" endtime="20211210 13:05:16.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:01:40.170" endtime="20211210 13:05:16.562"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20211210 13:01:40.147" endtime="20211210 13:05:16.563"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 13:05:16.574" level="INFO">${random} = 61669</msg>
<status status="PASS" starttime="20211210 13:05:16.574" endtime="20211210 13:05:16.574"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:05:16.575" level="INFO">${prefix} = 61669</msg>
<status status="PASS" starttime="20211210 13:05:16.575" endtime="20211210 13:05:16.575"/>
</kw>
<status status="PASS" starttime="20211210 13:05:16.574" endtime="20211210 13:05:16.576"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:16.583" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:16.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:16.586" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:05:16.579" endtime="20211210 13:05:16.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:16.587" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:05:16.587" endtime="20211210 13:05:16.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:16.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:16.588" endtime="20211210 13:05:16.588"/>
</kw>
<status status="PASS" starttime="20211210 13:05:16.578" endtime="20211210 13:05:16.589"/>
</kw>
<msg timestamp="20211210 13:05:16.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:16.578" endtime="20211210 13:05:16.589"/>
</kw>
<msg timestamp="20211210 13:05:16.589" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:05:16.578" endtime="20211210 13:05:16.589"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:05:16.592" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:05:16.590" endtime="20211210 13:05:16.592"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:16.597" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:16.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:16.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:05:16.594" endtime="20211210 13:05:16.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:16.607" level="INFO"/>
<status status="PASS" starttime="20211210 13:05:16.606" endtime="20211210 13:05:16.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:16.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:16.607" endtime="20211210 13:05:16.608"/>
</kw>
<status status="PASS" starttime="20211210 13:05:16.594" endtime="20211210 13:05:16.608"/>
</kw>
<msg timestamp="20211210 13:05:16.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:16.593" endtime="20211210 13:05:16.608"/>
</kw>
<status status="PASS" starttime="20211210 13:05:16.593" endtime="20211210 13:05:16.609"/>
</kw>
<status status="PASS" starttime="20211210 13:05:16.592" endtime="20211210 13:05:16.609"/>
</kw>
<status status="PASS" starttime="20211210 13:05:16.577" endtime="20211210 13:05:16.609"/>
</kw>
<status status="PASS" starttime="20211210 13:05:16.577" endtime="20211210 13:05:16.609"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:16.613" level="INFO">Running command 'ozone sh volume info o3://om:9862/61669-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:20.579" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:05:20.579" level="INFO">${output} = VOLUME_NOT_FOUND Volume 61669-with-host is not found</msg>
<status status="PASS" starttime="20211210 13:05:16.611" endtime="20211210 13:05:20.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:20.581" level="INFO">VOLUME_NOT_FOUND Volume 61669-with-host is not found</msg>
<status status="PASS" starttime="20211210 13:05:20.580" endtime="20211210 13:05:20.581"/>
</kw>
<msg timestamp="20211210 13:05:20.581" level="INFO">${result} = VOLUME_NOT_FOUND Volume 61669-with-host is not found</msg>
<status status="PASS" starttime="20211210 13:05:16.610" endtime="20211210 13:05:20.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:05:20.582" endtime="20211210 13:05:20.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:20.586" level="INFO">Running command 'ozone sh volume create o3://om:9862/61669-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:24.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:24.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:05:20.584" endtime="20211210 13:05:24.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:24.661" level="INFO"/>
<status status="PASS" starttime="20211210 13:05:24.657" endtime="20211210 13:05:24.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:24.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:24.661" endtime="20211210 13:05:24.662"/>
</kw>
<status status="PASS" starttime="20211210 13:05:20.583" endtime="20211210 13:05:24.662"/>
</kw>
<msg timestamp="20211210 13:05:24.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:20.583" endtime="20211210 13:05:24.662"/>
</kw>
<msg timestamp="20211210 13:05:24.663" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:05:20.582" endtime="20211210 13:05:24.663"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:05:24.663" endtime="20211210 13:05:24.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:24.668" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="61669-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:28.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:28.838" level="INFO">${output} = {
  "metadata": {},
  "name": "61669-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211210 13:05:24.665" endtime="20211210 13:05:28.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:28.840" level="INFO">{
  "metadata": {},
  "name": "61669-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-12-10T13:05:24.433Z",
  "modificationTime": "2021-12-10T13:05:24.433Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211210 13:05:28.839" endtime="20211210 13:05:28.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:28.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:28.840" endtime="20211210 13:05:28.841"/>
</kw>
<status status="PASS" starttime="20211210 13:05:24.665" endtime="20211210 13:05:28.841"/>
</kw>
<msg timestamp="20211210 13:05:28.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:24.664" endtime="20211210 13:05:28.841"/>
</kw>
<msg timestamp="20211210 13:05:28.842" level="INFO">${result} = {
  "metadata": {},
  "name": "61669-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211210 13:05:24.663" endtime="20211210 13:05:28.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:05:28.842" endtime="20211210 13:05:28.842"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:28.846" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="61669-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:33.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:33.099" level="INFO">${output} = {
  "metadata": {},
  "name": "61669-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211210 13:05:28.844" endtime="20211210 13:05:33.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:33.100" level="INFO">{
  "metadata": {},
  "name": "61669-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-12-10T13:05:24.433Z",
  "modificationTime": "2021-12-10T13:05:24.433Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211210 13:05:33.099" endtime="20211210 13:05:33.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:33.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:33.101" endtime="20211210 13:05:33.101"/>
</kw>
<status status="PASS" starttime="20211210 13:05:28.844" endtime="20211210 13:05:33.102"/>
</kw>
<msg timestamp="20211210 13:05:33.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:28.843" endtime="20211210 13:05:33.102"/>
</kw>
<msg timestamp="20211210 13:05:33.102" level="INFO">${result} = {
  "metadata": {},
  "name": "61669-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211210 13:05:28.842" endtime="20211210 13:05:33.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:05:33.103" endtime="20211210 13:05:33.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:33.107" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/61669-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:37.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:37.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:05:33.105" endtime="20211210 13:05:37.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:37.207" level="INFO"/>
<status status="PASS" starttime="20211210 13:05:37.206" endtime="20211210 13:05:37.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:37.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:37.207" endtime="20211210 13:05:37.208"/>
</kw>
<status status="PASS" starttime="20211210 13:05:33.105" endtime="20211210 13:05:37.208"/>
</kw>
<msg timestamp="20211210 13:05:37.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:33.104" endtime="20211210 13:05:37.208"/>
</kw>
<status status="PASS" starttime="20211210 13:05:33.103" endtime="20211210 13:05:37.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:37.213" level="INFO">Running command 'ozone sh volume info o3://om:9862/61669-with-host | jq -r '. | select(.name=="61669-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:41.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:41.751" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:05:37.211" endtime="20211210 13:05:41.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:41.752" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211210 13:05:41.751" endtime="20211210 13:05:41.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:41.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:41.753" endtime="20211210 13:05:41.753"/>
</kw>
<status status="PASS" starttime="20211210 13:05:37.210" endtime="20211210 13:05:41.754"/>
</kw>
<msg timestamp="20211210 13:05:41.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:37.210" endtime="20211210 13:05:41.754"/>
</kw>
<msg timestamp="20211210 13:05:41.754" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:05:37.209" endtime="20211210 13:05:41.754"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:05:41.755" endtime="20211210 13:05:41.755"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:41.760" level="INFO">Running command 'ozone sh bucket create o3://om:9862/61669-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:45.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:45.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:05:41.757" endtime="20211210 13:05:45.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:45.661" level="INFO"/>
<status status="PASS" starttime="20211210 13:05:45.660" endtime="20211210 13:05:45.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:45.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:45.661" endtime="20211210 13:05:45.663"/>
</kw>
<status status="PASS" starttime="20211210 13:05:41.756" endtime="20211210 13:05:45.663"/>
</kw>
<msg timestamp="20211210 13:05:45.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:41.756" endtime="20211210 13:05:45.663"/>
</kw>
<status status="PASS" starttime="20211210 13:05:41.755" endtime="20211210 13:05:45.664"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:45.668" level="INFO">Running command 'ozone sh bucket info o3://om:9862/61669-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:49.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:49.947" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211210 13:05:45.666" endtime="20211210 13:05:49.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:49.948" level="INFO">DISK</msg>
<status status="PASS" starttime="20211210 13:05:49.948" endtime="20211210 13:05:49.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:49.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:49.949" endtime="20211210 13:05:49.949"/>
</kw>
<status status="PASS" starttime="20211210 13:05:45.665" endtime="20211210 13:05:49.950"/>
</kw>
<msg timestamp="20211210 13:05:49.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:45.665" endtime="20211210 13:05:49.950"/>
</kw>
<msg timestamp="20211210 13:05:49.951" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211210 13:05:45.664" endtime="20211210 13:05:49.951"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:05:49.951" endtime="20211210 13:05:49.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:49.956" level="INFO">Running command 'ozone sh bucket info o3://om:9862/61669-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:54.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:54.195" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:05:49.954" endtime="20211210 13:05:54.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:54.196" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211210 13:05:54.195" endtime="20211210 13:05:54.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:54.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:54.197" endtime="20211210 13:05:54.197"/>
</kw>
<status status="PASS" starttime="20211210 13:05:49.953" endtime="20211210 13:05:54.198"/>
</kw>
<msg timestamp="20211210 13:05:54.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:49.953" endtime="20211210 13:05:54.198"/>
</kw>
<msg timestamp="20211210 13:05:54.198" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:05:49.952" endtime="20211210 13:05:54.198"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:05:54.198" endtime="20211210 13:05:54.199"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:54.203" level="INFO">Running command 'ozone sh bucket info o3://om:9862/61669-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:05:58.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:05:58.428" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211210 13:05:54.201" endtime="20211210 13:05:58.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:05:58.429" level="INFO">100</msg>
<status status="PASS" starttime="20211210 13:05:58.428" endtime="20211210 13:05:58.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:05:58.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:05:58.430" endtime="20211210 13:05:58.430"/>
</kw>
<status status="PASS" starttime="20211210 13:05:54.200" endtime="20211210 13:05:58.431"/>
</kw>
<msg timestamp="20211210 13:05:58.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:54.200" endtime="20211210 13:05:58.431"/>
</kw>
<msg timestamp="20211210 13:05:58.432" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211210 13:05:54.199" endtime="20211210 13:05:58.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:05:58.432" endtime="20211210 13:05:58.433"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:05:58.437" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/61669-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:02.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:02.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:05:58.435" endtime="20211210 13:06:02.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:02.577" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:02.576" endtime="20211210 13:06:02.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:02.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:02.578" endtime="20211210 13:06:02.578"/>
</kw>
<status status="PASS" starttime="20211210 13:05:58.434" endtime="20211210 13:06:02.579"/>
</kw>
<msg timestamp="20211210 13:06:02.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:05:58.434" endtime="20211210 13:06:02.579"/>
</kw>
<status status="PASS" starttime="20211210 13:05:58.433" endtime="20211210 13:06:02.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:02.583" level="INFO">Running command 'ozone sh bucket info o3://om:9862/61669-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:07.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:07.234" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211210 13:06:02.582" endtime="20211210 13:06:07.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:07.235" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211210 13:06:07.234" endtime="20211210 13:06:07.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:07.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:07.236" endtime="20211210 13:06:07.236"/>
</kw>
<status status="PASS" starttime="20211210 13:06:02.581" endtime="20211210 13:06:07.237"/>
</kw>
<msg timestamp="20211210 13:06:07.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:02.580" endtime="20211210 13:06:07.237"/>
</kw>
<msg timestamp="20211210 13:06:07.237" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211210 13:06:02.579" endtime="20211210 13:06:07.237"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:06:07.237" endtime="20211210 13:06:07.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:07.242" level="INFO">Running command 'ozone sh bucket info o3://om:9862/61669-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:11.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:11.678" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211210 13:06:07.240" endtime="20211210 13:06:11.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:11.679" level="INFO">1000</msg>
<status status="PASS" starttime="20211210 13:06:11.679" endtime="20211210 13:06:11.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:11.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:11.680" endtime="20211210 13:06:11.680"/>
</kw>
<status status="PASS" starttime="20211210 13:06:07.240" endtime="20211210 13:06:11.681"/>
</kw>
<msg timestamp="20211210 13:06:11.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:07.239" endtime="20211210 13:06:11.681"/>
</kw>
<msg timestamp="20211210 13:06:11.681" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211210 13:06:07.238" endtime="20211210 13:06:11.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:06:11.681" endtime="20211210 13:06:11.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:11.686" level="INFO">Running command 'ozone sh bucket list o3://om:9862/61669-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:16.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:16.265" level="INFO">${output} = 61669-with-host</msg>
<status status="PASS" starttime="20211210 13:06:11.684" endtime="20211210 13:06:16.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:16.266" level="INFO">61669-with-host</msg>
<status status="PASS" starttime="20211210 13:06:16.265" endtime="20211210 13:06:16.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:16.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:16.266" endtime="20211210 13:06:16.267"/>
</kw>
<status status="PASS" starttime="20211210 13:06:11.684" endtime="20211210 13:06:16.267"/>
</kw>
<msg timestamp="20211210 13:06:16.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:11.683" endtime="20211210 13:06:16.268"/>
</kw>
<msg timestamp="20211210 13:06:16.268" level="INFO">${result} = 61669-with-host</msg>
<status status="PASS" starttime="20211210 13:06:11.682" endtime="20211210 13:06:16.268"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:06:16.268" endtime="20211210 13:06:16.269"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:16.275" level="INFO">Running command 'ozone sh key put o3://om:9862/61669-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:23.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:23.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:16.273" endtime="20211210 13:06:23.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:23.069" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:23.068" endtime="20211210 13:06:23.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:23.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:23.069" endtime="20211210 13:06:23.070"/>
</kw>
<status status="PASS" starttime="20211210 13:06:16.272" endtime="20211210 13:06:23.071"/>
</kw>
<msg timestamp="20211210 13:06:23.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:16.271" endtime="20211210 13:06:23.071"/>
</kw>
<status status="PASS" starttime="20211210 13:06:16.270" endtime="20211210 13:06:23.071"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:23.075" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:23.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:23.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:23.073" endtime="20211210 13:06:23.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:23.079" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:23.078" endtime="20211210 13:06:23.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:23.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:23.080" endtime="20211210 13:06:23.081"/>
</kw>
<status status="PASS" starttime="20211210 13:06:23.072" endtime="20211210 13:06:23.081"/>
</kw>
<msg timestamp="20211210 13:06:23.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:23.072" endtime="20211210 13:06:23.081"/>
</kw>
<status status="PASS" starttime="20211210 13:06:23.071" endtime="20211210 13:06:23.081"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:23.085" level="INFO">Running command 'ozone sh key get o3://om:9862/61669-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:29.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:29.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:23.084" endtime="20211210 13:06:29.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:29.504" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:29.503" endtime="20211210 13:06:29.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:29.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:29.504" endtime="20211210 13:06:29.505"/>
</kw>
<status status="PASS" starttime="20211210 13:06:23.083" endtime="20211210 13:06:29.505"/>
</kw>
<msg timestamp="20211210 13:06:29.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:23.082" endtime="20211210 13:06:29.505"/>
</kw>
<status status="PASS" starttime="20211210 13:06:23.082" endtime="20211210 13:06:29.505"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:29.509" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:29.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:29.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:29.507" endtime="20211210 13:06:29.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:29.513" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:29.513" endtime="20211210 13:06:29.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:29.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:29.514" endtime="20211210 13:06:29.514"/>
</kw>
<status status="PASS" starttime="20211210 13:06:29.507" endtime="20211210 13:06:29.515"/>
</kw>
<msg timestamp="20211210 13:06:29.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:29.506" endtime="20211210 13:06:29.515"/>
</kw>
<status status="PASS" starttime="20211210 13:06:29.506" endtime="20211210 13:06:29.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:29.519" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/61669-with-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:36.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:36.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:29.517" endtime="20211210 13:06:36.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:36.245" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:36.243" endtime="20211210 13:06:36.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:36.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:36.245" endtime="20211210 13:06:36.246"/>
</kw>
<status status="PASS" starttime="20211210 13:06:29.516" endtime="20211210 13:06:36.246"/>
</kw>
<msg timestamp="20211210 13:06:36.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:29.516" endtime="20211210 13:06:36.246"/>
</kw>
<status status="PASS" starttime="20211210 13:06:29.515" endtime="20211210 13:06:36.247"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:36.250" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:36.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:36.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:36.248" endtime="20211210 13:06:36.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:36.254" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:36.254" endtime="20211210 13:06:36.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:36.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:36.255" endtime="20211210 13:06:36.255"/>
</kw>
<status status="PASS" starttime="20211210 13:06:36.248" endtime="20211210 13:06:36.256"/>
</kw>
<msg timestamp="20211210 13:06:36.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:36.247" endtime="20211210 13:06:36.256"/>
</kw>
<status status="PASS" starttime="20211210 13:06:36.247" endtime="20211210 13:06:36.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:36.260" level="INFO">Running command 'ozone sh key get o3://om:9862/61669-with-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:42.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:42.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:36.258" endtime="20211210 13:06:42.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:42.661" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:42.660" endtime="20211210 13:06:42.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:42.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:42.661" endtime="20211210 13:06:42.662"/>
</kw>
<status status="PASS" starttime="20211210 13:06:36.257" endtime="20211210 13:06:42.663"/>
</kw>
<msg timestamp="20211210 13:06:42.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:36.257" endtime="20211210 13:06:42.663"/>
</kw>
<status status="PASS" starttime="20211210 13:06:36.256" endtime="20211210 13:06:42.664"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:42.668" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:42.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:42.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:42.665" endtime="20211210 13:06:42.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:42.672" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:42.671" endtime="20211210 13:06:42.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:42.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:42.672" endtime="20211210 13:06:42.673"/>
</kw>
<status status="PASS" starttime="20211210 13:06:42.665" endtime="20211210 13:06:42.673"/>
</kw>
<msg timestamp="20211210 13:06:42.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:42.664" endtime="20211210 13:06:42.674"/>
</kw>
<status status="PASS" starttime="20211210 13:06:42.664" endtime="20211210 13:06:42.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:42.678" level="INFO">Running command 'ozone sh key info o3://om:9862/61669-with-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:47.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:47.087" level="INFO">${output} = {
  "volumeName": "61669-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:06:33.632Z",
  "modificationTime": "2021-12-10T13:06:35.712Z",...</msg>
<status status="PASS" starttime="20211210 13:06:42.676" endtime="20211210 13:06:47.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:47.089" level="INFO">{
  "volumeName": "61669-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:06:33.632Z",
  "modificationTime": "2021-12-10T13:06:35.712Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "replicationType": "RATIS",
  "replicationFactor": 3
}</msg>
<status status="PASS" starttime="20211210 13:06:47.088" endtime="20211210 13:06:47.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:47.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:47.089" endtime="20211210 13:06:47.090"/>
</kw>
<status status="PASS" starttime="20211210 13:06:42.676" endtime="20211210 13:06:47.090"/>
</kw>
<msg timestamp="20211210 13:06:47.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:42.675" endtime="20211210 13:06:47.090"/>
</kw>
<msg timestamp="20211210 13:06:47.091" level="INFO">${result} = {
  "volumeName": "61669-with-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:06:33.632Z",
  "modificationTime": "2021-12-10T13:06:35.712Z",...</msg>
<status status="PASS" starttime="20211210 13:06:42.674" endtime="20211210 13:06:47.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:06:47.091" endtime="20211210 13:06:47.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:47.096" level="INFO">Running command 'ozone sh key delete o3://om:9862/61669-with-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:51.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:51.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:47.094" endtime="20211210 13:06:51.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:51.202" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:51.201" endtime="20211210 13:06:51.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:51.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:51.203" endtime="20211210 13:06:51.203"/>
</kw>
<status status="PASS" starttime="20211210 13:06:47.093" endtime="20211210 13:06:51.204"/>
</kw>
<msg timestamp="20211210 13:06:51.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:47.092" endtime="20211210 13:06:51.204"/>
</kw>
<status status="PASS" starttime="20211210 13:06:47.092" endtime="20211210 13:06:51.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:51.208" level="INFO">Running command 'ozone sh key cp o3://om:9862/61669-with-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:57.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:57.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:51.206" endtime="20211210 13:06:57.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:57.958" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:57.958" endtime="20211210 13:06:57.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:57.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:57.959" endtime="20211210 13:06:57.959"/>
</kw>
<status status="PASS" starttime="20211210 13:06:51.206" endtime="20211210 13:06:57.960"/>
</kw>
<msg timestamp="20211210 13:06:57.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:51.205" endtime="20211210 13:06:57.960"/>
</kw>
<status status="PASS" starttime="20211210 13:06:51.204" endtime="20211210 13:06:57.960"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:57.964" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:06:57.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:06:57.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:57.962" endtime="20211210 13:06:57.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:06:57.968" level="INFO"/>
<status status="PASS" starttime="20211210 13:06:57.967" endtime="20211210 13:06:57.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:06:57.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:06:57.968" endtime="20211210 13:06:57.969"/>
</kw>
<status status="PASS" starttime="20211210 13:06:57.962" endtime="20211210 13:06:57.969"/>
</kw>
<msg timestamp="20211210 13:06:57.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:57.961" endtime="20211210 13:06:57.969"/>
</kw>
<status status="PASS" starttime="20211210 13:06:57.961" endtime="20211210 13:06:57.970"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:06:57.975" level="INFO">Running command 'ozone sh key get o3://om:9862/61669-with-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:04.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:04.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:06:57.973" endtime="20211210 13:07:04.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:04.206" level="INFO"/>
<status status="PASS" starttime="20211210 13:07:04.205" endtime="20211210 13:07:04.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:04.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:04.206" endtime="20211210 13:07:04.207"/>
</kw>
<status status="PASS" starttime="20211210 13:06:57.971" endtime="20211210 13:07:04.207"/>
</kw>
<msg timestamp="20211210 13:07:04.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:06:57.971" endtime="20211210 13:07:04.208"/>
</kw>
<status status="PASS" starttime="20211210 13:06:57.970" endtime="20211210 13:07:04.208"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:04.212" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:04.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:04.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:07:04.210" endtime="20211210 13:07:04.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:04.216" level="INFO"/>
<status status="PASS" starttime="20211210 13:07:04.215" endtime="20211210 13:07:04.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:04.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:04.216" endtime="20211210 13:07:04.217"/>
</kw>
<status status="PASS" starttime="20211210 13:07:04.209" endtime="20211210 13:07:04.217"/>
</kw>
<msg timestamp="20211210 13:07:04.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:04.209" endtime="20211210 13:07:04.218"/>
</kw>
<status status="PASS" starttime="20211210 13:07:04.208" endtime="20211210 13:07:04.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:04.222" level="INFO">Running command 'ozone sh key delete o3://om:9862/61669-with-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:08.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:08.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:07:04.220" endtime="20211210 13:07:08.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:08.779" level="INFO"/>
<status status="PASS" starttime="20211210 13:07:08.779" endtime="20211210 13:07:08.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:08.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:08.780" endtime="20211210 13:07:08.780"/>
</kw>
<status status="PASS" starttime="20211210 13:07:04.220" endtime="20211210 13:07:08.781"/>
</kw>
<msg timestamp="20211210 13:07:08.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:04.219" endtime="20211210 13:07:08.781"/>
</kw>
<status status="PASS" starttime="20211210 13:07:04.218" endtime="20211210 13:07:08.781"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:08.784" level="INFO">Running command 'ozone sh key get o3://om:9862/61669-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:12.742" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:07:12.742" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20211210 13:07:08.782" endtime="20211210 13:07:12.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:12.743" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20211210 13:07:12.743" endtime="20211210 13:07:12.744"/>
</kw>
<msg timestamp="20211210 13:07:12.744" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20211210 13:07:08.782" endtime="20211210 13:07:12.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:07:12.744" endtime="20211210 13:07:12.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:12.749" level="INFO">Running command 'ozone sh key get --force o3://om:9862/61669-with-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:19.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:19.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:07:12.747" endtime="20211210 13:07:19.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:19.324" level="INFO"/>
<status status="PASS" starttime="20211210 13:07:19.323" endtime="20211210 13:07:19.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:19.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:19.325" endtime="20211210 13:07:19.325"/>
</kw>
<status status="PASS" starttime="20211210 13:07:12.746" endtime="20211210 13:07:19.326"/>
</kw>
<msg timestamp="20211210 13:07:19.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:12.746" endtime="20211210 13:07:19.326"/>
</kw>
<msg timestamp="20211210 13:07:19.326" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:07:12.745" endtime="20211210 13:07:19.326"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:07:19.326" endtime="20211210 13:07:19.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:19.331" level="INFO">Running command 'ozone sh key info o3://om:9862/61669-with-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:23.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:23.827" level="INFO">${output} = {
  "volumeName": "61669-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:06:20.418Z",
  "modificationTime": "2021-12-10T13:06:22.420Z",
  "re...</msg>
<status status="PASS" starttime="20211210 13:07:19.329" endtime="20211210 13:07:23.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:23.829" level="INFO">{
  "volumeName": "61669-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:06:20.418Z",
  "modificationTime": "2021-12-10T13:06:22.420Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "replicationType": "RATIS",
  "replicationFactor": 3
}</msg>
<status status="PASS" starttime="20211210 13:07:23.828" endtime="20211210 13:07:23.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:23.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:23.829" endtime="20211210 13:07:23.830"/>
</kw>
<status status="PASS" starttime="20211210 13:07:19.328" endtime="20211210 13:07:23.830"/>
</kw>
<msg timestamp="20211210 13:07:23.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:19.328" endtime="20211210 13:07:23.830"/>
</kw>
<msg timestamp="20211210 13:07:23.831" level="INFO">${result} = {
  "volumeName": "61669-with-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:06:20.418Z",
  "modificationTime": "2021-12-10T13:06:22.420Z",
  "re...</msg>
<status status="PASS" starttime="20211210 13:07:19.327" endtime="20211210 13:07:23.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:07:23.831" endtime="20211210 13:07:23.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:23.837" level="INFO">Running command 'ozone sh key list o3://om:9862/61669-with-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:28.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:28.136" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211210 13:07:23.835" endtime="20211210 13:07:28.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:28.138" level="INFO">key1</msg>
<status status="PASS" starttime="20211210 13:07:28.137" endtime="20211210 13:07:28.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:28.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:28.138" endtime="20211210 13:07:28.139"/>
</kw>
<status status="PASS" starttime="20211210 13:07:23.834" endtime="20211210 13:07:28.139"/>
</kw>
<msg timestamp="20211210 13:07:28.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:23.833" endtime="20211210 13:07:28.139"/>
</kw>
<msg timestamp="20211210 13:07:28.139" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20211210 13:07:23.832" endtime="20211210 13:07:28.140"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:07:28.140" endtime="20211210 13:07:28.140"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:28.144" level="INFO">Running command 'ozone sh key rename o3://om:9862/61669-with-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:32.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:32.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:07:28.142" endtime="20211210 13:07:32.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:32.156" level="INFO"/>
<status status="PASS" starttime="20211210 13:07:32.155" endtime="20211210 13:07:32.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:32.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:32.156" endtime="20211210 13:07:32.157"/>
</kw>
<status status="PASS" starttime="20211210 13:07:28.141" endtime="20211210 13:07:32.157"/>
</kw>
<msg timestamp="20211210 13:07:32.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:28.141" endtime="20211210 13:07:32.157"/>
</kw>
<status status="PASS" starttime="20211210 13:07:28.140" endtime="20211210 13:07:32.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:32.162" level="INFO">Running command 'ozone sh key list o3://om:9862/61669-with-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:36.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:36.291" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20211210 13:07:32.160" endtime="20211210 13:07:36.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:36.293" level="INFO">key2</msg>
<status status="PASS" starttime="20211210 13:07:36.292" endtime="20211210 13:07:36.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:36.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:36.293" endtime="20211210 13:07:36.293"/>
</kw>
<status status="PASS" starttime="20211210 13:07:32.159" endtime="20211210 13:07:36.294"/>
</kw>
<msg timestamp="20211210 13:07:36.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:32.159" endtime="20211210 13:07:36.294"/>
</kw>
<msg timestamp="20211210 13:07:36.294" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20211210 13:07:32.158" endtime="20211210 13:07:36.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:07:36.295" endtime="20211210 13:07:36.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:36.299" level="INFO">Running command 'ozone sh key delete o3://om:9862/61669-with-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:40.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:40.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:07:36.297" endtime="20211210 13:07:40.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:40.410" level="INFO"/>
<status status="PASS" starttime="20211210 13:07:40.409" endtime="20211210 13:07:40.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:40.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:40.410" endtime="20211210 13:07:40.411"/>
</kw>
<status status="PASS" starttime="20211210 13:07:36.297" endtime="20211210 13:07:40.411"/>
</kw>
<msg timestamp="20211210 13:07:40.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:36.296" endtime="20211210 13:07:40.411"/>
</kw>
<status status="PASS" starttime="20211210 13:07:36.295" endtime="20211210 13:07:40.412"/>
</kw>
<status status="PASS" starttime="20211210 13:06:16.269" endtime="20211210 13:07:40.412"/>
</kw>
<status status="PASS" starttime="20211210 13:06:16.269" endtime="20211210 13:07:40.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:40.416" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/61669-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:44.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:44.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:07:40.414" endtime="20211210 13:07:44.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:44.666" level="INFO"/>
<status status="PASS" starttime="20211210 13:07:44.665" endtime="20211210 13:07:44.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:44.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:44.666" endtime="20211210 13:07:44.668"/>
</kw>
<status status="PASS" starttime="20211210 13:07:40.413" endtime="20211210 13:07:44.669"/>
</kw>
<msg timestamp="20211210 13:07:44.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:40.413" endtime="20211210 13:07:44.669"/>
</kw>
<status status="PASS" starttime="20211210 13:07:40.412" endtime="20211210 13:07:44.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:44.673" level="INFO">Running command 'ozone sh volume info o3://om:9862/61669-with-host | jq -r '. | select(.name=="61669-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:48.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:48.918" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:07:44.672" endtime="20211210 13:07:48.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:48.919" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:07:48.918" endtime="20211210 13:07:48.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:48.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:48.919" endtime="20211210 13:07:48.920"/>
</kw>
<status status="PASS" starttime="20211210 13:07:44.671" endtime="20211210 13:07:48.920"/>
</kw>
<msg timestamp="20211210 13:07:48.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:44.671" endtime="20211210 13:07:48.921"/>
</kw>
<msg timestamp="20211210 13:07:48.921" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:07:44.669" endtime="20211210 13:07:48.921"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:07:48.921" endtime="20211210 13:07:48.922"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:48.926" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/61669-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:53.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:53.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:07:48.924" endtime="20211210 13:07:53.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:53.072" level="INFO"/>
<status status="PASS" starttime="20211210 13:07:53.072" endtime="20211210 13:07:53.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:53.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:53.073" endtime="20211210 13:07:53.073"/>
</kw>
<status status="PASS" starttime="20211210 13:07:48.923" endtime="20211210 13:07:53.074"/>
</kw>
<msg timestamp="20211210 13:07:53.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:48.923" endtime="20211210 13:07:53.074"/>
</kw>
<status status="PASS" starttime="20211210 13:07:48.922" endtime="20211210 13:07:53.074"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:53.079" level="INFO">Running command 'ozone sh volume info o3://om:9862/61669-with-host | jq -r '. | select(.name=="61669-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:07:57.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:07:57.213" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:07:53.077" endtime="20211210 13:07:57.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:07:57.215" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:07:57.214" endtime="20211210 13:07:57.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:07:57.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:07:57.215" endtime="20211210 13:07:57.216"/>
</kw>
<status status="PASS" starttime="20211210 13:07:53.076" endtime="20211210 13:07:57.216"/>
</kw>
<msg timestamp="20211210 13:07:57.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:53.076" endtime="20211210 13:07:57.216"/>
</kw>
<msg timestamp="20211210 13:07:57.217" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:07:53.074" endtime="20211210 13:07:57.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:07:57.217" endtime="20211210 13:07:57.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:07:57.221" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/61669-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:01.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:01.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:07:57.219" endtime="20211210 13:08:01.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:01.361" level="INFO"/>
<status status="PASS" starttime="20211210 13:08:01.360" endtime="20211210 13:08:01.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:01.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:01.361" endtime="20211210 13:08:01.362"/>
</kw>
<status status="PASS" starttime="20211210 13:07:57.219" endtime="20211210 13:08:01.362"/>
</kw>
<msg timestamp="20211210 13:08:01.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:07:57.218" endtime="20211210 13:08:01.363"/>
</kw>
<status status="PASS" starttime="20211210 13:07:57.217" endtime="20211210 13:08:01.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:01.368" level="INFO">Running command 'ozone sh bucket info o3://om:9862/61669-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:05.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:05.637" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:08:01.366" endtime="20211210 13:08:05.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:05.639" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:08:05.638" endtime="20211210 13:08:05.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:05.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:05.640" endtime="20211210 13:08:05.640"/>
</kw>
<status status="PASS" starttime="20211210 13:08:01.365" endtime="20211210 13:08:05.641"/>
</kw>
<msg timestamp="20211210 13:08:05.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:01.364" endtime="20211210 13:08:05.641"/>
</kw>
<msg timestamp="20211210 13:08:05.641" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:08:01.363" endtime="20211210 13:08:05.641"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:08:05.641" endtime="20211210 13:08:05.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:05.647" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/61669-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:09.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:09.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:08:05.644" endtime="20211210 13:08:09.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:09.908" level="INFO"/>
<status status="PASS" starttime="20211210 13:08:09.908" endtime="20211210 13:08:09.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:09.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:09.909" endtime="20211210 13:08:09.909"/>
</kw>
<status status="PASS" starttime="20211210 13:08:05.644" endtime="20211210 13:08:09.910"/>
</kw>
<msg timestamp="20211210 13:08:09.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:05.643" endtime="20211210 13:08:09.910"/>
</kw>
<status status="PASS" starttime="20211210 13:08:05.642" endtime="20211210 13:08:09.910"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:09.915" level="INFO">Running command 'ozone sh bucket info o3://om:9862/61669-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:14.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:14.366" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:08:09.913" endtime="20211210 13:08:14.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:14.367" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:08:14.367" endtime="20211210 13:08:14.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:14.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:14.368" endtime="20211210 13:08:14.368"/>
</kw>
<status status="PASS" starttime="20211210 13:08:09.912" endtime="20211210 13:08:14.369"/>
</kw>
<msg timestamp="20211210 13:08:14.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:09.912" endtime="20211210 13:08:14.369"/>
</kw>
<msg timestamp="20211210 13:08:14.369" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:08:09.910" endtime="20211210 13:08:14.369"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:08:14.369" endtime="20211210 13:08:14.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:14.374" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/61669-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:18.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:18.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:08:14.372" endtime="20211210 13:08:18.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:18.540" level="INFO"/>
<status status="PASS" starttime="20211210 13:08:18.539" endtime="20211210 13:08:18.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:18.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:18.540" endtime="20211210 13:08:18.541"/>
</kw>
<status status="PASS" starttime="20211210 13:08:14.371" endtime="20211210 13:08:18.541"/>
</kw>
<msg timestamp="20211210 13:08:18.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:14.371" endtime="20211210 13:08:18.541"/>
</kw>
<status status="PASS" starttime="20211210 13:08:14.370" endtime="20211210 13:08:18.542"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:18.546" level="INFO">Running command 'ozone sh volume delete o3://om:9862/61669-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:22.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:22.098" level="INFO">${output} = Volume 61669-with-host is deleted</msg>
<status status="PASS" starttime="20211210 13:08:18.544" endtime="20211210 13:08:22.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:22.099" level="INFO">Volume 61669-with-host is deleted</msg>
<status status="PASS" starttime="20211210 13:08:22.098" endtime="20211210 13:08:22.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:22.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:22.100" endtime="20211210 13:08:22.100"/>
</kw>
<status status="PASS" starttime="20211210 13:08:18.543" endtime="20211210 13:08:22.101"/>
</kw>
<msg timestamp="20211210 13:08:22.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:18.543" endtime="20211210 13:08:22.101"/>
</kw>
<status status="PASS" starttime="20211210 13:08:18.542" endtime="20211210 13:08:22.101"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:22.105" level="INFO">Running command 'ozone sh volume create o3://om:9862/61669-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:26.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:26.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:08:22.103" endtime="20211210 13:08:26.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:26.095" level="INFO"/>
<status status="PASS" starttime="20211210 13:08:26.094" endtime="20211210 13:08:26.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:26.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:26.095" endtime="20211210 13:08:26.096"/>
</kw>
<status status="PASS" starttime="20211210 13:08:22.102" endtime="20211210 13:08:26.096"/>
</kw>
<msg timestamp="20211210 13:08:26.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:22.102" endtime="20211210 13:08:26.097"/>
</kw>
<status status="PASS" starttime="20211210 13:08:22.101" endtime="20211210 13:08:26.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:26.101" level="INFO">Running command 'ozone sh volume info o3://om:9862/61669-with-host | jq -r '. | select(.name=="61669-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:30.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:30.486" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:08:26.099" endtime="20211210 13:08:30.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:30.487" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:08:30.487" endtime="20211210 13:08:30.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:30.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:30.488" endtime="20211210 13:08:30.488"/>
</kw>
<status status="PASS" starttime="20211210 13:08:26.099" endtime="20211210 13:08:30.489"/>
</kw>
<msg timestamp="20211210 13:08:30.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:26.098" endtime="20211210 13:08:30.489"/>
</kw>
<msg timestamp="20211210 13:08:30.489" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:08:26.097" endtime="20211210 13:08:30.489"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:08:30.489" endtime="20211210 13:08:30.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:30.494" level="INFO">Running command 'ozone sh volume info o3://om:9862/61669-with-host | jq -r '. | select(.name=="61669-with-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:34.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:34.592" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:08:30.492" endtime="20211210 13:08:34.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:34.593" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:08:34.592" endtime="20211210 13:08:34.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:34.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:34.593" endtime="20211210 13:08:34.594"/>
</kw>
<status status="PASS" starttime="20211210 13:08:30.492" endtime="20211210 13:08:34.594"/>
</kw>
<msg timestamp="20211210 13:08:34.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:30.491" endtime="20211210 13:08:34.594"/>
</kw>
<msg timestamp="20211210 13:08:34.595" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:08:30.490" endtime="20211210 13:08:34.595"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:08:34.595" endtime="20211210 13:08:34.595"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:34.600" level="INFO">Running command 'ozone sh bucket create o3://om:9862/61669-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:38.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:38.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:08:34.598" endtime="20211210 13:08:38.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:38.838" level="INFO"/>
<status status="PASS" starttime="20211210 13:08:38.837" endtime="20211210 13:08:38.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:38.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:38.838" endtime="20211210 13:08:38.838"/>
</kw>
<status status="PASS" starttime="20211210 13:08:34.597" endtime="20211210 13:08:38.839"/>
</kw>
<msg timestamp="20211210 13:08:38.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:34.596" endtime="20211210 13:08:38.839"/>
</kw>
<status status="PASS" starttime="20211210 13:08:34.596" endtime="20211210 13:08:38.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:38.844" level="INFO">Running command 'ozone sh bucket info o3://om:9862/61669-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:43.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:43.082" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:08:38.842" endtime="20211210 13:08:43.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:43.084" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:08:43.083" endtime="20211210 13:08:43.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:43.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:43.084" endtime="20211210 13:08:43.085"/>
</kw>
<status status="PASS" starttime="20211210 13:08:38.841" endtime="20211210 13:08:43.085"/>
</kw>
<msg timestamp="20211210 13:08:43.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:38.841" endtime="20211210 13:08:43.086"/>
</kw>
<msg timestamp="20211210 13:08:43.086" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:08:38.840" endtime="20211210 13:08:43.086"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:08:43.086" endtime="20211210 13:08:43.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:43.091" level="INFO">Running command 'ozone sh bucket info o3://om:9862/61669-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:47.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:47.347" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:08:43.089" endtime="20211210 13:08:47.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:47.349" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:08:47.348" endtime="20211210 13:08:47.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:47.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:47.349" endtime="20211210 13:08:47.349"/>
</kw>
<status status="PASS" starttime="20211210 13:08:43.088" endtime="20211210 13:08:47.350"/>
</kw>
<msg timestamp="20211210 13:08:47.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:43.088" endtime="20211210 13:08:47.350"/>
</kw>
<msg timestamp="20211210 13:08:47.350" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:08:43.087" endtime="20211210 13:08:47.350"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:08:47.351" endtime="20211210 13:08:47.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:47.355" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/61669-with-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:51.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:51.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:08:47.353" endtime="20211210 13:08:51.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:51.268" level="INFO"/>
<status status="PASS" starttime="20211210 13:08:51.267" endtime="20211210 13:08:51.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:51.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:51.268" endtime="20211210 13:08:51.269"/>
</kw>
<status status="PASS" starttime="20211210 13:08:47.353" endtime="20211210 13:08:51.269"/>
</kw>
<msg timestamp="20211210 13:08:51.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:47.352" endtime="20211210 13:08:51.269"/>
</kw>
<status status="PASS" starttime="20211210 13:08:47.351" endtime="20211210 13:08:51.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:51.274" level="INFO">Running command 'ozone sh volume delete o3://om:9862/61669-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:55.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:55.114" level="INFO">${output} = Volume 61669-with-host is deleted</msg>
<status status="PASS" starttime="20211210 13:08:51.272" endtime="20211210 13:08:55.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:55.115" level="INFO">Volume 61669-with-host is deleted</msg>
<status status="PASS" starttime="20211210 13:08:55.114" endtime="20211210 13:08:55.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:55.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:55.115" endtime="20211210 13:08:55.116"/>
</kw>
<status status="PASS" starttime="20211210 13:08:51.271" endtime="20211210 13:08:55.117"/>
</kw>
<msg timestamp="20211210 13:08:55.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:51.271" endtime="20211210 13:08:55.117"/>
</kw>
<status status="PASS" starttime="20211210 13:08:51.270" endtime="20211210 13:08:55.117"/>
</kw>
<status status="PASS" starttime="20211210 13:05:16.609" endtime="20211210 13:08:55.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:05:16.576" endtime="20211210 13:08:55.118"/>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:55.125" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:55.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:55.129" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:08:55.123" endtime="20211210 13:08:55.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:55.130" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:08:55.130" endtime="20211210 13:08:55.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:55.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:55.131" endtime="20211210 13:08:55.131"/>
</kw>
<status status="PASS" starttime="20211210 13:08:55.122" endtime="20211210 13:08:55.132"/>
</kw>
<msg timestamp="20211210 13:08:55.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:55.122" endtime="20211210 13:08:55.132"/>
</kw>
<msg timestamp="20211210 13:08:55.132" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:08:55.121" endtime="20211210 13:08:55.132"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:08:55.133" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:08:55.133" endtime="20211210 13:08:55.133"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:55.139" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:55.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:55.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:08:55.136" endtime="20211210 13:08:55.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:55.370" level="INFO"/>
<status status="PASS" starttime="20211210 13:08:55.369" endtime="20211210 13:08:55.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:55.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:55.371" endtime="20211210 13:08:55.371"/>
</kw>
<status status="PASS" starttime="20211210 13:08:55.135" endtime="20211210 13:08:55.372"/>
</kw>
<msg timestamp="20211210 13:08:55.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:55.135" endtime="20211210 13:08:55.372"/>
</kw>
<status status="PASS" starttime="20211210 13:08:55.134" endtime="20211210 13:08:55.372"/>
</kw>
<status status="PASS" starttime="20211210 13:08:55.133" endtime="20211210 13:08:55.373"/>
</kw>
<status status="PASS" starttime="20211210 13:08:55.121" endtime="20211210 13:08:55.373"/>
</kw>
<status status="PASS" starttime="20211210 13:08:55.120" endtime="20211210 13:08:55.373"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:55.378" level="INFO">Running command 'ozone sh volume create o3://om:9862/61669-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:08:59.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:08:59.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:08:55.376" endtime="20211210 13:08:59.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:08:59.451" level="INFO"/>
<status status="PASS" starttime="20211210 13:08:59.450" endtime="20211210 13:08:59.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:08:59.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:08:59.451" endtime="20211210 13:08:59.452"/>
</kw>
<status status="PASS" starttime="20211210 13:08:55.375" endtime="20211210 13:08:59.452"/>
</kw>
<msg timestamp="20211210 13:08:59.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:55.375" endtime="20211210 13:08:59.452"/>
</kw>
<status status="PASS" starttime="20211210 13:08:55.374" endtime="20211210 13:08:59.452"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:08:59.456" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/61669-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:03.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:03.918" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:08:59.454" endtime="20211210 13:09:03.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:03.919" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:09:03.918" endtime="20211210 13:09:03.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:03.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:03.919" endtime="20211210 13:09:03.920"/>
</kw>
<status status="PASS" starttime="20211210 13:08:59.454" endtime="20211210 13:09:03.921"/>
</kw>
<msg timestamp="20211210 13:09:03.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:08:59.453" endtime="20211210 13:09:03.921"/>
</kw>
<msg timestamp="20211210 13:09:03.921" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:08:59.453" endtime="20211210 13:09:03.921"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:09:03.922" endtime="20211210 13:09:03.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:03.928" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/61669-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:07.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:07.873" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211210 13:09:03.926" endtime="20211210 13:09:07.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:07.874" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211210 13:09:07.874" endtime="20211210 13:09:07.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:07.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:07.875" endtime="20211210 13:09:07.875"/>
</kw>
<status status="PASS" starttime="20211210 13:09:03.925" endtime="20211210 13:09:07.876"/>
</kw>
<msg timestamp="20211210 13:09:07.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:03.925" endtime="20211210 13:09:07.876"/>
</kw>
<msg timestamp="20211210 13:09:07.876" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211210 13:09:03.924" endtime="20211210 13:09:07.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:07.880" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/61669-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:12.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:12.164" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211210 13:09:07.878" endtime="20211210 13:09:12.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:12.165" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:09:12.164" endtime="20211210 13:09:12.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:12.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:12.165" endtime="20211210 13:09:12.166"/>
</kw>
<status status="PASS" starttime="20211210 13:09:07.878" endtime="20211210 13:09:12.166"/>
</kw>
<msg timestamp="20211210 13:09:12.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:07.877" endtime="20211210 13:09:12.166"/>
</kw>
<msg timestamp="20211210 13:09:12.167" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211210 13:09:07.877" endtime="20211210 13:09:12.167"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:09:12.167" endtime="20211210 13:09:12.168"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:12.172" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/61669-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:16.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:16.334" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:09:12.170" endtime="20211210 13:09:16.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:16.336" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:09:16.335" endtime="20211210 13:09:16.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:16.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:16.336" endtime="20211210 13:09:16.337"/>
</kw>
<status status="PASS" starttime="20211210 13:09:12.169" endtime="20211210 13:09:16.337"/>
</kw>
<msg timestamp="20211210 13:09:16.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:12.169" endtime="20211210 13:09:16.337"/>
</kw>
<msg timestamp="20211210 13:09:16.338" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:09:12.168" endtime="20211210 13:09:16.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:16.342" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/61669-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:20.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:20.716" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211210 13:09:16.340" endtime="20211210 13:09:20.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:20.718" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:09:20.717" endtime="20211210 13:09:20.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:20.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:20.718" endtime="20211210 13:09:20.719"/>
</kw>
<status status="PASS" starttime="20211210 13:09:16.339" endtime="20211210 13:09:20.719"/>
</kw>
<msg timestamp="20211210 13:09:20.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:16.339" endtime="20211210 13:09:20.719"/>
</kw>
<msg timestamp="20211210 13:09:20.720" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211210 13:09:16.338" endtime="20211210 13:09:20.720"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:09:20.720" endtime="20211210 13:09:20.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:20.725" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/61669-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:25.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:25.038" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:09:20.723" endtime="20211210 13:09:25.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:25.039" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:09:25.038" endtime="20211210 13:09:25.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:25.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:25.039" endtime="20211210 13:09:25.040"/>
</kw>
<status status="PASS" starttime="20211210 13:09:20.722" endtime="20211210 13:09:25.041"/>
</kw>
<msg timestamp="20211210 13:09:25.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:20.722" endtime="20211210 13:09:25.041"/>
</kw>
<msg timestamp="20211210 13:09:25.042" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:09:20.721" endtime="20211210 13:09:25.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:25.047" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/61669-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:29.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:29.149" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211210 13:09:25.045" endtime="20211210 13:09:29.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:29.151" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:09:29.150" endtime="20211210 13:09:29.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:29.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:29.151" endtime="20211210 13:09:29.152"/>
</kw>
<status status="PASS" starttime="20211210 13:09:25.043" endtime="20211210 13:09:29.152"/>
</kw>
<msg timestamp="20211210 13:09:29.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:25.043" endtime="20211210 13:09:29.152"/>
</kw>
<msg timestamp="20211210 13:09:29.153" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211210 13:09:25.042" endtime="20211210 13:09:29.153"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:09:29.153" endtime="20211210 13:09:29.154"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:09:29.154" endtime="20211210 13:09:29.155"/>
</kw>
<status status="PASS" starttime="20211210 13:08:55.373" endtime="20211210 13:09:29.155"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:08:55.119" endtime="20211210 13:09:29.155"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:29.162" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:29.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:29.165" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:09:29.160" endtime="20211210 13:09:29.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:29.166" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:09:29.166" endtime="20211210 13:09:29.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:29.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:29.166" endtime="20211210 13:09:29.167"/>
</kw>
<status status="PASS" starttime="20211210 13:09:29.159" endtime="20211210 13:09:29.168"/>
</kw>
<msg timestamp="20211210 13:09:29.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:29.159" endtime="20211210 13:09:29.168"/>
</kw>
<msg timestamp="20211210 13:09:29.168" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:09:29.158" endtime="20211210 13:09:29.168"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:09:29.169" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:09:29.168" endtime="20211210 13:09:29.169"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:29.174" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:29.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:29.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:09:29.172" endtime="20211210 13:09:29.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:29.183" level="INFO"/>
<status status="PASS" starttime="20211210 13:09:29.182" endtime="20211210 13:09:29.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:29.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:29.183" endtime="20211210 13:09:29.184"/>
</kw>
<status status="PASS" starttime="20211210 13:09:29.171" endtime="20211210 13:09:29.184"/>
</kw>
<msg timestamp="20211210 13:09:29.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:29.171" endtime="20211210 13:09:29.184"/>
</kw>
<status status="PASS" starttime="20211210 13:09:29.170" endtime="20211210 13:09:29.185"/>
</kw>
<status status="PASS" starttime="20211210 13:09:29.169" endtime="20211210 13:09:29.185"/>
</kw>
<status status="PASS" starttime="20211210 13:09:29.157" endtime="20211210 13:09:29.185"/>
</kw>
<status status="PASS" starttime="20211210 13:09:29.157" endtime="20211210 13:09:29.185"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:29.190" level="INFO">Running command 'ozone sh bucket create o3://om:9862/61669-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:33.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:33.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:09:29.188" endtime="20211210 13:09:33.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:33.068" level="INFO"/>
<status status="PASS" starttime="20211210 13:09:33.068" endtime="20211210 13:09:33.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:33.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:33.069" endtime="20211210 13:09:33.070"/>
</kw>
<status status="PASS" starttime="20211210 13:09:29.187" endtime="20211210 13:09:33.070"/>
</kw>
<msg timestamp="20211210 13:09:33.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:29.187" endtime="20211210 13:09:33.070"/>
</kw>
<status status="PASS" starttime="20211210 13:09:29.186" endtime="20211210 13:09:33.071"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:33.074" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/61669-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:37.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:37.198" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211210 13:09:33.073" endtime="20211210 13:09:37.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:37.200" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:09:37.199" endtime="20211210 13:09:37.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:37.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:37.200" endtime="20211210 13:09:37.201"/>
</kw>
<status status="PASS" starttime="20211210 13:09:33.072" endtime="20211210 13:09:37.201"/>
</kw>
<msg timestamp="20211210 13:09:37.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:33.072" endtime="20211210 13:09:37.202"/>
</kw>
<msg timestamp="20211210 13:09:37.202" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211210 13:09:33.071" endtime="20211210 13:09:37.202"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:09:37.202" endtime="20211210 13:09:37.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:37.207" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/61669-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:41.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:41.697" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211210 13:09:37.205" endtime="20211210 13:09:41.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:41.698" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211210 13:09:41.698" endtime="20211210 13:09:41.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:41.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:41.699" endtime="20211210 13:09:41.700"/>
</kw>
<status status="PASS" starttime="20211210 13:09:37.204" endtime="20211210 13:09:41.700"/>
</kw>
<msg timestamp="20211210 13:09:41.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:37.204" endtime="20211210 13:09:41.700"/>
</kw>
<msg timestamp="20211210 13:09:41.701" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211210 13:09:37.203" endtime="20211210 13:09:41.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:41.710" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/61669-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:46.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:46.099" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211210 13:09:41.704" endtime="20211210 13:09:46.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:46.101" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:09:46.100" endtime="20211210 13:09:46.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:46.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:46.101" endtime="20211210 13:09:46.102"/>
</kw>
<status status="PASS" starttime="20211210 13:09:41.702" endtime="20211210 13:09:46.102"/>
</kw>
<msg timestamp="20211210 13:09:46.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:41.702" endtime="20211210 13:09:46.102"/>
</kw>
<msg timestamp="20211210 13:09:46.103" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211210 13:09:41.701" endtime="20211210 13:09:46.103"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:09:46.103" endtime="20211210 13:09:46.104"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:46.108" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/61669-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:50.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:50.482" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:09:46.106" endtime="20211210 13:09:50.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:50.483" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:09:50.482" endtime="20211210 13:09:50.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:50.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:50.483" endtime="20211210 13:09:50.484"/>
</kw>
<status status="PASS" starttime="20211210 13:09:46.106" endtime="20211210 13:09:50.485"/>
</kw>
<msg timestamp="20211210 13:09:50.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:46.105" endtime="20211210 13:09:50.485"/>
</kw>
<msg timestamp="20211210 13:09:50.485" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:09:46.104" endtime="20211210 13:09:50.485"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:50.489" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/61669-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:54.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:54.585" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211210 13:09:50.487" endtime="20211210 13:09:54.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:54.587" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:09:54.586" endtime="20211210 13:09:54.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:54.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:54.587" endtime="20211210 13:09:54.588"/>
</kw>
<status status="PASS" starttime="20211210 13:09:50.486" endtime="20211210 13:09:54.588"/>
</kw>
<msg timestamp="20211210 13:09:54.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:50.486" endtime="20211210 13:09:54.589"/>
</kw>
<msg timestamp="20211210 13:09:54.589" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211210 13:09:50.485" endtime="20211210 13:09:54.589"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:09:54.589" endtime="20211210 13:09:54.591"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:54.595" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/61669-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:09:58.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:09:58.484" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:09:54.593" endtime="20211210 13:09:58.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:09:58.485" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:09:58.484" endtime="20211210 13:09:58.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:09:58.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:09:58.485" endtime="20211210 13:09:58.486"/>
</kw>
<status status="PASS" starttime="20211210 13:09:54.592" endtime="20211210 13:09:58.486"/>
</kw>
<msg timestamp="20211210 13:09:58.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:54.592" endtime="20211210 13:09:58.487"/>
</kw>
<msg timestamp="20211210 13:09:58.487" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:09:54.591" endtime="20211210 13:09:58.487"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:09:58.491" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/61669-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:02.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:02.800" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211210 13:09:58.489" endtime="20211210 13:10:02.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:02.802" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:10:02.801" endtime="20211210 13:10:02.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:02.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:02.802" endtime="20211210 13:10:02.803"/>
</kw>
<status status="PASS" starttime="20211210 13:09:58.488" endtime="20211210 13:10:02.803"/>
</kw>
<msg timestamp="20211210 13:10:02.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:09:58.488" endtime="20211210 13:10:02.804"/>
</kw>
<msg timestamp="20211210 13:10:02.804" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211210 13:09:58.487" endtime="20211210 13:10:02.804"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:10:02.804" endtime="20211210 13:10:02.805"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:10:02.805" endtime="20211210 13:10:02.805"/>
</kw>
<status status="PASS" starttime="20211210 13:09:29.186" endtime="20211210 13:10:02.806"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:09:29.156" endtime="20211210 13:10:02.806"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:02.813" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:02.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:02.816" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:10:02.810" endtime="20211210 13:10:02.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:02.817" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:10:02.817" endtime="20211210 13:10:02.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:02.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:02.818" endtime="20211210 13:10:02.818"/>
</kw>
<status status="PASS" starttime="20211210 13:10:02.810" endtime="20211210 13:10:02.819"/>
</kw>
<msg timestamp="20211210 13:10:02.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:02.809" endtime="20211210 13:10:02.819"/>
</kw>
<msg timestamp="20211210 13:10:02.819" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:10:02.809" endtime="20211210 13:10:02.819"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:10:02.820" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:10:02.820" endtime="20211210 13:10:02.820"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:02.826" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:02.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:02.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:10:02.823" endtime="20211210 13:10:02.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:02.833" level="INFO"/>
<status status="PASS" starttime="20211210 13:10:02.833" endtime="20211210 13:10:02.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:02.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:02.834" endtime="20211210 13:10:02.834"/>
</kw>
<status status="PASS" starttime="20211210 13:10:02.822" endtime="20211210 13:10:02.835"/>
</kw>
<msg timestamp="20211210 13:10:02.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:02.822" endtime="20211210 13:10:02.835"/>
</kw>
<status status="PASS" starttime="20211210 13:10:02.821" endtime="20211210 13:10:02.836"/>
</kw>
<status status="PASS" starttime="20211210 13:10:02.821" endtime="20211210 13:10:02.836"/>
</kw>
<status status="PASS" starttime="20211210 13:10:02.808" endtime="20211210 13:10:02.836"/>
</kw>
<status status="PASS" starttime="20211210 13:10:02.808" endtime="20211210 13:10:02.836"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:02.841" level="INFO">Running command 'ozone sh key put o3://om:9862/61669-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:09.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:09.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:10:02.839" endtime="20211210 13:10:09.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:09.620" level="INFO"/>
<status status="PASS" starttime="20211210 13:10:09.619" endtime="20211210 13:10:09.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:09.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:09.621" endtime="20211210 13:10:09.621"/>
</kw>
<status status="PASS" starttime="20211210 13:10:02.838" endtime="20211210 13:10:09.622"/>
</kw>
<msg timestamp="20211210 13:10:09.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:02.838" endtime="20211210 13:10:09.622"/>
</kw>
<status status="PASS" starttime="20211210 13:10:02.837" endtime="20211210 13:10:09.622"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:09.626" level="INFO">Running command 'ozone sh key getacl o3://om:9862/61669-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:13.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:13.963" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:10:09.624" endtime="20211210 13:10:13.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:13.965" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:10:13.964" endtime="20211210 13:10:13.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:13.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:13.965" endtime="20211210 13:10:13.966"/>
</kw>
<status status="PASS" starttime="20211210 13:10:09.624" endtime="20211210 13:10:13.966"/>
</kw>
<msg timestamp="20211210 13:10:13.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:09.623" endtime="20211210 13:10:13.967"/>
</kw>
<msg timestamp="20211210 13:10:13.967" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:10:09.623" endtime="20211210 13:10:13.967"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:10:13.967" endtime="20211210 13:10:13.968"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:13.972" level="INFO">Running command 'ozone sh key addacl o3://om:9862/61669-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:18.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:18.227" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:10:13.970" endtime="20211210 13:10:18.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:18.229" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:10:18.228" endtime="20211210 13:10:18.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:18.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:18.229" endtime="20211210 13:10:18.230"/>
</kw>
<status status="PASS" starttime="20211210 13:10:13.969" endtime="20211210 13:10:18.230"/>
</kw>
<msg timestamp="20211210 13:10:18.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:13.969" endtime="20211210 13:10:18.231"/>
</kw>
<msg timestamp="20211210 13:10:18.231" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:10:13.968" endtime="20211210 13:10:18.231"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:18.235" level="INFO">Running command 'ozone sh key getacl o3://om:9862/61669-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:22.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:22.516" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:10:18.233" endtime="20211210 13:10:22.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:22.517" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:10:22.516" endtime="20211210 13:10:22.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:22.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:22.517" endtime="20211210 13:10:22.518"/>
</kw>
<status status="PASS" starttime="20211210 13:10:18.232" endtime="20211210 13:10:22.518"/>
</kw>
<msg timestamp="20211210 13:10:22.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:18.232" endtime="20211210 13:10:22.519"/>
</kw>
<msg timestamp="20211210 13:10:22.519" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:10:18.231" endtime="20211210 13:10:22.519"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:10:22.519" endtime="20211210 13:10:22.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:22.524" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/61669-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:26.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:26.334" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:10:22.522" endtime="20211210 13:10:26.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:26.336" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:10:26.335" endtime="20211210 13:10:26.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:26.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:26.336" endtime="20211210 13:10:26.337"/>
</kw>
<status status="PASS" starttime="20211210 13:10:22.522" endtime="20211210 13:10:26.337"/>
</kw>
<msg timestamp="20211210 13:10:26.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:22.521" endtime="20211210 13:10:26.338"/>
</kw>
<msg timestamp="20211210 13:10:26.338" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:10:22.521" endtime="20211210 13:10:26.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:26.342" level="INFO">Running command 'ozone sh key getacl o3://om:9862/61669-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:30.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:30.593" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:10:26.340" endtime="20211210 13:10:30.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:30.595" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:10:30.594" endtime="20211210 13:10:30.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:30.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:30.595" endtime="20211210 13:10:30.596"/>
</kw>
<status status="PASS" starttime="20211210 13:10:26.340" endtime="20211210 13:10:30.596"/>
</kw>
<msg timestamp="20211210 13:10:30.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:26.339" endtime="20211210 13:10:30.596"/>
</kw>
<msg timestamp="20211210 13:10:30.597" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:10:26.338" endtime="20211210 13:10:30.597"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:10:30.597" endtime="20211210 13:10:30.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:30.603" level="INFO">Running command 'ozone sh key setacl o3://om:9862/61669-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:34.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:34.826" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:10:30.601" endtime="20211210 13:10:34.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:34.828" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:10:34.827" endtime="20211210 13:10:34.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:34.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:34.828" endtime="20211210 13:10:34.829"/>
</kw>
<status status="PASS" starttime="20211210 13:10:30.600" endtime="20211210 13:10:34.829"/>
</kw>
<msg timestamp="20211210 13:10:34.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:30.599" endtime="20211210 13:10:34.829"/>
</kw>
<msg timestamp="20211210 13:10:34.829" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:10:30.598" endtime="20211210 13:10:34.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:34.833" level="INFO">Running command 'ozone sh key getacl o3://om:9862/61669-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:39.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:39.063" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211210 13:10:34.831" endtime="20211210 13:10:39.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:39.064" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:10:39.063" endtime="20211210 13:10:39.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:39.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:39.065" endtime="20211210 13:10:39.065"/>
</kw>
<status status="PASS" starttime="20211210 13:10:34.831" endtime="20211210 13:10:39.066"/>
</kw>
<msg timestamp="20211210 13:10:39.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:34.830" endtime="20211210 13:10:39.066"/>
</kw>
<msg timestamp="20211210 13:10:39.066" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211210 13:10:34.830" endtime="20211210 13:10:39.066"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:10:39.067" endtime="20211210 13:10:39.067"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:10:39.067" endtime="20211210 13:10:39.068"/>
</kw>
<status status="PASS" starttime="20211210 13:10:02.836" endtime="20211210 13:10:39.069"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:10:02.807" endtime="20211210 13:10:39.069"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:39.076" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:39.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:39.080" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:10:39.074" endtime="20211210 13:10:39.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:39.081" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:10:39.080" endtime="20211210 13:10:39.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:39.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:39.082" endtime="20211210 13:10:39.082"/>
</kw>
<status status="PASS" starttime="20211210 13:10:39.073" endtime="20211210 13:10:39.083"/>
</kw>
<msg timestamp="20211210 13:10:39.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:39.072" endtime="20211210 13:10:39.083"/>
</kw>
<msg timestamp="20211210 13:10:39.083" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:10:39.072" endtime="20211210 13:10:39.083"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:10:39.084" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:10:39.083" endtime="20211210 13:10:39.084"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:39.089" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:39.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:39.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:10:39.087" endtime="20211210 13:10:39.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:39.097" level="INFO"/>
<status status="PASS" starttime="20211210 13:10:39.097" endtime="20211210 13:10:39.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:39.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:39.098" endtime="20211210 13:10:39.098"/>
</kw>
<status status="PASS" starttime="20211210 13:10:39.086" endtime="20211210 13:10:39.099"/>
</kw>
<msg timestamp="20211210 13:10:39.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:39.086" endtime="20211210 13:10:39.099"/>
</kw>
<status status="PASS" starttime="20211210 13:10:39.085" endtime="20211210 13:10:39.099"/>
</kw>
<status status="PASS" starttime="20211210 13:10:39.084" endtime="20211210 13:10:39.099"/>
</kw>
<status status="PASS" starttime="20211210 13:10:39.071" endtime="20211210 13:10:39.100"/>
</kw>
<status status="PASS" starttime="20211210 13:10:39.071" endtime="20211210 13:10:39.100"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:39.104" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/61669-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:43.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:43.379" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211210 13:10:39.102" endtime="20211210 13:10:43.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:43.381" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211210 13:10:43.380" endtime="20211210 13:10:43.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:43.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:43.381" endtime="20211210 13:10:43.382"/>
</kw>
<status status="PASS" starttime="20211210 13:10:39.102" endtime="20211210 13:10:43.382"/>
</kw>
<msg timestamp="20211210 13:10:43.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:39.101" endtime="20211210 13:10:43.382"/>
</kw>
<status status="PASS" starttime="20211210 13:10:39.101" endtime="20211210 13:10:43.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:43.387" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/61669-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:47.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:47.609" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211210 13:10:43.385" endtime="20211210 13:10:47.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:47.611" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:10:47.610" endtime="20211210 13:10:47.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:47.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:47.611" endtime="20211210 13:10:47.612"/>
</kw>
<status status="PASS" starttime="20211210 13:10:43.384" endtime="20211210 13:10:47.612"/>
</kw>
<msg timestamp="20211210 13:10:47.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:43.384" endtime="20211210 13:10:47.612"/>
</kw>
<msg timestamp="20211210 13:10:47.613" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211210 13:10:43.383" endtime="20211210 13:10:47.613"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:10:47.613" endtime="20211210 13:10:47.614"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:47.618" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/61669-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:51.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:51.773" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211210 13:10:47.616" endtime="20211210 13:10:51.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:51.774" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211210 13:10:51.773" endtime="20211210 13:10:51.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:51.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:51.774" endtime="20211210 13:10:51.775"/>
</kw>
<status status="PASS" starttime="20211210 13:10:47.615" endtime="20211210 13:10:51.775"/>
</kw>
<msg timestamp="20211210 13:10:51.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:47.615" endtime="20211210 13:10:51.776"/>
</kw>
<msg timestamp="20211210 13:10:51.776" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211210 13:10:47.614" endtime="20211210 13:10:51.776"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:51.780" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/61669-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:56.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:56.030" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211210 13:10:51.778" endtime="20211210 13:10:56.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:56.031" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:10:56.030" endtime="20211210 13:10:56.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:10:56.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:10:56.031" endtime="20211210 13:10:56.032"/>
</kw>
<status status="PASS" starttime="20211210 13:10:51.777" endtime="20211210 13:10:56.033"/>
</kw>
<msg timestamp="20211210 13:10:56.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:51.777" endtime="20211210 13:10:56.033"/>
</kw>
<msg timestamp="20211210 13:10:56.033" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211210 13:10:51.776" endtime="20211210 13:10:56.033"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:10:56.033" endtime="20211210 13:10:56.034"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:10:56.038" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/61669-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:10:59.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:10:59.998" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:10:56.036" endtime="20211210 13:10:59.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:10:59.999" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:10:59.998" endtime="20211210 13:10:59.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:00.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:00.000" endtime="20211210 13:11:00.000"/>
</kw>
<status status="PASS" starttime="20211210 13:10:56.036" endtime="20211210 13:11:00.001"/>
</kw>
<msg timestamp="20211210 13:11:00.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:10:56.035" endtime="20211210 13:11:00.001"/>
</kw>
<msg timestamp="20211210 13:11:00.002" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:10:56.034" endtime="20211210 13:11:00.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:00.013" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/61669-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:04.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:04.009" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211210 13:11:00.011" endtime="20211210 13:11:04.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:04.011" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:11:04.010" endtime="20211210 13:11:04.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:04.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:04.011" endtime="20211210 13:11:04.012"/>
</kw>
<status status="PASS" starttime="20211210 13:11:00.010" endtime="20211210 13:11:04.012"/>
</kw>
<msg timestamp="20211210 13:11:04.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:00.010" endtime="20211210 13:11:04.012"/>
</kw>
<msg timestamp="20211210 13:11:04.013" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211210 13:11:00.002" endtime="20211210 13:11:04.013"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:11:04.013" endtime="20211210 13:11:04.013"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:11:04.013" endtime="20211210 13:11:04.014"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:04.018" level="INFO">Running command 'ozone sh key put o3://om:9862/61669-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:10.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:10.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:11:04.016" endtime="20211210 13:11:10.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:10.492" level="INFO"/>
<status status="PASS" starttime="20211210 13:11:10.491" endtime="20211210 13:11:10.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:10.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:10.492" endtime="20211210 13:11:10.493"/>
</kw>
<status status="PASS" starttime="20211210 13:11:04.015" endtime="20211210 13:11:10.493"/>
</kw>
<msg timestamp="20211210 13:11:10.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:04.015" endtime="20211210 13:11:10.494"/>
</kw>
<status status="PASS" starttime="20211210 13:11:04.014" endtime="20211210 13:11:10.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:10.498" level="INFO">Running command 'ozone sh key getacl o3://om:9862/61669-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:14.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:14.817" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211210 13:11:10.496" endtime="20211210 13:11:14.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:14.819" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:11:14.818" endtime="20211210 13:11:14.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:14.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:14.819" endtime="20211210 13:11:14.820"/>
</kw>
<status status="PASS" starttime="20211210 13:11:10.495" endtime="20211210 13:11:14.820"/>
</kw>
<msg timestamp="20211210 13:11:14.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:10.495" endtime="20211210 13:11:14.820"/>
</kw>
<msg timestamp="20211210 13:11:14.821" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211210 13:11:10.494" endtime="20211210 13:11:14.821"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:11:14.821" endtime="20211210 13:11:14.822"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:11:14.822" endtime="20211210 13:11:14.822"/>
</kw>
<status status="PASS" starttime="20211210 13:10:39.100" endtime="20211210 13:11:14.822"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:10:39.070" endtime="20211210 13:11:14.823"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:14.829" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:14.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:14.833" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:11:14.827" endtime="20211210 13:11:14.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:14.835" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:11:14.834" endtime="20211210 13:11:14.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:14.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:14.835" endtime="20211210 13:11:14.836"/>
</kw>
<status status="PASS" starttime="20211210 13:11:14.827" endtime="20211210 13:11:14.836"/>
</kw>
<msg timestamp="20211210 13:11:14.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:14.826" endtime="20211210 13:11:14.837"/>
</kw>
<msg timestamp="20211210 13:11:14.837" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:11:14.826" endtime="20211210 13:11:14.837"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:11:14.838" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:11:14.838" endtime="20211210 13:11:14.838"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:14.843" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:14.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:14.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:11:14.841" endtime="20211210 13:11:14.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:14.855" level="INFO"/>
<status status="PASS" starttime="20211210 13:11:14.854" endtime="20211210 13:11:14.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:14.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:14.856" endtime="20211210 13:11:14.856"/>
</kw>
<status status="PASS" starttime="20211210 13:11:14.840" endtime="20211210 13:11:14.857"/>
</kw>
<msg timestamp="20211210 13:11:14.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:14.840" endtime="20211210 13:11:14.857"/>
</kw>
<status status="PASS" starttime="20211210 13:11:14.839" endtime="20211210 13:11:14.857"/>
</kw>
<status status="PASS" starttime="20211210 13:11:14.838" endtime="20211210 13:11:14.857"/>
</kw>
<status status="PASS" starttime="20211210 13:11:14.825" endtime="20211210 13:11:14.858"/>
</kw>
<status status="PASS" starttime="20211210 13:11:14.825" endtime="20211210 13:11:14.858"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:14.863" level="INFO">Running command 'ozone sh volume info o3:///61669-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:18.867" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:11:18.867" level="INFO">${output} = VOLUME_NOT_FOUND Volume 61669-without-host is not found</msg>
<status status="PASS" starttime="20211210 13:11:14.861" endtime="20211210 13:11:18.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:18.868" level="INFO">VOLUME_NOT_FOUND Volume 61669-without-host is not found</msg>
<status status="PASS" starttime="20211210 13:11:18.867" endtime="20211210 13:11:18.868"/>
</kw>
<msg timestamp="20211210 13:11:18.869" level="INFO">${result} = VOLUME_NOT_FOUND Volume 61669-without-host is not found</msg>
<status status="PASS" starttime="20211210 13:11:14.860" endtime="20211210 13:11:18.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:11:18.869" endtime="20211210 13:11:18.869"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:18.873" level="INFO">Running command 'ozone sh volume create o3:///61669-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:22.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:22.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:11:18.871" endtime="20211210 13:11:22.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:22.895" level="INFO"/>
<status status="PASS" starttime="20211210 13:11:22.894" endtime="20211210 13:11:22.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:22.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:22.895" endtime="20211210 13:11:22.896"/>
</kw>
<status status="PASS" starttime="20211210 13:11:18.871" endtime="20211210 13:11:22.896"/>
</kw>
<msg timestamp="20211210 13:11:22.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:18.870" endtime="20211210 13:11:22.897"/>
</kw>
<msg timestamp="20211210 13:11:22.897" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:11:18.870" endtime="20211210 13:11:22.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:11:22.897" endtime="20211210 13:11:22.898"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:22.902" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="61669-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:27.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:27.149" level="INFO">${output} = {
  "metadata": {},
  "name": "61669-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20211210 13:11:22.900" endtime="20211210 13:11:27.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:27.150" level="INFO">{
  "metadata": {},
  "name": "61669-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-12-10T13:11:22.687Z",
  "modificationTime": "2021-12-10T13:11:22.687Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211210 13:11:27.150" endtime="20211210 13:11:27.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:27.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:27.151" endtime="20211210 13:11:27.151"/>
</kw>
<status status="PASS" starttime="20211210 13:11:22.899" endtime="20211210 13:11:27.152"/>
</kw>
<msg timestamp="20211210 13:11:27.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:22.899" endtime="20211210 13:11:27.152"/>
</kw>
<msg timestamp="20211210 13:11:27.153" level="INFO">${result} = {
  "metadata": {},
  "name": "61669-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20211210 13:11:22.898" endtime="20211210 13:11:27.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:11:27.153" endtime="20211210 13:11:27.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:27.157" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="61669-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:31.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:31.532" level="INFO">${output} = {
  "metadata": {},
  "name": "61669-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20211210 13:11:27.155" endtime="20211210 13:11:31.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:31.534" level="INFO">{
  "metadata": {},
  "name": "61669-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-12-10T13:11:22.687Z",
  "modificationTime": "2021-12-10T13:11:22.687Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211210 13:11:31.533" endtime="20211210 13:11:31.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:31.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:31.534" endtime="20211210 13:11:31.535"/>
</kw>
<status status="PASS" starttime="20211210 13:11:27.154" endtime="20211210 13:11:31.535"/>
</kw>
<msg timestamp="20211210 13:11:31.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:27.154" endtime="20211210 13:11:31.535"/>
</kw>
<msg timestamp="20211210 13:11:31.536" level="INFO">${result} = {
  "metadata": {},
  "name": "61669-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20211210 13:11:27.153" endtime="20211210 13:11:31.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:11:31.536" endtime="20211210 13:11:31.536"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:31.540" level="INFO">Running command 'ozone sh volume setquota o3:///61669-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:35.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:35.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:11:31.538" endtime="20211210 13:11:35.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:35.654" level="INFO"/>
<status status="PASS" starttime="20211210 13:11:35.652" endtime="20211210 13:11:35.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:35.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:35.654" endtime="20211210 13:11:35.655"/>
</kw>
<status status="PASS" starttime="20211210 13:11:31.538" endtime="20211210 13:11:35.655"/>
</kw>
<msg timestamp="20211210 13:11:35.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:31.537" endtime="20211210 13:11:35.655"/>
</kw>
<status status="PASS" starttime="20211210 13:11:31.537" endtime="20211210 13:11:35.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:35.660" level="INFO">Running command 'ozone sh volume info o3:///61669-without-host | jq -r '. | select(.name=="61669-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:39.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:39.930" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:11:35.658" endtime="20211210 13:11:39.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:39.932" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211210 13:11:39.931" endtime="20211210 13:11:39.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:39.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:39.932" endtime="20211210 13:11:39.933"/>
</kw>
<status status="PASS" starttime="20211210 13:11:35.657" endtime="20211210 13:11:39.933"/>
</kw>
<msg timestamp="20211210 13:11:39.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:35.657" endtime="20211210 13:11:39.933"/>
</kw>
<msg timestamp="20211210 13:11:39.934" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:11:35.656" endtime="20211210 13:11:39.934"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:11:39.934" endtime="20211210 13:11:39.934"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:39.938" level="INFO">Running command 'ozone sh bucket create o3:///61669-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:44.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:44.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:11:39.936" endtime="20211210 13:11:44.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:44.015" level="INFO"/>
<status status="PASS" starttime="20211210 13:11:44.014" endtime="20211210 13:11:44.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:44.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:44.016" endtime="20211210 13:11:44.016"/>
</kw>
<status status="PASS" starttime="20211210 13:11:39.936" endtime="20211210 13:11:44.017"/>
</kw>
<msg timestamp="20211210 13:11:44.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:39.935" endtime="20211210 13:11:44.017"/>
</kw>
<status status="PASS" starttime="20211210 13:11:39.935" endtime="20211210 13:11:44.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:44.022" level="INFO">Running command 'ozone sh bucket info o3:///61669-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:48.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:48.128" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211210 13:11:44.020" endtime="20211210 13:11:48.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:48.130" level="INFO">DISK</msg>
<status status="PASS" starttime="20211210 13:11:48.129" endtime="20211210 13:11:48.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:48.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:48.130" endtime="20211210 13:11:48.131"/>
</kw>
<status status="PASS" starttime="20211210 13:11:44.020" endtime="20211210 13:11:48.131"/>
</kw>
<msg timestamp="20211210 13:11:48.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:44.019" endtime="20211210 13:11:48.131"/>
</kw>
<msg timestamp="20211210 13:11:48.132" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211210 13:11:44.018" endtime="20211210 13:11:48.132"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:11:48.132" endtime="20211210 13:11:48.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:48.137" level="INFO">Running command 'ozone sh bucket info o3:///61669-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:52.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:52.501" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:11:48.135" endtime="20211210 13:11:52.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:52.503" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211210 13:11:52.502" endtime="20211210 13:11:52.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:52.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:52.503" endtime="20211210 13:11:52.504"/>
</kw>
<status status="PASS" starttime="20211210 13:11:48.134" endtime="20211210 13:11:52.504"/>
</kw>
<msg timestamp="20211210 13:11:52.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:48.134" endtime="20211210 13:11:52.504"/>
</kw>
<msg timestamp="20211210 13:11:52.505" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211210 13:11:48.133" endtime="20211210 13:11:52.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:11:52.505" endtime="20211210 13:11:52.505"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:52.510" level="INFO">Running command 'ozone sh bucket info o3:///61669-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:11:56.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:11:56.943" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211210 13:11:52.508" endtime="20211210 13:11:56.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:11:56.944" level="INFO">100</msg>
<status status="PASS" starttime="20211210 13:11:56.943" endtime="20211210 13:11:56.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:11:56.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:11:56.944" endtime="20211210 13:11:56.945"/>
</kw>
<status status="PASS" starttime="20211210 13:11:52.507" endtime="20211210 13:11:56.945"/>
</kw>
<msg timestamp="20211210 13:11:56.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:52.507" endtime="20211210 13:11:56.946"/>
</kw>
<msg timestamp="20211210 13:11:56.946" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211210 13:11:52.506" endtime="20211210 13:11:56.946"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:11:56.946" endtime="20211210 13:11:56.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:11:56.950" level="INFO">Running command 'ozone sh bucket setquota o3:///61669-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:01.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:01.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:11:56.949" endtime="20211210 13:12:01.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:01.006" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:01.005" endtime="20211210 13:12:01.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:01.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:01.006" endtime="20211210 13:12:01.007"/>
</kw>
<status status="PASS" starttime="20211210 13:11:56.948" endtime="20211210 13:12:01.007"/>
</kw>
<msg timestamp="20211210 13:12:01.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:11:56.948" endtime="20211210 13:12:01.008"/>
</kw>
<status status="PASS" starttime="20211210 13:11:56.947" endtime="20211210 13:12:01.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:01.012" level="INFO">Running command 'ozone sh bucket info o3:///61669-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:05.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:05.279" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211210 13:12:01.010" endtime="20211210 13:12:05.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:05.281" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211210 13:12:05.280" endtime="20211210 13:12:05.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:05.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:05.281" endtime="20211210 13:12:05.282"/>
</kw>
<status status="PASS" starttime="20211210 13:12:01.010" endtime="20211210 13:12:05.282"/>
</kw>
<msg timestamp="20211210 13:12:05.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:01.009" endtime="20211210 13:12:05.282"/>
</kw>
<msg timestamp="20211210 13:12:05.283" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211210 13:12:01.008" endtime="20211210 13:12:05.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:12:05.283" endtime="20211210 13:12:05.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:05.290" level="INFO">Running command 'ozone sh bucket info o3:///61669-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:09.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:09.490" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211210 13:12:05.286" endtime="20211210 13:12:09.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:09.491" level="INFO">1000</msg>
<status status="PASS" starttime="20211210 13:12:09.490" endtime="20211210 13:12:09.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:09.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:09.491" endtime="20211210 13:12:09.492"/>
</kw>
<status status="PASS" starttime="20211210 13:12:05.286" endtime="20211210 13:12:09.492"/>
</kw>
<msg timestamp="20211210 13:12:09.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:05.285" endtime="20211210 13:12:09.493"/>
</kw>
<msg timestamp="20211210 13:12:09.493" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211210 13:12:05.284" endtime="20211210 13:12:09.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:12:09.493" endtime="20211210 13:12:09.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:09.498" level="INFO">Running command 'ozone sh bucket list o3:///61669-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:13.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:13.908" level="INFO">${output} = 61669-without-host</msg>
<status status="PASS" starttime="20211210 13:12:09.496" endtime="20211210 13:12:13.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:13.910" level="INFO">61669-without-host</msg>
<status status="PASS" starttime="20211210 13:12:13.909" endtime="20211210 13:12:13.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:13.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:13.910" endtime="20211210 13:12:13.911"/>
</kw>
<status status="PASS" starttime="20211210 13:12:09.495" endtime="20211210 13:12:13.911"/>
</kw>
<msg timestamp="20211210 13:12:13.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:09.495" endtime="20211210 13:12:13.911"/>
</kw>
<msg timestamp="20211210 13:12:13.912" level="INFO">${result} = 61669-without-host</msg>
<status status="PASS" starttime="20211210 13:12:09.494" endtime="20211210 13:12:13.912"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:12:13.912" endtime="20211210 13:12:13.913"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:13.918" level="INFO">Running command 'ozone sh key put o3:///61669-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:21.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:21.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:13.916" endtime="20211210 13:12:21.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:21.051" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:21.050" endtime="20211210 13:12:21.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:21.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:21.051" endtime="20211210 13:12:21.052"/>
</kw>
<status status="PASS" starttime="20211210 13:12:13.915" endtime="20211210 13:12:21.052"/>
</kw>
<msg timestamp="20211210 13:12:21.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:13.915" endtime="20211210 13:12:21.053"/>
</kw>
<status status="PASS" starttime="20211210 13:12:13.914" endtime="20211210 13:12:21.053"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:21.062" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:21.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:21.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:21.060" endtime="20211210 13:12:21.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:21.068" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:21.067" endtime="20211210 13:12:21.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:21.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:21.068" endtime="20211210 13:12:21.069"/>
</kw>
<status status="PASS" starttime="20211210 13:12:21.054" endtime="20211210 13:12:21.069"/>
</kw>
<msg timestamp="20211210 13:12:21.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:21.054" endtime="20211210 13:12:21.070"/>
</kw>
<status status="PASS" starttime="20211210 13:12:21.053" endtime="20211210 13:12:21.070"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:21.074" level="INFO">Running command 'ozone sh key get o3:///61669-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:27.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:27.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:21.072" endtime="20211210 13:12:27.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:27.402" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:27.401" endtime="20211210 13:12:27.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:27.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:27.402" endtime="20211210 13:12:27.403"/>
</kw>
<status status="PASS" starttime="20211210 13:12:21.071" endtime="20211210 13:12:27.403"/>
</kw>
<msg timestamp="20211210 13:12:27.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:21.071" endtime="20211210 13:12:27.404"/>
</kw>
<status status="PASS" starttime="20211210 13:12:21.070" endtime="20211210 13:12:27.404"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:27.408" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:27.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:27.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:27.406" endtime="20211210 13:12:27.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:27.412" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:27.411" endtime="20211210 13:12:27.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:27.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:27.412" endtime="20211210 13:12:27.413"/>
</kw>
<status status="PASS" starttime="20211210 13:12:27.405" endtime="20211210 13:12:27.413"/>
</kw>
<msg timestamp="20211210 13:12:27.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:27.405" endtime="20211210 13:12:27.413"/>
</kw>
<status status="PASS" starttime="20211210 13:12:27.404" endtime="20211210 13:12:27.414"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:27.417" level="INFO">Running command 'ozone sh key put -t RATIS o3:///61669-without-host/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:34.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:34.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:27.416" endtime="20211210 13:12:34.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:34.052" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:34.051" endtime="20211210 13:12:34.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:34.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:34.052" endtime="20211210 13:12:34.053"/>
</kw>
<status status="PASS" starttime="20211210 13:12:27.415" endtime="20211210 13:12:34.053"/>
</kw>
<msg timestamp="20211210 13:12:34.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:27.415" endtime="20211210 13:12:34.053"/>
</kw>
<status status="PASS" starttime="20211210 13:12:27.414" endtime="20211210 13:12:34.054"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:34.058" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:34.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:34.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:34.056" endtime="20211210 13:12:34.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:34.062" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:34.061" endtime="20211210 13:12:34.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:34.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:34.062" endtime="20211210 13:12:34.063"/>
</kw>
<status status="PASS" starttime="20211210 13:12:34.055" endtime="20211210 13:12:34.063"/>
</kw>
<msg timestamp="20211210 13:12:34.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:34.055" endtime="20211210 13:12:34.064"/>
</kw>
<status status="PASS" starttime="20211210 13:12:34.054" endtime="20211210 13:12:34.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:34.068" level="INFO">Running command 'ozone sh key get o3:///61669-without-host/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:40.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:40.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:34.066" endtime="20211210 13:12:40.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:40.493" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:40.492" endtime="20211210 13:12:40.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:40.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:40.493" endtime="20211210 13:12:40.494"/>
</kw>
<status status="PASS" starttime="20211210 13:12:34.065" endtime="20211210 13:12:40.494"/>
</kw>
<msg timestamp="20211210 13:12:40.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:34.065" endtime="20211210 13:12:40.494"/>
</kw>
<status status="PASS" starttime="20211210 13:12:34.064" endtime="20211210 13:12:40.495"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:40.498" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:40.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:40.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:40.496" endtime="20211210 13:12:40.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:40.502" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:40.501" endtime="20211210 13:12:40.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:40.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:40.502" endtime="20211210 13:12:40.503"/>
</kw>
<status status="PASS" starttime="20211210 13:12:40.496" endtime="20211210 13:12:40.504"/>
</kw>
<msg timestamp="20211210 13:12:40.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:40.495" endtime="20211210 13:12:40.504"/>
</kw>
<status status="PASS" starttime="20211210 13:12:40.495" endtime="20211210 13:12:40.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:40.508" level="INFO">Running command 'ozone sh key info o3:///61669-without-host/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:44.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:44.848" level="INFO">${output} = {
  "volumeName": "61669-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:12:31.392Z",
  "modificationTime": "2021-12-10T13:12:33.404...</msg>
<status status="PASS" starttime="20211210 13:12:40.507" endtime="20211210 13:12:44.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:44.849" level="INFO">{
  "volumeName": "61669-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:12:31.392Z",
  "modificationTime": "2021-12-10T13:12:33.404Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "replicationType": "RATIS",
  "replicationFactor": 3
}</msg>
<status status="PASS" starttime="20211210 13:12:44.848" endtime="20211210 13:12:44.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:44.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:44.849" endtime="20211210 13:12:44.850"/>
</kw>
<status status="PASS" starttime="20211210 13:12:40.506" endtime="20211210 13:12:44.850"/>
</kw>
<msg timestamp="20211210 13:12:44.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:40.505" endtime="20211210 13:12:44.851"/>
</kw>
<msg timestamp="20211210 13:12:44.851" level="INFO">${result} = {
  "volumeName": "61669-without-host",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:12:31.392Z",
  "modificationTime": "2021-12-10T13:12:33.404...</msg>
<status status="PASS" starttime="20211210 13:12:40.504" endtime="20211210 13:12:44.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:12:44.851" endtime="20211210 13:12:44.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:44.856" level="INFO">Running command 'ozone sh key delete o3:///61669-without-host/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:48.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:48.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:44.854" endtime="20211210 13:12:48.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:48.866" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:48.864" endtime="20211210 13:12:48.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:48.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:48.866" endtime="20211210 13:12:48.867"/>
</kw>
<status status="PASS" starttime="20211210 13:12:44.853" endtime="20211210 13:12:48.867"/>
</kw>
<msg timestamp="20211210 13:12:48.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:44.853" endtime="20211210 13:12:48.867"/>
</kw>
<status status="PASS" starttime="20211210 13:12:44.852" endtime="20211210 13:12:48.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:48.873" level="INFO">Running command 'ozone sh key cp o3:///61669-without-host/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:55.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:55.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:48.871" endtime="20211210 13:12:55.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:55.425" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:55.424" endtime="20211210 13:12:55.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:55.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:55.425" endtime="20211210 13:12:55.426"/>
</kw>
<status status="PASS" starttime="20211210 13:12:48.870" endtime="20211210 13:12:55.426"/>
</kw>
<msg timestamp="20211210 13:12:55.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:48.869" endtime="20211210 13:12:55.426"/>
</kw>
<status status="PASS" starttime="20211210 13:12:48.868" endtime="20211210 13:12:55.427"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:55.432" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:12:55.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:12:55.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:55.428" endtime="20211210 13:12:55.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:12:55.434" level="INFO"/>
<status status="PASS" starttime="20211210 13:12:55.433" endtime="20211210 13:12:55.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:12:55.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:12:55.434" endtime="20211210 13:12:55.435"/>
</kw>
<status status="PASS" starttime="20211210 13:12:55.428" endtime="20211210 13:12:55.435"/>
</kw>
<msg timestamp="20211210 13:12:55.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:55.427" endtime="20211210 13:12:55.436"/>
</kw>
<status status="PASS" starttime="20211210 13:12:55.427" endtime="20211210 13:12:55.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:12:55.439" level="INFO">Running command 'ozone sh key get o3:///61669-without-host/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:01.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:01.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:12:55.438" endtime="20211210 13:13:01.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:01.734" level="INFO"/>
<status status="PASS" starttime="20211210 13:13:01.733" endtime="20211210 13:13:01.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:01.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:01.734" endtime="20211210 13:13:01.736"/>
</kw>
<status status="PASS" starttime="20211210 13:12:55.437" endtime="20211210 13:13:01.736"/>
</kw>
<msg timestamp="20211210 13:13:01.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:12:55.437" endtime="20211210 13:13:01.737"/>
</kw>
<status status="PASS" starttime="20211210 13:12:55.436" endtime="20211210 13:13:01.737"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:01.741" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:01.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:01.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:13:01.739" endtime="20211210 13:13:01.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:01.745" level="INFO"/>
<status status="PASS" starttime="20211210 13:13:01.744" endtime="20211210 13:13:01.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:01.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:01.745" endtime="20211210 13:13:01.746"/>
</kw>
<status status="PASS" starttime="20211210 13:13:01.738" endtime="20211210 13:13:01.746"/>
</kw>
<msg timestamp="20211210 13:13:01.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:01.738" endtime="20211210 13:13:01.746"/>
</kw>
<status status="PASS" starttime="20211210 13:13:01.737" endtime="20211210 13:13:01.746"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:01.750" level="INFO">Running command 'ozone sh key delete o3:///61669-without-host/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:05.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:05.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:13:01.748" endtime="20211210 13:13:05.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:05.786" level="INFO"/>
<status status="PASS" starttime="20211210 13:13:05.785" endtime="20211210 13:13:05.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:05.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:05.786" endtime="20211210 13:13:05.787"/>
</kw>
<status status="PASS" starttime="20211210 13:13:01.748" endtime="20211210 13:13:05.787"/>
</kw>
<msg timestamp="20211210 13:13:05.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:01.747" endtime="20211210 13:13:05.787"/>
</kw>
<status status="PASS" starttime="20211210 13:13:01.747" endtime="20211210 13:13:05.788"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:05.791" level="INFO">Running command 'ozone sh key get o3:///61669-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:09.627" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:13:09.627" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20211210 13:13:05.789" endtime="20211210 13:13:09.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:09.628" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20211210 13:13:09.628" endtime="20211210 13:13:09.629"/>
</kw>
<msg timestamp="20211210 13:13:09.629" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20211210 13:13:05.788" endtime="20211210 13:13:09.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:13:09.629" endtime="20211210 13:13:09.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:09.634" level="INFO">Running command 'ozone sh key get --force o3:///61669-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:16.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:16.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:13:09.632" endtime="20211210 13:13:16.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:16.181" level="INFO"/>
<status status="PASS" starttime="20211210 13:13:16.179" endtime="20211210 13:13:16.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:16.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:16.181" endtime="20211210 13:13:16.182"/>
</kw>
<status status="PASS" starttime="20211210 13:13:09.631" endtime="20211210 13:13:16.182"/>
</kw>
<msg timestamp="20211210 13:13:16.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:09.631" endtime="20211210 13:13:16.182"/>
</kw>
<msg timestamp="20211210 13:13:16.183" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:13:09.630" endtime="20211210 13:13:16.183"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:13:16.183" endtime="20211210 13:13:16.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:16.189" level="INFO">Running command 'ozone sh key info o3:///61669-without-host/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:20.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:20.531" level="INFO">${output} = {
  "volumeName": "61669-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:12:18.257Z",
  "modificationTime": "2021-12-10T13:12:20.396Z",
  ...</msg>
<status status="PASS" starttime="20211210 13:13:16.186" endtime="20211210 13:13:20.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:20.533" level="INFO">{
  "volumeName": "61669-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:12:18.257Z",
  "modificationTime": "2021-12-10T13:12:20.396Z",
  "replicationConfig": {
    "replicationFactor": "THREE",
    "requiredNodes": 3,
    "replicationType": "RATIS"
  },
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "replicationType": "RATIS",
  "replicationFactor": 3
}</msg>
<status status="PASS" starttime="20211210 13:13:20.532" endtime="20211210 13:13:20.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:20.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:20.533" endtime="20211210 13:13:20.534"/>
</kw>
<status status="PASS" starttime="20211210 13:13:16.185" endtime="20211210 13:13:20.534"/>
</kw>
<msg timestamp="20211210 13:13:20.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:16.185" endtime="20211210 13:13:20.534"/>
</kw>
<msg timestamp="20211210 13:13:20.535" level="INFO">${result} = {
  "volumeName": "61669-without-host",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-12-10T13:12:18.257Z",
  "modificationTime": "2021-12-10T13:12:20.396Z",
  ...</msg>
<status status="PASS" starttime="20211210 13:13:16.184" endtime="20211210 13:13:20.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:13:20.535" endtime="20211210 13:13:20.535"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:20.540" level="INFO">Running command 'ozone sh key list o3:///61669-without-host/bb1 | jq -r '.[] | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:24.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:24.918" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211210 13:13:20.538" endtime="20211210 13:13:24.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:24.919" level="INFO">key1</msg>
<status status="PASS" starttime="20211210 13:13:24.919" endtime="20211210 13:13:24.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:24.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:24.920" endtime="20211210 13:13:24.920"/>
</kw>
<status status="PASS" starttime="20211210 13:13:20.537" endtime="20211210 13:13:24.921"/>
</kw>
<msg timestamp="20211210 13:13:24.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:20.537" endtime="20211210 13:13:24.921"/>
</kw>
<msg timestamp="20211210 13:13:24.921" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20211210 13:13:20.536" endtime="20211210 13:13:24.921"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:13:24.922" endtime="20211210 13:13:24.922"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:24.926" level="INFO">Running command 'ozone sh key rename o3:///61669-without-host/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:28.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:28.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:13:24.924" endtime="20211210 13:13:28.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:28.941" level="INFO"/>
<status status="PASS" starttime="20211210 13:13:28.940" endtime="20211210 13:13:28.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:28.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:28.941" endtime="20211210 13:13:28.942"/>
</kw>
<status status="PASS" starttime="20211210 13:13:24.923" endtime="20211210 13:13:28.942"/>
</kw>
<msg timestamp="20211210 13:13:28.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:24.923" endtime="20211210 13:13:28.943"/>
</kw>
<status status="PASS" starttime="20211210 13:13:24.922" endtime="20211210 13:13:28.943"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:28.947" level="INFO">Running command 'ozone sh key list o3:///61669-without-host/bb1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:33.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:33.092" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20211210 13:13:28.945" endtime="20211210 13:13:33.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:33.093" level="INFO">key2</msg>
<status status="PASS" starttime="20211210 13:13:33.092" endtime="20211210 13:13:33.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:33.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:33.093" endtime="20211210 13:13:33.094"/>
</kw>
<status status="PASS" starttime="20211210 13:13:28.944" endtime="20211210 13:13:33.095"/>
</kw>
<msg timestamp="20211210 13:13:33.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:28.944" endtime="20211210 13:13:33.095"/>
</kw>
<msg timestamp="20211210 13:13:33.095" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20211210 13:13:28.943" endtime="20211210 13:13:33.095"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:13:33.095" endtime="20211210 13:13:33.096"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:33.100" level="INFO">Running command 'ozone sh key delete o3:///61669-without-host/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:36.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:36.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:13:33.098" endtime="20211210 13:13:36.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:36.945" level="INFO"/>
<status status="PASS" starttime="20211210 13:13:36.944" endtime="20211210 13:13:36.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:36.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:36.946" endtime="20211210 13:13:36.946"/>
</kw>
<status status="PASS" starttime="20211210 13:13:33.097" endtime="20211210 13:13:36.947"/>
</kw>
<msg timestamp="20211210 13:13:36.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:33.097" endtime="20211210 13:13:36.947"/>
</kw>
<status status="PASS" starttime="20211210 13:13:33.096" endtime="20211210 13:13:36.947"/>
</kw>
<status status="PASS" starttime="20211210 13:12:13.913" endtime="20211210 13:13:36.947"/>
</kw>
<status status="PASS" starttime="20211210 13:12:13.913" endtime="20211210 13:13:36.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:36.951" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///61669-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:41.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:41.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:13:36.949" endtime="20211210 13:13:41.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:41.069" level="INFO"/>
<status status="PASS" starttime="20211210 13:13:41.068" endtime="20211210 13:13:41.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:41.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:41.069" endtime="20211210 13:13:41.070"/>
</kw>
<status status="PASS" starttime="20211210 13:13:36.949" endtime="20211210 13:13:41.070"/>
</kw>
<msg timestamp="20211210 13:13:41.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:36.948" endtime="20211210 13:13:41.071"/>
</kw>
<status status="PASS" starttime="20211210 13:13:36.948" endtime="20211210 13:13:41.071"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:41.075" level="INFO">Running command 'ozone sh volume info o3:///61669-without-host | jq -r '. | select(.name=="61669-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:45.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:45.469" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:13:41.073" endtime="20211210 13:13:45.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:45.470" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:13:45.469" endtime="20211210 13:13:45.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:45.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:45.471" endtime="20211210 13:13:45.471"/>
</kw>
<status status="PASS" starttime="20211210 13:13:41.073" endtime="20211210 13:13:45.472"/>
</kw>
<msg timestamp="20211210 13:13:45.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:41.072" endtime="20211210 13:13:45.472"/>
</kw>
<msg timestamp="20211210 13:13:45.473" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:13:41.071" endtime="20211210 13:13:45.473"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:13:45.473" endtime="20211210 13:13:45.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:45.478" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///61669-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:49.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:49.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:13:45.476" endtime="20211210 13:13:49.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:49.634" level="INFO"/>
<status status="PASS" starttime="20211210 13:13:49.633" endtime="20211210 13:13:49.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:49.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:49.634" endtime="20211210 13:13:49.635"/>
</kw>
<status status="PASS" starttime="20211210 13:13:45.475" endtime="20211210 13:13:49.635"/>
</kw>
<msg timestamp="20211210 13:13:49.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:45.475" endtime="20211210 13:13:49.636"/>
</kw>
<status status="PASS" starttime="20211210 13:13:45.474" endtime="20211210 13:13:49.636"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:49.640" level="INFO">Running command 'ozone sh volume info o3:///61669-without-host | jq -r '. | select(.name=="61669-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:53.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:53.943" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:13:49.638" endtime="20211210 13:13:53.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:53.944" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:13:53.943" endtime="20211210 13:13:53.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:53.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:53.944" endtime="20211210 13:13:53.945"/>
</kw>
<status status="PASS" starttime="20211210 13:13:49.638" endtime="20211210 13:13:53.945"/>
</kw>
<msg timestamp="20211210 13:13:53.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:49.637" endtime="20211210 13:13:53.946"/>
</kw>
<msg timestamp="20211210 13:13:53.946" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:13:49.636" endtime="20211210 13:13:53.946"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:13:53.946" endtime="20211210 13:13:53.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:53.952" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///61669-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:13:57.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:13:57.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:13:53.950" endtime="20211210 13:13:57.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:13:57.815" level="INFO"/>
<status status="PASS" starttime="20211210 13:13:57.815" endtime="20211210 13:13:57.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:13:57.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:13:57.816" endtime="20211210 13:13:57.817"/>
</kw>
<status status="PASS" starttime="20211210 13:13:53.949" endtime="20211210 13:13:57.817"/>
</kw>
<msg timestamp="20211210 13:13:57.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:53.948" endtime="20211210 13:13:57.817"/>
</kw>
<status status="PASS" starttime="20211210 13:13:53.947" endtime="20211210 13:13:57.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:13:57.822" level="INFO">Running command 'ozone sh bucket info o3:///61669-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:02.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:02.216" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:13:57.820" endtime="20211210 13:14:02.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:02.217" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:14:02.217" endtime="20211210 13:14:02.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:02.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:02.218" endtime="20211210 13:14:02.219"/>
</kw>
<status status="PASS" starttime="20211210 13:13:57.819" endtime="20211210 13:14:02.219"/>
</kw>
<msg timestamp="20211210 13:14:02.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:13:57.819" endtime="20211210 13:14:02.219"/>
</kw>
<msg timestamp="20211210 13:14:02.220" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:13:57.818" endtime="20211210 13:14:02.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:14:02.220" endtime="20211210 13:14:02.220"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:02.225" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///61669-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:06.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:06.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:14:02.222" endtime="20211210 13:14:06.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:06.313" level="INFO"/>
<status status="PASS" starttime="20211210 13:14:06.313" endtime="20211210 13:14:06.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:06.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:06.314" endtime="20211210 13:14:06.314"/>
</kw>
<status status="PASS" starttime="20211210 13:14:02.222" endtime="20211210 13:14:06.315"/>
</kw>
<msg timestamp="20211210 13:14:06.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:02.221" endtime="20211210 13:14:06.315"/>
</kw>
<status status="PASS" starttime="20211210 13:14:02.220" endtime="20211210 13:14:06.315"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:06.320" level="INFO">Running command 'ozone sh bucket info o3:///61669-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:10.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:10.381" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:14:06.318" endtime="20211210 13:14:10.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:10.383" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:14:10.382" endtime="20211210 13:14:10.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:10.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:10.383" endtime="20211210 13:14:10.384"/>
</kw>
<status status="PASS" starttime="20211210 13:14:06.317" endtime="20211210 13:14:10.384"/>
</kw>
<msg timestamp="20211210 13:14:10.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:06.317" endtime="20211210 13:14:10.384"/>
</kw>
<msg timestamp="20211210 13:14:10.385" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:14:06.316" endtime="20211210 13:14:10.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:14:10.385" endtime="20211210 13:14:10.386"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:10.390" level="INFO">Running command 'ozone sh bucket delete o3:///61669-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:14.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:14.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:14:10.388" endtime="20211210 13:14:14.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:14.353" level="INFO"/>
<status status="PASS" starttime="20211210 13:14:14.352" endtime="20211210 13:14:14.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:14.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:14.353" endtime="20211210 13:14:14.354"/>
</kw>
<status status="PASS" starttime="20211210 13:14:10.387" endtime="20211210 13:14:14.354"/>
</kw>
<msg timestamp="20211210 13:14:14.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:10.387" endtime="20211210 13:14:14.355"/>
</kw>
<status status="PASS" starttime="20211210 13:14:10.386" endtime="20211210 13:14:14.355"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:14.359" level="INFO">Running command 'ozone sh volume delete o3:///61669-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:18.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:18.693" level="INFO">${output} = Volume 61669-without-host is deleted</msg>
<status status="PASS" starttime="20211210 13:14:14.357" endtime="20211210 13:14:18.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:18.694" level="INFO">Volume 61669-without-host is deleted</msg>
<status status="PASS" starttime="20211210 13:14:18.693" endtime="20211210 13:14:18.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:18.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:18.694" endtime="20211210 13:14:18.695"/>
</kw>
<status status="PASS" starttime="20211210 13:14:14.356" endtime="20211210 13:14:18.696"/>
</kw>
<msg timestamp="20211210 13:14:18.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:14.356" endtime="20211210 13:14:18.696"/>
</kw>
<status status="PASS" starttime="20211210 13:14:14.355" endtime="20211210 13:14:18.696"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:18.700" level="INFO">Running command 'ozone sh volume create o3:///61669-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:22.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:22.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:14:18.698" endtime="20211210 13:14:22.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:22.808" level="INFO"/>
<status status="PASS" starttime="20211210 13:14:22.808" endtime="20211210 13:14:22.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:22.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:22.809" endtime="20211210 13:14:22.809"/>
</kw>
<status status="PASS" starttime="20211210 13:14:18.697" endtime="20211210 13:14:22.810"/>
</kw>
<msg timestamp="20211210 13:14:22.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:18.697" endtime="20211210 13:14:22.810"/>
</kw>
<status status="PASS" starttime="20211210 13:14:18.696" endtime="20211210 13:14:22.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:22.815" level="INFO">Running command 'ozone sh volume info o3:///61669-without-host | jq -r '. | select(.name=="61669-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:27.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:27.731" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:14:22.813" endtime="20211210 13:14:27.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:27.732" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:14:27.731" endtime="20211210 13:14:27.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:27.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:27.732" endtime="20211210 13:14:27.733"/>
</kw>
<status status="PASS" starttime="20211210 13:14:22.812" endtime="20211210 13:14:27.733"/>
</kw>
<msg timestamp="20211210 13:14:27.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:22.812" endtime="20211210 13:14:27.734"/>
</kw>
<msg timestamp="20211210 13:14:27.734" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:14:22.810" endtime="20211210 13:14:27.734"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:14:27.734" endtime="20211210 13:14:27.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:27.739" level="INFO">Running command 'ozone sh volume info o3:///61669-without-host | jq -r '. | select(.name=="61669-without-host") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:32.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:32.025" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:14:27.737" endtime="20211210 13:14:32.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:32.027" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:14:32.026" endtime="20211210 13:14:32.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:32.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:32.027" endtime="20211210 13:14:32.028"/>
</kw>
<status status="PASS" starttime="20211210 13:14:27.737" endtime="20211210 13:14:32.028"/>
</kw>
<msg timestamp="20211210 13:14:32.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:27.736" endtime="20211210 13:14:32.028"/>
</kw>
<msg timestamp="20211210 13:14:32.028" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:14:27.735" endtime="20211210 13:14:32.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:14:32.029" endtime="20211210 13:14:32.029"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:32.037" level="INFO">Running command 'ozone sh bucket create o3:///61669-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:36.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:36.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:14:32.032" endtime="20211210 13:14:36.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:36.354" level="INFO"/>
<status status="PASS" starttime="20211210 13:14:36.353" endtime="20211210 13:14:36.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:36.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:36.354" endtime="20211210 13:14:36.355"/>
</kw>
<status status="PASS" starttime="20211210 13:14:32.031" endtime="20211210 13:14:36.355"/>
</kw>
<msg timestamp="20211210 13:14:36.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:32.030" endtime="20211210 13:14:36.356"/>
</kw>
<status status="PASS" starttime="20211210 13:14:32.030" endtime="20211210 13:14:36.356"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:36.360" level="INFO">Running command 'ozone sh bucket info o3:///61669-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:40.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:40.720" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:14:36.358" endtime="20211210 13:14:40.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:40.721" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:14:40.721" endtime="20211210 13:14:40.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:40.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:40.722" endtime="20211210 13:14:40.722"/>
</kw>
<status status="PASS" starttime="20211210 13:14:36.357" endtime="20211210 13:14:40.723"/>
</kw>
<msg timestamp="20211210 13:14:40.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:36.357" endtime="20211210 13:14:40.723"/>
</kw>
<msg timestamp="20211210 13:14:40.723" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:14:36.356" endtime="20211210 13:14:40.723"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:14:40.724" endtime="20211210 13:14:40.724"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:40.728" level="INFO">Running command 'ozone sh bucket info o3:///61669-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:45.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:45.196" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20211210 13:14:40.726" endtime="20211210 13:14:45.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:45.197" level="INFO">-1</msg>
<status status="PASS" starttime="20211210 13:14:45.197" endtime="20211210 13:14:45.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:45.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:45.198" endtime="20211210 13:14:45.198"/>
</kw>
<status status="PASS" starttime="20211210 13:14:40.726" endtime="20211210 13:14:45.199"/>
</kw>
<msg timestamp="20211210 13:14:45.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:40.725" endtime="20211210 13:14:45.199"/>
</kw>
<msg timestamp="20211210 13:14:45.200" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20211210 13:14:40.724" endtime="20211210 13:14:45.200"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211210 13:14:45.200" endtime="20211210 13:14:45.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:45.204" level="INFO">Running command 'ozone sh bucket delete o3:///61669-without-host/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:48.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:48.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:14:45.202" endtime="20211210 13:14:48.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:48.941" level="INFO"/>
<status status="PASS" starttime="20211210 13:14:48.940" endtime="20211210 13:14:48.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:48.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:48.941" endtime="20211210 13:14:48.942"/>
</kw>
<status status="PASS" starttime="20211210 13:14:45.202" endtime="20211210 13:14:48.943"/>
</kw>
<msg timestamp="20211210 13:14:48.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:45.201" endtime="20211210 13:14:48.943"/>
</kw>
<status status="PASS" starttime="20211210 13:14:45.200" endtime="20211210 13:14:48.943"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:48.948" level="INFO">Running command 'ozone sh volume delete o3:///61669-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:52.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:52.747" level="INFO">${output} = Volume 61669-without-host is deleted</msg>
<status status="PASS" starttime="20211210 13:14:48.945" endtime="20211210 13:14:52.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:52.748" level="INFO">Volume 61669-without-host is deleted</msg>
<status status="PASS" starttime="20211210 13:14:52.748" endtime="20211210 13:14:52.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:52.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:52.749" endtime="20211210 13:14:52.749"/>
</kw>
<status status="PASS" starttime="20211210 13:14:48.944" endtime="20211210 13:14:52.750"/>
</kw>
<msg timestamp="20211210 13:14:52.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:48.944" endtime="20211210 13:14:52.750"/>
</kw>
<status status="PASS" starttime="20211210 13:14:48.943" endtime="20211210 13:14:52.750"/>
</kw>
<status status="PASS" starttime="20211210 13:11:14.858" endtime="20211210 13:14:52.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:11:14.824" endtime="20211210 13:14:52.751"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20211210 13:05:16.564" endtime="20211210 13:14:52.752"/>
</suite>
<status status="PASS" starttime="20211210 12:56:59.246" endtime="20211210 13:14:52.757"/>
</suite>
<suite id="s1-s2" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s2-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:57.990" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:57.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:57.993" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:14:57.986" endtime="20211210 13:14:57.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:57.995" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:14:57.994" endtime="20211210 13:14:57.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:57.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:57.995" endtime="20211210 13:14:57.996"/>
</kw>
<status status="PASS" starttime="20211210 13:14:57.985" endtime="20211210 13:14:57.996"/>
</kw>
<msg timestamp="20211210 13:14:57.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:57.985" endtime="20211210 13:14:57.996"/>
</kw>
<msg timestamp="20211210 13:14:57.997" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:14:57.985" endtime="20211210 13:14:57.997"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:14:57.999" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:14:57.997" endtime="20211210 13:14:57.999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:58.003" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:14:58.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:14:58.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:14:58.001" endtime="20211210 13:14:58.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:14:58.227" level="INFO"/>
<status status="PASS" starttime="20211210 13:14:58.225" endtime="20211210 13:14:58.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:14:58.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:14:58.227" endtime="20211210 13:14:58.228"/>
</kw>
<status status="PASS" starttime="20211210 13:14:58.000" endtime="20211210 13:14:58.229"/>
</kw>
<msg timestamp="20211210 13:14:58.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:58.000" endtime="20211210 13:14:58.229"/>
</kw>
<status status="PASS" starttime="20211210 13:14:57.999" endtime="20211210 13:14:58.229"/>
</kw>
<status status="PASS" starttime="20211210 13:14:57.999" endtime="20211210 13:14:58.229"/>
</kw>
<status status="PASS" starttime="20211210 13:14:57.984" endtime="20211210 13:14:58.230"/>
</kw>
<status status="PASS" starttime="20211210 13:14:57.984" endtime="20211210 13:14:58.230"/>
</kw>
<status status="PASS" starttime="20211210 13:14:57.983" endtime="20211210 13:14:58.230"/>
</kw>
<test id="s1-s2-s1-t1" name="List valid certificates">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:14:58.235" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:02.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:02.223" level="INFO">${output} = Total 6 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20211210 13:14:58.233" endtime="20211210 13:15:02.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:02.224" level="INFO">Total 6 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       
1                 Fri Dec 10 00:00:00 UTC 2021   Mon Jan 18 23:59:59 UTC 2027   O=CID-b584e6aa-c04d-42b2-a877-59f1fac1a3d7, OU=bce7646c-1b40-4614-a50c-eb17a5c5296e, CN=scm@scm               
227102042020      Fri Dec 10 00:00:00 UTC 2021   Mon Jan 18 00:00:00 UTC 2027   O=CID-b584e6aa-c04d-42b2-a877-59f1fac1a3d7, OU=bce7646c-1b40-4614-a50c-eb17a5c5296e, CN=scm-sub@scm           
237675308668      Fri Dec 10 00:00:00 UTC 2021   Sat Dec 10 00:00:00 UTC 2022   O=CID-b584e6aa-c04d-42b2-a877-59f1fac1a3d7, OU=bce7646c-1b40-4614-a50c-eb17a5c5296e, CN=root@9ce9b129d235     
237923409030      Fri Dec 10 00:00:00 UTC 2021   Sat Dec 10 00:00:00 UTC 2022   O=CID-b584e6aa-c04d-42b2-a877-59f1fac1a3d7, OU=bce7646c-1b40-4614-a50c-eb17a5c5296e, CN=root@44a475097613     
238084899870      Fri Dec 10 00:00:00 UTC 2021   Sat Dec 10 00:00:00 UTC 2022   O=CID-b584e6aa-c04d-42b2-a877-59f1fac1a3d7, OU=bce7646c-1b40-4614-a50c-eb17a5c5296e, CN=root@4ec1086c49bd     
244236172021      Fri Dec 10 00:00:00 UTC 2021   Sat Dec 10 00:00:00 UTC 2022   O=CID-b584e6aa-c04d-42b2-a877-59f1fac1a3d7, OU=bce7646c-1b40-4614-a50c-eb17a5c5296e, CN=om                    </msg>
<status status="PASS" starttime="20211210 13:15:02.224" endtime="20211210 13:15:02.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:02.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:02.225" endtime="20211210 13:15:02.226"/>
</kw>
<status status="PASS" starttime="20211210 13:14:58.232" endtime="20211210 13:15:02.226"/>
</kw>
<msg timestamp="20211210 13:15:02.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:14:58.232" endtime="20211210 13:15:02.226"/>
</kw>
<msg timestamp="20211210 13:15:02.227" level="INFO">${output} = Total 6 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20211210 13:14:58.231" endtime="20211210 13:15:02.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>valid certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:15:02.227" endtime="20211210 13:15:02.227"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:14:58.230" endtime="20211210 13:15:02.228"/>
</test>
<test id="s1-s2-s1-t2" name="List revoked certificates">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:02.233" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:05.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:05.710" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20211210 13:15:02.231" endtime="20211210 13:15:05.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:05.712" level="INFO">Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       </msg>
<status status="PASS" starttime="20211210 13:15:05.711" endtime="20211210 13:15:05.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:05.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:05.712" endtime="20211210 13:15:05.713"/>
</kw>
<status status="PASS" starttime="20211210 13:15:02.230" endtime="20211210 13:15:05.713"/>
</kw>
<msg timestamp="20211210 13:15:05.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:02.230" endtime="20211210 13:15:05.713"/>
</kw>
<msg timestamp="20211210 13:15:05.714" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20211210 13:15:02.229" endtime="20211210 13:15:05.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Total 0 revoked certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:15:05.714" endtime="20211210 13:15:05.714"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:15:02.228" endtime="20211210 13:15:05.715"/>
</test>
<test id="s1-s2-s1-t3" name="Info of the cert">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:05.720" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:13.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:13.089" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-b584e6aa-c04d-42b2-a877-59f1fac1a3d7, OU=bce7646c-1b40-4614-a50c-eb17a5c5296e, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20211210 13:15:05.718" endtime="20211210 13:15:13.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:13.091" level="INFO">Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-b584e6aa-c04d-42b2-a877-59f1fac1a3d7, OU=bce7646c-1b40-4614-a50c-eb17a5c5296e, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11

  Key:  Sun RSA public key, 2048 bits
  params: null
  modulus: 17720757872785052326380052171605202575270214900735579010300617301054898632634932152530870315773563232753114288561140346874201945148307065918438576897040932131592203598001498339499472246403468892690401172004212249849541622509129963244913006775687829550952275591286440323470848755984860172183814287844655685130175993857199163645622308570437335452603584378145100567892414995729728613283624431012166136266817984164547827474169601604075026668335280558886534628884088401019846934844709616415542196119451036444954798834913851876880828048750328029950798069962482260106231517227534079586174995390599744203768866782280023775707
  public exponent: 65537
  Validity: [From: Fri Dec 10 00:00:00 UTC 2021,
               To: Mon Jan 18 23:59:59 UTC 2027]
  Issuer: O=CID-b584e6aa-c04d-42b2-a877-59f1fac1a3d7, OU=bce7646c-1b40-4614-a50c-eb17a5c5296e, CN=scm@scm
  SerialNumber: [    01]

Certificate Extensions: 3
[1]: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

[2]: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  Key_CertSign
  Crl_Sign
]

[3]: ObjectId: 2.5.29.17 Criticality=false
SubjectAlternativeName [
  IPAddress: 172.18.0.7
]

]
  Algorithm: [SHA256withRSA]
  Signature:
0000: 39 A1 8C 49 3D E8 E9 05   CD 82 F3 94 88 F6 F8 A9  9..I=...........
0010: BD B0 2F 82 82 EF C9 49   89 B1 1F 9B CC BD DB 6C  ../....I.......l
0020: 52 A1 A2 81 7B 28 2E 92   F0 88 58 65 0C 3B 3D 5B  R....(....Xe.;=[
0030: D6 09 5E D0 6B C5 48 FA   C3 DE 3F C9 8A C1 EE CB  ..^.k.H...?.....
0040: 23 3C D5 7B 0E 18 98 F0   A8 0B B0 94 CB 12 B8 6D  #&lt;.............m
0050: 94 C3 89 08 B5 66 7E 75   A7 59 69 02 26 70 DA B1  .....f.u.Yi.&amp;p..
0060: 9F 8E D7 76 52 86 E5 0A   0F D4 D0 A8 C0 C7 00 1B  ...vR...........
0070: 74 EC 9B C9 A6 81 77 20   5D 4B CC B1 8D B2 B9 9C  t.....w ]K......
0080: CB 6B C1 9C 38 7B 57 94   F8 7F 5C C6 04 B8 AE 7B  .k..8.W...\.....
0090: 20 11 20 D0 8E FA 0B 5C   28 75 97 49 FF 93 72 20   . ....\(u.I..r 
00A0: A5 77 3E 44 F4 29 90 93   37 40 0C E3 1A 13 8D 31  .w&gt;D.)..7@.....1
00B0: 85 4E 1D 1E 98 3A 3C F8   E3 37 AA B0 94 68 98 23  .N...:&lt;..7...h.#
00C0: 9F 6F 6E B8 DF 42 52 25   9D 01 0F 84 7E 1C 4C CC  .on..BR%......L.
00D0: 59 BB 93 92 8E 38 22 32   54 D4 EB 5A 96 C4 C7 13  Y....8"2T..Z....
00E0: C5 1C 65 3D 4C A4 BF 51   8A D7 49 8A 06 CB 07 30  ..e=L..Q..I....0
00F0: 5F 41 39 DC 92 FA DC E3   80 1A CF B0 FF BC 17 D2  _A9.............

]</msg>
<status status="PASS" starttime="20211210 13:15:13.090" endtime="20211210 13:15:13.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:13.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:13.091" endtime="20211210 13:15:13.092"/>
</kw>
<status status="PASS" starttime="20211210 13:15:05.717" endtime="20211210 13:15:13.092"/>
</kw>
<msg timestamp="20211210 13:15:13.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:05.717" endtime="20211210 13:15:13.093"/>
</kw>
<msg timestamp="20211210 13:15:13.093" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-b584e6aa-c04d-42b2-a877-59f1fac1a3d7, OU=bce7646c-1b40-4614-a50c-eb17a5c5296e, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20211210 13:15:05.716" endtime="20211210 13:15:13.093"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:15:13.093" endtime="20211210 13:15:13.094"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:15:05.715" endtime="20211210 13:15:13.094"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20211210 13:14:57.942" endtime="20211210 13:15:13.096"/>
</suite>
<suite id="s1-s2-s2" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Create Random Volume" library="shell">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 13:15:13.109" level="INFO">${random} = izmvi</msg>
<status status="PASS" starttime="20211210 13:15:13.108" endtime="20211210 13:15:13.109"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:13.112" level="INFO">Running command 'ozone sh volume create o3://om/vol-izmvi 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:17.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:17.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:13.110" endtime="20211210 13:15:17.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:17.341" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:17.340" endtime="20211210 13:15:17.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:17.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:17.341" endtime="20211210 13:15:17.342"/>
</kw>
<status status="PASS" starttime="20211210 13:15:13.110" endtime="20211210 13:15:17.342"/>
</kw>
<msg timestamp="20211210 13:15:17.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:13.109" endtime="20211210 13:15:17.343"/>
</kw>
<status status="PASS" starttime="20211210 13:15:13.109" endtime="20211210 13:15:17.343"/>
</kw>
<msg timestamp="20211210 13:15:17.343" level="INFO">${volume} = vol-izmvi</msg>
<status status="PASS" starttime="20211210 13:15:13.108" endtime="20211210 13:15:17.343"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:15:17.344" level="INFO">${VOLUME} = vol-izmvi</msg>
<status status="PASS" starttime="20211210 13:15:17.344" endtime="20211210 13:15:17.344"/>
</kw>
<status status="PASS" starttime="20211210 13:15:13.107" endtime="20211210 13:15:17.345"/>
</kw>
<test id="s1-s2-s2-t1" name="Create Encrypted Bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:17.350" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-izmvi/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:22.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:22.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:17.348" endtime="20211210 13:15:22.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:22.009" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:22.008" endtime="20211210 13:15:22.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:22.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:22.009" endtime="20211210 13:15:22.010"/>
</kw>
<status status="PASS" starttime="20211210 13:15:17.347" endtime="20211210 13:15:22.010"/>
</kw>
<msg timestamp="20211210 13:15:22.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:17.347" endtime="20211210 13:15:22.010"/>
</kw>
<msg timestamp="20211210 13:15:22.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:17.346" endtime="20211210 13:15:22.011"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:15:22.011" endtime="20211210 13:15:22.012"/>
</kw>
<kw name="Bucket Exists" library="shell">
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:22.015" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-izmvi/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:26.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:26.507" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol-izmvi",
  "name" : "encrypted-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20211210 13:15:22.013" endtime="20211210 13:15:26.507"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20211210 13:15:26.508" endtime="20211210 13:15:26.508"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20211210 13:15:26.508" endtime="20211210 13:15:26.509"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20211210 13:15:26.509" endtime="20211210 13:15:26.510"/>
</kw>
<status status="PASS" starttime="20211210 13:15:22.012" endtime="20211210 13:15:26.510"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:15:17.345" endtime="20211210 13:15:26.510"/>
</test>
<test id="s1-s2-s2-t2" name="Create Key in Encrypted Bucket">
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20211210 13:15:26.512" level="INFO">${key} = o3://om/vol-izmvi/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20211210 13:15:26.512" endtime="20211210 13:15:26.513"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${key} /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:26.518" level="INFO">Running command 'ozone sh key put o3://om/vol-izmvi/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:33.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:33.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:26.516" endtime="20211210 13:15:33.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:33.653" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:33.652" endtime="20211210 13:15:33.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:33.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:33.653" endtime="20211210 13:15:33.654"/>
</kw>
<status status="PASS" starttime="20211210 13:15:26.515" endtime="20211210 13:15:33.654"/>
</kw>
<msg timestamp="20211210 13:15:33.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:26.514" endtime="20211210 13:15:33.654"/>
</kw>
<msg timestamp="20211210 13:15:33.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:26.513" endtime="20211210 13:15:33.654"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 13:15:33.657" level="INFO">${postfix} = 86752</msg>
<status status="PASS" starttime="20211210 13:15:33.656" endtime="20211210 13:15:33.657"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20211210 13:15:33.658" level="INFO">${tmpfile} = /tmp/tempkey-86752</msg>
<status status="PASS" starttime="20211210 13:15:33.657" endtime="20211210 13:15:33.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:33.662" level="INFO">Running command 'ozone sh key get o3://om/vol-izmvi/encrypted-bucket/passwd /tmp/tempkey-86752 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:40.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:40.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:33.660" endtime="20211210 13:15:40.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:40.051" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:40.051" endtime="20211210 13:15:40.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:40.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:40.052" endtime="20211210 13:15:40.053"/>
</kw>
<status status="PASS" starttime="20211210 13:15:33.659" endtime="20211210 13:15:40.053"/>
</kw>
<msg timestamp="20211210 13:15:40.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:33.658" endtime="20211210 13:15:40.053"/>
</kw>
<status status="PASS" starttime="20211210 13:15:33.658" endtime="20211210 13:15:40.054"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20211210 13:15:40.056" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-86752 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:40.058" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20211210 13:15:40.054" endtime="20211210 13:15:40.058"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:40.063" level="INFO">Running command 'rm -f /tmp/tempkey-86752 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:40.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:40.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:40.061" endtime="20211210 13:15:40.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:40.066" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:40.066" endtime="20211210 13:15:40.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:40.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:40.067" endtime="20211210 13:15:40.068"/>
</kw>
<status status="PASS" starttime="20211210 13:15:40.060" endtime="20211210 13:15:40.068"/>
</kw>
<msg timestamp="20211210 13:15:40.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:40.060" endtime="20211210 13:15:40.068"/>
</kw>
<status status="PASS" starttime="20211210 13:15:40.059" endtime="20211210 13:15:40.068"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20211210 13:15:40.069" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20211210 13:15:40.069" endtime="20211210 13:15:40.069"/>
</kw>
<msg timestamp="20211210 13:15:40.070" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20211210 13:15:33.655" endtime="20211210 13:15:40.070"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20211210 13:15:40.070" endtime="20211210 13:15:40.070"/>
</kw>
<status status="PASS" starttime="20211210 13:15:33.655" endtime="20211210 13:15:40.070"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:15:26.511" endtime="20211210 13:15:40.071"/>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20211210 13:15:13.098" endtime="20211210 13:15:40.073"/>
</suite>
<suite id="s1-s2-s3" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s2-s3-t1" name="Create volume bucket with wrong credentials">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:40.087" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:40.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:40.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:40.085" endtime="20211210 13:15:40.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:40.092" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:40.091" endtime="20211210 13:15:40.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:40.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:40.092" endtime="20211210 13:15:40.093"/>
</kw>
<status status="PASS" starttime="20211210 13:15:40.084" endtime="20211210 13:15:40.093"/>
</kw>
<msg timestamp="20211210 13:15:40.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:40.084" endtime="20211210 13:15:40.093"/>
</kw>
<status status="PASS" starttime="20211210 13:15:40.083" endtime="20211210 13:15:40.094"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:40.096" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:43.533" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:15:43.533" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20211210 13:15:40.094" endtime="20211210 13:15:43.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:15:43.534" endtime="20211210 13:15:43.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:15:40.082" endtime="20211210 13:15:43.535"/>
</test>
<test id="s1-s2-s3-t2" name="Create volume with non-admin user">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:43.541" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:43.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:43.545" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:15:43.539" endtime="20211210 13:15:43.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:43.546" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:15:43.545" endtime="20211210 13:15:43.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:43.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:43.546" endtime="20211210 13:15:43.547"/>
</kw>
<status status="PASS" starttime="20211210 13:15:43.539" endtime="20211210 13:15:43.547"/>
</kw>
<msg timestamp="20211210 13:15:43.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:43.538" endtime="20211210 13:15:43.548"/>
</kw>
<msg timestamp="20211210 13:15:43.548" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:15:43.538" endtime="20211210 13:15:43.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:15:43.550" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:15:43.548" endtime="20211210 13:15:43.550"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:43.554" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:43.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:43.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:43.553" endtime="20211210 13:15:43.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:43.565" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:43.564" endtime="20211210 13:15:43.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:43.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:43.565" endtime="20211210 13:15:43.566"/>
</kw>
<status status="PASS" starttime="20211210 13:15:43.552" endtime="20211210 13:15:43.566"/>
</kw>
<msg timestamp="20211210 13:15:43.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:43.552" endtime="20211210 13:15:43.566"/>
</kw>
<status status="PASS" starttime="20211210 13:15:43.551" endtime="20211210 13:15:43.566"/>
</kw>
<status status="PASS" starttime="20211210 13:15:43.550" endtime="20211210 13:15:43.567"/>
</kw>
<status status="PASS" starttime="20211210 13:15:43.537" endtime="20211210 13:15:43.567"/>
</kw>
<status status="PASS" starttime="20211210 13:15:43.537" endtime="20211210 13:15:43.567"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:43.569" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:47.715" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:15:47.715" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20211210 13:15:43.567" endtime="20211210 13:15:47.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:15:47.716" endtime="20211210 13:15:47.717"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:15:43.536" endtime="20211210 13:15:47.717"/>
</test>
<test id="s1-s2-s3-t3" name="Create bucket with non-admin owner(testuser2)">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:47.724" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:47.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:47.728" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:15:47.722" endtime="20211210 13:15:47.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:47.729" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:15:47.728" endtime="20211210 13:15:47.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:47.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:47.729" endtime="20211210 13:15:47.730"/>
</kw>
<status status="PASS" starttime="20211210 13:15:47.721" endtime="20211210 13:15:47.731"/>
</kw>
<msg timestamp="20211210 13:15:47.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:47.721" endtime="20211210 13:15:47.731"/>
</kw>
<msg timestamp="20211210 13:15:47.731" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:15:47.720" endtime="20211210 13:15:47.731"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:15:47.732" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:15:47.732" endtime="20211210 13:15:47.733"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:47.737" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:47.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:47.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:47.735" endtime="20211210 13:15:47.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:47.746" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:47.745" endtime="20211210 13:15:47.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:47.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:47.746" endtime="20211210 13:15:47.747"/>
</kw>
<status status="PASS" starttime="20211210 13:15:47.734" endtime="20211210 13:15:47.747"/>
</kw>
<msg timestamp="20211210 13:15:47.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:47.734" endtime="20211210 13:15:47.748"/>
</kw>
<status status="PASS" starttime="20211210 13:15:47.733" endtime="20211210 13:15:47.748"/>
</kw>
<status status="PASS" starttime="20211210 13:15:47.733" endtime="20211210 13:15:47.748"/>
</kw>
<status status="PASS" starttime="20211210 13:15:47.720" endtime="20211210 13:15:47.748"/>
</kw>
<status status="PASS" starttime="20211210 13:15:47.719" endtime="20211210 13:15:47.748"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 13:15:47.750" level="INFO">${random} = 44</msg>
<status status="PASS" starttime="20211210 13:15:47.749" endtime="20211210 13:15:47.750"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:15:47.752" level="INFO">${volume1} = fstest44</msg>
<status status="PASS" starttime="20211210 13:15:47.750" endtime="20211210 13:15:47.752"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:15:47.754" level="INFO">${volume2} = fstest244</msg>
<status status="PASS" starttime="20211210 13:15:47.752" endtime="20211210 13:15:47.754"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:15:47.756" level="INFO">${volume3} = fstest344</msg>
<status status="PASS" starttime="20211210 13:15:47.754" endtime="20211210 13:15:47.756"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:15:47.758" level="INFO">${volume4} = fstest444</msg>
<status status="PASS" starttime="20211210 13:15:47.756" endtime="20211210 13:15:47.758"/>
</kw>
<status status="PASS" starttime="20211210 13:15:47.749" endtime="20211210 13:15:47.758"/>
</kw>
<status status="PASS" starttime="20211210 13:15:47.748" endtime="20211210 13:15:47.759"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:47.763" level="INFO">Running command 'ozone sh volume create o3://om/fstest444 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:51.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:51.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:47.761" endtime="20211210 13:15:51.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:51.799" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:51.798" endtime="20211210 13:15:51.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:51.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:51.799" endtime="20211210 13:15:51.800"/>
</kw>
<status status="PASS" starttime="20211210 13:15:47.760" endtime="20211210 13:15:51.800"/>
</kw>
<msg timestamp="20211210 13:15:51.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:47.759" endtime="20211210 13:15:51.800"/>
</kw>
<status status="PASS" starttime="20211210 13:15:47.759" endtime="20211210 13:15:51.801"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:51.805" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:51.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:51.809" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:15:51.803" endtime="20211210 13:15:51.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:51.810" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:15:51.810" endtime="20211210 13:15:51.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:51.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:51.811" endtime="20211210 13:15:51.811"/>
</kw>
<status status="PASS" starttime="20211210 13:15:51.803" endtime="20211210 13:15:51.812"/>
</kw>
<msg timestamp="20211210 13:15:51.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:51.802" endtime="20211210 13:15:51.812"/>
</kw>
<msg timestamp="20211210 13:15:51.812" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:15:51.802" endtime="20211210 13:15:51.812"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:15:51.813" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:15:51.813" endtime="20211210 13:15:51.813"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:51.818" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:51.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:51.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:51.816" endtime="20211210 13:15:51.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:51.826" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:51.826" endtime="20211210 13:15:51.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:51.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:51.827" endtime="20211210 13:15:51.827"/>
</kw>
<status status="PASS" starttime="20211210 13:15:51.815" endtime="20211210 13:15:51.828"/>
</kw>
<msg timestamp="20211210 13:15:51.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:51.815" endtime="20211210 13:15:51.828"/>
</kw>
<status status="PASS" starttime="20211210 13:15:51.814" endtime="20211210 13:15:51.828"/>
</kw>
<status status="PASS" starttime="20211210 13:15:51.813" endtime="20211210 13:15:51.828"/>
</kw>
<status status="PASS" starttime="20211210 13:15:51.801" endtime="20211210 13:15:51.829"/>
</kw>
<status status="PASS" starttime="20211210 13:15:51.801" endtime="20211210 13:15:51.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:51.832" level="INFO">Running command 'ozone sh bucket create o3://om/fstest444/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:15:55.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:15:55.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:51.831" endtime="20211210 13:15:55.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:15:55.733" level="INFO"/>
<status status="PASS" starttime="20211210 13:15:55.732" endtime="20211210 13:15:55.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:15:55.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:15:55.733" endtime="20211210 13:15:55.734"/>
</kw>
<status status="PASS" starttime="20211210 13:15:51.830" endtime="20211210 13:15:55.734"/>
</kw>
<msg timestamp="20211210 13:15:55.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:51.830" endtime="20211210 13:15:55.734"/>
</kw>
<msg timestamp="20211210 13:15:55.735" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:15:51.829" endtime="20211210 13:15:55.735"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:15:55.735" endtime="20211210 13:15:55.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:15:55.740" level="INFO">Running command 'ozone sh key put fstest444/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:02.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:02.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:15:55.738" endtime="20211210 13:16:02.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:02.333" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:02.332" endtime="20211210 13:16:02.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:02.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:02.333" endtime="20211210 13:16:02.333"/>
</kw>
<status status="PASS" starttime="20211210 13:15:55.737" endtime="20211210 13:16:02.334"/>
</kw>
<msg timestamp="20211210 13:16:02.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:15:55.737" endtime="20211210 13:16:02.334"/>
</kw>
<msg timestamp="20211210 13:16:02.334" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:15:55.736" endtime="20211210 13:16:02.334"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:16:02.335" endtime="20211210 13:16:02.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:02.339" level="INFO">Running command 'ozone sh key list fstest444/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:06.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:06.674" level="INFO">${output} = [ {
  "volumeName" : "fstest444",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-12-10T13:15:59.609Z",
  "modificationTime" : "2021-12-10T13:16:01.839Z",...</msg>
<status status="PASS" starttime="20211210 13:16:02.337" endtime="20211210 13:16:06.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:06.676" level="INFO">[ {
  "volumeName" : "fstest444",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-12-10T13:15:59.609Z",
  "modificationTime" : "2021-12-10T13:16:01.839Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211210 13:16:06.675" endtime="20211210 13:16:06.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:06.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:06.676" endtime="20211210 13:16:06.677"/>
</kw>
<status status="PASS" starttime="20211210 13:16:02.336" endtime="20211210 13:16:06.677"/>
</kw>
<msg timestamp="20211210 13:16:06.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:02.336" endtime="20211210 13:16:06.677"/>
</kw>
<msg timestamp="20211210 13:16:06.678" level="INFO">${result} = [ {
  "volumeName" : "fstest444",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-12-10T13:15:59.609Z",
  "modificationTime" : "2021-12-10T13:16:01.839Z",...</msg>
<status status="PASS" starttime="20211210 13:16:02.335" endtime="20211210 13:16:06.678"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:16:06.678" endtime="20211210 13:16:06.678"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:06.682" level="INFO">Running command 'ozone sh key delete fstest444/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:11.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:11.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:16:06.680" endtime="20211210 13:16:11.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:11.014" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:11.013" endtime="20211210 13:16:11.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:11.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:11.015" endtime="20211210 13:16:11.015"/>
</kw>
<status status="PASS" starttime="20211210 13:16:06.680" endtime="20211210 13:16:11.016"/>
</kw>
<msg timestamp="20211210 13:16:11.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:06.679" endtime="20211210 13:16:11.016"/>
</kw>
<msg timestamp="20211210 13:16:11.016" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:16:06.679" endtime="20211210 13:16:11.016"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:16:11.016" endtime="20211210 13:16:11.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:11.023" level="INFO">Running command 'ozone sh bucket delete fstest444/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:14.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:14.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:16:11.021" endtime="20211210 13:16:14.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:14.965" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:14.964" endtime="20211210 13:16:14.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:14.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:14.965" endtime="20211210 13:16:14.966"/>
</kw>
<status status="PASS" starttime="20211210 13:16:11.019" endtime="20211210 13:16:14.966"/>
</kw>
<msg timestamp="20211210 13:16:14.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:11.019" endtime="20211210 13:16:14.967"/>
</kw>
<msg timestamp="20211210 13:16:14.967" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:16:11.018" endtime="20211210 13:16:14.967"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:16:14.967" endtime="20211210 13:16:14.968"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:15:47.718" endtime="20211210 13:16:14.968"/>
</test>
<test id="s1-s2-s3-t4" name="Create volume bucket with credentials">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:14.975" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:14.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:14.980" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:16:14.973" endtime="20211210 13:16:14.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:14.981" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:16:14.980" endtime="20211210 13:16:14.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:14.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:14.981" endtime="20211210 13:16:14.982"/>
</kw>
<status status="PASS" starttime="20211210 13:16:14.972" endtime="20211210 13:16:14.982"/>
</kw>
<msg timestamp="20211210 13:16:14.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:14.972" endtime="20211210 13:16:14.983"/>
</kw>
<msg timestamp="20211210 13:16:14.983" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:16:14.971" endtime="20211210 13:16:14.983"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:16:14.984" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:16:14.984" endtime="20211210 13:16:14.984"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:14.989" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:14.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:14.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:16:14.987" endtime="20211210 13:16:14.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:14.999" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:14.998" endtime="20211210 13:16:14.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:14.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:14.999" endtime="20211210 13:16:15.000"/>
</kw>
<status status="PASS" starttime="20211210 13:16:14.986" endtime="20211210 13:16:15.000"/>
</kw>
<msg timestamp="20211210 13:16:15.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:14.986" endtime="20211210 13:16:15.000"/>
</kw>
<status status="PASS" starttime="20211210 13:16:14.985" endtime="20211210 13:16:15.001"/>
</kw>
<status status="PASS" starttime="20211210 13:16:14.985" endtime="20211210 13:16:15.001"/>
</kw>
<status status="PASS" starttime="20211210 13:16:14.970" endtime="20211210 13:16:15.001"/>
</kw>
<status status="PASS" starttime="20211210 13:16:14.969" endtime="20211210 13:16:15.001"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 13:16:15.003" level="INFO">${random} = 63</msg>
<status status="PASS" starttime="20211210 13:16:15.002" endtime="20211210 13:16:15.003"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:16:15.004" level="INFO">${volume1} = fstest63</msg>
<status status="PASS" starttime="20211210 13:16:15.003" endtime="20211210 13:16:15.004"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:16:15.005" level="INFO">${volume2} = fstest263</msg>
<status status="PASS" starttime="20211210 13:16:15.004" endtime="20211210 13:16:15.005"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:16:15.006" level="INFO">${volume3} = fstest363</msg>
<status status="PASS" starttime="20211210 13:16:15.005" endtime="20211210 13:16:15.006"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:16:15.007" level="INFO">${volume4} = fstest463</msg>
<status status="PASS" starttime="20211210 13:16:15.006" endtime="20211210 13:16:15.007"/>
</kw>
<status status="PASS" starttime="20211210 13:16:15.002" endtime="20211210 13:16:15.007"/>
</kw>
<status status="PASS" starttime="20211210 13:16:15.001" endtime="20211210 13:16:15.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:15.011" level="INFO">Running command 'ozone sh volume create o3://om/fstest63 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:19.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:19.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:16:15.009" endtime="20211210 13:16:19.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:19.282" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:19.281" endtime="20211210 13:16:19.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:19.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:19.282" endtime="20211210 13:16:19.283"/>
</kw>
<status status="PASS" starttime="20211210 13:16:15.008" endtime="20211210 13:16:19.283"/>
</kw>
<msg timestamp="20211210 13:16:19.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:15.008" endtime="20211210 13:16:19.284"/>
</kw>
<status status="PASS" starttime="20211210 13:16:15.007" endtime="20211210 13:16:19.284"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:19.288" level="INFO">Running command 'ozone sh volume create o3://om/fstest263 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:23.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:23.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:16:19.286" endtime="20211210 13:16:23.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:23.411" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:23.410" endtime="20211210 13:16:23.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:23.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:23.411" endtime="20211210 13:16:23.413"/>
</kw>
<status status="PASS" starttime="20211210 13:16:19.285" endtime="20211210 13:16:23.413"/>
</kw>
<msg timestamp="20211210 13:16:23.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:19.285" endtime="20211210 13:16:23.413"/>
</kw>
<status status="PASS" starttime="20211210 13:16:19.284" endtime="20211210 13:16:23.413"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:23.417" level="INFO">Running command 'ozone sh bucket create o3://om/fstest63/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:27.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:27.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:16:23.415" endtime="20211210 13:16:27.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:27.475" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:27.474" endtime="20211210 13:16:27.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:27.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:27.476" endtime="20211210 13:16:27.476"/>
</kw>
<status status="PASS" starttime="20211210 13:16:23.415" endtime="20211210 13:16:27.477"/>
</kw>
<msg timestamp="20211210 13:16:27.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:23.414" endtime="20211210 13:16:27.477"/>
</kw>
<status status="PASS" starttime="20211210 13:16:23.414" endtime="20211210 13:16:27.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:27.481" level="INFO">Running command 'ozone sh bucket create o3://om/fstest63/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:31.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:31.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:16:27.479" endtime="20211210 13:16:31.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:31.399" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:31.398" endtime="20211210 13:16:31.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:31.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:31.399" endtime="20211210 13:16:31.400"/>
</kw>
<status status="PASS" starttime="20211210 13:16:27.479" endtime="20211210 13:16:31.400"/>
</kw>
<msg timestamp="20211210 13:16:31.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:27.478" endtime="20211210 13:16:31.400"/>
</kw>
<status status="PASS" starttime="20211210 13:16:27.478" endtime="20211210 13:16:31.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:31.405" level="INFO">Running command 'ozone sh bucket create o3://om/fstest263/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:35.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:35.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:16:31.403" endtime="20211210 13:16:35.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:35.586" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:35.585" endtime="20211210 13:16:35.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:35.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:35.586" endtime="20211210 13:16:35.587"/>
</kw>
<status status="PASS" starttime="20211210 13:16:31.402" endtime="20211210 13:16:35.588"/>
</kw>
<msg timestamp="20211210 13:16:35.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:31.402" endtime="20211210 13:16:35.588"/>
</kw>
<status status="PASS" starttime="20211210 13:16:31.401" endtime="20211210 13:16:35.588"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:16:14.969" endtime="20211210 13:16:35.588"/>
</test>
<test id="s1-s2-s3-t5" name="Check volume from ozonefs">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:35.594" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest63/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:39.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:39.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:16:35.592" endtime="20211210 13:16:39.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:39.411" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:39.410" endtime="20211210 13:16:39.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:39.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:39.411" endtime="20211210 13:16:39.412"/>
</kw>
<status status="PASS" starttime="20211210 13:16:35.591" endtime="20211210 13:16:39.412"/>
</kw>
<msg timestamp="20211210 13:16:39.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:35.591" endtime="20211210 13:16:39.412"/>
</kw>
<msg timestamp="20211210 13:16:39.413" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:16:35.590" endtime="20211210 13:16:39.413"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:16:35.589" endtime="20211210 13:16:39.413"/>
</test>
<test id="s1-s2-s3-t6" name="Test Volume Acls">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:39.419" level="INFO">Running command 'ozone sh volume create fstest363 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:43.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:43.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:16:39.417" endtime="20211210 13:16:43.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:43.693" level="INFO"/>
<status status="PASS" starttime="20211210 13:16:43.692" endtime="20211210 13:16:43.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:43.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:43.693" endtime="20211210 13:16:43.694"/>
</kw>
<status status="PASS" starttime="20211210 13:16:39.416" endtime="20211210 13:16:43.694"/>
</kw>
<msg timestamp="20211210 13:16:43.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:39.416" endtime="20211210 13:16:43.694"/>
</kw>
<msg timestamp="20211210 13:16:43.695" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:16:39.415" endtime="20211210 13:16:43.695"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:16:43.695" endtime="20211210 13:16:43.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:43.699" level="INFO">Running command 'ozone sh volume getacl fstest363 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:47.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:47.828" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:16:43.697" endtime="20211210 13:16:47.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:47.829" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:16:47.828" endtime="20211210 13:16:47.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:47.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:47.829" endtime="20211210 13:16:47.830"/>
</kw>
<status status="PASS" starttime="20211210 13:16:43.697" endtime="20211210 13:16:47.831"/>
</kw>
<msg timestamp="20211210 13:16:47.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:43.696" endtime="20211210 13:16:47.831"/>
</kw>
<msg timestamp="20211210 13:16:47.831" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:16:43.696" endtime="20211210 13:16:47.831"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:16:47.832" endtime="20211210 13:16:47.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:47.836" level="INFO">Running command 'ozone sh volume addacl fstest363 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:51.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:51.833" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211210 13:16:47.834" endtime="20211210 13:16:51.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:51.834" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211210 13:16:51.834" endtime="20211210 13:16:51.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:51.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:51.835" endtime="20211210 13:16:51.835"/>
</kw>
<status status="PASS" starttime="20211210 13:16:47.834" endtime="20211210 13:16:51.836"/>
</kw>
<msg timestamp="20211210 13:16:51.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:47.833" endtime="20211210 13:16:51.836"/>
</kw>
<msg timestamp="20211210 13:16:51.836" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211210 13:16:47.833" endtime="20211210 13:16:51.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:51.841" level="INFO">Running command 'ozone sh volume getacl fstest363 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:16:55.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:16:55.949" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211210 13:16:51.838" endtime="20211210 13:16:55.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:16:55.950" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:16:55.949" endtime="20211210 13:16:55.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:16:55.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:16:55.951" endtime="20211210 13:16:55.951"/>
</kw>
<status status="PASS" starttime="20211210 13:16:51.838" endtime="20211210 13:16:55.952"/>
</kw>
<msg timestamp="20211210 13:16:55.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:51.837" endtime="20211210 13:16:55.952"/>
</kw>
<msg timestamp="20211210 13:16:55.952" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211210 13:16:51.837" endtime="20211210 13:16:55.952"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:16:55.952" endtime="20211210 13:16:55.953"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:16:55.957" level="INFO">Running command 'ozone sh volume removeacl fstest363 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:00.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:00.080" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:16:55.955" endtime="20211210 13:17:00.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:00.081" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:17:00.080" endtime="20211210 13:17:00.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:00.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:00.081" endtime="20211210 13:17:00.082"/>
</kw>
<status status="PASS" starttime="20211210 13:16:55.955" endtime="20211210 13:17:00.082"/>
</kw>
<msg timestamp="20211210 13:17:00.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:16:55.954" endtime="20211210 13:17:00.083"/>
</kw>
<msg timestamp="20211210 13:17:00.083" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:16:55.954" endtime="20211210 13:17:00.083"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:00.087" level="INFO">Running command 'ozone sh volume getacl fstest363 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:04.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:04.396" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211210 13:17:00.085" endtime="20211210 13:17:04.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:04.397" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:17:04.396" endtime="20211210 13:17:04.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:04.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:04.397" endtime="20211210 13:17:04.398"/>
</kw>
<status status="PASS" starttime="20211210 13:17:00.084" endtime="20211210 13:17:04.398"/>
</kw>
<msg timestamp="20211210 13:17:04.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:00.084" endtime="20211210 13:17:04.399"/>
</kw>
<msg timestamp="20211210 13:17:04.399" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211210 13:17:00.083" endtime="20211210 13:17:04.399"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:17:04.399" endtime="20211210 13:17:04.400"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:04.405" level="INFO">Running command 'ozone sh volume setacl fstest363 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:08.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:08.447" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:17:04.402" endtime="20211210 13:17:08.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:08.449" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:17:08.448" endtime="20211210 13:17:08.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:08.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:08.449" endtime="20211210 13:17:08.450"/>
</kw>
<status status="PASS" starttime="20211210 13:17:04.402" endtime="20211210 13:17:08.450"/>
</kw>
<msg timestamp="20211210 13:17:08.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:04.401" endtime="20211210 13:17:08.451"/>
</kw>
<msg timestamp="20211210 13:17:08.451" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:17:04.400" endtime="20211210 13:17:08.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:08.455" level="INFO">Running command 'ozone sh volume getacl fstest363 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:12.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:12.551" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20211210 13:17:08.453" endtime="20211210 13:17:12.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:12.553" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:17:12.552" endtime="20211210 13:17:12.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:12.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:12.553" endtime="20211210 13:17:12.554"/>
</kw>
<status status="PASS" starttime="20211210 13:17:08.452" endtime="20211210 13:17:12.554"/>
</kw>
<msg timestamp="20211210 13:17:12.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:08.452" endtime="20211210 13:17:12.554"/>
</kw>
<msg timestamp="20211210 13:17:12.555" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20211210 13:17:08.451" endtime="20211210 13:17:12.555"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:17:12.555" endtime="20211210 13:17:12.556"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:17:12.556" endtime="20211210 13:17:12.557"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:16:39.414" endtime="20211210 13:17:12.557"/>
</test>
<test id="s1-s2-s3-t7" name="Test Bucket Acls">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${volume3}/bk1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:12.563" level="INFO">Running command 'ozone sh bucket create fstest363/bk1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:16.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:16.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:17:12.561" endtime="20211210 13:17:16.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:16.877" level="INFO"/>
<status status="PASS" starttime="20211210 13:17:16.876" endtime="20211210 13:17:16.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:16.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:16.877" endtime="20211210 13:17:16.878"/>
</kw>
<status status="PASS" starttime="20211210 13:17:12.560" endtime="20211210 13:17:16.878"/>
</kw>
<msg timestamp="20211210 13:17:16.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:12.560" endtime="20211210 13:17:16.878"/>
</kw>
<msg timestamp="20211210 13:17:16.879" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211210 13:17:12.559" endtime="20211210 13:17:16.879"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:17:16.879" endtime="20211210 13:17:16.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:16.883" level="INFO">Running command 'ozone sh bucket getacl fstest363/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:21.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:21.118" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:17:16.881" endtime="20211210 13:17:21.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:21.120" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:17:21.119" endtime="20211210 13:17:21.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:21.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:21.120" endtime="20211210 13:17:21.121"/>
</kw>
<status status="PASS" starttime="20211210 13:17:16.881" endtime="20211210 13:17:21.121"/>
</kw>
<msg timestamp="20211210 13:17:21.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:16.880" endtime="20211210 13:17:21.121"/>
</kw>
<msg timestamp="20211210 13:17:21.122" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:17:16.879" endtime="20211210 13:17:21.122"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:17:21.122" endtime="20211210 13:17:21.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:21.126" level="INFO">Running command 'ozone sh bucket addacl fstest363/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:25.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:25.821" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:17:21.124" endtime="20211210 13:17:25.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:25.823" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:17:25.822" endtime="20211210 13:17:25.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:25.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:25.824" endtime="20211210 13:17:25.824"/>
</kw>
<status status="PASS" starttime="20211210 13:17:21.124" endtime="20211210 13:17:25.825"/>
</kw>
<msg timestamp="20211210 13:17:25.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:21.123" endtime="20211210 13:17:25.825"/>
</kw>
<msg timestamp="20211210 13:17:25.825" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:17:21.123" endtime="20211210 13:17:25.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:25.830" level="INFO">Running command 'ozone sh bucket getacl fstest363/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:30.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:30.169" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:17:25.827" endtime="20211210 13:17:30.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:30.170" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:17:30.169" endtime="20211210 13:17:30.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:30.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:30.171" endtime="20211210 13:17:30.171"/>
</kw>
<status status="PASS" starttime="20211210 13:17:25.826" endtime="20211210 13:17:30.172"/>
</kw>
<msg timestamp="20211210 13:17:30.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:25.826" endtime="20211210 13:17:30.172"/>
</kw>
<msg timestamp="20211210 13:17:30.172" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:17:25.825" endtime="20211210 13:17:30.172"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:17:30.173" endtime="20211210 13:17:30.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:30.177" level="INFO">Running command 'ozone sh bucket removeacl fstest363/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:34.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:34.014" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:17:30.175" endtime="20211210 13:17:34.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:34.016" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:17:34.015" endtime="20211210 13:17:34.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:34.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:34.016" endtime="20211210 13:17:34.017"/>
</kw>
<status status="PASS" starttime="20211210 13:17:30.174" endtime="20211210 13:17:34.017"/>
</kw>
<msg timestamp="20211210 13:17:34.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:30.174" endtime="20211210 13:17:34.018"/>
</kw>
<msg timestamp="20211210 13:17:34.018" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:17:30.173" endtime="20211210 13:17:34.018"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:34.022" level="INFO">Running command 'ozone sh bucket getacl fstest363/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:38.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:38.386" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:17:34.020" endtime="20211210 13:17:38.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:38.388" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:17:38.387" endtime="20211210 13:17:38.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:38.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:38.388" endtime="20211210 13:17:38.389"/>
</kw>
<status status="PASS" starttime="20211210 13:17:34.019" endtime="20211210 13:17:38.389"/>
</kw>
<msg timestamp="20211210 13:17:38.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:34.019" endtime="20211210 13:17:38.389"/>
</kw>
<msg timestamp="20211210 13:17:38.389" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:17:34.018" endtime="20211210 13:17:38.389"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:17:38.390" endtime="20211210 13:17:38.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:38.395" level="INFO">Running command 'ozone sh bucket setacl fstest363/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:42.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:42.389" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:17:38.393" endtime="20211210 13:17:42.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:42.390" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:17:42.390" endtime="20211210 13:17:42.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:42.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:42.391" endtime="20211210 13:17:42.392"/>
</kw>
<status status="PASS" starttime="20211210 13:17:38.392" endtime="20211210 13:17:42.392"/>
</kw>
<msg timestamp="20211210 13:17:42.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:38.392" endtime="20211210 13:17:42.392"/>
</kw>
<msg timestamp="20211210 13:17:42.393" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:17:38.391" endtime="20211210 13:17:42.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:42.397" level="INFO">Running command 'ozone sh bucket getacl fstest363/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:46.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:46.675" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211210 13:17:42.395" endtime="20211210 13:17:46.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:46.677" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:17:46.676" endtime="20211210 13:17:46.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:46.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:46.677" endtime="20211210 13:17:46.678"/>
</kw>
<status status="PASS" starttime="20211210 13:17:42.394" endtime="20211210 13:17:46.678"/>
</kw>
<msg timestamp="20211210 13:17:46.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:42.394" endtime="20211210 13:17:46.679"/>
</kw>
<msg timestamp="20211210 13:17:46.679" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211210 13:17:42.393" endtime="20211210 13:17:46.679"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:17:46.679" endtime="20211210 13:17:46.680"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:17:46.680" endtime="20211210 13:17:46.681"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:17:12.558" endtime="20211210 13:17:46.681"/>
</test>
<test id="s1-s2-s3-t8" name="Test key Acls">
<kw name="Execute" library="os">
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:46.686" level="INFO">Running command 'ozone sh key put fstest363/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:53.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:53.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:17:46.684" endtime="20211210 13:17:53.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:53.243" level="INFO"/>
<status status="PASS" starttime="20211210 13:17:53.242" endtime="20211210 13:17:53.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:53.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:53.244" endtime="20211210 13:17:53.244"/>
</kw>
<status status="PASS" starttime="20211210 13:17:46.684" endtime="20211210 13:17:53.245"/>
</kw>
<msg timestamp="20211210 13:17:53.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:46.683" endtime="20211210 13:17:53.245"/>
</kw>
<status status="PASS" starttime="20211210 13:17:46.683" endtime="20211210 13:17:53.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:53.249" level="INFO">Running command 'ozone sh key getacl fstest363/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:17:57.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:17:57.444" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:17:53.247" endtime="20211210 13:17:57.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:17:57.446" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:17:57.445" endtime="20211210 13:17:57.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:17:57.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:17:57.446" endtime="20211210 13:17:57.447"/>
</kw>
<status status="PASS" starttime="20211210 13:17:53.246" endtime="20211210 13:17:57.447"/>
</kw>
<msg timestamp="20211210 13:17:57.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:53.246" endtime="20211210 13:17:57.447"/>
</kw>
<msg timestamp="20211210 13:17:57.448" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:17:53.245" endtime="20211210 13:17:57.448"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:17:57.448" endtime="20211210 13:17:57.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:17:57.453" level="INFO">Running command 'ozone sh key addacl fstest363/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:01.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:01.403" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:17:57.450" endtime="20211210 13:18:01.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:01.404" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:18:01.404" endtime="20211210 13:18:01.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:01.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:01.405" endtime="20211210 13:18:01.406"/>
</kw>
<status status="PASS" starttime="20211210 13:17:57.450" endtime="20211210 13:18:01.406"/>
</kw>
<msg timestamp="20211210 13:18:01.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:17:57.449" endtime="20211210 13:18:01.407"/>
</kw>
<msg timestamp="20211210 13:18:01.407" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:17:57.449" endtime="20211210 13:18:01.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:01.411" level="INFO">Running command 'ozone sh key getacl fstest363/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:05.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:05.504" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:18:01.409" endtime="20211210 13:18:05.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:05.505" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:18:05.504" endtime="20211210 13:18:05.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:05.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:05.506" endtime="20211210 13:18:05.506"/>
</kw>
<status status="PASS" starttime="20211210 13:18:01.408" endtime="20211210 13:18:05.507"/>
</kw>
<msg timestamp="20211210 13:18:05.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:01.408" endtime="20211210 13:18:05.507"/>
</kw>
<msg timestamp="20211210 13:18:05.507" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:18:01.407" endtime="20211210 13:18:05.507"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:18:05.508" endtime="20211210 13:18:05.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:05.512" level="INFO">Running command 'ozone sh key removeacl fstest363/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:09.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:09.560" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:18:05.510" endtime="20211210 13:18:09.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:09.561" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:18:09.560" endtime="20211210 13:18:09.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:09.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:09.561" endtime="20211210 13:18:09.562"/>
</kw>
<status status="PASS" starttime="20211210 13:18:05.510" endtime="20211210 13:18:09.562"/>
</kw>
<msg timestamp="20211210 13:18:09.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:05.509" endtime="20211210 13:18:09.563"/>
</kw>
<msg timestamp="20211210 13:18:09.563" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:18:05.508" endtime="20211210 13:18:09.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:09.567" level="INFO">Running command 'ozone sh key getacl fstest363/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:13.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:13.880" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:18:09.565" endtime="20211210 13:18:13.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:13.881" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:18:13.880" endtime="20211210 13:18:13.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:13.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:13.881" endtime="20211210 13:18:13.882"/>
</kw>
<status status="PASS" starttime="20211210 13:18:09.564" endtime="20211210 13:18:13.882"/>
</kw>
<msg timestamp="20211210 13:18:13.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:09.564" endtime="20211210 13:18:13.883"/>
</kw>
<msg timestamp="20211210 13:18:13.883" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211210 13:18:09.563" endtime="20211210 13:18:13.883"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:18:13.883" endtime="20211210 13:18:13.884"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:13.888" level="INFO">Running command 'ozone sh key setacl fstest363/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:18.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:18.031" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:18:13.886" endtime="20211210 13:18:18.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:18.032" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:18:18.031" endtime="20211210 13:18:18.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:18.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:18.033" endtime="20211210 13:18:18.033"/>
</kw>
<status status="PASS" starttime="20211210 13:18:13.885" endtime="20211210 13:18:18.034"/>
</kw>
<msg timestamp="20211210 13:18:18.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:13.885" endtime="20211210 13:18:18.034"/>
</kw>
<msg timestamp="20211210 13:18:18.034" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211210 13:18:13.884" endtime="20211210 13:18:18.034"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:18.039" level="INFO">Running command 'ozone sh key getacl fstest363/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:22.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:22.213" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211210 13:18:18.037" endtime="20211210 13:18:22.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:22.214" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:18:22.213" endtime="20211210 13:18:22.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:22.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:22.214" endtime="20211210 13:18:22.216"/>
</kw>
<status status="PASS" starttime="20211210 13:18:18.036" endtime="20211210 13:18:22.216"/>
</kw>
<msg timestamp="20211210 13:18:22.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:18.035" endtime="20211210 13:18:22.216"/>
</kw>
<msg timestamp="20211210 13:18:22.217" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211210 13:18:18.035" endtime="20211210 13:18:22.217"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:18:22.217" endtime="20211210 13:18:22.217"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211210 13:18:22.218" endtime="20211210 13:18:22.218"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:17:46.682" endtime="20211210 13:18:22.218"/>
</test>
<test id="s1-s2-s3-t9" name="Test native authorizer">
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:22.224" level="INFO">Running command 'ozone sh volume removeacl fstest363 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:26.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:26.302" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:18:22.222" endtime="20211210 13:18:26.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:26.303" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211210 13:18:26.302" endtime="20211210 13:18:26.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:26.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:26.304" endtime="20211210 13:18:26.304"/>
</kw>
<status status="PASS" starttime="20211210 13:18:22.221" endtime="20211210 13:18:26.305"/>
</kw>
<msg timestamp="20211210 13:18:26.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:22.221" endtime="20211210 13:18:26.305"/>
</kw>
<status status="PASS" starttime="20211210 13:18:22.220" endtime="20211210 13:18:26.305"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:26.309" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:26.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:26.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:18:26.307" endtime="20211210 13:18:26.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:26.314" level="INFO"/>
<status status="PASS" starttime="20211210 13:18:26.313" endtime="20211210 13:18:26.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:26.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:26.314" endtime="20211210 13:18:26.315"/>
</kw>
<status status="PASS" starttime="20211210 13:18:26.306" endtime="20211210 13:18:26.316"/>
</kw>
<msg timestamp="20211210 13:18:26.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:26.306" endtime="20211210 13:18:26.316"/>
</kw>
<status status="PASS" starttime="20211210 13:18:26.305" endtime="20211210 13:18:26.316"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:26.321" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:26.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:26.324" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:18:26.319" endtime="20211210 13:18:26.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:26.325" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:18:26.324" endtime="20211210 13:18:26.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:26.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:26.325" endtime="20211210 13:18:26.326"/>
</kw>
<status status="PASS" starttime="20211210 13:18:26.318" endtime="20211210 13:18:26.326"/>
</kw>
<msg timestamp="20211210 13:18:26.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:26.318" endtime="20211210 13:18:26.327"/>
</kw>
<msg timestamp="20211210 13:18:26.327" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:18:26.317" endtime="20211210 13:18:26.327"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:18:26.328" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:18:26.327" endtime="20211210 13:18:26.328"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:26.333" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:26.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:26.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:18:26.331" endtime="20211210 13:18:26.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:26.342" level="INFO"/>
<status status="PASS" starttime="20211210 13:18:26.341" endtime="20211210 13:18:26.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:26.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:26.342" endtime="20211210 13:18:26.343"/>
</kw>
<status status="PASS" starttime="20211210 13:18:26.330" endtime="20211210 13:18:26.343"/>
</kw>
<msg timestamp="20211210 13:18:26.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:26.330" endtime="20211210 13:18:26.343"/>
</kw>
<status status="PASS" starttime="20211210 13:18:26.329" endtime="20211210 13:18:26.343"/>
</kw>
<status status="PASS" starttime="20211210 13:18:26.328" endtime="20211210 13:18:26.344"/>
</kw>
<status status="PASS" starttime="20211210 13:18:26.317" endtime="20211210 13:18:26.344"/>
</kw>
<status status="PASS" starttime="20211210 13:18:26.316" endtime="20211210 13:18:26.344"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:26.347" level="INFO">Running command 'ozone sh bucket list /fstest363/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:30.201" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:18:30.202" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:26.345" endtime="20211210 13:18:30.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:30.203" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:30.202" endtime="20211210 13:18:30.203"/>
</kw>
<msg timestamp="20211210 13:18:30.203" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:26.344" endtime="20211210 13:18:30.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:18:30.204" endtime="20211210 13:18:30.204"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:30.207" level="INFO">Running command 'ozone sh key list /fstest363/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:34.251" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:18:34.251" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:30.205" endtime="20211210 13:18:34.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:34.252" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:34.252" endtime="20211210 13:18:34.253"/>
</kw>
<msg timestamp="20211210 13:18:34.253" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:30.204" endtime="20211210 13:18:34.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:18:34.253" endtime="20211210 13:18:34.254"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:34.257" level="INFO">Running command 'ozone sh volume addacl fstest363 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:38.373" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:18:38.373" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:34.255" endtime="20211210 13:18:38.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:38.375" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:38.374" endtime="20211210 13:18:38.375"/>
</kw>
<msg timestamp="20211210 13:18:38.375" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:34.254" endtime="20211210 13:18:38.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:18:38.376" endtime="20211210 13:18:38.376"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:38.380" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:38.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:38.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:18:38.378" endtime="20211210 13:18:38.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:38.386" level="INFO"/>
<status status="PASS" starttime="20211210 13:18:38.385" endtime="20211210 13:18:38.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:38.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:38.386" endtime="20211210 13:18:38.387"/>
</kw>
<status status="PASS" starttime="20211210 13:18:38.377" endtime="20211210 13:18:38.387"/>
</kw>
<msg timestamp="20211210 13:18:38.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:38.377" endtime="20211210 13:18:38.387"/>
</kw>
<status status="PASS" starttime="20211210 13:18:38.376" endtime="20211210 13:18:38.388"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:38.393" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:38.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:38.397" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:18:38.390" endtime="20211210 13:18:38.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:38.398" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:18:38.397" endtime="20211210 13:18:38.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:38.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:38.398" endtime="20211210 13:18:38.399"/>
</kw>
<status status="PASS" starttime="20211210 13:18:38.390" endtime="20211210 13:18:38.400"/>
</kw>
<msg timestamp="20211210 13:18:38.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:38.389" endtime="20211210 13:18:38.400"/>
</kw>
<msg timestamp="20211210 13:18:38.400" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:18:38.389" endtime="20211210 13:18:38.400"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:18:38.401" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:18:38.400" endtime="20211210 13:18:38.401"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:38.406" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:38.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:38.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:18:38.404" endtime="20211210 13:18:38.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:38.415" level="INFO"/>
<status status="PASS" starttime="20211210 13:18:38.415" endtime="20211210 13:18:38.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:38.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:38.416" endtime="20211210 13:18:38.417"/>
</kw>
<status status="PASS" starttime="20211210 13:18:38.403" endtime="20211210 13:18:38.417"/>
</kw>
<msg timestamp="20211210 13:18:38.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:38.403" endtime="20211210 13:18:38.417"/>
</kw>
<status status="PASS" starttime="20211210 13:18:38.402" endtime="20211210 13:18:38.418"/>
</kw>
<status status="PASS" starttime="20211210 13:18:38.402" endtime="20211210 13:18:38.418"/>
</kw>
<status status="PASS" starttime="20211210 13:18:38.388" endtime="20211210 13:18:38.418"/>
</kw>
<status status="PASS" starttime="20211210 13:18:38.388" endtime="20211210 13:18:38.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:38.422" level="INFO">Running command 'ozone sh volume addacl fstest363 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:42.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:42.473" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:18:38.420" endtime="20211210 13:18:42.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:42.474" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:18:42.473" endtime="20211210 13:18:42.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:42.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:42.474" endtime="20211210 13:18:42.475"/>
</kw>
<status status="PASS" starttime="20211210 13:18:38.419" endtime="20211210 13:18:42.475"/>
</kw>
<msg timestamp="20211210 13:18:42.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:38.419" endtime="20211210 13:18:42.476"/>
</kw>
<status status="PASS" starttime="20211210 13:18:38.418" endtime="20211210 13:18:42.476"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:42.480" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:42.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:42.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:18:42.478" endtime="20211210 13:18:42.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:42.486" level="INFO"/>
<status status="PASS" starttime="20211210 13:18:42.486" endtime="20211210 13:18:42.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:42.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:42.486" endtime="20211210 13:18:42.487"/>
</kw>
<status status="PASS" starttime="20211210 13:18:42.477" endtime="20211210 13:18:42.487"/>
</kw>
<msg timestamp="20211210 13:18:42.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:42.477" endtime="20211210 13:18:42.488"/>
</kw>
<status status="PASS" starttime="20211210 13:18:42.476" endtime="20211210 13:18:42.488"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:42.493" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:42.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:42.496" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:18:42.491" endtime="20211210 13:18:42.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:42.498" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:18:42.497" endtime="20211210 13:18:42.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:42.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:42.498" endtime="20211210 13:18:42.499"/>
</kw>
<status status="PASS" starttime="20211210 13:18:42.491" endtime="20211210 13:18:42.499"/>
</kw>
<msg timestamp="20211210 13:18:42.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:42.490" endtime="20211210 13:18:42.499"/>
</kw>
<msg timestamp="20211210 13:18:42.500" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:18:42.490" endtime="20211210 13:18:42.500"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:18:42.501" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:18:42.500" endtime="20211210 13:18:42.501"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:42.505" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:42.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:42.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:18:42.503" endtime="20211210 13:18:42.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:42.514" level="INFO"/>
<status status="PASS" starttime="20211210 13:18:42.513" endtime="20211210 13:18:42.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:42.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:42.514" endtime="20211210 13:18:42.515"/>
</kw>
<status status="PASS" starttime="20211210 13:18:42.503" endtime="20211210 13:18:42.515"/>
</kw>
<msg timestamp="20211210 13:18:42.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:42.502" endtime="20211210 13:18:42.515"/>
</kw>
<status status="PASS" starttime="20211210 13:18:42.501" endtime="20211210 13:18:42.516"/>
</kw>
<status status="PASS" starttime="20211210 13:18:42.501" endtime="20211210 13:18:42.516"/>
</kw>
<status status="PASS" starttime="20211210 13:18:42.489" endtime="20211210 13:18:42.516"/>
</kw>
<status status="PASS" starttime="20211210 13:18:42.488" endtime="20211210 13:18:42.516"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:42.519" level="INFO">Running command 'ozone sh bucket list /fstest363/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:46.663" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:18:46.664" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:42.517" endtime="20211210 13:18:46.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:46.665" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:46.664" endtime="20211210 13:18:46.665"/>
</kw>
<msg timestamp="20211210 13:18:46.665" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume Volume:fstest363 </msg>
<status status="PASS" starttime="20211210 13:18:42.516" endtime="20211210 13:18:46.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:18:46.666" endtime="20211210 13:18:46.666"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:46.670" level="INFO">Running command 'ozone sh volume addacl fstest363 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:50.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:50.601" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:18:46.668" endtime="20211210 13:18:50.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:50.603" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:18:50.602" endtime="20211210 13:18:50.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:50.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:50.603" endtime="20211210 13:18:50.604"/>
</kw>
<status status="PASS" starttime="20211210 13:18:46.668" endtime="20211210 13:18:50.604"/>
</kw>
<msg timestamp="20211210 13:18:50.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:46.667" endtime="20211210 13:18:50.604"/>
</kw>
<status status="PASS" starttime="20211210 13:18:46.666" endtime="20211210 13:18:50.604"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:50.608" level="INFO">Running command 'ozone sh bucket list /fstest363/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:54.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:54.855" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "fstest363",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 805306368,
  "usedNamespace" : 1,
  "creationTime" : "2021-12-...</msg>
<status status="PASS" starttime="20211210 13:18:50.606" endtime="20211210 13:18:54.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:54.857" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "fstest363",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 805306368,
  "usedNamespace" : 1,
  "creationTime" : "2021-12-10T13:17:16.634Z",
  "modificationTime" : "2021-12-10T13:17:42.251Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
} ]</msg>
<status status="PASS" starttime="20211210 13:18:54.856" endtime="20211210 13:18:54.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:54.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:54.857" endtime="20211210 13:18:54.858"/>
</kw>
<status status="PASS" starttime="20211210 13:18:50.606" endtime="20211210 13:18:54.858"/>
</kw>
<msg timestamp="20211210 13:18:54.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:50.605" endtime="20211210 13:18:54.858"/>
</kw>
<status status="PASS" starttime="20211210 13:18:50.605" endtime="20211210 13:18:54.859"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:54.863" level="INFO">Running command 'ozone sh volume getacl /fstest363/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:18:58.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:18:58.966" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20211210 13:18:54.861" endtime="20211210 13:18:58.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:18:58.967" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:18:58.966" endtime="20211210 13:18:58.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:18:58.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:18:58.967" endtime="20211210 13:18:58.968"/>
</kw>
<status status="PASS" starttime="20211210 13:18:54.860" endtime="20211210 13:18:58.968"/>
</kw>
<msg timestamp="20211210 13:18:58.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:18:54.860" endtime="20211210 13:18:58.969"/>
</kw>
<status status="PASS" starttime="20211210 13:18:54.859" endtime="20211210 13:18:58.969"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:18:58.972" level="INFO">Running command 'ozone sh key list /fstest363/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:02.940" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:19:02.940" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest363 Bucket:bk1 </msg>
<status status="PASS" starttime="20211210 13:18:58.970" endtime="20211210 13:19:02.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:02.941" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest363 Bucket:bk1 </msg>
<status status="PASS" starttime="20211210 13:19:02.941" endtime="20211210 13:19:02.941"/>
</kw>
<msg timestamp="20211210 13:19:02.942" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:fstest363 Bucket:bk1 </msg>
<status status="PASS" starttime="20211210 13:18:58.970" endtime="20211210 13:19:02.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:19:02.942" endtime="20211210 13:19:02.943"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:02.947" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:02.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:02.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:19:02.945" endtime="20211210 13:19:02.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:02.952" level="INFO"/>
<status status="PASS" starttime="20211210 13:19:02.951" endtime="20211210 13:19:02.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:02.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:02.952" endtime="20211210 13:19:02.953"/>
</kw>
<status status="PASS" starttime="20211210 13:19:02.944" endtime="20211210 13:19:02.953"/>
</kw>
<msg timestamp="20211210 13:19:02.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:02.943" endtime="20211210 13:19:02.953"/>
</kw>
<status status="PASS" starttime="20211210 13:19:02.943" endtime="20211210 13:19:02.954"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:02.958" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:02.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:02.961" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:19:02.956" endtime="20211210 13:19:02.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:02.963" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:19:02.962" endtime="20211210 13:19:02.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:02.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:02.963" endtime="20211210 13:19:02.964"/>
</kw>
<status status="PASS" starttime="20211210 13:19:02.956" endtime="20211210 13:19:02.964"/>
</kw>
<msg timestamp="20211210 13:19:02.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:02.955" endtime="20211210 13:19:02.964"/>
</kw>
<msg timestamp="20211210 13:19:02.965" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:19:02.955" endtime="20211210 13:19:02.965"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:19:02.965" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:19:02.965" endtime="20211210 13:19:02.966"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:02.970" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:02.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:02.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:19:02.968" endtime="20211210 13:19:02.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:02.978" level="INFO"/>
<status status="PASS" starttime="20211210 13:19:02.978" endtime="20211210 13:19:02.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:02.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:02.979" endtime="20211210 13:19:02.979"/>
</kw>
<status status="PASS" starttime="20211210 13:19:02.968" endtime="20211210 13:19:02.980"/>
</kw>
<msg timestamp="20211210 13:19:02.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:02.967" endtime="20211210 13:19:02.980"/>
</kw>
<status status="PASS" starttime="20211210 13:19:02.966" endtime="20211210 13:19:02.980"/>
</kw>
<status status="PASS" starttime="20211210 13:19:02.966" endtime="20211210 13:19:02.980"/>
</kw>
<status status="PASS" starttime="20211210 13:19:02.954" endtime="20211210 13:19:02.981"/>
</kw>
<status status="PASS" starttime="20211210 13:19:02.954" endtime="20211210 13:19:02.981"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:02.985" level="INFO">Running command 'ozone sh bucket addacl fstest363/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:07.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:07.105" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:19:02.983" endtime="20211210 13:19:07.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:07.106" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211210 13:19:07.105" endtime="20211210 13:19:07.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:07.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:07.107" endtime="20211210 13:19:07.107"/>
</kw>
<status status="PASS" starttime="20211210 13:19:02.982" endtime="20211210 13:19:07.108"/>
</kw>
<msg timestamp="20211210 13:19:07.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:02.982" endtime="20211210 13:19:07.108"/>
</kw>
<status status="PASS" starttime="20211210 13:19:02.981" endtime="20211210 13:19:07.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:07.112" level="INFO">Running command 'ozone sh bucket getacl /fstest363/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:11.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:11.377" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211210 13:19:07.110" endtime="20211210 13:19:11.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:11.378" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:19:11.377" endtime="20211210 13:19:11.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:11.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:11.379" endtime="20211210 13:19:11.380"/>
</kw>
<status status="PASS" starttime="20211210 13:19:07.110" endtime="20211210 13:19:11.380"/>
</kw>
<msg timestamp="20211210 13:19:11.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:07.109" endtime="20211210 13:19:11.380"/>
</kw>
<status status="PASS" starttime="20211210 13:19:07.108" endtime="20211210 13:19:11.380"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:11.384" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:11.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:11.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:19:11.382" endtime="20211210 13:19:11.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:11.389" level="INFO"/>
<status status="PASS" starttime="20211210 13:19:11.389" endtime="20211210 13:19:11.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:11.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:11.390" endtime="20211210 13:19:11.390"/>
</kw>
<status status="PASS" starttime="20211210 13:19:11.382" endtime="20211210 13:19:11.391"/>
</kw>
<msg timestamp="20211210 13:19:11.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:11.381" endtime="20211210 13:19:11.391"/>
</kw>
<status status="PASS" starttime="20211210 13:19:11.381" endtime="20211210 13:19:11.391"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:11.396" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:11.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:11.399" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:19:11.394" endtime="20211210 13:19:11.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:11.400" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:19:11.399" endtime="20211210 13:19:11.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:11.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:11.400" endtime="20211210 13:19:11.401"/>
</kw>
<status status="PASS" starttime="20211210 13:19:11.393" endtime="20211210 13:19:11.402"/>
</kw>
<msg timestamp="20211210 13:19:11.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:11.393" endtime="20211210 13:19:11.402"/>
</kw>
<msg timestamp="20211210 13:19:11.402" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:19:11.392" endtime="20211210 13:19:11.402"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:19:11.403" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:19:11.402" endtime="20211210 13:19:11.403"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:11.408" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:11.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:11.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:19:11.406" endtime="20211210 13:19:11.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:11.417" level="INFO"/>
<status status="PASS" starttime="20211210 13:19:11.416" endtime="20211210 13:19:11.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:11.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:11.417" endtime="20211210 13:19:11.418"/>
</kw>
<status status="PASS" starttime="20211210 13:19:11.405" endtime="20211210 13:19:11.418"/>
</kw>
<msg timestamp="20211210 13:19:11.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:11.405" endtime="20211210 13:19:11.418"/>
</kw>
<status status="PASS" starttime="20211210 13:19:11.404" endtime="20211210 13:19:11.419"/>
</kw>
<status status="PASS" starttime="20211210 13:19:11.403" endtime="20211210 13:19:11.419"/>
</kw>
<status status="PASS" starttime="20211210 13:19:11.392" endtime="20211210 13:19:11.419"/>
</kw>
<status status="PASS" starttime="20211210 13:19:11.391" endtime="20211210 13:19:11.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:11.423" level="INFO">Running command 'ozone sh bucket getacl /fstest363/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:15.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:15.600" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211210 13:19:11.421" endtime="20211210 13:19:15.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:15.601" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211210 13:19:15.600" endtime="20211210 13:19:15.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:15.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:15.601" endtime="20211210 13:19:15.602"/>
</kw>
<status status="PASS" starttime="20211210 13:19:11.420" endtime="20211210 13:19:15.603"/>
</kw>
<msg timestamp="20211210 13:19:15.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:11.420" endtime="20211210 13:19:15.603"/>
</kw>
<status status="PASS" starttime="20211210 13:19:11.419" endtime="20211210 13:19:15.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:15.608" level="INFO">Running command 'ozone sh key list /fstest363/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:20.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:20.022" level="INFO">${output} = [ {
  "volumeName" : "fstest363",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-12-10T13:17:50.591Z",
  "modificationTime" : "2021-12-10T13:18:17.773Z",
  "...</msg>
<status status="PASS" starttime="20211210 13:19:15.605" endtime="20211210 13:19:20.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:20.023" level="INFO">[ {
  "volumeName" : "fstest363",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-12-10T13:17:50.591Z",
  "modificationTime" : "2021-12-10T13:18:17.773Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211210 13:19:20.022" endtime="20211210 13:19:20.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:20.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:20.023" endtime="20211210 13:19:20.024"/>
</kw>
<status status="PASS" starttime="20211210 13:19:15.605" endtime="20211210 13:19:20.024"/>
</kw>
<msg timestamp="20211210 13:19:20.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:15.604" endtime="20211210 13:19:20.025"/>
</kw>
<status status="PASS" starttime="20211210 13:19:15.604" endtime="20211210 13:19:20.025"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:20.029" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:20.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:20.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:19:20.027" endtime="20211210 13:19:20.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:20.034" level="INFO"/>
<status status="PASS" starttime="20211210 13:19:20.033" endtime="20211210 13:19:20.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:20.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:20.034" endtime="20211210 13:19:20.035"/>
</kw>
<status status="PASS" starttime="20211210 13:19:20.026" endtime="20211210 13:19:20.035"/>
</kw>
<msg timestamp="20211210 13:19:20.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:20.026" endtime="20211210 13:19:20.035"/>
</kw>
<status status="PASS" starttime="20211210 13:19:20.025" endtime="20211210 13:19:20.036"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:20.040" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:20.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:20.044" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:19:20.038" endtime="20211210 13:19:20.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:20.045" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:19:20.044" endtime="20211210 13:19:20.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:20.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:20.045" endtime="20211210 13:19:20.046"/>
</kw>
<status status="PASS" starttime="20211210 13:19:20.037" endtime="20211210 13:19:20.046"/>
</kw>
<msg timestamp="20211210 13:19:20.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:20.037" endtime="20211210 13:19:20.047"/>
</kw>
<msg timestamp="20211210 13:19:20.047" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:19:20.037" endtime="20211210 13:19:20.047"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:19:20.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:19:20.047" endtime="20211210 13:19:20.048"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:20.052" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:20.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:20.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:19:20.050" endtime="20211210 13:19:20.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:19:20.061" level="INFO"/>
<status status="PASS" starttime="20211210 13:19:20.060" endtime="20211210 13:19:20.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:19:20.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:19:20.061" endtime="20211210 13:19:20.062"/>
</kw>
<status status="PASS" starttime="20211210 13:19:20.050" endtime="20211210 13:19:20.062"/>
</kw>
<msg timestamp="20211210 13:19:20.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:19:20.049" endtime="20211210 13:19:20.062"/>
</kw>
<status status="PASS" starttime="20211210 13:19:20.049" endtime="20211210 13:19:20.063"/>
</kw>
<status status="PASS" starttime="20211210 13:19:20.048" endtime="20211210 13:19:20.063"/>
</kw>
<status status="PASS" starttime="20211210 13:19:20.036" endtime="20211210 13:19:20.063"/>
</kw>
<status status="PASS" starttime="20211210 13:19:20.036" endtime="20211210 13:19:20.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:18:22.219" endtime="20211210 13:19:20.063"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20211210 13:15:40.074" endtime="20211210 13:19:20.065"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s2-s4-t1" name="Secure S3 test Success">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211210 13:19:20.097" level="INFO">${randStr} = 8720154596</msg>
<status status="PASS" starttime="20211210 13:19:20.097" endtime="20211210 13:19:20.097"/>
</kw>
<msg timestamp="20211210 13:19:20.098" level="INFO">${random} = ozone-test-8720154596</msg>
<status status="PASS" starttime="20211210 13:19:20.096" endtime="20211210 13:19:20.098"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:19:20.100" level="INFO">${PREFIX} = ozone-test-8720154596</msg>
<status status="PASS" starttime="20211210 13:19:20.098" endtime="20211210 13:19:20.100"/>
</kw>
<status status="PASS" starttime="20211210 13:19:20.096" endtime="20211210 13:19:20.100"/>
</kw>
<status status="PASS" starttime="20211210 13:19:20.095" endtime="20211210 13:19:20.100"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:20.103" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:20.106" level="INFO">${rc} = 1</msg>
<msg timestamp="20211210 13:19:20.106" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20211210 13:19:20.101" endtime="20211210 13:19:20.106"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211210 13:19:20.106" endtime="20211210 13:19:20.107"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:20.109" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:19:20.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:19:20.414" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Packages'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20211210 13:19:20.107" endtime="20211210 13:19:20.414"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:19:20.420" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:20.095" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211210 13:19:20.418" endtime="20211210 13:24:20.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211210 13:24:20.095" endtime="20211210 13:24:20.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211210 13:24:20.096" endtime="20211210 13:24:20.096"/>
</kw>
<status status="FAIL" starttime="20211210 13:19:20.418" endtime="20211210 13:24:20.096"/>
</kw>
<msg timestamp="20211210 13:24:20.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211210 13:19:20.417" endtime="20211210 13:24:20.097"/>
</kw>
<status status="FAIL" starttime="20211210 13:19:20.416" endtime="20211210 13:24:20.097"/>
</kw>
<status status="FAIL" starttime="20211210 13:19:20.416" endtime="20211210 13:24:20.097"/>
</kw>
<status status="FAIL" starttime="20211210 13:19:20.415" endtime="20211210 13:24:20.097"/>
</kw>
<status status="FAIL" starttime="20211210 13:19:20.100" endtime="20211210 13:24:20.098"/>
</kw>
<status status="FAIL" starttime="20211210 13:19:20.100" endtime="20211210 13:24:20.098"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20211210 13:24:20.098" endtime="20211210 13:24:20.098"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20211210 13:24:20.098" endtime="20211210 13:24:20.098"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20211210 13:24:20.099" endtime="20211210 13:24:20.099"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20211210 13:24:20.099" endtime="20211210 13:24:20.099"/>
</kw>
<status status="FAIL" starttime="20211210 13:19:20.095" endtime="20211210 13:24:20.099"/>
</kw>
<status status="FAIL" starttime="20211210 13:19:20.095" endtime="20211210 13:24:20.099"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<status status="NOT RUN" starttime="20211210 13:24:20.100" endtime="20211210 13:24:20.100"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<status status="NOT RUN" starttime="20211210 13:24:20.100" endtime="20211210 13:24:20.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211210 13:24:20.100" endtime="20211210 13:24:20.100"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211210 13:19:20.094" endtime="20211210 13:24:20.101">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s2-s4-t2" name="Secure S3 put-object test">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20211210 13:24:20.104" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20211210 13:24:20.103" endtime="20211210 13:24:20.104"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20211210 13:24:20.106" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20211210 13:24:20.104" endtime="20211210 13:24:20.106"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:20.110" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:20.693" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:24:20.693" level="INFO">${output} = Unable to locate credentials. You can configure credentials by running "aws configure".</msg>
<status status="PASS" starttime="20211210 13:24:20.108" endtime="20211210 13:24:20.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:20.694" level="INFO">Unable to locate credentials. You can configure credentials by running "aws configure".</msg>
<status status="PASS" starttime="20211210 13:24:20.693" endtime="20211210 13:24:20.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:20.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211210 13:24:20.695" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211210 13:24:20.695" endtime="20211210 13:24:20.696"/>
</kw>
<status status="FAIL" starttime="20211210 13:24:20.107" endtime="20211210 13:24:20.696"/>
</kw>
<msg timestamp="20211210 13:24:20.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211210 13:24:20.107" endtime="20211210 13:24:20.696"/>
</kw>
<status status="FAIL" starttime="20211210 13:24:20.106" endtime="20211210 13:24:20.696"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20211210 13:24:20.697" endtime="20211210 13:24:20.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211210 13:24:20.697" endtime="20211210 13:24:20.697"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<status status="NOT RUN" starttime="20211210 13:24:20.697" endtime="20211210 13:24:20.697"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20211210 13:24:20.698" endtime="20211210 13:24:20.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211210 13:24:20.698" endtime="20211210 13:24:20.698"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<status status="NOT RUN" starttime="20211210 13:24:20.698" endtime="20211210 13:24:20.698"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<status status="NOT RUN" starttime="20211210 13:24:20.698" endtime="20211210 13:24:20.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211210 13:24:20.698" endtime="20211210 13:24:20.699"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211210 13:24:20.102" endtime="20211210 13:24:20.699">255 != 0</status>
</test>
<test id="s1-s2-s4-t3" name="Secure S3 test Failure">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:20.705" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:21.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:21.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:24:20.704" endtime="20211210 13:24:21.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:21.061" level="INFO"/>
<status status="PASS" starttime="20211210 13:24:21.060" endtime="20211210 13:24:21.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:21.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:21.062" endtime="20211210 13:24:21.062"/>
</kw>
<status status="PASS" starttime="20211210 13:24:20.703" endtime="20211210 13:24:21.063"/>
</kw>
<msg timestamp="20211210 13:24:21.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:20.702" endtime="20211210 13:24:21.063"/>
</kw>
<status status="PASS" starttime="20211210 13:24:20.702" endtime="20211210 13:24:21.063"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:21.067" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:21.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:21.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:24:21.065" endtime="20211210 13:24:21.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:21.433" level="INFO"/>
<status status="PASS" starttime="20211210 13:24:21.432" endtime="20211210 13:24:21.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:21.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:21.434" endtime="20211210 13:24:21.434"/>
</kw>
<status status="PASS" starttime="20211210 13:24:21.064" endtime="20211210 13:24:21.435"/>
</kw>
<msg timestamp="20211210 13:24:21.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:21.064" endtime="20211210 13:24:21.435"/>
</kw>
<status status="PASS" starttime="20211210 13:24:21.063" endtime="20211210 13:24:21.436"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:21.440" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:21.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:21.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:24:21.438" endtime="20211210 13:24:21.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:21.804" level="INFO"/>
<status status="PASS" starttime="20211210 13:24:21.803" endtime="20211210 13:24:21.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:21.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:21.804" endtime="20211210 13:24:21.805"/>
</kw>
<status status="PASS" starttime="20211210 13:24:21.437" endtime="20211210 13:24:21.805"/>
</kw>
<msg timestamp="20211210 13:24:21.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:21.437" endtime="20211210 13:24:21.805"/>
</kw>
<status status="PASS" starttime="20211210 13:24:21.436" endtime="20211210 13:24:21.806"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:21.810" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:22.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:22.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:24:21.808" endtime="20211210 13:24:22.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:22.190" level="INFO"/>
<status status="PASS" starttime="20211210 13:24:22.190" endtime="20211210 13:24:22.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:22.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:22.191" endtime="20211210 13:24:22.192"/>
</kw>
<status status="PASS" starttime="20211210 13:24:21.807" endtime="20211210 13:24:22.192"/>
</kw>
<msg timestamp="20211210 13:24:22.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:21.807" endtime="20211210 13:24:22.192"/>
</kw>
<status status="PASS" starttime="20211210 13:24:21.806" endtime="20211210 13:24:22.193"/>
</kw>
<status status="PASS" starttime="20211210 13:24:20.702" endtime="20211210 13:24:22.193"/>
</kw>
<status status="PASS" starttime="20211210 13:24:20.701" endtime="20211210 13:24:22.193"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:22.195" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:30.668" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:24:30.668" level="INFO">${result} = 
An error occurred (500) when calling the CreateBucket operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20211210 13:24:22.193" endtime="20211210 13:24:30.668"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20211210 13:24:30.669" endtime="20211210 13:24:30.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:24:20.700" endtime="20211210 13:24:30.670"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="FAIL" starttime="20211210 13:19:20.068" endtime="20211210 13:24:30.672"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s2-s5-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211210 13:24:30.685" endtime="20211210 13:24:30.686"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Execute" library="os">
<arg>ozone sh token get -t /tmp/ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:30.691" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:34.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:34.866" level="INFO">${output} = Successfully get token for service 172.18.0.2:9862
Kind: OzoneToken, Service: 172.18.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2021-12-10T13:2...</msg>
<status status="PASS" starttime="20211210 13:24:30.689" endtime="20211210 13:24:34.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:34.867" level="INFO">Successfully get token for service 172.18.0.2:9862
Kind: OzoneToken, Service: 172.18.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2021-12-10T13:24:34.580Z, maxDate=2021-12-17T13:24:34.580Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20211210 13:24:34.866" endtime="20211210 13:24:34.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:34.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:34.868" endtime="20211210 13:24:34.868"/>
</kw>
<status status="PASS" starttime="20211210 13:24:30.689" endtime="20211210 13:24:34.869"/>
</kw>
<msg timestamp="20211210 13:24:34.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:30.688" endtime="20211210 13:24:34.869"/>
</kw>
<status status="PASS" starttime="20211210 13:24:30.688" endtime="20211210 13:24:34.869"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>/tmp/ozone.token</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211210 13:24:34.870" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 402 bytes.</msg>
<status status="PASS" starttime="20211210 13:24:34.869" endtime="20211210 13:24:34.870"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:34.874" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:34.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:34.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:24:34.872" endtime="20211210 13:24:34.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:34.879" level="INFO"/>
<status status="PASS" starttime="20211210 13:24:34.878" endtime="20211210 13:24:34.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:34.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:34.879" endtime="20211210 13:24:34.880"/>
</kw>
<status status="PASS" starttime="20211210 13:24:34.871" endtime="20211210 13:24:34.880"/>
</kw>
<msg timestamp="20211210 13:24:34.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:34.871" endtime="20211210 13:24:34.881"/>
</kw>
<status status="PASS" starttime="20211210 13:24:34.870" endtime="20211210 13:24:34.881"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>/tmp/ozone.token</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20211210 13:24:34.882" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20211210 13:24:34.881" endtime="20211210 13:24:34.882"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:34.886" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:38.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:38.807" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20211210 13:24:34.884" endtime="20211210 13:24:38.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:38.809" level="INFO">[ ]</msg>
<status status="PASS" starttime="20211210 13:24:38.807" endtime="20211210 13:24:38.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:38.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:38.810" endtime="20211210 13:24:38.810"/>
</kw>
<status status="PASS" starttime="20211210 13:24:34.883" endtime="20211210 13:24:38.811"/>
</kw>
<msg timestamp="20211210 13:24:38.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:34.882" endtime="20211210 13:24:38.811"/>
</kw>
<msg timestamp="20211210 13:24:38.811" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20211210 13:24:34.882" endtime="20211210 13:24:38.811"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:24:38.811" endtime="20211210 13:24:38.812"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20211210 13:24:38.812" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20211210 13:24:38.812" endtime="20211210 13:24:38.813"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:38.815" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:42.155" level="INFO">${rc} = 255</msg>
<msg timestamp="20211210 13:24:42.156" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20211210 13:24:38.813" endtime="20211210 13:24:42.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:42.157" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20211210 13:24:42.156" endtime="20211210 13:24:42.157"/>
</kw>
<msg timestamp="20211210 13:24:42.157" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20211210 13:24:38.813" endtime="20211210 13:24:42.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:24:42.158" endtime="20211210 13:24:42.158"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:42.163" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:42.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:42.167" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 13:24:42.161" endtime="20211210 13:24:42.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:42.168" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 13:24:42.167" endtime="20211210 13:24:42.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:42.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:42.168" endtime="20211210 13:24:42.169"/>
</kw>
<status status="PASS" starttime="20211210 13:24:42.160" endtime="20211210 13:24:42.169"/>
</kw>
<msg timestamp="20211210 13:24:42.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:42.160" endtime="20211210 13:24:42.170"/>
</kw>
<msg timestamp="20211210 13:24:42.170" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 13:24:42.159" endtime="20211210 13:24:42.170"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 13:24:42.172" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 13:24:42.170" endtime="20211210 13:24:42.173"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:42.177" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:44.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:44.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 13:24:42.175" endtime="20211210 13:24:44.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:44.798" level="INFO"/>
<status status="PASS" starttime="20211210 13:24:44.796" endtime="20211210 13:24:44.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:44.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:44.798" endtime="20211210 13:24:44.799"/>
</kw>
<status status="PASS" starttime="20211210 13:24:42.174" endtime="20211210 13:24:44.799"/>
</kw>
<msg timestamp="20211210 13:24:44.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:42.174" endtime="20211210 13:24:44.799"/>
</kw>
<status status="PASS" starttime="20211210 13:24:42.173" endtime="20211210 13:24:44.800"/>
</kw>
<status status="PASS" starttime="20211210 13:24:42.173" endtime="20211210 13:24:44.800"/>
</kw>
<status status="PASS" starttime="20211210 13:24:42.159" endtime="20211210 13:24:44.800"/>
</kw>
<status status="PASS" starttime="20211210 13:24:42.158" endtime="20211210 13:24:44.800"/>
</kw>
<status status="PASS" starttime="20211210 13:24:30.687" endtime="20211210 13:24:44.800"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:44.805" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:46.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:46.843" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2021-12-10T13:24:34.580Z, maxDate=2021-12-17T13:24:34.580Z, sequen...</msg>
<status status="PASS" starttime="20211210 13:24:44.803" endtime="20211210 13:24:46.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:46.845" level="INFO">Kind: OzoneToken, Service: 172.18.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2021-12-10T13:24:34.580Z, maxDate=2021-12-17T13:24:34.580Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)</msg>
<status status="PASS" starttime="20211210 13:24:46.844" endtime="20211210 13:24:46.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:46.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:46.845" endtime="20211210 13:24:46.846"/>
</kw>
<status status="PASS" starttime="20211210 13:24:44.802" endtime="20211210 13:24:46.846"/>
</kw>
<msg timestamp="20211210 13:24:46.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:44.802" endtime="20211210 13:24:46.846"/>
</kw>
<msg timestamp="20211210 13:24:46.847" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.2:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2021-12-10T13:24:34.580Z, maxDate=2021-12-17T13:24:34.580Z, sequen...</msg>
<status status="PASS" starttime="20211210 13:24:44.801" endtime="20211210 13:24:46.847"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211210 13:24:46.848" level="INFO">Length is 311</msg>
<status status="PASS" starttime="20211210 13:24:46.847" endtime="20211210 13:24:46.848"/>
</kw>
<status status="PASS" starttime="20211210 13:24:44.801" endtime="20211210 13:24:46.848"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:46.852" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:50.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:50.851" level="INFO">${output} = Token renewed successfully, expiry time: 2021-12-11T13:24:50.764Z.</msg>
<status status="PASS" starttime="20211210 13:24:46.850" endtime="20211210 13:24:50.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:50.852" level="INFO">Token renewed successfully, expiry time: 2021-12-11T13:24:50.764Z.</msg>
<status status="PASS" starttime="20211210 13:24:50.851" endtime="20211210 13:24:50.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:50.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:50.852" endtime="20211210 13:24:50.853"/>
</kw>
<status status="PASS" starttime="20211210 13:24:46.849" endtime="20211210 13:24:50.853"/>
</kw>
<msg timestamp="20211210 13:24:50.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:46.849" endtime="20211210 13:24:50.854"/>
</kw>
<msg timestamp="20211210 13:24:50.854" level="INFO">${output} = Token renewed successfully, expiry time: 2021-12-11T13:24:50.764Z.</msg>
<status status="PASS" starttime="20211210 13:24:46.849" endtime="20211210 13:24:50.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:24:50.854" endtime="20211210 13:24:50.855"/>
</kw>
<status status="PASS" starttime="20211210 13:24:46.848" endtime="20211210 13:24:50.855"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:50.859" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:54.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:54.803" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20211210 13:24:50.857" endtime="20211210 13:24:54.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:54.805" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20211210 13:24:54.804" endtime="20211210 13:24:54.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:54.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:54.805" endtime="20211210 13:24:54.806"/>
</kw>
<status status="PASS" starttime="20211210 13:24:50.857" endtime="20211210 13:24:54.807"/>
</kw>
<msg timestamp="20211210 13:24:54.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:50.856" endtime="20211210 13:24:54.807"/>
</kw>
<msg timestamp="20211210 13:24:54.807" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20211210 13:24:50.856" endtime="20211210 13:24:54.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:24:54.807" endtime="20211210 13:24:54.808"/>
</kw>
<status status="PASS" starttime="20211210 13:24:50.855" endtime="20211210 13:24:54.808"/>
</kw>
<status status="PASS" starttime="20211210 13:24:30.686" endtime="20211210 13:24:54.808"/>
</kw>
<status status="PASS" starttime="20211210 13:24:30.686" endtime="20211210 13:24:54.808"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 13:24:54.813" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 13:24:56.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 13:24:56.994" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20211210 13:24:54.811" endtime="20211210 13:24:56.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 13:24:56.995" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20211210 13:24:56.994" endtime="20211210 13:24:56.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 13:24:56.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 13:24:56.996" endtime="20211210 13:24:56.997"/>
</kw>
<status status="PASS" starttime="20211210 13:24:54.810" endtime="20211210 13:24:56.997"/>
</kw>
<msg timestamp="20211210 13:24:56.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 13:24:54.810" endtime="20211210 13:24:56.997"/>
</kw>
<msg timestamp="20211210 13:24:56.998" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20211210 13:24:54.809" endtime="20211210 13:24:56.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211210 13:24:56.998" endtime="20211210 13:24:56.998"/>
</kw>
<status status="PASS" starttime="20211210 13:24:54.809" endtime="20211210 13:24:56.999"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211210 13:24:30.684" endtime="20211210 13:24:56.999"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20211210 13:24:30.674" endtime="20211210 13:24:57.000"/>
</suite>
<status status="FAIL" starttime="20211210 13:14:57.898" endtime="20211210 13:24:57.003"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:56:54.064" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:56:54.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:56:54.069" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211210 12:56:54.061" endtime="20211210 12:56:54.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:56:54.070" level="INFO">scm</msg>
<status status="PASS" starttime="20211210 12:56:54.069" endtime="20211210 12:56:54.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:56:54.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:56:54.070" endtime="20211210 12:56:54.071"/>
</kw>
<status status="PASS" starttime="20211210 12:56:54.060" endtime="20211210 12:56:54.071"/>
</kw>
<msg timestamp="20211210 12:56:54.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:56:54.060" endtime="20211210 12:56:54.071"/>
</kw>
<msg timestamp="20211210 12:56:54.072" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211210 12:56:54.059" endtime="20211210 12:56:54.072"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211210 12:56:54.073" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211210 12:56:54.072" endtime="20211210 12:56:54.073"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211210 12:56:54.077" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211210 12:56:54.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20211210 12:56:54.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211210 12:56:54.075" endtime="20211210 12:56:54.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211210 12:56:54.087" level="INFO"/>
<status status="PASS" starttime="20211210 12:56:54.086" endtime="20211210 12:56:54.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211210 12:56:54.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211210 12:56:54.087" endtime="20211210 12:56:54.088"/>
</kw>
<status status="PASS" starttime="20211210 12:56:54.074" endtime="20211210 12:56:54.088"/>
</kw>
<msg timestamp="20211210 12:56:54.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211210 12:56:54.074" endtime="20211210 12:56:54.088"/>
</kw>
<status status="PASS" starttime="20211210 12:56:54.073" endtime="20211210 12:56:54.089"/>
</kw>
<status status="PASS" starttime="20211210 12:56:54.073" endtime="20211210 12:56:54.089"/>
</kw>
<status status="PASS" starttime="20211210 12:56:54.058" endtime="20211210 12:56:54.089"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211210 12:56:54.057" endtime="20211210 12:56:54.089"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211210 12:56:53.994" endtime="20211210 12:56:54.091"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1672713"/>
</suite>
<statistics>
<total>
<stat pass="45" fail="2" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="45" fail="2" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="28" fail="0" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="16" fail="2" skip="0" id="s1-s2" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="Bucket-Encryption">ozonesecure.Security.Bucket-Encryption</stat>
<stat pass="9" fail="0" skip="0" id="s1-s2-s3" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="1" fail="2" skip="0" id="s1-s2-s4" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
