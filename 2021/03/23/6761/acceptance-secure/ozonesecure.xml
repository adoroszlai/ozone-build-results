<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210323 02:34:48.060" schemaversion="2" generator="Rebot 4.0 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:46:18.342" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:46:18.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:46:18.344" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 01:46:18.345" starttime="20210323 01:46:18.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:46:18.346" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 01:46:18.346" starttime="20210323 01:46:18.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:46:18.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:46:18.347" starttime="20210323 01:46:18.346"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.347" starttime="20210323 01:46:18.338"/>
</kw>
<msg timestamp="20210323 01:46:18.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:46:18.347" starttime="20210323 01:46:18.338"/>
</kw>
<msg timestamp="20210323 01:46:18.347" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 01:46:18.347" starttime="20210323 01:46:18.337"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:46:18.351" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:46:18.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:46:18.358" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:46:18.358" starttime="20210323 01:46:18.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:46:18.359" level="INFO"/>
<status status="PASS" endtime="20210323 01:46:18.359" starttime="20210323 01:46:18.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:46:18.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:46:18.360" starttime="20210323 01:46:18.359"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.360" starttime="20210323 01:46:18.349"/>
</kw>
<msg timestamp="20210323 01:46:18.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:46:18.360" starttime="20210323 01:46:18.349"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.360" starttime="20210323 01:46:18.348"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.361" starttime="20210323 01:46:18.348"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.361" starttime="20210323 01:46:18.337"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.361" starttime="20210323 01:46:18.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:46:18.364" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:46:18.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:46:18.471" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210323 01:46:18.471" starttime="20210323 01:46:18.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:46:18.472" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 23 Mar 2021 01:46:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCDWxy8qHQPcR/rkg7dRepa3SRn/tbKDIQEN55xRfMcpzF5jYPYDpcBZPOCs68KJ3XcTqRiSkcxKrPeAqdkYn5VxQY
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1616499978462&amp;s=D0hREsYTWFvnkEJv9tffJWAA5X6aCkjq2mxOxvrr/y0="; Path=/; HttpOnly
Last-Modified: Tue, 23 Mar 2021 01:30:36 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210323 01:46:18.473" starttime="20210323 01:46:18.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:46:18.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:46:18.473" starttime="20210323 01:46:18.473"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.474" starttime="20210323 01:46:18.362"/>
</kw>
<msg timestamp="20210323 01:46:18.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:46:18.474" starttime="20210323 01:46:18.361"/>
</kw>
<msg timestamp="20210323 01:46:18.474" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210323 01:46:18.474" starttime="20210323 01:46:18.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:46:18.475" starttime="20210323 01:46:18.474"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210323 01:46:18.475" starttime="20210323 01:46:18.335"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:46:18.484" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:46:18.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:46:18.487" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 01:46:18.487" starttime="20210323 01:46:18.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:46:18.488" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 01:46:18.488" starttime="20210323 01:46:18.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:46:18.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:46:18.489" starttime="20210323 01:46:18.488"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.489" starttime="20210323 01:46:18.480"/>
</kw>
<msg timestamp="20210323 01:46:18.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:46:18.489" starttime="20210323 01:46:18.480"/>
</kw>
<msg timestamp="20210323 01:46:18.489" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 01:46:18.489" starttime="20210323 01:46:18.479"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 01:46:18.491" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 01:46:18.491" starttime="20210323 01:46:18.490"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:46:18.495" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:46:18.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:46:18.501" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:46:18.501" starttime="20210323 01:46:18.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:46:18.502" level="INFO"/>
<status status="PASS" endtime="20210323 01:46:18.503" starttime="20210323 01:46:18.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:46:18.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:46:18.503" starttime="20210323 01:46:18.503"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.503" starttime="20210323 01:46:18.492"/>
</kw>
<msg timestamp="20210323 01:46:18.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:46:18.504" starttime="20210323 01:46:18.492"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.504" starttime="20210323 01:46:18.491"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.504" starttime="20210323 01:46:18.491"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.504" starttime="20210323 01:46:18.479"/>
</kw>
<status status="PASS" endtime="20210323 01:46:18.504" starttime="20210323 01:46:18.478"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:46:18.508" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:18.478" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210323 01:51:18.478" starttime="20210323 01:46:18.506"/>
</kw>
<status status="FAIL" endtime="20210323 01:51:18.479" starttime="20210323 01:46:18.505"/>
</kw>
<msg timestamp="20210323 01:51:18.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210323 01:51:18.479" starttime="20210323 01:46:18.505"/>
</kw>
<status status="FAIL" endtime="20210323 01:51:18.479" starttime="20210323 01:46:18.504"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210323 01:51:18.479" starttime="20210323 01:46:18.477">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20210323 01:51:18.481" starttime="20210323 01:46:18.310"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:18.494" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:21.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:51:21.235" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210323 01:51:21.235" starttime="20210323 01:51:18.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:21.236" level="INFO">om</msg>
<status status="PASS" endtime="20210323 01:51:21.236" starttime="20210323 01:51:21.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:21.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:21.237" starttime="20210323 01:51:21.236"/>
</kw>
<status status="PASS" endtime="20210323 01:51:21.238" starttime="20210323 01:51:18.490"/>
</kw>
<msg timestamp="20210323 01:51:21.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:51:21.238" starttime="20210323 01:51:18.490"/>
</kw>
<msg timestamp="20210323 01:51:21.238" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210323 01:51:21.238" starttime="20210323 01:51:18.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:51:21.239" starttime="20210323 01:51:21.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:21.243" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:24.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:51:24.154" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210323 01:51:24.154" starttime="20210323 01:51:21.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:24.156" level="INFO">om</msg>
<status status="PASS" endtime="20210323 01:51:24.156" starttime="20210323 01:51:24.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:24.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:24.158" starttime="20210323 01:51:24.156"/>
</kw>
<status status="PASS" endtime="20210323 01:51:24.159" starttime="20210323 01:51:21.240"/>
</kw>
<msg timestamp="20210323 01:51:24.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:51:24.159" starttime="20210323 01:51:21.239"/>
</kw>
<msg timestamp="20210323 01:51:24.159" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210323 01:51:24.159" starttime="20210323 01:51:21.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:51:24.160" starttime="20210323 01:51:24.160"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210323 01:51:24.161" starttime="20210323 01:51:18.489"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:24.167" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:26.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:51:26.998" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 01:51:26.998" starttime="20210323 01:51:24.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:26.999" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 01:51:26.999" starttime="20210323 01:51:26.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:27.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:27.000" starttime="20210323 01:51:26.999"/>
</kw>
<status status="PASS" endtime="20210323 01:51:27.000" starttime="20210323 01:51:24.164"/>
</kw>
<msg timestamp="20210323 01:51:27.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:51:27.000" starttime="20210323 01:51:24.163"/>
</kw>
<msg timestamp="20210323 01:51:27.000" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210323 01:51:27.000" starttime="20210323 01:51:24.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:51:27.001" starttime="20210323 01:51:27.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:27.005" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:29.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:51:29.532" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 01:51:29.532" starttime="20210323 01:51:27.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:29.533" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 01:51:29.533" starttime="20210323 01:51:29.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:29.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:29.534" starttime="20210323 01:51:29.534"/>
</kw>
<status status="PASS" endtime="20210323 01:51:29.534" starttime="20210323 01:51:27.002"/>
</kw>
<msg timestamp="20210323 01:51:29.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:51:29.535" starttime="20210323 01:51:27.002"/>
</kw>
<msg timestamp="20210323 01:51:29.535" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210323 01:51:29.535" starttime="20210323 01:51:27.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:51:29.535" starttime="20210323 01:51:29.535"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210323 01:51:29.536" starttime="20210323 01:51:24.162"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:29.543" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:32.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:51:32.077" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210323 01:51:32.077" starttime="20210323 01:51:29.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:32.079" level="INFO">om</msg>
<status status="PASS" endtime="20210323 01:51:32.079" starttime="20210323 01:51:32.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:32.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:32.082" starttime="20210323 01:51:32.080"/>
</kw>
<status status="PASS" endtime="20210323 01:51:32.083" starttime="20210323 01:51:29.539"/>
</kw>
<msg timestamp="20210323 01:51:32.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:51:32.083" starttime="20210323 01:51:29.539"/>
</kw>
<msg timestamp="20210323 01:51:32.084" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210323 01:51:32.084" starttime="20210323 01:51:29.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:51:32.085" starttime="20210323 01:51:32.084"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:51:32.086" starttime="20210323 01:51:32.085"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:32.092" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:34.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:51:34.418" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210323 01:51:34.418" starttime="20210323 01:51:32.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:34.421" level="INFO">om</msg>
<status status="PASS" endtime="20210323 01:51:34.421" starttime="20210323 01:51:34.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:34.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:34.423" starttime="20210323 01:51:34.422"/>
</kw>
<status status="PASS" endtime="20210323 01:51:34.424" starttime="20210323 01:51:32.088"/>
</kw>
<msg timestamp="20210323 01:51:34.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:51:34.425" starttime="20210323 01:51:32.088"/>
</kw>
<msg timestamp="20210323 01:51:34.425" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210323 01:51:34.425" starttime="20210323 01:51:32.087"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:51:34.426" starttime="20210323 01:51:34.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:51:34.426" starttime="20210323 01:51:34.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210323 01:51:34.427" starttime="20210323 01:51:29.537"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:34.434" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:36.789" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 01:51:36.789" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210323 01:51:36.789" starttime="20210323 01:51:34.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:36.790" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210323 01:51:36.790" starttime="20210323 01:51:36.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:36.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:36.791" starttime="20210323 01:51:36.791"/>
</kw>
<msg timestamp="20210323 01:51:36.791" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210323 01:51:36.792" starttime="20210323 01:51:34.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:51:36.792" starttime="20210323 01:51:36.792"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:36.795" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:39.282" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 01:51:39.282" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210323 01:51:39.282" starttime="20210323 01:51:36.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:39.284" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210323 01:51:39.284" starttime="20210323 01:51:39.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:39.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:39.284" starttime="20210323 01:51:39.284"/>
</kw>
<msg timestamp="20210323 01:51:39.285" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210323 01:51:39.285" starttime="20210323 01:51:36.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:51:39.286" starttime="20210323 01:51:39.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210323 01:51:39.287" starttime="20210323 01:51:34.428"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210323 01:51:39.290" starttime="20210323 01:51:18.483"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="SETUP" name="Create volumes">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210323 01:51:39.314" level="INFO">${random} = 39498</msg>
<status status="PASS" endtime="20210323 01:51:39.315" starttime="20210323 01:51:39.314"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 01:51:39.317" level="INFO">${source} = 39498-source</msg>
<status status="PASS" endtime="20210323 01:51:39.317" starttime="20210323 01:51:39.315"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 01:51:39.318" level="INFO">${target} = 39498-target</msg>
<status status="PASS" endtime="20210323 01:51:39.319" starttime="20210323 01:51:39.317"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:39.323" level="INFO">Running command 'ozone sh volume create 39498-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:46.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:51:46.062" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:51:46.062" starttime="20210323 01:51:39.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:46.064" level="INFO"/>
<status status="PASS" endtime="20210323 01:51:46.064" starttime="20210323 01:51:46.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:46.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:46.065" starttime="20210323 01:51:46.064"/>
</kw>
<status status="PASS" endtime="20210323 01:51:46.066" starttime="20210323 01:51:39.320"/>
</kw>
<msg timestamp="20210323 01:51:46.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:51:46.066" starttime="20210323 01:51:39.319"/>
</kw>
<status status="PASS" endtime="20210323 01:51:46.066" starttime="20210323 01:51:39.319"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:46.072" level="INFO">Running command 'ozone sh volume create 39498-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:53.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:51:53.061" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:51:53.061" starttime="20210323 01:51:46.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:53.062" level="INFO"/>
<status status="PASS" endtime="20210323 01:51:53.062" starttime="20210323 01:51:53.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:53.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:53.063" starttime="20210323 01:51:53.062"/>
</kw>
<status status="PASS" endtime="20210323 01:51:53.063" starttime="20210323 01:51:46.068"/>
</kw>
<msg timestamp="20210323 01:51:53.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:51:53.063" starttime="20210323 01:51:46.068"/>
</kw>
<status status="PASS" endtime="20210323 01:51:53.064" starttime="20210323 01:51:46.067"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:53.068" level="INFO">Running command 'ozone sh bucket create 39498-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:51:59.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:51:59.504" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:51:59.505" starttime="20210323 01:51:53.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:51:59.506" level="INFO"/>
<status status="PASS" endtime="20210323 01:51:59.506" starttime="20210323 01:51:59.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:51:59.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:51:59.507" starttime="20210323 01:51:59.506"/>
</kw>
<status status="PASS" endtime="20210323 01:51:59.507" starttime="20210323 01:51:53.065"/>
</kw>
<msg timestamp="20210323 01:51:59.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:51:59.508" starttime="20210323 01:51:53.065"/>
</kw>
<status status="PASS" endtime="20210323 01:51:59.508" starttime="20210323 01:51:53.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:51:59.513" level="INFO">Running command 'ozone sh key put 39498-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:55:08.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:55:08.410" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:55:08.410" starttime="20210323 01:51:59.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:55:08.411" level="INFO"/>
<status status="PASS" endtime="20210323 01:55:08.411" starttime="20210323 01:55:08.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:55:08.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:55:08.412" starttime="20210323 01:55:08.411"/>
</kw>
<status status="PASS" endtime="20210323 01:55:08.412" starttime="20210323 01:51:59.509"/>
</kw>
<msg timestamp="20210323 01:55:08.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:55:08.412" starttime="20210323 01:51:59.509"/>
</kw>
<status status="PASS" endtime="20210323 01:55:08.412" starttime="20210323 01:51:59.508"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:55:08.417" level="INFO">Running command 'ozone sh bucket create 39498-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:55:13.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:55:13.575" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:55:13.575" starttime="20210323 01:55:08.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:55:13.576" level="INFO"/>
<status status="PASS" endtime="20210323 01:55:13.577" starttime="20210323 01:55:13.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:55:13.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:55:13.577" starttime="20210323 01:55:13.577"/>
</kw>
<status status="PASS" endtime="20210323 01:55:13.577" starttime="20210323 01:55:08.414"/>
</kw>
<msg timestamp="20210323 01:55:13.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:55:13.578" starttime="20210323 01:55:08.413"/>
</kw>
<status status="PASS" endtime="20210323 01:55:13.578" starttime="20210323 01:55:08.413"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:55:13.581" level="INFO">Running command 'ozone sh bucket link 39498-source/readable-bucket 39498-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:55:19.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:55:19.340" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:55:19.340" starttime="20210323 01:55:13.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:55:19.341" level="INFO"/>
<status status="PASS" endtime="20210323 01:55:19.341" starttime="20210323 01:55:19.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:55:19.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:55:19.342" starttime="20210323 01:55:19.341"/>
</kw>
<status status="PASS" endtime="20210323 01:55:19.342" starttime="20210323 01:55:13.579"/>
</kw>
<msg timestamp="20210323 01:55:19.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:55:19.342" starttime="20210323 01:55:13.579"/>
</kw>
<status status="PASS" endtime="20210323 01:55:19.342" starttime="20210323 01:55:13.578"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:55:19.347" level="INFO">Running command 'ozone sh bucket link 39498-source/readable-bucket 39498-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:55:26.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:55:26.338" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:55:26.338" starttime="20210323 01:55:19.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:55:26.339" level="INFO"/>
<status status="PASS" endtime="20210323 01:55:26.339" starttime="20210323 01:55:26.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:55:26.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:55:26.339" starttime="20210323 01:55:26.339"/>
</kw>
<status status="PASS" endtime="20210323 01:55:26.340" starttime="20210323 01:55:19.343"/>
</kw>
<msg timestamp="20210323 01:55:26.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:55:26.340" starttime="20210323 01:55:19.343"/>
</kw>
<status status="PASS" endtime="20210323 01:55:26.340" starttime="20210323 01:55:19.342"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:55:26.345" level="INFO">Running command 'ozone sh bucket link 39498-source/unreadable-bucket 39498-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:55:32.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:55:32.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:55:32.826" starttime="20210323 01:55:26.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:55:32.827" level="INFO"/>
<status status="PASS" endtime="20210323 01:55:32.828" starttime="20210323 01:55:32.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:55:32.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:55:32.828" starttime="20210323 01:55:32.828"/>
</kw>
<status status="PASS" endtime="20210323 01:55:32.828" starttime="20210323 01:55:26.341"/>
</kw>
<msg timestamp="20210323 01:55:32.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:55:32.829" starttime="20210323 01:55:26.341"/>
</kw>
<status status="PASS" endtime="20210323 01:55:32.829" starttime="20210323 01:55:26.340"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:55:32.838" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 39498-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:55:39.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:55:39.266" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 01:55:39.266" starttime="20210323 01:55:32.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:55:39.267" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 01:55:39.267" starttime="20210323 01:55:39.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:55:39.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:55:39.270" starttime="20210323 01:55:39.268"/>
</kw>
<status status="PASS" endtime="20210323 01:55:39.270" starttime="20210323 01:55:32.834"/>
</kw>
<msg timestamp="20210323 01:55:39.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:55:39.273" starttime="20210323 01:55:32.834"/>
</kw>
<status status="PASS" endtime="20210323 01:55:39.273" starttime="20210323 01:55:32.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:55:39.286" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 39498-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:55:43.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:55:43.914" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 01:55:43.914" starttime="20210323 01:55:39.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:55:43.915" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 01:55:43.915" starttime="20210323 01:55:43.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:55:43.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:55:43.916" starttime="20210323 01:55:43.915"/>
</kw>
<status status="PASS" endtime="20210323 01:55:43.916" starttime="20210323 01:55:39.278"/>
</kw>
<msg timestamp="20210323 01:55:43.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:55:43.916" starttime="20210323 01:55:39.277"/>
</kw>
<status status="PASS" endtime="20210323 01:55:43.916" starttime="20210323 01:55:39.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:55:43.920" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 39498-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:55:49.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:55:49.711" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 01:55:49.711" starttime="20210323 01:55:43.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:55:49.712" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 01:55:49.712" starttime="20210323 01:55:49.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:55:49.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:55:49.712" starttime="20210323 01:55:49.712"/>
</kw>
<status status="PASS" endtime="20210323 01:55:49.713" starttime="20210323 01:55:43.918"/>
</kw>
<msg timestamp="20210323 01:55:49.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:55:49.713" starttime="20210323 01:55:43.917"/>
</kw>
<status status="PASS" endtime="20210323 01:55:49.713" starttime="20210323 01:55:43.917"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:55:49.717" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 39498-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:55:54.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:55:54.229" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 01:55:54.229" starttime="20210323 01:55:49.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:55:54.230" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 01:55:54.232" starttime="20210323 01:55:54.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:55:54.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:55:54.233" starttime="20210323 01:55:54.232"/>
</kw>
<status status="PASS" endtime="20210323 01:55:54.233" starttime="20210323 01:55:49.714"/>
</kw>
<msg timestamp="20210323 01:55:54.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:55:54.233" starttime="20210323 01:55:49.714"/>
</kw>
<status status="PASS" endtime="20210323 01:55:54.233" starttime="20210323 01:55:49.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:55:54.245" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 39498-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:56:00.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:56:00.967" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 01:56:00.968" starttime="20210323 01:55:54.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:56:00.969" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 01:56:00.970" starttime="20210323 01:56:00.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:56:00.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:56:00.971" starttime="20210323 01:56:00.970"/>
</kw>
<status status="PASS" endtime="20210323 01:56:00.972" starttime="20210323 01:55:54.234"/>
</kw>
<msg timestamp="20210323 01:56:00.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:56:00.972" starttime="20210323 01:55:54.234"/>
</kw>
<status status="PASS" endtime="20210323 01:56:00.972" starttime="20210323 01:55:54.234"/>
</kw>
<status status="PASS" endtime="20210323 01:56:00.973" starttime="20210323 01:51:53.064"/>
</kw>
<status status="PASS" endtime="20210323 01:56:00.973" starttime="20210323 01:51:53.064"/>
</kw>
<status status="PASS" endtime="20210323 01:56:00.973" starttime="20210323 01:51:39.314"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:56:00.983" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:56:00.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:56:00.986" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 01:56:00.987" starttime="20210323 01:56:00.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:56:00.988" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 01:56:00.989" starttime="20210323 01:56:00.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:56:00.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:56:00.992" starttime="20210323 01:56:00.989"/>
</kw>
<status status="PASS" endtime="20210323 01:56:00.993" starttime="20210323 01:56:00.979"/>
</kw>
<msg timestamp="20210323 01:56:00.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:56:00.994" starttime="20210323 01:56:00.978"/>
</kw>
<msg timestamp="20210323 01:56:00.994" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 01:56:00.994" starttime="20210323 01:56:00.977"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 01:56:00.995" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 01:56:00.995" starttime="20210323 01:56:00.994"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:56:01.001" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:56:01.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:56:01.040" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:56:01.040" starttime="20210323 01:56:00.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:56:01.041" level="INFO"/>
<status status="PASS" endtime="20210323 01:56:01.041" starttime="20210323 01:56:01.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:56:01.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:56:01.042" starttime="20210323 01:56:01.041"/>
</kw>
<status status="PASS" endtime="20210323 01:56:01.042" starttime="20210323 01:56:00.997"/>
</kw>
<msg timestamp="20210323 01:56:01.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:56:01.042" starttime="20210323 01:56:00.997"/>
</kw>
<status status="PASS" endtime="20210323 01:56:01.043" starttime="20210323 01:56:00.996"/>
</kw>
<status status="PASS" endtime="20210323 01:56:01.043" starttime="20210323 01:56:00.995"/>
</kw>
<status status="PASS" endtime="20210323 01:56:01.043" starttime="20210323 01:56:00.976"/>
</kw>
<status status="PASS" endtime="20210323 01:56:01.043" starttime="20210323 01:56:00.975"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:56:01.047" level="INFO">Running command 'ozone sh bucket link 39498-source/no-such-bucket 39498-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:56:07.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:56:07.600" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:56:07.600" starttime="20210323 01:56:01.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:56:07.601" level="INFO"/>
<status status="PASS" endtime="20210323 01:56:07.602" starttime="20210323 01:56:07.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:56:07.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:56:07.603" starttime="20210323 01:56:07.602"/>
</kw>
<status status="PASS" endtime="20210323 01:56:07.603" starttime="20210323 01:56:01.044"/>
</kw>
<msg timestamp="20210323 01:56:07.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:56:07.603" starttime="20210323 01:56:01.044"/>
</kw>
<status status="PASS" endtime="20210323 01:56:07.603" starttime="20210323 01:56:01.043"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:56:07.607" level="INFO">Running command 'ozone sh key list 39498-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:56:13.974" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 01:56:13.974" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210323 01:56:13.974" starttime="20210323 01:56:07.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:56:13.975" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210323 01:56:13.975" starttime="20210323 01:56:13.974"/>
</kw>
<msg timestamp="20210323 01:56:13.975" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210323 01:56:13.975" starttime="20210323 01:56:07.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 01:56:13.976" starttime="20210323 01:56:13.976"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 01:56:13.976" starttime="20210323 01:56:00.973"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:56:13.986" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:56:13.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:56:13.990" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 01:56:13.990" starttime="20210323 01:56:13.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:56:13.992" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 01:56:13.992" starttime="20210323 01:56:13.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:56:13.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:56:13.994" starttime="20210323 01:56:13.993"/>
</kw>
<status status="PASS" endtime="20210323 01:56:13.994" starttime="20210323 01:56:13.981"/>
</kw>
<msg timestamp="20210323 01:56:13.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:56:13.995" starttime="20210323 01:56:13.981"/>
</kw>
<msg timestamp="20210323 01:56:13.995" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 01:56:13.995" starttime="20210323 01:56:13.980"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 01:56:13.996" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 01:56:13.997" starttime="20210323 01:56:13.995"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:56:14.002" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:56:14.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:56:14.013" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:56:14.013" starttime="20210323 01:56:13.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:56:14.015" level="INFO"/>
<status status="PASS" endtime="20210323 01:56:14.015" starttime="20210323 01:56:14.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:56:14.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:56:14.018" starttime="20210323 01:56:14.015"/>
</kw>
<status status="PASS" endtime="20210323 01:56:14.019" starttime="20210323 01:56:13.999"/>
</kw>
<msg timestamp="20210323 01:56:14.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:56:14.019" starttime="20210323 01:56:13.998"/>
</kw>
<status status="PASS" endtime="20210323 01:56:14.019" starttime="20210323 01:56:13.997"/>
</kw>
<status status="PASS" endtime="20210323 01:56:14.019" starttime="20210323 01:56:13.997"/>
</kw>
<status status="PASS" endtime="20210323 01:56:14.020" starttime="20210323 01:56:13.979"/>
</kw>
<status status="PASS" endtime="20210323 01:56:14.020" starttime="20210323 01:56:13.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:56:14.024" level="INFO">Running command 'ozone sh bucket link 39498-source/bucket1 39498-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:56:21.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:56:21.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:56:21.262" starttime="20210323 01:56:14.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:56:21.263" level="INFO"/>
<status status="PASS" endtime="20210323 01:56:21.264" starttime="20210323 01:56:21.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:56:21.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:56:21.266" starttime="20210323 01:56:21.264"/>
</kw>
<status status="PASS" endtime="20210323 01:56:21.267" starttime="20210323 01:56:14.021"/>
</kw>
<msg timestamp="20210323 01:56:21.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:56:21.267" starttime="20210323 01:56:14.021"/>
</kw>
<status status="PASS" endtime="20210323 01:56:21.268" starttime="20210323 01:56:14.020"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:56:21.272" level="INFO">Running command 'ozone sh bucket create 39498-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:56:27.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:56:27.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:56:27.452" starttime="20210323 01:56:21.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:56:27.454" level="INFO"/>
<status status="PASS" endtime="20210323 01:56:27.454" starttime="20210323 01:56:27.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:56:27.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:56:27.456" starttime="20210323 01:56:27.455"/>
</kw>
<status status="PASS" endtime="20210323 01:56:27.456" starttime="20210323 01:56:21.269"/>
</kw>
<msg timestamp="20210323 01:56:27.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:56:27.457" starttime="20210323 01:56:21.269"/>
</kw>
<status status="PASS" endtime="20210323 01:56:27.457" starttime="20210323 01:56:21.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:56:27.464" level="INFO">Running command 'ozone sh key put 39498-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:58:13.978" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210323 01:58:13.978" starttime="20210323 01:56:27.461"/>
</kw>
<status status="FAIL" endtime="20210323 01:58:13.979" starttime="20210323 01:56:27.459"/>
</kw>
<msg timestamp="20210323 01:58:13.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210323 01:58:13.979" starttime="20210323 01:56:27.459"/>
</kw>
<status status="FAIL" endtime="20210323 01:58:13.979" starttime="20210323 01:56:27.457"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210323 01:58:13.979" starttime="20210323 01:56:13.977">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:58:13.986" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:58:13.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:58:13.996" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 01:58:13.996" starttime="20210323 01:58:13.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:58:13.997" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 01:58:13.998" starttime="20210323 01:58:13.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:58:13.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:58:13.999" starttime="20210323 01:58:13.998"/>
</kw>
<status status="PASS" endtime="20210323 01:58:14.000" starttime="20210323 01:58:13.983"/>
</kw>
<msg timestamp="20210323 01:58:14.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:58:14.000" starttime="20210323 01:58:13.983"/>
</kw>
<msg timestamp="20210323 01:58:14.001" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 01:58:14.001" starttime="20210323 01:58:13.982"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 01:58:14.002" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 01:58:14.003" starttime="20210323 01:58:14.001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:58:14.014" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:58:14.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:58:14.022" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:58:14.022" starttime="20210323 01:58:14.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:58:14.026" level="INFO"/>
<status status="PASS" endtime="20210323 01:58:14.026" starttime="20210323 01:58:14.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:58:14.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:58:14.027" starttime="20210323 01:58:14.026"/>
</kw>
<status status="PASS" endtime="20210323 01:58:14.027" starttime="20210323 01:58:14.009"/>
</kw>
<msg timestamp="20210323 01:58:14.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:58:14.027" starttime="20210323 01:58:14.007"/>
</kw>
<status status="PASS" endtime="20210323 01:58:14.028" starttime="20210323 01:58:14.005"/>
</kw>
<status status="PASS" endtime="20210323 01:58:14.028" starttime="20210323 01:58:14.003"/>
</kw>
<status status="PASS" endtime="20210323 01:58:14.028" starttime="20210323 01:58:13.982"/>
</kw>
<status status="PASS" endtime="20210323 01:58:14.028" starttime="20210323 01:58:13.981"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:58:14.035" level="INFO">Running command 'ozone sh key put 39498-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:13.981" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210323 02:00:13.981" starttime="20210323 01:58:14.032"/>
</kw>
<status status="FAIL" endtime="20210323 02:00:13.981" starttime="20210323 01:58:14.030"/>
</kw>
<msg timestamp="20210323 02:00:13.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210323 02:00:13.982" starttime="20210323 01:58:14.030"/>
</kw>
<status status="FAIL" endtime="20210323 02:00:13.982" starttime="20210323 01:58:14.028"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210323 02:00:13.982" starttime="20210323 01:58:13.980">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:13.989" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:13.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:13.993" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:00:13.993" starttime="20210323 02:00:13.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:13.994" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:00:13.994" starttime="20210323 02:00:13.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:13.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:13.995" starttime="20210323 02:00:13.994"/>
</kw>
<status status="PASS" endtime="20210323 02:00:13.995" starttime="20210323 02:00:13.986"/>
</kw>
<msg timestamp="20210323 02:00:13.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:13.995" starttime="20210323 02:00:13.986"/>
</kw>
<msg timestamp="20210323 02:00:13.995" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:00:13.995" starttime="20210323 02:00:13.985"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:00:13.996" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:00:13.996" starttime="20210323 02:00:13.996"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:14.002" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:14.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:14.027" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:00:14.027" starttime="20210323 02:00:13.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:14.028" level="INFO"/>
<status status="PASS" endtime="20210323 02:00:14.028" starttime="20210323 02:00:14.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:14.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:14.029" starttime="20210323 02:00:14.028"/>
</kw>
<status status="PASS" endtime="20210323 02:00:14.029" starttime="20210323 02:00:13.998"/>
</kw>
<msg timestamp="20210323 02:00:14.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:14.030" starttime="20210323 02:00:13.998"/>
</kw>
<status status="PASS" endtime="20210323 02:00:14.030" starttime="20210323 02:00:13.997"/>
</kw>
<status status="PASS" endtime="20210323 02:00:14.030" starttime="20210323 02:00:13.996"/>
</kw>
<status status="PASS" endtime="20210323 02:00:14.030" starttime="20210323 02:00:13.985"/>
</kw>
<status status="PASS" endtime="20210323 02:00:14.030" starttime="20210323 02:00:13.984"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:14.036" level="INFO">Running command 'ozone sh key list 39498-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:20.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:20.778" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210323 02:00:20.778" starttime="20210323 02:00:14.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:20.779" level="INFO">key1</msg>
<status status="PASS" endtime="20210323 02:00:20.779" starttime="20210323 02:00:20.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:20.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:20.780" starttime="20210323 02:00:20.779"/>
</kw>
<status status="PASS" endtime="20210323 02:00:20.780" starttime="20210323 02:00:14.032"/>
</kw>
<msg timestamp="20210323 02:00:20.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:20.780" starttime="20210323 02:00:14.031"/>
</kw>
<msg timestamp="20210323 02:00:20.781" level="INFO">${target_list} = key1</msg>
<status status="PASS" endtime="20210323 02:00:20.781" starttime="20210323 02:00:14.031"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:20.788" level="INFO">Running command 'ozone sh key list 39498-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:27.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:27.674" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210323 02:00:27.674" starttime="20210323 02:00:20.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:27.675" level="INFO">key1</msg>
<status status="PASS" endtime="20210323 02:00:27.675" starttime="20210323 02:00:27.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:27.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:27.676" starttime="20210323 02:00:27.676"/>
</kw>
<status status="PASS" endtime="20210323 02:00:27.677" starttime="20210323 02:00:20.785"/>
</kw>
<msg timestamp="20210323 02:00:27.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:27.677" starttime="20210323 02:00:20.785"/>
</kw>
<msg timestamp="20210323 02:00:27.678" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210323 02:00:27.678" starttime="20210323 02:00:20.783"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:00:27.678" starttime="20210323 02:00:27.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:00:27.679" starttime="20210323 02:00:27.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210323 02:00:27.680" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" endtime="20210323 02:00:27.680" starttime="20210323 02:00:27.679"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210323 02:00:27.680" starttime="20210323 02:00:13.983">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:27.689" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:27.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:27.692" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:00:27.692" starttime="20210323 02:00:27.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:27.695" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:00:27.695" starttime="20210323 02:00:27.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:27.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:27.696" starttime="20210323 02:00:27.695"/>
</kw>
<status status="PASS" endtime="20210323 02:00:27.696" starttime="20210323 02:00:27.685"/>
</kw>
<msg timestamp="20210323 02:00:27.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:27.697" starttime="20210323 02:00:27.685"/>
</kw>
<msg timestamp="20210323 02:00:27.697" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:00:27.697" starttime="20210323 02:00:27.684"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:00:27.698" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:00:27.698" starttime="20210323 02:00:27.697"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:27.704" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:27.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:27.711" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:00:27.711" starttime="20210323 02:00:27.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:27.712" level="INFO"/>
<status status="PASS" endtime="20210323 02:00:27.712" starttime="20210323 02:00:27.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:27.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:27.713" starttime="20210323 02:00:27.712"/>
</kw>
<status status="PASS" endtime="20210323 02:00:27.713" starttime="20210323 02:00:27.700"/>
</kw>
<msg timestamp="20210323 02:00:27.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:27.713" starttime="20210323 02:00:27.700"/>
</kw>
<status status="PASS" endtime="20210323 02:00:27.713" starttime="20210323 02:00:27.699"/>
</kw>
<status status="PASS" endtime="20210323 02:00:27.713" starttime="20210323 02:00:27.698"/>
</kw>
<status status="PASS" endtime="20210323 02:00:27.714" starttime="20210323 02:00:27.684"/>
</kw>
<status status="PASS" endtime="20210323 02:00:27.714" starttime="20210323 02:00:27.683"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:27.718" level="INFO">Running command 'ozone sh key delete 39498-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:33.873" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 02:00:33.873" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210323 02:00:33.873" starttime="20210323 02:00:27.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:33.874" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210323 02:00:33.874" starttime="20210323 02:00:33.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:33.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210323 02:00:33.875" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210323 02:00:33.875" starttime="20210323 02:00:33.874"/>
</kw>
<status status="FAIL" endtime="20210323 02:00:33.876" starttime="20210323 02:00:27.715"/>
</kw>
<msg timestamp="20210323 02:00:33.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210323 02:00:33.876" starttime="20210323 02:00:27.715"/>
</kw>
<status status="FAIL" endtime="20210323 02:00:33.877" starttime="20210323 02:00:27.714"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210323 02:00:33.877" starttime="20210323 02:00:27.682">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:33.895" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:33.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:33.903" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:00:33.903" starttime="20210323 02:00:33.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:33.906" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:00:33.907" starttime="20210323 02:00:33.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:33.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:33.909" starttime="20210323 02:00:33.907"/>
</kw>
<status status="PASS" endtime="20210323 02:00:33.909" starttime="20210323 02:00:33.886"/>
</kw>
<msg timestamp="20210323 02:00:33.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:33.910" starttime="20210323 02:00:33.885"/>
</kw>
<msg timestamp="20210323 02:00:33.912" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:00:33.912" starttime="20210323 02:00:33.884"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:00:33.913" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:00:33.913" starttime="20210323 02:00:33.912"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:33.918" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:33.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:33.930" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:00:33.930" starttime="20210323 02:00:33.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:33.932" level="INFO"/>
<status status="PASS" endtime="20210323 02:00:33.932" starttime="20210323 02:00:33.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:33.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:33.933" starttime="20210323 02:00:33.933"/>
</kw>
<status status="PASS" endtime="20210323 02:00:33.934" starttime="20210323 02:00:33.914"/>
</kw>
<msg timestamp="20210323 02:00:33.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:33.934" starttime="20210323 02:00:33.914"/>
</kw>
<status status="PASS" endtime="20210323 02:00:33.935" starttime="20210323 02:00:33.913"/>
</kw>
<status status="PASS" endtime="20210323 02:00:33.935" starttime="20210323 02:00:33.913"/>
</kw>
<status status="PASS" endtime="20210323 02:00:33.935" starttime="20210323 02:00:33.883"/>
</kw>
<status status="PASS" endtime="20210323 02:00:33.935" starttime="20210323 02:00:33.882"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:33.941" level="INFO">Running command 'ozone sh bucket list 39498-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:41.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:41.185" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210323 02:00:41.185" starttime="20210323 02:00:33.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:41.186" level="INFO">{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T01:56:07.346Z",
  "modificationTime" : "2021-03-23T01:56:07.346Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T01:55:32.551Z",
  "modificationTime" : "2021-03-23T01:56:00.739Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T01:56:21.131Z",
  "modificationTime" : "2021-03-23T01:56:21.131Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T01:55:19.063Z",
  "modificationTime" : "2021-03-23T01:55:53.896Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T01:55:26.210Z",
  "modificationTime" : "2021-03-23T01:55:26.210Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210323 02:00:41.186" starttime="20210323 02:00:41.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:41.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:41.187" starttime="20210323 02:00:41.187"/>
</kw>
<status status="PASS" endtime="20210323 02:00:41.187" starttime="20210323 02:00:33.937"/>
</kw>
<msg timestamp="20210323 02:00:41.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:41.188" starttime="20210323 02:00:33.936"/>
</kw>
<msg timestamp="20210323 02:00:41.188" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210323 02:00:41.188" starttime="20210323 02:00:33.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:00:41.189" starttime="20210323 02:00:41.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:00:41.189" starttime="20210323 02:00:41.189"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 02:00:41.189" starttime="20210323 02:00:33.880"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:41.204" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:41.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:41.209" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:00:41.209" starttime="20210323 02:00:41.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:41.210" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:00:41.210" starttime="20210323 02:00:41.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:41.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:41.212" starttime="20210323 02:00:41.211"/>
</kw>
<status status="PASS" endtime="20210323 02:00:41.213" starttime="20210323 02:00:41.199"/>
</kw>
<msg timestamp="20210323 02:00:41.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:41.213" starttime="20210323 02:00:41.197"/>
</kw>
<msg timestamp="20210323 02:00:41.213" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:00:41.213" starttime="20210323 02:00:41.196"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:00:41.214" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:00:41.214" starttime="20210323 02:00:41.214"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:41.221" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:41.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:41.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:00:41.238" starttime="20210323 02:00:41.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:41.240" level="INFO"/>
<status status="PASS" endtime="20210323 02:00:41.240" starttime="20210323 02:00:41.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:41.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:41.242" starttime="20210323 02:00:41.241"/>
</kw>
<status status="PASS" endtime="20210323 02:00:41.243" starttime="20210323 02:00:41.219"/>
</kw>
<msg timestamp="20210323 02:00:41.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:41.243" starttime="20210323 02:00:41.218"/>
</kw>
<status status="PASS" endtime="20210323 02:00:41.244" starttime="20210323 02:00:41.218"/>
</kw>
<status status="PASS" endtime="20210323 02:00:41.244" starttime="20210323 02:00:41.215"/>
</kw>
<status status="PASS" endtime="20210323 02:00:41.244" starttime="20210323 02:00:41.195"/>
</kw>
<status status="PASS" endtime="20210323 02:00:41.245" starttime="20210323 02:00:41.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:41.252" level="INFO">Running command 'ozone sh bucket info 39498-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:46.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:46.224" level="INFO">${output} = 39498-source bucket1</msg>
<status status="PASS" endtime="20210323 02:00:46.224" starttime="20210323 02:00:41.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:46.227" level="INFO">39498-source bucket1</msg>
<status status="PASS" endtime="20210323 02:00:46.227" starttime="20210323 02:00:46.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:46.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:46.229" starttime="20210323 02:00:46.228"/>
</kw>
<status status="PASS" endtime="20210323 02:00:46.229" starttime="20210323 02:00:41.247"/>
</kw>
<msg timestamp="20210323 02:00:46.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:46.230" starttime="20210323 02:00:41.247"/>
</kw>
<msg timestamp="20210323 02:00:46.230" level="INFO">${result} = 39498-source bucket1</msg>
<status status="PASS" endtime="20210323 02:00:46.230" starttime="20210323 02:00:41.246"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:00:46.231" starttime="20210323 02:00:46.231"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 02:00:46.232" starttime="20210323 02:00:41.190"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:46.243" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:46.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:46.247" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:00:46.247" starttime="20210323 02:00:46.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:46.249" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:00:46.249" starttime="20210323 02:00:46.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:46.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:46.251" starttime="20210323 02:00:46.250"/>
</kw>
<status status="PASS" endtime="20210323 02:00:46.251" starttime="20210323 02:00:46.240"/>
</kw>
<msg timestamp="20210323 02:00:46.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:46.251" starttime="20210323 02:00:46.237"/>
</kw>
<msg timestamp="20210323 02:00:46.252" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:00:46.252" starttime="20210323 02:00:46.236"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:00:46.253" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:00:46.253" starttime="20210323 02:00:46.252"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:46.262" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:46.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:46.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:00:46.270" starttime="20210323 02:00:46.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:46.271" level="INFO"/>
<status status="PASS" endtime="20210323 02:00:46.271" starttime="20210323 02:00:46.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:46.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:46.272" starttime="20210323 02:00:46.272"/>
</kw>
<status status="PASS" endtime="20210323 02:00:46.273" starttime="20210323 02:00:46.255"/>
</kw>
<msg timestamp="20210323 02:00:46.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:46.273" starttime="20210323 02:00:46.255"/>
</kw>
<status status="PASS" endtime="20210323 02:00:46.273" starttime="20210323 02:00:46.254"/>
</kw>
<status status="PASS" endtime="20210323 02:00:46.274" starttime="20210323 02:00:46.253"/>
</kw>
<status status="PASS" endtime="20210323 02:00:46.274" starttime="20210323 02:00:46.235"/>
</kw>
<status status="PASS" endtime="20210323 02:00:46.274" starttime="20210323 02:00:46.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:46.278" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 39498-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:52.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:52.318" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 02:00:52.318" starttime="20210323 02:00:46.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:52.319" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 02:00:52.319" starttime="20210323 02:00:52.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:52.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:52.320" starttime="20210323 02:00:52.319"/>
</kw>
<status status="PASS" endtime="20210323 02:00:52.320" starttime="20210323 02:00:46.275"/>
</kw>
<msg timestamp="20210323 02:00:52.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:52.320" starttime="20210323 02:00:46.275"/>
</kw>
<status status="PASS" endtime="20210323 02:00:52.321" starttime="20210323 02:00:46.274"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:52.327" level="INFO">Running command 'ozone sh bucket getacl 39498-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:00:59.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:00:59.240" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210323 02:00:59.240" starttime="20210323 02:00:52.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:00:59.242" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210323 02:00:59.242" starttime="20210323 02:00:59.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:00:59.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:00:59.244" starttime="20210323 02:00:59.243"/>
</kw>
<status status="PASS" endtime="20210323 02:00:59.244" starttime="20210323 02:00:52.323"/>
</kw>
<msg timestamp="20210323 02:00:59.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:00:59.244" starttime="20210323 02:00:52.323"/>
</kw>
<msg timestamp="20210323 02:00:59.245" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210323 02:00:59.245" starttime="20210323 02:00:52.322"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:00:59.245" starttime="20210323 02:00:59.245"/>
</kw>
<status status="PASS" endtime="20210323 02:00:59.246" starttime="20210323 02:00:52.321"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:00:59.252" level="INFO">Running command 'ozone sh bucket getacl 39498-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:04.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:04.186" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:04.187" starttime="20210323 02:00:59.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:04.188" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:04.188" starttime="20210323 02:01:04.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:04.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:04.188" starttime="20210323 02:01:04.188"/>
</kw>
<status status="PASS" endtime="20210323 02:01:04.189" starttime="20210323 02:00:59.249"/>
</kw>
<msg timestamp="20210323 02:01:04.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:04.189" starttime="20210323 02:00:59.248"/>
</kw>
<msg timestamp="20210323 02:01:04.189" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210323 02:01:04.189" starttime="20210323 02:00:59.247"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:01:04.190" starttime="20210323 02:01:04.189"/>
</kw>
<status status="PASS" endtime="20210323 02:01:04.190" starttime="20210323 02:00:59.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:04.194" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 39498-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:09.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:09.952" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 02:01:09.953" starttime="20210323 02:01:04.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:09.955" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 02:01:09.955" starttime="20210323 02:01:09.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:09.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:09.956" starttime="20210323 02:01:09.955"/>
</kw>
<status status="PASS" endtime="20210323 02:01:09.957" starttime="20210323 02:01:04.191"/>
</kw>
<msg timestamp="20210323 02:01:09.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:09.957" starttime="20210323 02:01:04.191"/>
</kw>
<status status="PASS" endtime="20210323 02:01:09.958" starttime="20210323 02:01:04.190"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:09.966" level="INFO">Running command 'ozone sh bucket getacl 39498-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:16.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:16.426" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:16.426" starttime="20210323 02:01:09.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:16.428" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:16.428" starttime="20210323 02:01:16.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:16.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:16.430" starttime="20210323 02:01:16.429"/>
</kw>
<status status="PASS" endtime="20210323 02:01:16.431" starttime="20210323 02:01:09.962"/>
</kw>
<msg timestamp="20210323 02:01:16.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:16.431" starttime="20210323 02:01:09.961"/>
</kw>
<msg timestamp="20210323 02:01:16.432" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210323 02:01:16.432" starttime="20210323 02:01:09.959"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:01:16.434" starttime="20210323 02:01:16.432"/>
</kw>
<status status="PASS" endtime="20210323 02:01:16.434" starttime="20210323 02:01:09.958"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:16.442" level="INFO">Running command 'ozone sh bucket getacl 39498-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:23.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:23.310" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210323 02:01:23.310" starttime="20210323 02:01:16.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:23.311" level="INFO">READ</msg>
<status status="PASS" endtime="20210323 02:01:23.311" starttime="20210323 02:01:23.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:23.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:23.312" starttime="20210323 02:01:23.311"/>
</kw>
<status status="PASS" endtime="20210323 02:01:23.312" starttime="20210323 02:01:16.438"/>
</kw>
<msg timestamp="20210323 02:01:23.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:23.312" starttime="20210323 02:01:16.437"/>
</kw>
<msg timestamp="20210323 02:01:23.313" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210323 02:01:23.313" starttime="20210323 02:01:16.436"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:01:23.314" starttime="20210323 02:01:23.313"/>
</kw>
<status status="PASS" endtime="20210323 02:01:23.314" starttime="20210323 02:01:16.434"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 02:01:23.314" starttime="20210323 02:00:46.233"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:23.324" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:23.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:23.328" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:01:23.328" starttime="20210323 02:01:23.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:23.329" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:01:23.329" starttime="20210323 02:01:23.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:23.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:23.332" starttime="20210323 02:01:23.329"/>
</kw>
<status status="PASS" endtime="20210323 02:01:23.332" starttime="20210323 02:01:23.320"/>
</kw>
<msg timestamp="20210323 02:01:23.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:23.332" starttime="20210323 02:01:23.320"/>
</kw>
<msg timestamp="20210323 02:01:23.333" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:01:23.333" starttime="20210323 02:01:23.319"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:01:23.334" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:01:23.334" starttime="20210323 02:01:23.333"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:23.340" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:23.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:23.379" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:23.379" starttime="20210323 02:01:23.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:23.380" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:23.380" starttime="20210323 02:01:23.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:23.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:23.381" starttime="20210323 02:01:23.380"/>
</kw>
<status status="PASS" endtime="20210323 02:01:23.381" starttime="20210323 02:01:23.336"/>
</kw>
<msg timestamp="20210323 02:01:23.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:23.381" starttime="20210323 02:01:23.336"/>
</kw>
<status status="PASS" endtime="20210323 02:01:23.381" starttime="20210323 02:01:23.335"/>
</kw>
<status status="PASS" endtime="20210323 02:01:23.381" starttime="20210323 02:01:23.334"/>
</kw>
<status status="PASS" endtime="20210323 02:01:23.382" starttime="20210323 02:01:23.318"/>
</kw>
<status status="PASS" endtime="20210323 02:01:23.382" starttime="20210323 02:01:23.317"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:23.385" level="INFO">Running command 'ozone sh bucket link 39498-source/bucket2 39498-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:30.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:30.464" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:30.464" starttime="20210323 02:01:23.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:30.466" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:30.466" starttime="20210323 02:01:30.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:30.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:30.466" starttime="20210323 02:01:30.466"/>
</kw>
<status status="PASS" endtime="20210323 02:01:30.467" starttime="20210323 02:01:23.383"/>
</kw>
<msg timestamp="20210323 02:01:30.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:30.467" starttime="20210323 02:01:23.383"/>
</kw>
<status status="PASS" endtime="20210323 02:01:30.467" starttime="20210323 02:01:23.382"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:30.471" level="INFO">Running command 'ozone sh bucket create 39498-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:37.221" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 02:01:37.221" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210323 02:01:37.221" starttime="20210323 02:01:30.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:37.222" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210323 02:01:37.222" starttime="20210323 02:01:37.221"/>
</kw>
<msg timestamp="20210323 02:01:37.222" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210323 02:01:37.223" starttime="20210323 02:01:30.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:01:37.223" starttime="20210323 02:01:37.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:37.236" level="INFO">Running command 'ozone sh bucket create 39498-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:42.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:42.782" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:42.782" starttime="20210323 02:01:37.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:42.783" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:42.784" starttime="20210323 02:01:42.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:42.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:42.785" starttime="20210323 02:01:42.784"/>
</kw>
<status status="PASS" endtime="20210323 02:01:42.785" starttime="20210323 02:01:37.224"/>
</kw>
<msg timestamp="20210323 02:01:42.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:42.785" starttime="20210323 02:01:37.224"/>
</kw>
<status status="PASS" endtime="20210323 02:01:42.785" starttime="20210323 02:01:37.223"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:42.789" level="INFO">Running command 'ozone sh bucket link 39498-source/bucket1 39498-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:49.156" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 02:01:49.157" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210323 02:01:49.157" starttime="20210323 02:01:42.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:49.159" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210323 02:01:49.159" starttime="20210323 02:01:49.158"/>
</kw>
<msg timestamp="20210323 02:01:49.160" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210323 02:01:49.160" starttime="20210323 02:01:42.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:01:49.162" starttime="20210323 02:01:49.160"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 02:01:49.162" starttime="20210323 02:01:23.316"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:49.173" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:49.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:49.176" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:01:49.176" starttime="20210323 02:01:49.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:49.178" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:01:49.179" starttime="20210323 02:01:49.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:49.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:49.181" starttime="20210323 02:01:49.179"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.181" starttime="20210323 02:01:49.168"/>
</kw>
<msg timestamp="20210323 02:01:49.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:49.181" starttime="20210323 02:01:49.168"/>
</kw>
<msg timestamp="20210323 02:01:49.182" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:01:49.182" starttime="20210323 02:01:49.167"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:01:49.182" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:01:49.182" starttime="20210323 02:01:49.182"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:49.188" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:49.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:49.195" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:49.195" starttime="20210323 02:01:49.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:49.196" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:49.196" starttime="20210323 02:01:49.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:49.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:49.197" starttime="20210323 02:01:49.196"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.197" starttime="20210323 02:01:49.184"/>
</kw>
<msg timestamp="20210323 02:01:49.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:49.197" starttime="20210323 02:01:49.184"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.197" starttime="20210323 02:01:49.183"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.197" starttime="20210323 02:01:49.183"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.198" starttime="20210323 02:01:49.166"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.198" starttime="20210323 02:01:49.165"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:49.203" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:49.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:49.210" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:49.210" starttime="20210323 02:01:49.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:49.211" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:49.211" starttime="20210323 02:01:49.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:49.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:49.212" starttime="20210323 02:01:49.211"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.212" starttime="20210323 02:01:49.200"/>
</kw>
<msg timestamp="20210323 02:01:49.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:49.212" starttime="20210323 02:01:49.199"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.213" starttime="20210323 02:01:49.199"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:49.220" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:49.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:49.223" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:01:49.223" starttime="20210323 02:01:49.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:49.224" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:01:49.224" starttime="20210323 02:01:49.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:49.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:49.224" starttime="20210323 02:01:49.224"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.225" starttime="20210323 02:01:49.217"/>
</kw>
<msg timestamp="20210323 02:01:49.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:49.225" starttime="20210323 02:01:49.216"/>
</kw>
<msg timestamp="20210323 02:01:49.225" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:01:49.225" starttime="20210323 02:01:49.215"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:01:49.226" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:01:49.226" starttime="20210323 02:01:49.225"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:49.230" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:49.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:49.241" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:49.241" starttime="20210323 02:01:49.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:49.243" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:49.243" starttime="20210323 02:01:49.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:49.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:49.246" starttime="20210323 02:01:49.243"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.246" starttime="20210323 02:01:49.227"/>
</kw>
<msg timestamp="20210323 02:01:49.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:49.246" starttime="20210323 02:01:49.227"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.246" starttime="20210323 02:01:49.226"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.247" starttime="20210323 02:01:49.226"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.247" starttime="20210323 02:01:49.214"/>
</kw>
<status status="PASS" endtime="20210323 02:01:49.247" starttime="20210323 02:01:49.213"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:49.250" level="INFO">Running command 'ozone sh key list 39498-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:56.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:56.106" level="INFO">${output} = {
  "volumeName" : "39498-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-23T01:52:04.951Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210323 02:01:56.106" starttime="20210323 02:01:49.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:56.107" level="INFO">{
  "volumeName" : "39498-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-23T01:52:04.951Z",
  "modificationTime" : "2021-03-23T01:55:07.621Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210323 02:01:56.108" starttime="20210323 02:01:56.106"/>
</kw>
<msg timestamp="20210323 02:01:56.108" level="INFO">${result} = {
  "volumeName" : "39498-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-23T01:52:04.951Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210323 02:01:56.108" starttime="20210323 02:01:49.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:01:56.109" starttime="20210323 02:01:56.108"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.109" starttime="20210323 02:01:49.198"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.109" starttime="20210323 02:01:49.198"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 02:01:56.109" starttime="20210323 02:01:49.163"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:56.118" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:56.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:56.121" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:01:56.121" starttime="20210323 02:01:56.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:56.123" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:01:56.123" starttime="20210323 02:01:56.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:56.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:56.124" starttime="20210323 02:01:56.123"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.124" starttime="20210323 02:01:56.114"/>
</kw>
<msg timestamp="20210323 02:01:56.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:56.125" starttime="20210323 02:01:56.114"/>
</kw>
<msg timestamp="20210323 02:01:56.125" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:01:56.125" starttime="20210323 02:01:56.113"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:01:56.126" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:01:56.126" starttime="20210323 02:01:56.125"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:56.132" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:56.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:56.139" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:56.139" starttime="20210323 02:01:56.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:56.140" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:56.140" starttime="20210323 02:01:56.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:56.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:56.141" starttime="20210323 02:01:56.140"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.141" starttime="20210323 02:01:56.128"/>
</kw>
<msg timestamp="20210323 02:01:56.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:56.142" starttime="20210323 02:01:56.128"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.142" starttime="20210323 02:01:56.127"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.142" starttime="20210323 02:01:56.126"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.142" starttime="20210323 02:01:56.113"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.142" starttime="20210323 02:01:56.112"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:56.148" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:56.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:56.153" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:56.153" starttime="20210323 02:01:56.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:56.154" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:56.154" starttime="20210323 02:01:56.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:56.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:56.155" starttime="20210323 02:01:56.155"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.155" starttime="20210323 02:01:56.145"/>
</kw>
<msg timestamp="20210323 02:01:56.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:56.156" starttime="20210323 02:01:56.144"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.156" starttime="20210323 02:01:56.143"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:56.162" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:56.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:56.165" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:01:56.165" starttime="20210323 02:01:56.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:56.166" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:01:56.166" starttime="20210323 02:01:56.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:56.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:56.167" starttime="20210323 02:01:56.167"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.167" starttime="20210323 02:01:56.159"/>
</kw>
<msg timestamp="20210323 02:01:56.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:56.168" starttime="20210323 02:01:56.158"/>
</kw>
<msg timestamp="20210323 02:01:56.168" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:01:56.168" starttime="20210323 02:01:56.158"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:01:56.169" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:01:56.169" starttime="20210323 02:01:56.168"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:56.173" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:01:56.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:01:56.181" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:01:56.181" starttime="20210323 02:01:56.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:01:56.183" level="INFO"/>
<status status="PASS" endtime="20210323 02:01:56.183" starttime="20210323 02:01:56.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:01:56.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:01:56.184" starttime="20210323 02:01:56.183"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.185" starttime="20210323 02:01:56.170"/>
</kw>
<msg timestamp="20210323 02:01:56.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:01:56.185" starttime="20210323 02:01:56.170"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.185" starttime="20210323 02:01:56.169"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.185" starttime="20210323 02:01:56.169"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.185" starttime="20210323 02:01:56.157"/>
</kw>
<status status="PASS" endtime="20210323 02:01:56.185" starttime="20210323 02:01:56.157"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:01:56.188" level="INFO">Running command 'ozone sh key list 39498-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:00.323" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 02:02:00.324" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 39498-target unreadable-link null</msg>
<status status="PASS" endtime="20210323 02:02:00.324" starttime="20210323 02:01:56.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:00.327" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 39498-target unreadable-link null</msg>
<status status="PASS" endtime="20210323 02:02:00.327" starttime="20210323 02:02:00.325"/>
</kw>
<msg timestamp="20210323 02:02:00.328" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 39498-target unreadable-link null</msg>
<status status="PASS" endtime="20210323 02:02:00.328" starttime="20210323 02:01:56.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:02:00.328" starttime="20210323 02:02:00.328"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.329" starttime="20210323 02:01:56.143"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.329" starttime="20210323 02:01:56.143"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 02:02:00.329" starttime="20210323 02:01:56.111"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:00.339" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:00.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:00.343" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:02:00.344" starttime="20210323 02:02:00.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:00.345" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:02:00.346" starttime="20210323 02:02:00.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:00.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:00.347" starttime="20210323 02:02:00.346"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.348" starttime="20210323 02:02:00.335"/>
</kw>
<msg timestamp="20210323 02:02:00.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:00.348" starttime="20210323 02:02:00.334"/>
</kw>
<msg timestamp="20210323 02:02:00.348" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:02:00.349" starttime="20210323 02:02:00.333"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:02:00.350" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:02:00.350" starttime="20210323 02:02:00.349"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:00.357" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:00.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:00.365" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:02:00.365" starttime="20210323 02:02:00.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:00.367" level="INFO"/>
<status status="PASS" endtime="20210323 02:02:00.367" starttime="20210323 02:02:00.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:00.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:00.369" starttime="20210323 02:02:00.368"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.369" starttime="20210323 02:02:00.353"/>
</kw>
<msg timestamp="20210323 02:02:00.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:00.370" starttime="20210323 02:02:00.353"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.370" starttime="20210323 02:02:00.351"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.370" starttime="20210323 02:02:00.351"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.370" starttime="20210323 02:02:00.332"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.371" starttime="20210323 02:02:00.332"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:00.379" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:00.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:00.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:02:00.384" starttime="20210323 02:02:00.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:00.386" level="INFO"/>
<status status="PASS" endtime="20210323 02:02:00.386" starttime="20210323 02:02:00.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:00.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:00.387" starttime="20210323 02:02:00.386"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.388" starttime="20210323 02:02:00.375"/>
</kw>
<msg timestamp="20210323 02:02:00.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:00.388" starttime="20210323 02:02:00.374"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.388" starttime="20210323 02:02:00.373"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:00.394" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:00.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:00.398" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:02:00.398" starttime="20210323 02:02:00.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:00.400" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:02:00.400" starttime="20210323 02:02:00.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:00.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:00.401" starttime="20210323 02:02:00.400"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.402" starttime="20210323 02:02:00.391"/>
</kw>
<msg timestamp="20210323 02:02:00.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:00.402" starttime="20210323 02:02:00.390"/>
</kw>
<msg timestamp="20210323 02:02:00.403" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:02:00.403" starttime="20210323 02:02:00.390"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:02:00.404" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:02:00.404" starttime="20210323 02:02:00.403"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:00.409" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:00.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:00.417" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:02:00.417" starttime="20210323 02:02:00.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:00.418" level="INFO"/>
<status status="PASS" endtime="20210323 02:02:00.418" starttime="20210323 02:02:00.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:00.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:00.419" starttime="20210323 02:02:00.418"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.420" starttime="20210323 02:02:00.406"/>
</kw>
<msg timestamp="20210323 02:02:00.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:00.420" starttime="20210323 02:02:00.406"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.420" starttime="20210323 02:02:00.405"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.420" starttime="20210323 02:02:00.404"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.420" starttime="20210323 02:02:00.389"/>
</kw>
<status status="PASS" endtime="20210323 02:02:00.420" starttime="20210323 02:02:00.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:00.424" level="INFO">Running command 'ozone sh bucket info 39498-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:07.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:07.050" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210323 02:02:07.050" starttime="20210323 02:02:00.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:07.052" level="INFO">{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T01:55:32.551Z",
  "modificationTime" : "2021-03-23T01:56:00.739Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210323 02:02:07.052" starttime="20210323 02:02:07.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:07.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:07.053" starttime="20210323 02:02:07.052"/>
</kw>
<status status="PASS" endtime="20210323 02:02:07.053" starttime="20210323 02:02:00.421"/>
</kw>
<msg timestamp="20210323 02:02:07.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:07.053" starttime="20210323 02:02:00.421"/>
</kw>
<msg timestamp="20210323 02:02:07.054" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210323 02:02:07.054" starttime="20210323 02:02:00.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:02:07.054" starttime="20210323 02:02:07.054"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:02:07.055" starttime="20210323 02:02:07.054"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:07.058" level="INFO">Running command 'ozone sh key list 39498-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:13.480" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 02:02:13.480" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 39498-source unreadable-bucket </msg>
<status status="PASS" endtime="20210323 02:02:13.480" starttime="20210323 02:02:07.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:13.482" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 39498-source unreadable-bucket </msg>
<status status="PASS" endtime="20210323 02:02:13.482" starttime="20210323 02:02:13.481"/>
</kw>
<msg timestamp="20210323 02:02:13.482" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 39498-source unreadable-bucket </msg>
<status status="PASS" endtime="20210323 02:02:13.482" starttime="20210323 02:02:07.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:02:13.483" starttime="20210323 02:02:13.482"/>
</kw>
<status status="PASS" endtime="20210323 02:02:13.483" starttime="20210323 02:02:00.372"/>
</kw>
<status status="PASS" endtime="20210323 02:02:13.483" starttime="20210323 02:02:00.371"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 02:02:13.483" starttime="20210323 02:02:00.330"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:13.495" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:13.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:13.499" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:02:13.499" starttime="20210323 02:02:13.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:13.501" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:02:13.501" starttime="20210323 02:02:13.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:13.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:13.503" starttime="20210323 02:02:13.502"/>
</kw>
<status status="PASS" endtime="20210323 02:02:13.503" starttime="20210323 02:02:13.490"/>
</kw>
<msg timestamp="20210323 02:02:13.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:13.504" starttime="20210323 02:02:13.489"/>
</kw>
<msg timestamp="20210323 02:02:13.504" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:02:13.504" starttime="20210323 02:02:13.488"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:02:13.506" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:02:13.506" starttime="20210323 02:02:13.505"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:13.514" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:13.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:13.522" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:02:13.522" starttime="20210323 02:02:13.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:13.524" level="INFO"/>
<status status="PASS" endtime="20210323 02:02:13.524" starttime="20210323 02:02:13.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:13.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:13.525" starttime="20210323 02:02:13.524"/>
</kw>
<status status="PASS" endtime="20210323 02:02:13.526" starttime="20210323 02:02:13.510"/>
</kw>
<msg timestamp="20210323 02:02:13.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:13.526" starttime="20210323 02:02:13.508"/>
</kw>
<status status="PASS" endtime="20210323 02:02:13.526" starttime="20210323 02:02:13.507"/>
</kw>
<status status="PASS" endtime="20210323 02:02:13.526" starttime="20210323 02:02:13.506"/>
</kw>
<status status="PASS" endtime="20210323 02:02:13.526" starttime="20210323 02:02:13.486"/>
</kw>
<status status="PASS" endtime="20210323 02:02:13.527" starttime="20210323 02:02:13.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:13.531" level="INFO">Running command 'ozone sh bucket link 39498-target/loop1 39498-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:19.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:19.523" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:02:19.523" starttime="20210323 02:02:13.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:19.525" level="INFO"/>
<status status="PASS" endtime="20210323 02:02:19.526" starttime="20210323 02:02:19.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:19.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:19.527" starttime="20210323 02:02:19.526"/>
</kw>
<status status="PASS" endtime="20210323 02:02:19.528" starttime="20210323 02:02:13.528"/>
</kw>
<msg timestamp="20210323 02:02:19.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:19.528" starttime="20210323 02:02:13.528"/>
</kw>
<status status="PASS" endtime="20210323 02:02:19.529" starttime="20210323 02:02:13.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:19.536" level="INFO">Running command 'ozone sh bucket link 39498-target/loop2 39498-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:25.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:25.981" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:02:25.981" starttime="20210323 02:02:19.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:25.982" level="INFO"/>
<status status="PASS" endtime="20210323 02:02:25.982" starttime="20210323 02:02:25.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:25.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:25.983" starttime="20210323 02:02:25.982"/>
</kw>
<status status="PASS" endtime="20210323 02:02:25.983" starttime="20210323 02:02:19.532"/>
</kw>
<msg timestamp="20210323 02:02:25.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:25.984" starttime="20210323 02:02:19.532"/>
</kw>
<status status="PASS" endtime="20210323 02:02:25.984" starttime="20210323 02:02:19.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:25.988" level="INFO">Running command 'ozone sh bucket link 39498-target/loop3 39498-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:32.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:32.698" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:02:32.698" starttime="20210323 02:02:25.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:32.699" level="INFO"/>
<status status="PASS" endtime="20210323 02:02:32.699" starttime="20210323 02:02:32.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:32.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:32.700" starttime="20210323 02:02:32.699"/>
</kw>
<status status="PASS" endtime="20210323 02:02:32.700" starttime="20210323 02:02:25.985"/>
</kw>
<msg timestamp="20210323 02:02:32.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:32.701" starttime="20210323 02:02:25.985"/>
</kw>
<status status="PASS" endtime="20210323 02:02:32.701" starttime="20210323 02:02:25.984"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:32.706" level="INFO">Running command 'ozone sh key list 39498-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:38.715" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 02:02:38.715" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210323 02:02:38.716" starttime="20210323 02:02:32.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:38.717" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210323 02:02:38.718" starttime="20210323 02:02:38.716"/>
</kw>
<msg timestamp="20210323 02:02:38.718" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210323 02:02:38.718" starttime="20210323 02:02:32.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:02:38.719" starttime="20210323 02:02:38.718"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 02:02:38.719" starttime="20210323 02:02:13.484"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:38.725" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:38.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:38.728" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:02:38.728" starttime="20210323 02:02:38.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:38.730" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:02:38.730" starttime="20210323 02:02:38.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:38.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:38.732" starttime="20210323 02:02:38.731"/>
</kw>
<status status="PASS" endtime="20210323 02:02:38.732" starttime="20210323 02:02:38.722"/>
</kw>
<msg timestamp="20210323 02:02:38.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:38.733" starttime="20210323 02:02:38.722"/>
</kw>
<msg timestamp="20210323 02:02:38.733" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:02:38.733" starttime="20210323 02:02:38.721"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:02:38.734" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:02:38.735" starttime="20210323 02:02:38.734"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:38.740" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:38.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:38.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:02:38.750" starttime="20210323 02:02:38.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:38.751" level="INFO"/>
<status status="PASS" endtime="20210323 02:02:38.751" starttime="20210323 02:02:38.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:38.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:38.753" starttime="20210323 02:02:38.752"/>
</kw>
<status status="PASS" endtime="20210323 02:02:38.753" starttime="20210323 02:02:38.737"/>
</kw>
<msg timestamp="20210323 02:02:38.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:38.754" starttime="20210323 02:02:38.736"/>
</kw>
<status status="PASS" endtime="20210323 02:02:38.754" starttime="20210323 02:02:38.735"/>
</kw>
<status status="PASS" endtime="20210323 02:02:38.754" starttime="20210323 02:02:38.735"/>
</kw>
<status status="PASS" endtime="20210323 02:02:38.755" starttime="20210323 02:02:38.721"/>
</kw>
<status status="PASS" endtime="20210323 02:02:38.755" starttime="20210323 02:02:38.720"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:38.761" level="INFO">Running command 'ozone sh bucket link 39498-source/bucket1 39498-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:02:45.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:02:45.473" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:02:45.473" starttime="20210323 02:02:38.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:02:45.475" level="INFO"/>
<status status="PASS" endtime="20210323 02:02:45.475" starttime="20210323 02:02:45.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:02:45.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:02:45.476" starttime="20210323 02:02:45.475"/>
</kw>
<status status="PASS" endtime="20210323 02:02:45.476" starttime="20210323 02:02:38.757"/>
</kw>
<msg timestamp="20210323 02:02:45.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:02:45.476" starttime="20210323 02:02:38.756"/>
</kw>
<status status="PASS" endtime="20210323 02:02:45.477" starttime="20210323 02:02:38.755"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:02:45.481" level="INFO">Running command 'ozone sh key put 39498-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:04:38.720" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210323 02:04:38.720" starttime="20210323 02:02:45.478"/>
</kw>
<status status="FAIL" endtime="20210323 02:04:38.721" starttime="20210323 02:02:45.478"/>
</kw>
<msg timestamp="20210323 02:04:38.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210323 02:04:38.721" starttime="20210323 02:02:45.477"/>
</kw>
<status status="FAIL" endtime="20210323 02:04:38.721" starttime="20210323 02:02:45.477"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210323 02:04:38.722" starttime="20210323 02:02:38.720">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:04:38.730" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:04:38.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:04:38.733" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:04:38.734" starttime="20210323 02:04:38.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:04:38.735" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:04:38.735" starttime="20210323 02:04:38.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:04:38.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:04:38.735" starttime="20210323 02:04:38.735"/>
</kw>
<status status="PASS" endtime="20210323 02:04:38.736" starttime="20210323 02:04:38.726"/>
</kw>
<msg timestamp="20210323 02:04:38.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:04:38.736" starttime="20210323 02:04:38.726"/>
</kw>
<msg timestamp="20210323 02:04:38.736" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:04:38.736" starttime="20210323 02:04:38.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:04:38.737" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:04:38.737" starttime="20210323 02:04:38.736"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:04:38.747" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:04:38.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:04:38.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:04:38.758" starttime="20210323 02:04:38.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:04:38.762" level="INFO"/>
<status status="PASS" endtime="20210323 02:04:38.762" starttime="20210323 02:04:38.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:04:38.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:04:38.763" starttime="20210323 02:04:38.762"/>
</kw>
<status status="PASS" endtime="20210323 02:04:38.764" starttime="20210323 02:04:38.741"/>
</kw>
<msg timestamp="20210323 02:04:38.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:04:38.765" starttime="20210323 02:04:38.740"/>
</kw>
<status status="PASS" endtime="20210323 02:04:38.765" starttime="20210323 02:04:38.738"/>
</kw>
<status status="PASS" endtime="20210323 02:04:38.765" starttime="20210323 02:04:38.737"/>
</kw>
<status status="PASS" endtime="20210323 02:04:38.766" starttime="20210323 02:04:38.724"/>
</kw>
<status status="PASS" endtime="20210323 02:04:38.766" starttime="20210323 02:04:38.724"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:04:38.773" level="INFO">Running command 'ozone sh bucket delete 39498-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:04:46.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:04:46.151" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:04:46.151" starttime="20210323 02:04:38.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:04:46.152" level="INFO"/>
<status status="PASS" endtime="20210323 02:04:46.152" starttime="20210323 02:04:46.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:04:46.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:04:46.154" starttime="20210323 02:04:46.153"/>
</kw>
<status status="PASS" endtime="20210323 02:04:46.154" starttime="20210323 02:04:38.767"/>
</kw>
<msg timestamp="20210323 02:04:46.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:04:46.154" starttime="20210323 02:04:38.767"/>
</kw>
<status status="PASS" endtime="20210323 02:04:46.155" starttime="20210323 02:04:38.766"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:04:46.159" level="INFO">Running command 'ozone sh bucket list 39498-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:04:53.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:04:53.184" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T...</msg>
<status status="PASS" endtime="20210323 02:04:53.185" starttime="20210323 02:04:46.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:04:53.187" level="INFO">{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T02:01:42.691Z",
  "modificationTime" : "2021-03-23T02:01:42.691Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T01:56:07.346Z",
  "modificationTime" : "2021-03-23T01:56:07.346Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T01:55:32.551Z",
  "modificationTime" : "2021-03-23T01:56:00.739Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T02:01:30.149Z",
  "modificationTime" : "2021-03-23T02:01:30.149Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T02:02:45.248Z",
  "modificationTime" : "2021-03-23T02:02:45.248Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T02:02:32.622Z",
  "modificationTime" : "2021-03-23T02:02:32.622Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T02:02:19.306Z",
  "modificationTime" : "2021-03-23T02:02:19.306Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T02:02:25.743Z",
  "modificationTime" : "2021-03-23T02:02:25.743Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T01:55:19.063Z",
  "modificationTime" : "2021-03-23T01:55:53.896Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T01:55:26.210Z",
  "modificationTime" : "2021-03-23T01:55:26.210Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "39498-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210323 02:04:53.187" starttime="20210323 02:04:53.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:04:53.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:04:53.189" starttime="20210323 02:04:53.188"/>
</kw>
<status status="PASS" endtime="20210323 02:04:53.189" starttime="20210323 02:04:46.156"/>
</kw>
<msg timestamp="20210323 02:04:53.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:04:53.190" starttime="20210323 02:04:46.156"/>
</kw>
<msg timestamp="20210323 02:04:53.190" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "39498-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-23T...</msg>
<status status="PASS" endtime="20210323 02:04:53.191" starttime="20210323 02:04:46.155"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:04:53.192" starttime="20210323 02:04:53.191"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:04:53.198" level="INFO">Running command 'ozone sh key list 39498-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:05:00.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:05:00.435" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210323 02:05:00.436" starttime="20210323 02:04:53.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:05:00.438" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210323 02:05:00.438" starttime="20210323 02:05:00.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:05:00.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:05:00.441" starttime="20210323 02:05:00.440"/>
</kw>
<status status="PASS" endtime="20210323 02:05:00.441" starttime="20210323 02:04:53.194"/>
</kw>
<msg timestamp="20210323 02:05:00.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:05:00.441" starttime="20210323 02:04:53.193"/>
</kw>
<msg timestamp="20210323 02:05:00.442" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210323 02:05:00.442" starttime="20210323 02:04:53.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:05:00.443" starttime="20210323 02:05:00.442"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 02:05:00.444" starttime="20210323 02:04:38.723"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20210323 02:05:00.450" starttime="20210323 01:51:39.295"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210323 02:05:00.493" level="INFO">${random} = 63194</msg>
<status status="PASS" endtime="20210323 02:05:00.493" starttime="20210323 02:05:00.492"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:05:00.493" level="INFO">${prefix} = 63194</msg>
<status status="PASS" endtime="20210323 02:05:00.494" starttime="20210323 02:05:00.493"/>
</kw>
<status status="PASS" endtime="20210323 02:05:00.494" starttime="20210323 02:05:00.492"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:05:00.499" level="INFO">Running command 'ozone sh volume info /63194-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:05:06.784" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 02:05:06.784" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63194-rpcbasic is not found</msg>
<status status="PASS" endtime="20210323 02:05:06.784" starttime="20210323 02:05:00.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:05:06.787" level="INFO">VOLUME_NOT_FOUND Volume 63194-rpcbasic is not found</msg>
<status status="PASS" endtime="20210323 02:05:06.787" starttime="20210323 02:05:06.785"/>
</kw>
<msg timestamp="20210323 02:05:06.788" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63194-rpcbasic is not found</msg>
<status status="PASS" endtime="20210323 02:05:06.788" starttime="20210323 02:05:00.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:05:06.789" starttime="20210323 02:05:06.788"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:05:06.796" level="INFO">Running command 'ozone sh volume create /63194-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:05:12.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:05:12.938" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:05:12.938" starttime="20210323 02:05:06.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:05:12.941" level="INFO"/>
<status status="PASS" endtime="20210323 02:05:12.941" starttime="20210323 02:05:12.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:05:12.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:05:12.943" starttime="20210323 02:05:12.942"/>
</kw>
<status status="PASS" endtime="20210323 02:05:12.943" starttime="20210323 02:05:06.791"/>
</kw>
<msg timestamp="20210323 02:05:12.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:05:12.944" starttime="20210323 02:05:06.791"/>
</kw>
<msg timestamp="20210323 02:05:12.944" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210323 02:05:12.944" starttime="20210323 02:05:06.789"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:05:12.945" starttime="20210323 02:05:12.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:05:12.952" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="63194-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:05:19.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:05:19.949" level="INFO">${output} = {
  "metadata": {},
  "name": "63194-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210323 02:05:19.949" starttime="20210323 02:05:12.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:05:19.951" level="INFO">{
  "metadata": {},
  "name": "63194-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-23T02:05:12.659Z",
  "modificationTime": "2021-03-23T02:05:12.659Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210323 02:05:19.951" starttime="20210323 02:05:19.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:05:19.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:05:19.953" starttime="20210323 02:05:19.952"/>
</kw>
<status status="PASS" endtime="20210323 02:05:19.954" starttime="20210323 02:05:12.948"/>
</kw>
<msg timestamp="20210323 02:05:19.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:05:19.954" starttime="20210323 02:05:12.947"/>
</kw>
<msg timestamp="20210323 02:05:19.954" level="INFO">${result} = {
  "metadata": {},
  "name": "63194-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210323 02:05:19.955" starttime="20210323 02:05:12.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:05:19.956" starttime="20210323 02:05:19.955"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:05:19.961" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="63194-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:05:27.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:05:27.665" level="INFO">${output} = {
  "metadata": {},
  "name": "63194-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210323 02:05:27.665" starttime="20210323 02:05:19.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:05:27.667" level="INFO">{
  "metadata": {},
  "name": "63194-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-23T02:05:12.659Z",
  "modificationTime": "2021-03-23T02:05:12.659Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210323 02:05:27.667" starttime="20210323 02:05:27.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:05:27.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:05:27.668" starttime="20210323 02:05:27.667"/>
</kw>
<status status="PASS" endtime="20210323 02:05:27.668" starttime="20210323 02:05:19.957"/>
</kw>
<msg timestamp="20210323 02:05:27.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:05:27.668" starttime="20210323 02:05:19.957"/>
</kw>
<msg timestamp="20210323 02:05:27.668" level="INFO">${result} = {
  "metadata": {},
  "name": "63194-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210323 02:05:27.668" starttime="20210323 02:05:19.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:05:27.669" starttime="20210323 02:05:27.668"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:05:27.673" level="INFO">Running command 'ozone sh volume setquota /63194-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:05:32.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:05:32.263" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:05:32.263" starttime="20210323 02:05:27.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:05:32.265" level="INFO"/>
<status status="PASS" endtime="20210323 02:05:32.265" starttime="20210323 02:05:32.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:05:32.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:05:32.267" starttime="20210323 02:05:32.266"/>
</kw>
<status status="PASS" endtime="20210323 02:05:32.267" starttime="20210323 02:05:27.670"/>
</kw>
<msg timestamp="20210323 02:05:32.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:05:32.268" starttime="20210323 02:05:27.670"/>
</kw>
<status status="PASS" endtime="20210323 02:05:32.268" starttime="20210323 02:05:27.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:05:32.276" level="INFO">Running command 'ozone sh volume info /63194-rpcbasic | jq -r '. | select(.name=="63194-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:05:39.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:05:39.240" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:05:39.240" starttime="20210323 02:05:32.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:05:39.241" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210323 02:05:39.241" starttime="20210323 02:05:39.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:05:39.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:05:39.242" starttime="20210323 02:05:39.241"/>
</kw>
<status status="PASS" endtime="20210323 02:05:39.242" starttime="20210323 02:05:32.271"/>
</kw>
<msg timestamp="20210323 02:05:39.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:05:39.242" starttime="20210323 02:05:32.270"/>
</kw>
<msg timestamp="20210323 02:05:39.243" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:05:39.243" starttime="20210323 02:05:32.269"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:05:39.243" starttime="20210323 02:05:39.243"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:05:39.249" level="INFO">Running command 'ozone sh bucket create /63194-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:05:45.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:05:45.559" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:05:45.559" starttime="20210323 02:05:39.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:05:45.560" level="INFO"/>
<status status="PASS" endtime="20210323 02:05:45.560" starttime="20210323 02:05:45.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:05:45.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:05:45.561" starttime="20210323 02:05:45.560"/>
</kw>
<status status="PASS" endtime="20210323 02:05:45.561" starttime="20210323 02:05:39.246"/>
</kw>
<msg timestamp="20210323 02:05:45.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:05:45.562" starttime="20210323 02:05:39.244"/>
</kw>
<status status="PASS" endtime="20210323 02:05:45.562" starttime="20210323 02:05:39.243"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:05:45.567" level="INFO">Running command 'ozone sh bucket info /63194-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:05:52.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:05:52.046" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210323 02:05:52.046" starttime="20210323 02:05:45.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:05:52.048" level="INFO">DISK</msg>
<status status="PASS" endtime="20210323 02:05:52.048" starttime="20210323 02:05:52.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:05:52.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:05:52.049" starttime="20210323 02:05:52.048"/>
</kw>
<status status="PASS" endtime="20210323 02:05:52.050" starttime="20210323 02:05:45.564"/>
</kw>
<msg timestamp="20210323 02:05:52.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:05:52.050" starttime="20210323 02:05:45.563"/>
</kw>
<msg timestamp="20210323 02:05:52.051" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210323 02:05:52.051" starttime="20210323 02:05:45.562"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:05:52.052" starttime="20210323 02:05:52.051"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:05:52.057" level="INFO">Running command 'ozone sh bucket info /63194-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:05:59.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:05:59.928" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:05:59.928" starttime="20210323 02:05:52.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:05:59.929" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210323 02:05:59.929" starttime="20210323 02:05:59.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:05:59.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:05:59.930" starttime="20210323 02:05:59.929"/>
</kw>
<status status="PASS" endtime="20210323 02:05:59.930" starttime="20210323 02:05:52.054"/>
</kw>
<msg timestamp="20210323 02:05:59.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:05:59.930" starttime="20210323 02:05:52.053"/>
</kw>
<msg timestamp="20210323 02:05:59.931" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:05:59.931" starttime="20210323 02:05:52.052"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:05:59.932" starttime="20210323 02:05:59.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:05:59.936" level="INFO">Running command 'ozone sh bucket info /63194-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:06:06.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:06:06.908" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210323 02:06:06.908" starttime="20210323 02:05:59.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:06:06.910" level="INFO">100</msg>
<status status="PASS" endtime="20210323 02:06:06.910" starttime="20210323 02:06:06.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:06:06.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:06:06.910" starttime="20210323 02:06:06.910"/>
</kw>
<status status="PASS" endtime="20210323 02:06:06.911" starttime="20210323 02:05:59.933"/>
</kw>
<msg timestamp="20210323 02:06:06.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:06:06.911" starttime="20210323 02:05:59.933"/>
</kw>
<msg timestamp="20210323 02:06:06.911" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210323 02:06:06.911" starttime="20210323 02:05:59.932"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:06:06.912" starttime="20210323 02:06:06.912"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:06:06.916" level="INFO">Running command 'ozone sh bucket setquota /63194-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:06:12.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:06:12.941" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:06:12.941" starttime="20210323 02:06:06.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:06:12.944" level="INFO"/>
<status status="PASS" endtime="20210323 02:06:12.944" starttime="20210323 02:06:12.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:06:12.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:06:12.946" starttime="20210323 02:06:12.944"/>
</kw>
<status status="PASS" endtime="20210323 02:06:12.947" starttime="20210323 02:06:06.913"/>
</kw>
<msg timestamp="20210323 02:06:12.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:06:12.947" starttime="20210323 02:06:06.913"/>
</kw>
<status status="PASS" endtime="20210323 02:06:12.948" starttime="20210323 02:06:06.912"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:06:12.955" level="INFO">Running command 'ozone sh bucket info /63194-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:06:17.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:06:17.516" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210323 02:06:17.516" starttime="20210323 02:06:12.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:06:17.518" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210323 02:06:17.518" starttime="20210323 02:06:17.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:06:17.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:06:17.519" starttime="20210323 02:06:17.518"/>
</kw>
<status status="PASS" endtime="20210323 02:06:17.519" starttime="20210323 02:06:12.951"/>
</kw>
<msg timestamp="20210323 02:06:17.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:06:17.520" starttime="20210323 02:06:12.950"/>
</kw>
<msg timestamp="20210323 02:06:17.520" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210323 02:06:17.520" starttime="20210323 02:06:12.948"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:06:17.521" starttime="20210323 02:06:17.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:06:17.526" level="INFO">Running command 'ozone sh bucket info /63194-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:06:24.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:06:24.104" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210323 02:06:24.104" starttime="20210323 02:06:17.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:06:24.106" level="INFO">1000</msg>
<status status="PASS" endtime="20210323 02:06:24.106" starttime="20210323 02:06:24.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:06:24.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:06:24.107" starttime="20210323 02:06:24.106"/>
</kw>
<status status="PASS" endtime="20210323 02:06:24.107" starttime="20210323 02:06:17.523"/>
</kw>
<msg timestamp="20210323 02:06:24.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:06:24.108" starttime="20210323 02:06:17.522"/>
</kw>
<msg timestamp="20210323 02:06:24.108" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210323 02:06:24.108" starttime="20210323 02:06:17.521"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:06:24.109" starttime="20210323 02:06:24.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:06:24.116" level="INFO">Running command 'ozone sh bucket list /63194-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:06:31.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:06:31.387" level="INFO">${output} = 63194-rpcbasic</msg>
<status status="PASS" endtime="20210323 02:06:31.387" starttime="20210323 02:06:24.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:06:31.390" level="INFO">63194-rpcbasic</msg>
<status status="PASS" endtime="20210323 02:06:31.390" starttime="20210323 02:06:31.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:06:31.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:06:31.391" starttime="20210323 02:06:31.390"/>
</kw>
<status status="PASS" endtime="20210323 02:06:31.392" starttime="20210323 02:06:24.112"/>
</kw>
<msg timestamp="20210323 02:06:31.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:06:31.393" starttime="20210323 02:06:24.112"/>
</kw>
<msg timestamp="20210323 02:06:31.393" level="INFO">${result} = 63194-rpcbasic</msg>
<status status="PASS" endtime="20210323 02:06:31.393" starttime="20210323 02:06:24.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:06:31.394" starttime="20210323 02:06:31.394"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:06:31.404" level="INFO">Running command 'ozone sh key put /63194-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:09:42.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:09:42.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:09:42.270" starttime="20210323 02:06:31.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:09:42.271" level="INFO"/>
<status status="PASS" endtime="20210323 02:09:42.271" starttime="20210323 02:09:42.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:09:42.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:09:42.272" starttime="20210323 02:09:42.271"/>
</kw>
<status status="PASS" endtime="20210323 02:09:42.272" starttime="20210323 02:06:31.399"/>
</kw>
<msg timestamp="20210323 02:09:42.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:09:42.272" starttime="20210323 02:06:31.398"/>
</kw>
<status status="PASS" endtime="20210323 02:09:42.272" starttime="20210323 02:06:31.397"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:09:42.276" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:09:42.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:09:42.281" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:09:42.281" starttime="20210323 02:09:42.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:09:42.283" level="INFO"/>
<status status="PASS" endtime="20210323 02:09:42.283" starttime="20210323 02:09:42.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:09:42.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:09:42.285" starttime="20210323 02:09:42.284"/>
</kw>
<status status="PASS" endtime="20210323 02:09:42.285" starttime="20210323 02:09:42.274"/>
</kw>
<msg timestamp="20210323 02:09:42.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:09:42.286" starttime="20210323 02:09:42.273"/>
</kw>
<status status="PASS" endtime="20210323 02:09:42.286" starttime="20210323 02:09:42.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:09:42.292" level="INFO">Running command 'ozone sh key get /63194-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:09:52.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:09:52.086" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:09:52.087" starttime="20210323 02:09:42.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:09:52.088" level="INFO"/>
<status status="PASS" endtime="20210323 02:09:52.088" starttime="20210323 02:09:52.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:09:52.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:09:52.088" starttime="20210323 02:09:52.088"/>
</kw>
<status status="PASS" endtime="20210323 02:09:52.089" starttime="20210323 02:09:42.288"/>
</kw>
<msg timestamp="20210323 02:09:52.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:09:52.089" starttime="20210323 02:09:42.288"/>
</kw>
<status status="PASS" endtime="20210323 02:09:52.089" starttime="20210323 02:09:42.287"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:09:52.094" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:09:52.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:09:52.099" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:09:52.100" starttime="20210323 02:09:52.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:09:52.103" level="INFO"/>
<status status="PASS" endtime="20210323 02:09:52.103" starttime="20210323 02:09:52.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:09:52.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:09:52.103" starttime="20210323 02:09:52.103"/>
</kw>
<status status="PASS" endtime="20210323 02:09:52.104" starttime="20210323 02:09:52.091"/>
</kw>
<msg timestamp="20210323 02:09:52.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:09:52.104" starttime="20210323 02:09:52.090"/>
</kw>
<status status="PASS" endtime="20210323 02:09:52.104" starttime="20210323 02:09:52.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:09:52.111" level="INFO">Running command 'ozone sh key put -t RATIS /63194-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:00.495" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210323 02:10:00.495" starttime="20210323 02:09:52.106"/>
</kw>
<status status="FAIL" endtime="20210323 02:10:00.495" starttime="20210323 02:09:52.105"/>
</kw>
<msg timestamp="20210323 02:10:00.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210323 02:10:00.496" starttime="20210323 02:09:52.105"/>
</kw>
<status status="FAIL" endtime="20210323 02:10:00.496" starttime="20210323 02:09:52.104"/>
</kw>
<status status="FAIL" endtime="20210323 02:10:00.496" starttime="20210323 02:06:31.395"/>
</kw>
<status status="FAIL" endtime="20210323 02:10:00.496" starttime="20210323 02:06:31.394"/>
</kw>
<status status="FAIL" endtime="20210323 02:10:00.497" starttime="20210323 02:05:00.495"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210323 02:10:00.497" starttime="20210323 02:05:00.494">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210323 02:10:00.499" starttime="20210323 02:05:00.461"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210323 02:10:00.561" level="INFO">${random} = 70451</msg>
<status status="PASS" endtime="20210323 02:10:00.561" starttime="20210323 02:10:00.560"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:10:00.563" level="INFO">${prefix} = 70451</msg>
<status status="PASS" endtime="20210323 02:10:00.563" starttime="20210323 02:10:00.562"/>
</kw>
<status status="PASS" endtime="20210323 02:10:00.564" starttime="20210323 02:10:00.559"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:00.588" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:00.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:10:00.612" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:10:00.612" starttime="20210323 02:10:00.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:10:00.614" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:10:00.616" starttime="20210323 02:10:00.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:10:00.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:10:00.616" starttime="20210323 02:10:00.616"/>
</kw>
<status status="PASS" endtime="20210323 02:10:00.617" starttime="20210323 02:10:00.571"/>
</kw>
<msg timestamp="20210323 02:10:00.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:10:00.620" starttime="20210323 02:10:00.570"/>
</kw>
<msg timestamp="20210323 02:10:00.620" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:10:00.620" starttime="20210323 02:10:00.568"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:10:00.622" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:10:00.622" starttime="20210323 02:10:00.621"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:00.643" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:00.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:10:00.721" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:10:00.721" starttime="20210323 02:10:00.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:10:00.722" level="INFO"/>
<status status="PASS" endtime="20210323 02:10:00.722" starttime="20210323 02:10:00.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:10:00.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:10:00.723" starttime="20210323 02:10:00.722"/>
</kw>
<status status="PASS" endtime="20210323 02:10:00.724" starttime="20210323 02:10:00.624"/>
</kw>
<msg timestamp="20210323 02:10:00.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:10:00.724" starttime="20210323 02:10:00.623"/>
</kw>
<status status="PASS" endtime="20210323 02:10:00.724" starttime="20210323 02:10:00.623"/>
</kw>
<status status="PASS" endtime="20210323 02:10:00.724" starttime="20210323 02:10:00.622"/>
</kw>
<status status="PASS" endtime="20210323 02:10:00.725" starttime="20210323 02:10:00.567"/>
</kw>
<status status="PASS" endtime="20210323 02:10:00.725" starttime="20210323 02:10:00.566"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:00.735" level="INFO">Running command 'ozone sh volume info o3://om:9862/70451-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:08.260" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 02:10:08.260" level="INFO">${output} = VOLUME_NOT_FOUND Volume 70451-rpcwoport is not found</msg>
<status status="PASS" endtime="20210323 02:10:08.261" starttime="20210323 02:10:00.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:10:08.262" level="INFO">VOLUME_NOT_FOUND Volume 70451-rpcwoport is not found</msg>
<status status="PASS" endtime="20210323 02:10:08.262" starttime="20210323 02:10:08.261"/>
</kw>
<msg timestamp="20210323 02:10:08.262" level="INFO">${result} = VOLUME_NOT_FOUND Volume 70451-rpcwoport is not found</msg>
<status status="PASS" endtime="20210323 02:10:08.262" starttime="20210323 02:10:00.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:10:08.263" starttime="20210323 02:10:08.262"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:08.267" level="INFO">Running command 'ozone sh volume create o3://om:9862/70451-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:15.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:10:15.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:10:15.674" starttime="20210323 02:10:08.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:10:15.675" level="INFO"/>
<status status="PASS" endtime="20210323 02:10:15.675" starttime="20210323 02:10:15.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:10:15.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:10:15.676" starttime="20210323 02:10:15.675"/>
</kw>
<status status="PASS" endtime="20210323 02:10:15.676" starttime="20210323 02:10:08.264"/>
</kw>
<msg timestamp="20210323 02:10:15.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:10:15.676" starttime="20210323 02:10:08.264"/>
</kw>
<msg timestamp="20210323 02:10:15.677" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210323 02:10:15.677" starttime="20210323 02:10:08.263"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:10:15.678" starttime="20210323 02:10:15.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:15.685" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="70451-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:22.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:10:22.030" level="INFO">${output} = {
  "metadata": {},
  "name": "70451-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210323 02:10:22.030" starttime="20210323 02:10:15.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:10:22.032" level="INFO">{
  "metadata": {},
  "name": "70451-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-23T02:10:15.430Z",
  "modificationTime": "2021-03-23T02:10:15.430Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210323 02:10:22.032" starttime="20210323 02:10:22.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:10:22.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:10:22.032" starttime="20210323 02:10:22.032"/>
</kw>
<status status="PASS" endtime="20210323 02:10:22.033" starttime="20210323 02:10:15.681"/>
</kw>
<msg timestamp="20210323 02:10:22.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:10:22.033" starttime="20210323 02:10:15.681"/>
</kw>
<msg timestamp="20210323 02:10:22.033" level="INFO">${result} = {
  "metadata": {},
  "name": "70451-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210323 02:10:22.033" starttime="20210323 02:10:15.680"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:10:22.035" starttime="20210323 02:10:22.034"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:22.042" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="70451-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:28.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:10:28.863" level="INFO">${output} = {
  "metadata": {},
  "name": "70451-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210323 02:10:28.863" starttime="20210323 02:10:22.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:10:28.865" level="INFO">{
  "metadata": {},
  "name": "70451-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-23T02:10:15.430Z",
  "modificationTime": "2021-03-23T02:10:15.430Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210323 02:10:28.866" starttime="20210323 02:10:28.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:10:28.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:10:28.868" starttime="20210323 02:10:28.866"/>
</kw>
<status status="PASS" endtime="20210323 02:10:28.868" starttime="20210323 02:10:22.037"/>
</kw>
<msg timestamp="20210323 02:10:28.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:10:28.869" starttime="20210323 02:10:22.036"/>
</kw>
<msg timestamp="20210323 02:10:28.870" level="INFO">${result} = {
  "metadata": {},
  "name": "70451-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210323 02:10:28.870" starttime="20210323 02:10:22.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:10:28.872" starttime="20210323 02:10:28.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:28.879" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/70451-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:34.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:10:34.805" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:10:34.805" starttime="20210323 02:10:28.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:10:34.806" level="INFO"/>
<status status="PASS" endtime="20210323 02:10:34.807" starttime="20210323 02:10:34.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:10:34.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:10:34.807" starttime="20210323 02:10:34.807"/>
</kw>
<status status="PASS" endtime="20210323 02:10:34.807" starttime="20210323 02:10:28.875"/>
</kw>
<msg timestamp="20210323 02:10:34.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:10:34.808" starttime="20210323 02:10:28.874"/>
</kw>
<status status="PASS" endtime="20210323 02:10:34.808" starttime="20210323 02:10:28.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:34.814" level="INFO">Running command 'ozone sh volume info o3://om:9862/70451-rpcwoport | jq -r '. | select(.name=="70451-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:41.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:10:41.342" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:10:41.342" starttime="20210323 02:10:34.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:10:41.343" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210323 02:10:41.344" starttime="20210323 02:10:41.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:10:41.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:10:41.344" starttime="20210323 02:10:41.344"/>
</kw>
<status status="PASS" endtime="20210323 02:10:41.345" starttime="20210323 02:10:34.810"/>
</kw>
<msg timestamp="20210323 02:10:41.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:10:41.345" starttime="20210323 02:10:34.809"/>
</kw>
<msg timestamp="20210323 02:10:41.345" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:10:41.345" starttime="20210323 02:10:34.808"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:10:41.346" starttime="20210323 02:10:41.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:41.350" level="INFO">Running command 'ozone sh bucket create o3://om:9862/70451-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:47.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:10:47.741" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:10:47.741" starttime="20210323 02:10:41.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:10:47.744" level="INFO"/>
<status status="PASS" endtime="20210323 02:10:47.744" starttime="20210323 02:10:47.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:10:47.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:10:47.746" starttime="20210323 02:10:47.745"/>
</kw>
<status status="PASS" endtime="20210323 02:10:47.746" starttime="20210323 02:10:41.347"/>
</kw>
<msg timestamp="20210323 02:10:47.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:10:47.747" starttime="20210323 02:10:41.347"/>
</kw>
<status status="PASS" endtime="20210323 02:10:47.747" starttime="20210323 02:10:41.346"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:47.752" level="INFO">Running command 'ozone sh bucket info o3://om:9862/70451-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:10:54.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:10:54.169" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210323 02:10:54.169" starttime="20210323 02:10:47.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:10:54.171" level="INFO">DISK</msg>
<status status="PASS" endtime="20210323 02:10:54.171" starttime="20210323 02:10:54.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:10:54.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:10:54.173" starttime="20210323 02:10:54.172"/>
</kw>
<status status="PASS" endtime="20210323 02:10:54.174" starttime="20210323 02:10:47.749"/>
</kw>
<msg timestamp="20210323 02:10:54.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:10:54.174" starttime="20210323 02:10:47.748"/>
</kw>
<msg timestamp="20210323 02:10:54.175" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210323 02:10:54.175" starttime="20210323 02:10:47.747"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:10:54.176" starttime="20210323 02:10:54.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:10:54.182" level="INFO">Running command 'ozone sh bucket info o3://om:9862/70451-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:11:01.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:11:01.313" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:11:01.313" starttime="20210323 02:10:54.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:11:01.316" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210323 02:11:01.316" starttime="20210323 02:11:01.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:11:01.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:11:01.318" starttime="20210323 02:11:01.317"/>
</kw>
<status status="PASS" endtime="20210323 02:11:01.321" starttime="20210323 02:10:54.179"/>
</kw>
<msg timestamp="20210323 02:11:01.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:11:01.321" starttime="20210323 02:10:54.178"/>
</kw>
<msg timestamp="20210323 02:11:01.321" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:11:01.321" starttime="20210323 02:10:54.176"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:11:01.323" starttime="20210323 02:11:01.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:11:01.331" level="INFO">Running command 'ozone sh bucket info o3://om:9862/70451-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:11:08.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:11:08.670" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210323 02:11:08.670" starttime="20210323 02:11:01.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:11:08.671" level="INFO">100</msg>
<status status="PASS" endtime="20210323 02:11:08.671" starttime="20210323 02:11:08.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:11:08.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:11:08.672" starttime="20210323 02:11:08.671"/>
</kw>
<status status="PASS" endtime="20210323 02:11:08.672" starttime="20210323 02:11:01.324"/>
</kw>
<msg timestamp="20210323 02:11:08.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:11:08.672" starttime="20210323 02:11:01.324"/>
</kw>
<msg timestamp="20210323 02:11:08.672" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210323 02:11:08.672" starttime="20210323 02:11:01.323"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:11:08.673" starttime="20210323 02:11:08.673"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:11:08.679" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/70451-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:11:14.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:11:14.701" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:11:14.701" starttime="20210323 02:11:08.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:11:14.703" level="INFO"/>
<status status="PASS" endtime="20210323 02:11:14.703" starttime="20210323 02:11:14.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:11:14.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:11:14.705" starttime="20210323 02:11:14.703"/>
</kw>
<status status="PASS" endtime="20210323 02:11:14.705" starttime="20210323 02:11:08.674"/>
</kw>
<msg timestamp="20210323 02:11:14.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:11:14.705" starttime="20210323 02:11:08.674"/>
</kw>
<status status="PASS" endtime="20210323 02:11:14.706" starttime="20210323 02:11:08.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:11:14.712" level="INFO">Running command 'ozone sh bucket info o3://om:9862/70451-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:11:21.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:11:21.504" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210323 02:11:21.504" starttime="20210323 02:11:14.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:11:21.505" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210323 02:11:21.505" starttime="20210323 02:11:21.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:11:21.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:11:21.506" starttime="20210323 02:11:21.506"/>
</kw>
<status status="PASS" endtime="20210323 02:11:21.506" starttime="20210323 02:11:14.708"/>
</kw>
<msg timestamp="20210323 02:11:21.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:11:21.507" starttime="20210323 02:11:14.707"/>
</kw>
<msg timestamp="20210323 02:11:21.507" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210323 02:11:21.507" starttime="20210323 02:11:14.706"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:11:21.507" starttime="20210323 02:11:21.507"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:11:21.514" level="INFO">Running command 'ozone sh bucket info o3://om:9862/70451-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:11:28.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:11:28.018" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210323 02:11:28.018" starttime="20210323 02:11:21.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:11:28.020" level="INFO">1000</msg>
<status status="PASS" endtime="20210323 02:11:28.020" starttime="20210323 02:11:28.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:11:28.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:11:28.021" starttime="20210323 02:11:28.020"/>
</kw>
<status status="PASS" endtime="20210323 02:11:28.021" starttime="20210323 02:11:21.509"/>
</kw>
<msg timestamp="20210323 02:11:28.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:11:28.021" starttime="20210323 02:11:21.508"/>
</kw>
<msg timestamp="20210323 02:11:28.022" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210323 02:11:28.022" starttime="20210323 02:11:21.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:11:28.022" starttime="20210323 02:11:28.022"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:11:28.028" level="INFO">Running command 'ozone sh bucket list o3://om:9862/70451-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:11:32.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:11:32.541" level="INFO">${output} = 70451-rpcwoport</msg>
<status status="PASS" endtime="20210323 02:11:32.541" starttime="20210323 02:11:28.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:11:32.542" level="INFO">70451-rpcwoport</msg>
<status status="PASS" endtime="20210323 02:11:32.543" starttime="20210323 02:11:32.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:11:32.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:11:32.543" starttime="20210323 02:11:32.543"/>
</kw>
<status status="PASS" endtime="20210323 02:11:32.543" starttime="20210323 02:11:28.024"/>
</kw>
<msg timestamp="20210323 02:11:32.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:11:32.544" starttime="20210323 02:11:28.024"/>
</kw>
<msg timestamp="20210323 02:11:32.544" level="INFO">${result} = 70451-rpcwoport</msg>
<status status="PASS" endtime="20210323 02:11:32.544" starttime="20210323 02:11:28.023"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:11:32.545" starttime="20210323 02:11:32.544"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:11:32.553" level="INFO">Running command 'ozone sh key put o3://om:9862/70451-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:14:43.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:14:43.408" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:14:43.408" starttime="20210323 02:11:32.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:14:43.409" level="INFO"/>
<status status="PASS" endtime="20210323 02:14:43.409" starttime="20210323 02:14:43.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:14:43.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:14:43.411" starttime="20210323 02:14:43.410"/>
</kw>
<status status="PASS" endtime="20210323 02:14:43.411" starttime="20210323 02:11:32.549"/>
</kw>
<msg timestamp="20210323 02:14:43.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:14:43.412" starttime="20210323 02:11:32.548"/>
</kw>
<status status="PASS" endtime="20210323 02:14:43.412" starttime="20210323 02:11:32.547"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:14:43.419" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:14:43.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:14:43.421" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:14:43.421" starttime="20210323 02:14:43.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:14:43.422" level="INFO"/>
<status status="PASS" endtime="20210323 02:14:43.422" starttime="20210323 02:14:43.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:14:43.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:14:43.424" starttime="20210323 02:14:43.423"/>
</kw>
<status status="PASS" endtime="20210323 02:14:43.424" starttime="20210323 02:14:43.414"/>
</kw>
<msg timestamp="20210323 02:14:43.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:14:43.424" starttime="20210323 02:14:43.413"/>
</kw>
<status status="PASS" endtime="20210323 02:14:43.425" starttime="20210323 02:14:43.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:14:43.430" level="INFO">Running command 'ozone sh key get o3://om:9862/70451-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:14:52.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:14:52.940" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:14:52.940" starttime="20210323 02:14:43.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:14:52.942" level="INFO"/>
<status status="PASS" endtime="20210323 02:14:52.942" starttime="20210323 02:14:52.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:14:52.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:14:52.943" starttime="20210323 02:14:52.942"/>
</kw>
<status status="PASS" endtime="20210323 02:14:52.943" starttime="20210323 02:14:43.426"/>
</kw>
<msg timestamp="20210323 02:14:52.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:14:52.943" starttime="20210323 02:14:43.426"/>
</kw>
<status status="PASS" endtime="20210323 02:14:52.943" starttime="20210323 02:14:43.425"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:14:52.948" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:14:52.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:14:52.954" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:14:52.954" starttime="20210323 02:14:52.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:14:52.956" level="INFO"/>
<status status="PASS" endtime="20210323 02:14:52.956" starttime="20210323 02:14:52.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:14:52.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:14:52.957" starttime="20210323 02:14:52.956"/>
</kw>
<status status="PASS" endtime="20210323 02:14:52.957" starttime="20210323 02:14:52.944"/>
</kw>
<msg timestamp="20210323 02:14:52.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:14:52.957" starttime="20210323 02:14:52.944"/>
</kw>
<status status="PASS" endtime="20210323 02:14:52.958" starttime="20210323 02:14:52.944"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:14:52.964" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/70451-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:00.565" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210323 02:15:00.565" starttime="20210323 02:14:52.961"/>
</kw>
<status status="FAIL" endtime="20210323 02:15:00.566" starttime="20210323 02:14:52.960"/>
</kw>
<msg timestamp="20210323 02:15:00.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210323 02:15:00.566" starttime="20210323 02:14:52.959"/>
</kw>
<status status="FAIL" endtime="20210323 02:15:00.566" starttime="20210323 02:14:52.958"/>
</kw>
<status status="FAIL" endtime="20210323 02:15:00.567" starttime="20210323 02:11:32.545"/>
</kw>
<status status="FAIL" endtime="20210323 02:15:00.567" starttime="20210323 02:11:32.545"/>
</kw>
<status status="FAIL" endtime="20210323 02:15:00.567" starttime="20210323 02:10:00.725"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210323 02:15:00.567" starttime="20210323 02:10:00.564">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:00.587" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:00.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:00.619" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:15:00.619" starttime="20210323 02:15:00.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:00.620" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:15:00.620" starttime="20210323 02:15:00.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:00.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:00.621" starttime="20210323 02:15:00.621"/>
</kw>
<status status="PASS" endtime="20210323 02:15:00.622" starttime="20210323 02:15:00.574"/>
</kw>
<msg timestamp="20210323 02:15:00.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:00.622" starttime="20210323 02:15:00.573"/>
</kw>
<msg timestamp="20210323 02:15:00.622" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:15:00.622" starttime="20210323 02:15:00.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:15:00.623" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:15:00.623" starttime="20210323 02:15:00.622"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:00.645" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:00.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:00.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:15:00.674" starttime="20210323 02:15:00.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:00.676" level="INFO"/>
<status status="PASS" endtime="20210323 02:15:00.676" starttime="20210323 02:15:00.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:00.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:00.677" starttime="20210323 02:15:00.676"/>
</kw>
<status status="PASS" endtime="20210323 02:15:00.678" starttime="20210323 02:15:00.626"/>
</kw>
<msg timestamp="20210323 02:15:00.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:00.678" starttime="20210323 02:15:00.625"/>
</kw>
<status status="PASS" endtime="20210323 02:15:00.679" starttime="20210323 02:15:00.624"/>
</kw>
<status status="PASS" endtime="20210323 02:15:00.679" starttime="20210323 02:15:00.623"/>
</kw>
<status status="PASS" endtime="20210323 02:15:00.679" starttime="20210323 02:15:00.571"/>
</kw>
<status status="PASS" endtime="20210323 02:15:00.679" starttime="20210323 02:15:00.570"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:00.691" level="INFO">Running command 'ozone sh volume create o3://om:9862/70451-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:10.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:10.652" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:15:10.652" starttime="20210323 02:15:00.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:10.654" level="INFO"/>
<status status="PASS" endtime="20210323 02:15:10.654" starttime="20210323 02:15:10.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:10.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:10.655" starttime="20210323 02:15:10.654"/>
</kw>
<status status="PASS" endtime="20210323 02:15:10.656" starttime="20210323 02:15:00.683"/>
</kw>
<msg timestamp="20210323 02:15:10.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:10.656" starttime="20210323 02:15:00.682"/>
</kw>
<status status="PASS" endtime="20210323 02:15:10.657" starttime="20210323 02:15:00.680"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:10.663" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/70451-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:18.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:18.272" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:15:18.272" starttime="20210323 02:15:10.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:18.273" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:15:18.273" starttime="20210323 02:15:18.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:18.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:18.274" starttime="20210323 02:15:18.273"/>
</kw>
<status status="PASS" endtime="20210323 02:15:18.274" starttime="20210323 02:15:10.659"/>
</kw>
<msg timestamp="20210323 02:15:18.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:18.274" starttime="20210323 02:15:10.659"/>
</kw>
<msg timestamp="20210323 02:15:18.275" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:15:18.275" starttime="20210323 02:15:10.657"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:15:18.276" starttime="20210323 02:15:18.275"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:18.283" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/70451-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:24.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:24.200" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210323 02:15:24.201" starttime="20210323 02:15:18.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:24.203" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210323 02:15:24.203" starttime="20210323 02:15:24.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:24.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:24.204" starttime="20210323 02:15:24.203"/>
</kw>
<status status="PASS" endtime="20210323 02:15:24.204" starttime="20210323 02:15:18.278"/>
</kw>
<msg timestamp="20210323 02:15:24.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:24.204" starttime="20210323 02:15:18.278"/>
</kw>
<msg timestamp="20210323 02:15:24.204" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210323 02:15:24.205" starttime="20210323 02:15:18.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:24.209" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/70451-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:30.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:30.558" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:15:30.558" starttime="20210323 02:15:24.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:30.559" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:15:30.559" starttime="20210323 02:15:30.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:30.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:30.560" starttime="20210323 02:15:30.559"/>
</kw>
<status status="PASS" endtime="20210323 02:15:30.560" starttime="20210323 02:15:24.206"/>
</kw>
<msg timestamp="20210323 02:15:30.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:30.561" starttime="20210323 02:15:24.205"/>
</kw>
<msg timestamp="20210323 02:15:30.561" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:15:30.561" starttime="20210323 02:15:24.205"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:15:30.563" starttime="20210323 02:15:30.562"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:30.568" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/70451-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:37.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:37.112" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210323 02:15:37.112" starttime="20210323 02:15:30.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:37.114" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210323 02:15:37.114" starttime="20210323 02:15:37.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:37.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:37.115" starttime="20210323 02:15:37.114"/>
</kw>
<status status="PASS" endtime="20210323 02:15:37.115" starttime="20210323 02:15:30.564"/>
</kw>
<msg timestamp="20210323 02:15:37.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:37.115" starttime="20210323 02:15:30.564"/>
</kw>
<msg timestamp="20210323 02:15:37.115" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210323 02:15:37.115" starttime="20210323 02:15:30.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:37.120" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/70451-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:43.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:43.657" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:15:43.657" starttime="20210323 02:15:37.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:43.659" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:15:43.659" starttime="20210323 02:15:43.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:43.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:43.661" starttime="20210323 02:15:43.660"/>
</kw>
<status status="PASS" endtime="20210323 02:15:43.661" starttime="20210323 02:15:37.117"/>
</kw>
<msg timestamp="20210323 02:15:43.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:43.662" starttime="20210323 02:15:37.116"/>
</kw>
<msg timestamp="20210323 02:15:43.662" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:15:43.662" starttime="20210323 02:15:37.116"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:15:43.664" starttime="20210323 02:15:43.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:43.673" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/70451-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:49.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:49.592" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:15:49.592" starttime="20210323 02:15:43.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:49.594" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:15:49.594" starttime="20210323 02:15:49.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:49.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:49.595" starttime="20210323 02:15:49.594"/>
</kw>
<status status="PASS" endtime="20210323 02:15:49.596" starttime="20210323 02:15:43.670"/>
</kw>
<msg timestamp="20210323 02:15:49.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:49.596" starttime="20210323 02:15:43.669"/>
</kw>
<msg timestamp="20210323 02:15:49.596" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:15:49.597" starttime="20210323 02:15:43.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:49.602" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/70451-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:56.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:56.269" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210323 02:15:56.269" starttime="20210323 02:15:49.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:56.270" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:15:56.270" starttime="20210323 02:15:56.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:56.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:56.271" starttime="20210323 02:15:56.271"/>
</kw>
<status status="PASS" endtime="20210323 02:15:56.271" starttime="20210323 02:15:49.598"/>
</kw>
<msg timestamp="20210323 02:15:56.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:56.272" starttime="20210323 02:15:49.598"/>
</kw>
<msg timestamp="20210323 02:15:56.272" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210323 02:15:56.272" starttime="20210323 02:15:49.597"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:15:56.272" starttime="20210323 02:15:56.272"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:15:56.274" starttime="20210323 02:15:56.273"/>
</kw>
<status status="PASS" endtime="20210323 02:15:56.274" starttime="20210323 02:15:00.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210323 02:15:56.275" starttime="20210323 02:15:00.569"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:56.284" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:56.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:56.288" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:15:56.288" starttime="20210323 02:15:56.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:56.290" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:15:56.290" starttime="20210323 02:15:56.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:56.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:56.292" starttime="20210323 02:15:56.291"/>
</kw>
<status status="PASS" endtime="20210323 02:15:56.293" starttime="20210323 02:15:56.280"/>
</kw>
<msg timestamp="20210323 02:15:56.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:56.293" starttime="20210323 02:15:56.280"/>
</kw>
<msg timestamp="20210323 02:15:56.294" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:15:56.294" starttime="20210323 02:15:56.279"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:15:56.296" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:15:56.296" starttime="20210323 02:15:56.295"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:56.302" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:15:56.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:15:56.341" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:15:56.341" starttime="20210323 02:15:56.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:15:56.342" level="INFO"/>
<status status="PASS" endtime="20210323 02:15:56.342" starttime="20210323 02:15:56.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:15:56.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:15:56.343" starttime="20210323 02:15:56.342"/>
</kw>
<status status="PASS" endtime="20210323 02:15:56.343" starttime="20210323 02:15:56.299"/>
</kw>
<msg timestamp="20210323 02:15:56.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:15:56.344" starttime="20210323 02:15:56.298"/>
</kw>
<status status="PASS" endtime="20210323 02:15:56.344" starttime="20210323 02:15:56.297"/>
</kw>
<status status="PASS" endtime="20210323 02:15:56.344" starttime="20210323 02:15:56.296"/>
</kw>
<status status="PASS" endtime="20210323 02:15:56.344" starttime="20210323 02:15:56.278"/>
</kw>
<status status="PASS" endtime="20210323 02:15:56.344" starttime="20210323 02:15:56.277"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:15:56.356" level="INFO">Running command 'ozone sh bucket create o3://om:9862/70451-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:16:02.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:16:02.662" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:16:02.662" starttime="20210323 02:15:56.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:16:02.664" level="INFO"/>
<status status="PASS" endtime="20210323 02:16:02.664" starttime="20210323 02:16:02.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:16:02.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:16:02.665" starttime="20210323 02:16:02.664"/>
</kw>
<status status="PASS" endtime="20210323 02:16:02.665" starttime="20210323 02:15:56.348"/>
</kw>
<msg timestamp="20210323 02:16:02.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:16:02.665" starttime="20210323 02:15:56.348"/>
</kw>
<status status="PASS" endtime="20210323 02:16:02.666" starttime="20210323 02:15:56.347"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:16:02.670" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/70451-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:16:09.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:16:09.214" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:16:09.214" starttime="20210323 02:16:02.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:16:09.216" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:16:09.216" starttime="20210323 02:16:09.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:16:09.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:16:09.220" starttime="20210323 02:16:09.219"/>
</kw>
<status status="PASS" endtime="20210323 02:16:09.220" starttime="20210323 02:16:02.667"/>
</kw>
<msg timestamp="20210323 02:16:09.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:16:09.220" starttime="20210323 02:16:02.667"/>
</kw>
<msg timestamp="20210323 02:16:09.221" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:16:09.221" starttime="20210323 02:16:02.666"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:16:09.221" starttime="20210323 02:16:09.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:16:09.229" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/70451-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:16:14.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:16:14.891" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210323 02:16:14.891" starttime="20210323 02:16:09.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:16:14.892" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210323 02:16:14.892" starttime="20210323 02:16:14.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:16:14.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:16:14.893" starttime="20210323 02:16:14.892"/>
</kw>
<status status="PASS" endtime="20210323 02:16:14.893" starttime="20210323 02:16:09.225"/>
</kw>
<msg timestamp="20210323 02:16:14.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:16:14.893" starttime="20210323 02:16:09.225"/>
</kw>
<msg timestamp="20210323 02:16:14.894" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210323 02:16:14.894" starttime="20210323 02:16:09.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:16:14.897" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/70451-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:16:20.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:16:20.065" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:16:20.065" starttime="20210323 02:16:14.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:16:20.067" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:16:20.067" starttime="20210323 02:16:20.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:16:20.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:16:20.069" starttime="20210323 02:16:20.068"/>
</kw>
<status status="PASS" endtime="20210323 02:16:20.069" starttime="20210323 02:16:14.895"/>
</kw>
<msg timestamp="20210323 02:16:20.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:16:20.069" starttime="20210323 02:16:14.895"/>
</kw>
<msg timestamp="20210323 02:16:20.070" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:16:20.070" starttime="20210323 02:16:14.894"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:16:20.072" starttime="20210323 02:16:20.070"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:16:20.078" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/70451-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:16:26.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:16:26.003" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210323 02:16:26.004" starttime="20210323 02:16:20.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:16:26.005" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210323 02:16:26.005" starttime="20210323 02:16:26.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:16:26.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:16:26.007" starttime="20210323 02:16:26.006"/>
</kw>
<status status="PASS" endtime="20210323 02:16:26.007" starttime="20210323 02:16:20.074"/>
</kw>
<msg timestamp="20210323 02:16:26.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:16:26.008" starttime="20210323 02:16:20.074"/>
</kw>
<msg timestamp="20210323 02:16:26.008" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210323 02:16:26.008" starttime="20210323 02:16:20.072"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:16:26.015" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/70451-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:16:32.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:16:32.770" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:16:32.770" starttime="20210323 02:16:26.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:16:32.771" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:16:32.771" starttime="20210323 02:16:32.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:16:32.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:16:32.772" starttime="20210323 02:16:32.771"/>
</kw>
<status status="PASS" endtime="20210323 02:16:32.773" starttime="20210323 02:16:26.010"/>
</kw>
<msg timestamp="20210323 02:16:32.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:16:32.773" starttime="20210323 02:16:26.010"/>
</kw>
<msg timestamp="20210323 02:16:32.773" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:16:32.773" starttime="20210323 02:16:26.008"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:16:32.774" starttime="20210323 02:16:32.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:16:32.782" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/70451-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:16:39.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:16:39.066" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:16:39.066" starttime="20210323 02:16:32.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:16:39.068" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:16:39.068" starttime="20210323 02:16:39.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:16:39.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:16:39.074" starttime="20210323 02:16:39.073"/>
</kw>
<status status="PASS" endtime="20210323 02:16:39.074" starttime="20210323 02:16:32.776"/>
</kw>
<msg timestamp="20210323 02:16:39.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:16:39.075" starttime="20210323 02:16:32.775"/>
</kw>
<msg timestamp="20210323 02:16:39.075" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:16:39.075" starttime="20210323 02:16:32.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:16:39.081" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/70451-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:16:46.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:16:46.012" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210323 02:16:46.012" starttime="20210323 02:16:39.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:16:46.014" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:16:46.014" starttime="20210323 02:16:46.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:16:46.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:16:46.015" starttime="20210323 02:16:46.014"/>
</kw>
<status status="PASS" endtime="20210323 02:16:46.015" starttime="20210323 02:16:39.076"/>
</kw>
<msg timestamp="20210323 02:16:46.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:16:46.015" starttime="20210323 02:16:39.076"/>
</kw>
<msg timestamp="20210323 02:16:46.016" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210323 02:16:46.016" starttime="20210323 02:16:39.075"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:16:46.016" starttime="20210323 02:16:46.016"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:16:46.017" starttime="20210323 02:16:46.017"/>
</kw>
<status status="PASS" endtime="20210323 02:16:46.017" starttime="20210323 02:15:56.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210323 02:16:46.018" starttime="20210323 02:15:56.275"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:16:46.025" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:16:46.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:16:46.028" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:16:46.028" starttime="20210323 02:16:46.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:16:46.030" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:16:46.030" starttime="20210323 02:16:46.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:16:46.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:16:46.031" starttime="20210323 02:16:46.030"/>
</kw>
<status status="PASS" endtime="20210323 02:16:46.031" starttime="20210323 02:16:46.022"/>
</kw>
<msg timestamp="20210323 02:16:46.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:16:46.031" starttime="20210323 02:16:46.021"/>
</kw>
<msg timestamp="20210323 02:16:46.031" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:16:46.031" starttime="20210323 02:16:46.021"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:16:46.032" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:16:46.032" starttime="20210323 02:16:46.031"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:16:46.038" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:16:46.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:16:46.046" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:16:46.046" starttime="20210323 02:16:46.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:16:46.047" level="INFO"/>
<status status="PASS" endtime="20210323 02:16:46.047" starttime="20210323 02:16:46.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:16:46.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:16:46.049" starttime="20210323 02:16:46.048"/>
</kw>
<status status="PASS" endtime="20210323 02:16:46.049" starttime="20210323 02:16:46.034"/>
</kw>
<msg timestamp="20210323 02:16:46.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:16:46.050" starttime="20210323 02:16:46.034"/>
</kw>
<status status="PASS" endtime="20210323 02:16:46.050" starttime="20210323 02:16:46.033"/>
</kw>
<status status="PASS" endtime="20210323 02:16:46.050" starttime="20210323 02:16:46.032"/>
</kw>
<status status="PASS" endtime="20210323 02:16:46.051" starttime="20210323 02:16:46.020"/>
</kw>
<status status="PASS" endtime="20210323 02:16:46.051" starttime="20210323 02:16:46.020"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:16:46.059" level="INFO">Running command 'ozone sh key put o3://om:9862/70451-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:19:56.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:19:56.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:19:56.376" starttime="20210323 02:16:46.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:19:56.378" level="INFO"/>
<status status="PASS" endtime="20210323 02:19:56.378" starttime="20210323 02:19:56.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:19:56.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:19:56.380" starttime="20210323 02:19:56.379"/>
</kw>
<status status="PASS" endtime="20210323 02:19:56.381" starttime="20210323 02:16:46.055"/>
</kw>
<msg timestamp="20210323 02:19:56.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:19:56.381" starttime="20210323 02:16:46.054"/>
</kw>
<status status="PASS" endtime="20210323 02:19:56.382" starttime="20210323 02:16:46.053"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:19:56.388" level="INFO">Running command 'ozone sh key getacl o3://om:9862/70451-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:03.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:03.958" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:20:03.958" starttime="20210323 02:19:56.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:03.967" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:20:03.969" starttime="20210323 02:20:03.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:03.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:03.972" starttime="20210323 02:20:03.969"/>
</kw>
<status status="PASS" endtime="20210323 02:20:03.973" starttime="20210323 02:19:56.384"/>
</kw>
<msg timestamp="20210323 02:20:03.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:03.973" starttime="20210323 02:19:56.383"/>
</kw>
<msg timestamp="20210323 02:20:03.974" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:20:03.974" starttime="20210323 02:19:56.382"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:20:03.979" starttime="20210323 02:20:03.977"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:03.991" level="INFO">Running command 'ozone sh key addacl o3://om:9862/70451-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:10.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:10.719" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 02:20:10.719" starttime="20210323 02:20:03.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:10.721" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 02:20:10.721" starttime="20210323 02:20:10.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:10.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:10.722" starttime="20210323 02:20:10.721"/>
</kw>
<status status="PASS" endtime="20210323 02:20:10.722" starttime="20210323 02:20:03.984"/>
</kw>
<msg timestamp="20210323 02:20:10.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:10.723" starttime="20210323 02:20:03.984"/>
</kw>
<msg timestamp="20210323 02:20:10.723" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210323 02:20:10.723" starttime="20210323 02:20:03.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:10.727" level="INFO">Running command 'ozone sh key getacl o3://om:9862/70451-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:17.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:17.637" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:20:17.637" starttime="20210323 02:20:10.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:17.638" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:20:17.638" starttime="20210323 02:20:17.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:17.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:17.639" starttime="20210323 02:20:17.639"/>
</kw>
<status status="PASS" endtime="20210323 02:20:17.639" starttime="20210323 02:20:10.724"/>
</kw>
<msg timestamp="20210323 02:20:17.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:17.640" starttime="20210323 02:20:10.724"/>
</kw>
<msg timestamp="20210323 02:20:17.640" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:20:17.640" starttime="20210323 02:20:10.723"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:20:17.641" starttime="20210323 02:20:17.640"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:17.645" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/70451-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:23.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:23.998" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210323 02:20:23.998" starttime="20210323 02:20:17.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:23.999" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210323 02:20:23.999" starttime="20210323 02:20:23.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:24.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:24.001" starttime="20210323 02:20:24.000"/>
</kw>
<status status="PASS" endtime="20210323 02:20:24.002" starttime="20210323 02:20:17.642"/>
</kw>
<msg timestamp="20210323 02:20:24.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:24.003" starttime="20210323 02:20:17.642"/>
</kw>
<msg timestamp="20210323 02:20:24.003" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210323 02:20:24.003" starttime="20210323 02:20:17.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:24.012" level="INFO">Running command 'ozone sh key getacl o3://om:9862/70451-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:30.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:30.456" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:20:30.456" starttime="20210323 02:20:24.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:30.458" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:20:30.458" starttime="20210323 02:20:30.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:30.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:30.459" starttime="20210323 02:20:30.458"/>
</kw>
<status status="PASS" endtime="20210323 02:20:30.459" starttime="20210323 02:20:24.008"/>
</kw>
<msg timestamp="20210323 02:20:30.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:30.459" starttime="20210323 02:20:24.007"/>
</kw>
<msg timestamp="20210323 02:20:30.459" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:20:30.459" starttime="20210323 02:20:24.003"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:20:30.460" starttime="20210323 02:20:30.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:30.465" level="INFO">Running command 'ozone sh key setacl o3://om:9862/70451-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:35.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:35.513" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:20:35.513" starttime="20210323 02:20:30.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:35.514" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:20:35.514" starttime="20210323 02:20:35.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:35.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:35.515" starttime="20210323 02:20:35.514"/>
</kw>
<status status="PASS" endtime="20210323 02:20:35.515" starttime="20210323 02:20:30.461"/>
</kw>
<msg timestamp="20210323 02:20:35.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:35.515" starttime="20210323 02:20:30.461"/>
</kw>
<msg timestamp="20210323 02:20:35.515" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:20:35.515" starttime="20210323 02:20:30.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:35.519" level="INFO">Running command 'ozone sh key getacl o3://om:9862/70451-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:41.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:41.179" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210323 02:20:41.179" starttime="20210323 02:20:35.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:41.180" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:20:41.180" starttime="20210323 02:20:41.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:41.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:41.182" starttime="20210323 02:20:41.181"/>
</kw>
<status status="PASS" endtime="20210323 02:20:41.182" starttime="20210323 02:20:35.516"/>
</kw>
<msg timestamp="20210323 02:20:41.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:41.183" starttime="20210323 02:20:35.516"/>
</kw>
<msg timestamp="20210323 02:20:41.183" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210323 02:20:41.183" starttime="20210323 02:20:35.516"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:20:41.185" starttime="20210323 02:20:41.184"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:20:41.187" starttime="20210323 02:20:41.185"/>
</kw>
<status status="PASS" endtime="20210323 02:20:41.187" starttime="20210323 02:16:46.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210323 02:20:41.188" starttime="20210323 02:16:46.019"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:41.198" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:41.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:41.202" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:20:41.202" starttime="20210323 02:20:41.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:41.204" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:20:41.204" starttime="20210323 02:20:41.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:41.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:41.205" starttime="20210323 02:20:41.204"/>
</kw>
<status status="PASS" endtime="20210323 02:20:41.206" starttime="20210323 02:20:41.194"/>
</kw>
<msg timestamp="20210323 02:20:41.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:41.206" starttime="20210323 02:20:41.193"/>
</kw>
<msg timestamp="20210323 02:20:41.207" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:20:41.207" starttime="20210323 02:20:41.192"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:20:41.208" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:20:41.208" starttime="20210323 02:20:41.207"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:41.214" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:41.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:41.222" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:20:41.222" starttime="20210323 02:20:41.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:41.223" level="INFO"/>
<status status="PASS" endtime="20210323 02:20:41.223" starttime="20210323 02:20:41.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:41.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:41.224" starttime="20210323 02:20:41.224"/>
</kw>
<status status="PASS" endtime="20210323 02:20:41.224" starttime="20210323 02:20:41.210"/>
</kw>
<msg timestamp="20210323 02:20:41.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:41.225" starttime="20210323 02:20:41.210"/>
</kw>
<status status="PASS" endtime="20210323 02:20:41.225" starttime="20210323 02:20:41.209"/>
</kw>
<status status="PASS" endtime="20210323 02:20:41.225" starttime="20210323 02:20:41.208"/>
</kw>
<status status="PASS" endtime="20210323 02:20:41.225" starttime="20210323 02:20:41.191"/>
</kw>
<status status="PASS" endtime="20210323 02:20:41.225" starttime="20210323 02:20:41.190"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:41.231" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/70451-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:47.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:47.882" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210323 02:20:47.882" starttime="20210323 02:20:41.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:47.883" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210323 02:20:47.884" starttime="20210323 02:20:47.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:47.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:47.884" starttime="20210323 02:20:47.884"/>
</kw>
<status status="PASS" endtime="20210323 02:20:47.885" starttime="20210323 02:20:41.227"/>
</kw>
<msg timestamp="20210323 02:20:47.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:47.887" starttime="20210323 02:20:41.227"/>
</kw>
<status status="PASS" endtime="20210323 02:20:47.887" starttime="20210323 02:20:41.226"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:47.897" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/70451-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:20:54.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:20:54.703" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:20:54.703" starttime="20210323 02:20:47.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:20:54.706" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:20:54.706" starttime="20210323 02:20:54.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:20:54.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:20:54.707" starttime="20210323 02:20:54.706"/>
</kw>
<status status="PASS" endtime="20210323 02:20:54.708" starttime="20210323 02:20:47.888"/>
</kw>
<msg timestamp="20210323 02:20:54.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:20:54.708" starttime="20210323 02:20:47.888"/>
</kw>
<msg timestamp="20210323 02:20:54.709" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:20:54.709" starttime="20210323 02:20:47.887"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:20:54.712" starttime="20210323 02:20:54.709"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:20:54.717" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/70451-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:21:02.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:21:02.329" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210323 02:21:02.330" starttime="20210323 02:20:54.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:21:02.332" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210323 02:21:02.333" starttime="20210323 02:21:02.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:21:02.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:21:02.334" starttime="20210323 02:21:02.333"/>
</kw>
<status status="PASS" endtime="20210323 02:21:02.334" starttime="20210323 02:20:54.714"/>
</kw>
<msg timestamp="20210323 02:21:02.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:21:02.335" starttime="20210323 02:20:54.713"/>
</kw>
<msg timestamp="20210323 02:21:02.335" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210323 02:21:02.336" starttime="20210323 02:20:54.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:21:02.345" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/70451-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:21:08.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:21:08.565" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:21:08.565" starttime="20210323 02:21:02.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:21:08.566" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:21:08.566" starttime="20210323 02:21:08.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:21:08.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:21:08.567" starttime="20210323 02:21:08.566"/>
</kw>
<status status="PASS" endtime="20210323 02:21:08.567" starttime="20210323 02:21:02.338"/>
</kw>
<msg timestamp="20210323 02:21:08.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:21:08.567" starttime="20210323 02:21:02.338"/>
</kw>
<msg timestamp="20210323 02:21:08.568" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:21:08.568" starttime="20210323 02:21:02.336"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:21:08.569" starttime="20210323 02:21:08.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:21:08.576" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/70451-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:21:14.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:21:14.413" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:21:14.413" starttime="20210323 02:21:08.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:21:14.414" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:21:14.414" starttime="20210323 02:21:14.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:21:14.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:21:14.415" starttime="20210323 02:21:14.414"/>
</kw>
<status status="PASS" endtime="20210323 02:21:14.415" starttime="20210323 02:21:08.573"/>
</kw>
<msg timestamp="20210323 02:21:14.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:21:14.415" starttime="20210323 02:21:08.572"/>
</kw>
<msg timestamp="20210323 02:21:14.416" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210323 02:21:14.416" starttime="20210323 02:21:08.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:21:14.422" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/70451-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:21:19.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:21:19.605" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" endtime="20210323 02:21:19.606" starttime="20210323 02:21:14.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:21:19.607" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:21:19.607" starttime="20210323 02:21:19.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:21:19.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:21:19.607" starttime="20210323 02:21:19.607"/>
</kw>
<status status="PASS" endtime="20210323 02:21:19.608" starttime="20210323 02:21:14.417"/>
</kw>
<msg timestamp="20210323 02:21:19.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:21:19.608" starttime="20210323 02:21:14.417"/>
</kw>
<msg timestamp="20210323 02:21:19.608" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" endtime="20210323 02:21:19.608" starttime="20210323 02:21:14.416"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:21:19.609" starttime="20210323 02:21:19.608"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:21:19.609" starttime="20210323 02:21:19.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:21:19.613" level="INFO">Running command 'ozone sh key put o3://om:9862/70451-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:24:29.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:24:29.542" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:24:29.542" starttime="20210323 02:21:19.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:24:29.543" level="INFO"/>
<status status="PASS" endtime="20210323 02:24:29.544" starttime="20210323 02:24:29.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:24:29.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:24:29.544" starttime="20210323 02:24:29.544"/>
</kw>
<status status="PASS" endtime="20210323 02:24:29.545" starttime="20210323 02:21:19.611"/>
</kw>
<msg timestamp="20210323 02:24:29.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:24:29.545" starttime="20210323 02:21:19.610"/>
</kw>
<status status="PASS" endtime="20210323 02:24:29.545" starttime="20210323 02:21:19.610"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:24:29.550" level="INFO">Running command 'ozone sh key getacl o3://om:9862/70451-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:24:37.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:24:37.339" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:24:37.339" starttime="20210323 02:24:29.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:24:37.341" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210323 02:24:37.341" starttime="20210323 02:24:37.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:24:37.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:24:37.343" starttime="20210323 02:24:37.342"/>
</kw>
<status status="PASS" endtime="20210323 02:24:37.344" starttime="20210323 02:24:29.547"/>
</kw>
<msg timestamp="20210323 02:24:37.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:24:37.344" starttime="20210323 02:24:29.546"/>
</kw>
<msg timestamp="20210323 02:24:37.345" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210323 02:24:37.345" starttime="20210323 02:24:29.545"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:24:37.346" starttime="20210323 02:24:37.345"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210323 02:24:37.347" starttime="20210323 02:24:37.347"/>
</kw>
<status status="PASS" endtime="20210323 02:24:37.348" starttime="20210323 02:20:41.226"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210323 02:24:37.349" starttime="20210323 02:20:41.189"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:24:37.361" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:24:37.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:24:37.365" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:24:37.365" starttime="20210323 02:24:37.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:24:37.367" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:24:37.368" starttime="20210323 02:24:37.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:24:37.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:24:37.369" starttime="20210323 02:24:37.368"/>
</kw>
<status status="PASS" endtime="20210323 02:24:37.370" starttime="20210323 02:24:37.355"/>
</kw>
<msg timestamp="20210323 02:24:37.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:24:37.370" starttime="20210323 02:24:37.355"/>
</kw>
<msg timestamp="20210323 02:24:37.370" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:24:37.370" starttime="20210323 02:24:37.354"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:24:37.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:24:37.372" starttime="20210323 02:24:37.371"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:24:37.378" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:24:37.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:24:37.417" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:24:37.417" starttime="20210323 02:24:37.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:24:37.418" level="INFO"/>
<status status="PASS" endtime="20210323 02:24:37.418" starttime="20210323 02:24:37.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:24:37.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:24:37.419" starttime="20210323 02:24:37.418"/>
</kw>
<status status="PASS" endtime="20210323 02:24:37.419" starttime="20210323 02:24:37.374"/>
</kw>
<msg timestamp="20210323 02:24:37.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:24:37.419" starttime="20210323 02:24:37.374"/>
</kw>
<status status="PASS" endtime="20210323 02:24:37.420" starttime="20210323 02:24:37.373"/>
</kw>
<status status="PASS" endtime="20210323 02:24:37.420" starttime="20210323 02:24:37.372"/>
</kw>
<status status="PASS" endtime="20210323 02:24:37.420" starttime="20210323 02:24:37.352"/>
</kw>
<status status="PASS" endtime="20210323 02:24:37.420" starttime="20210323 02:24:37.351"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:24:37.424" level="INFO">Running command 'ozone sh volume info o3:///70451-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:24:43.488" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 02:24:43.488" level="INFO">${output} = VOLUME_NOT_FOUND Volume 70451-rpcwport is not found</msg>
<status status="PASS" endtime="20210323 02:24:43.488" starttime="20210323 02:24:37.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:24:43.489" level="INFO">VOLUME_NOT_FOUND Volume 70451-rpcwport is not found</msg>
<status status="PASS" endtime="20210323 02:24:43.489" starttime="20210323 02:24:43.488"/>
</kw>
<msg timestamp="20210323 02:24:43.489" level="INFO">${result} = VOLUME_NOT_FOUND Volume 70451-rpcwport is not found</msg>
<status status="PASS" endtime="20210323 02:24:43.489" starttime="20210323 02:24:37.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:24:43.490" starttime="20210323 02:24:43.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:24:43.495" level="INFO">Running command 'ozone sh volume create o3:///70451-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:24:49.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:24:49.477" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:24:49.477" starttime="20210323 02:24:43.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:24:49.478" level="INFO"/>
<status status="PASS" endtime="20210323 02:24:49.479" starttime="20210323 02:24:49.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:24:49.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:24:49.479" starttime="20210323 02:24:49.479"/>
</kw>
<status status="PASS" endtime="20210323 02:24:49.479" starttime="20210323 02:24:43.491"/>
</kw>
<msg timestamp="20210323 02:24:49.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:24:49.480" starttime="20210323 02:24:43.491"/>
</kw>
<msg timestamp="20210323 02:24:49.480" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210323 02:24:49.480" starttime="20210323 02:24:43.490"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:24:49.481" starttime="20210323 02:24:49.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:24:49.485" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="70451-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:24:54.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:24:54.401" level="INFO">${output} = {
  "metadata": {},
  "name": "70451-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210323 02:24:54.401" starttime="20210323 02:24:49.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:24:54.403" level="INFO">{
  "metadata": {},
  "name": "70451-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-23T02:24:49.287Z",
  "modificationTime": "2021-03-23T02:24:49.287Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210323 02:24:54.403" starttime="20210323 02:24:54.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:24:54.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:24:54.403" starttime="20210323 02:24:54.403"/>
</kw>
<status status="PASS" endtime="20210323 02:24:54.404" starttime="20210323 02:24:49.482"/>
</kw>
<msg timestamp="20210323 02:24:54.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:24:54.404" starttime="20210323 02:24:49.482"/>
</kw>
<msg timestamp="20210323 02:24:54.404" level="INFO">${result} = {
  "metadata": {},
  "name": "70451-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210323 02:24:54.404" starttime="20210323 02:24:49.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:24:54.405" starttime="20210323 02:24:54.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:24:54.409" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="70451-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:25:01.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:25:01.282" level="INFO">${output} = {
  "metadata": {},
  "name": "70451-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210323 02:25:01.282" starttime="20210323 02:24:54.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:25:01.283" level="INFO">{
  "metadata": {},
  "name": "70451-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-23T02:24:49.287Z",
  "modificationTime": "2021-03-23T02:24:49.287Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210323 02:25:01.284" starttime="20210323 02:25:01.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:25:01.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:25:01.284" starttime="20210323 02:25:01.284"/>
</kw>
<status status="PASS" endtime="20210323 02:25:01.285" starttime="20210323 02:24:54.407"/>
</kw>
<msg timestamp="20210323 02:25:01.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:25:01.285" starttime="20210323 02:24:54.406"/>
</kw>
<msg timestamp="20210323 02:25:01.285" level="INFO">${result} = {
  "metadata": {},
  "name": "70451-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210323 02:25:01.285" starttime="20210323 02:24:54.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:25:01.286" starttime="20210323 02:25:01.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:25:01.290" level="INFO">Running command 'ozone sh volume setquota o3:///70451-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:25:05.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:25:05.696" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:25:05.696" starttime="20210323 02:25:01.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:25:05.697" level="INFO"/>
<status status="PASS" endtime="20210323 02:25:05.697" starttime="20210323 02:25:05.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:25:05.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:25:05.699" starttime="20210323 02:25:05.698"/>
</kw>
<status status="PASS" endtime="20210323 02:25:05.699" starttime="20210323 02:25:01.287"/>
</kw>
<msg timestamp="20210323 02:25:05.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:25:05.699" starttime="20210323 02:25:01.287"/>
</kw>
<status status="PASS" endtime="20210323 02:25:05.700" starttime="20210323 02:25:01.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:25:05.705" level="INFO">Running command 'ozone sh volume info o3:///70451-rpcwport | jq -r '. | select(.name=="70451-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:25:12.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:25:12.977" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:25:12.977" starttime="20210323 02:25:05.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:25:12.978" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210323 02:25:12.979" starttime="20210323 02:25:12.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:25:12.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:25:12.979" starttime="20210323 02:25:12.979"/>
</kw>
<status status="PASS" endtime="20210323 02:25:12.980" starttime="20210323 02:25:05.701"/>
</kw>
<msg timestamp="20210323 02:25:12.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:25:12.980" starttime="20210323 02:25:05.701"/>
</kw>
<msg timestamp="20210323 02:25:12.980" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:25:12.980" starttime="20210323 02:25:05.700"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:25:12.981" starttime="20210323 02:25:12.980"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:25:12.985" level="INFO">Running command 'ozone sh bucket create o3:///70451-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:25:19.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:25:19.393" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:25:19.393" starttime="20210323 02:25:12.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:25:19.394" level="INFO"/>
<status status="PASS" endtime="20210323 02:25:19.394" starttime="20210323 02:25:19.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:25:19.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:25:19.395" starttime="20210323 02:25:19.394"/>
</kw>
<status status="PASS" endtime="20210323 02:25:19.395" starttime="20210323 02:25:12.982"/>
</kw>
<msg timestamp="20210323 02:25:19.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:25:19.395" starttime="20210323 02:25:12.981"/>
</kw>
<status status="PASS" endtime="20210323 02:25:19.395" starttime="20210323 02:25:12.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:25:19.400" level="INFO">Running command 'ozone sh bucket info o3:///70451-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:25:25.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:25:25.796" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210323 02:25:25.796" starttime="20210323 02:25:19.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:25:25.798" level="INFO">DISK</msg>
<status status="PASS" endtime="20210323 02:25:25.798" starttime="20210323 02:25:25.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:25:25.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:25:25.798" starttime="20210323 02:25:25.798"/>
</kw>
<status status="PASS" endtime="20210323 02:25:25.799" starttime="20210323 02:25:19.397"/>
</kw>
<msg timestamp="20210323 02:25:25.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:25:25.799" starttime="20210323 02:25:19.396"/>
</kw>
<msg timestamp="20210323 02:25:25.799" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210323 02:25:25.799" starttime="20210323 02:25:19.396"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:25:25.800" starttime="20210323 02:25:25.799"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:25:25.805" level="INFO">Running command 'ozone sh bucket info o3:///70451-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:25:33.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:25:33.855" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:25:33.855" starttime="20210323 02:25:25.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:25:33.856" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210323 02:25:33.856" starttime="20210323 02:25:33.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:25:33.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:25:33.857" starttime="20210323 02:25:33.856"/>
</kw>
<status status="PASS" endtime="20210323 02:25:33.857" starttime="20210323 02:25:25.801"/>
</kw>
<msg timestamp="20210323 02:25:33.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:25:33.858" starttime="20210323 02:25:25.801"/>
</kw>
<msg timestamp="20210323 02:25:33.858" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:25:33.858" starttime="20210323 02:25:25.800"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:25:33.859" starttime="20210323 02:25:33.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:25:33.863" level="INFO">Running command 'ozone sh bucket info o3:///70451-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:25:40.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:25:40.867" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210323 02:25:40.867" starttime="20210323 02:25:33.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:25:40.868" level="INFO">100</msg>
<status status="PASS" endtime="20210323 02:25:40.868" starttime="20210323 02:25:40.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:25:40.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:25:40.869" starttime="20210323 02:25:40.869"/>
</kw>
<status status="PASS" endtime="20210323 02:25:40.869" starttime="20210323 02:25:33.860"/>
</kw>
<msg timestamp="20210323 02:25:40.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:25:40.870" starttime="20210323 02:25:33.860"/>
</kw>
<msg timestamp="20210323 02:25:40.870" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210323 02:25:40.870" starttime="20210323 02:25:33.859"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:25:40.871" starttime="20210323 02:25:40.870"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:25:40.877" level="INFO">Running command 'ozone sh bucket setquota o3:///70451-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:25:45.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:25:45.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:25:45.556" starttime="20210323 02:25:40.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:25:45.557" level="INFO"/>
<status status="PASS" endtime="20210323 02:25:45.558" starttime="20210323 02:25:45.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:25:45.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:25:45.558" starttime="20210323 02:25:45.558"/>
</kw>
<status status="PASS" endtime="20210323 02:25:45.559" starttime="20210323 02:25:40.873"/>
</kw>
<msg timestamp="20210323 02:25:45.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:25:45.559" starttime="20210323 02:25:40.872"/>
</kw>
<status status="PASS" endtime="20210323 02:25:45.559" starttime="20210323 02:25:40.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:25:45.563" level="INFO">Running command 'ozone sh bucket info o3:///70451-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:25:51.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:25:51.581" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210323 02:25:51.581" starttime="20210323 02:25:45.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:25:51.584" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210323 02:25:51.584" starttime="20210323 02:25:51.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:25:51.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:25:51.586" starttime="20210323 02:25:51.584"/>
</kw>
<status status="PASS" endtime="20210323 02:25:51.586" starttime="20210323 02:25:45.560"/>
</kw>
<msg timestamp="20210323 02:25:51.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:25:51.587" starttime="20210323 02:25:45.560"/>
</kw>
<msg timestamp="20210323 02:25:51.588" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210323 02:25:51.588" starttime="20210323 02:25:45.559"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:25:51.589" starttime="20210323 02:25:51.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:25:51.596" level="INFO">Running command 'ozone sh bucket info o3:///70451-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:25:59.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:25:59.254" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210323 02:25:59.254" starttime="20210323 02:25:51.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:25:59.255" level="INFO">1000</msg>
<status status="PASS" endtime="20210323 02:25:59.255" starttime="20210323 02:25:59.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:25:59.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:25:59.256" starttime="20210323 02:25:59.255"/>
</kw>
<status status="PASS" endtime="20210323 02:25:59.256" starttime="20210323 02:25:51.592"/>
</kw>
<msg timestamp="20210323 02:25:59.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:25:59.256" starttime="20210323 02:25:51.591"/>
</kw>
<msg timestamp="20210323 02:25:59.257" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210323 02:25:59.257" starttime="20210323 02:25:51.590"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:25:59.258" starttime="20210323 02:25:59.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:25:59.264" level="INFO">Running command 'ozone sh bucket list o3:///70451-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:26:05.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:26:05.657" level="INFO">${output} = 70451-rpcwport</msg>
<status status="PASS" endtime="20210323 02:26:05.657" starttime="20210323 02:25:59.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:26:05.659" level="INFO">70451-rpcwport</msg>
<status status="PASS" endtime="20210323 02:26:05.659" starttime="20210323 02:26:05.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:26:05.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:26:05.660" starttime="20210323 02:26:05.659"/>
</kw>
<status status="PASS" endtime="20210323 02:26:05.661" starttime="20210323 02:25:59.260"/>
</kw>
<msg timestamp="20210323 02:26:05.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:26:05.661" starttime="20210323 02:25:59.260"/>
</kw>
<msg timestamp="20210323 02:26:05.661" level="INFO">${result} = 70451-rpcwport</msg>
<status status="PASS" endtime="20210323 02:26:05.661" starttime="20210323 02:25:59.258"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:26:05.662" starttime="20210323 02:26:05.661"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:26:05.667" level="INFO">Running command 'ozone sh key put o3:///70451-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:29:16.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:29:16.253" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:29:16.253" starttime="20210323 02:26:05.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:29:16.255" level="INFO"/>
<status status="PASS" endtime="20210323 02:29:16.255" starttime="20210323 02:29:16.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:29:16.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:29:16.256" starttime="20210323 02:29:16.255"/>
</kw>
<status status="PASS" endtime="20210323 02:29:16.256" starttime="20210323 02:26:05.664"/>
</kw>
<msg timestamp="20210323 02:29:16.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:29:16.257" starttime="20210323 02:26:05.663"/>
</kw>
<status status="PASS" endtime="20210323 02:29:16.257" starttime="20210323 02:26:05.663"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:29:16.263" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:29:16.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:29:16.267" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:29:16.267" starttime="20210323 02:29:16.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:29:16.268" level="INFO"/>
<status status="PASS" endtime="20210323 02:29:16.268" starttime="20210323 02:29:16.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:29:16.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:29:16.269" starttime="20210323 02:29:16.269"/>
</kw>
<status status="PASS" endtime="20210323 02:29:16.269" starttime="20210323 02:29:16.259"/>
</kw>
<msg timestamp="20210323 02:29:16.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:29:16.270" starttime="20210323 02:29:16.258"/>
</kw>
<status status="PASS" endtime="20210323 02:29:16.270" starttime="20210323 02:29:16.258"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:29:16.274" level="INFO">Running command 'ozone sh key get o3:///70451-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:29:26.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:29:26.022" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:29:26.022" starttime="20210323 02:29:16.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:29:26.024" level="INFO"/>
<status status="PASS" endtime="20210323 02:29:26.024" starttime="20210323 02:29:26.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:29:26.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:29:26.024" starttime="20210323 02:29:26.024"/>
</kw>
<status status="PASS" endtime="20210323 02:29:26.025" starttime="20210323 02:29:16.271"/>
</kw>
<msg timestamp="20210323 02:29:26.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:29:26.025" starttime="20210323 02:29:16.271"/>
</kw>
<status status="PASS" endtime="20210323 02:29:26.025" starttime="20210323 02:29:16.270"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:29:26.031" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:29:26.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:29:26.035" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:29:26.035" starttime="20210323 02:29:26.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:29:26.037" level="INFO"/>
<status status="PASS" endtime="20210323 02:29:26.037" starttime="20210323 02:29:26.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:29:26.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:29:26.038" starttime="20210323 02:29:26.037"/>
</kw>
<status status="PASS" endtime="20210323 02:29:26.038" starttime="20210323 02:29:26.028"/>
</kw>
<msg timestamp="20210323 02:29:26.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:29:26.038" starttime="20210323 02:29:26.026"/>
</kw>
<status status="PASS" endtime="20210323 02:29:26.039" starttime="20210323 02:29:26.026"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:29:26.045" level="INFO">Running command 'ozone sh key put -t RATIS o3:///70451-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:29:37.351" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210323 02:29:37.351" starttime="20210323 02:29:26.041"/>
</kw>
<status status="FAIL" endtime="20210323 02:29:37.351" starttime="20210323 02:29:26.040"/>
</kw>
<msg timestamp="20210323 02:29:37.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210323 02:29:37.352" starttime="20210323 02:29:26.040"/>
</kw>
<status status="FAIL" endtime="20210323 02:29:37.352" starttime="20210323 02:29:26.039"/>
</kw>
<status status="FAIL" endtime="20210323 02:29:37.352" starttime="20210323 02:26:05.662"/>
</kw>
<status status="FAIL" endtime="20210323 02:29:37.352" starttime="20210323 02:26:05.662"/>
</kw>
<status status="FAIL" endtime="20210323 02:29:37.352" starttime="20210323 02:24:37.420"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210323 02:29:37.353" starttime="20210323 02:24:37.350">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:29:37.361" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:29:37.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:29:37.364" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 02:29:37.364" starttime="20210323 02:29:37.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:29:37.365" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 02:29:37.366" starttime="20210323 02:29:37.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:29:37.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:29:37.366" starttime="20210323 02:29:37.366"/>
</kw>
<status status="PASS" endtime="20210323 02:29:37.367" starttime="20210323 02:29:37.358"/>
</kw>
<msg timestamp="20210323 02:29:37.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:29:37.367" starttime="20210323 02:29:37.357"/>
</kw>
<msg timestamp="20210323 02:29:37.367" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 02:29:37.367" starttime="20210323 02:29:37.357"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 02:29:37.368" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 02:29:37.369" starttime="20210323 02:29:37.368"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:29:37.374" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:29:37.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:29:37.383" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:29:37.384" starttime="20210323 02:29:37.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:29:37.386" level="INFO"/>
<status status="PASS" endtime="20210323 02:29:37.386" starttime="20210323 02:29:37.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:29:37.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:29:37.387" starttime="20210323 02:29:37.386"/>
</kw>
<status status="PASS" endtime="20210323 02:29:37.387" starttime="20210323 02:29:37.371"/>
</kw>
<msg timestamp="20210323 02:29:37.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:29:37.387" starttime="20210323 02:29:37.370"/>
</kw>
<status status="PASS" endtime="20210323 02:29:37.388" starttime="20210323 02:29:37.369"/>
</kw>
<status status="PASS" endtime="20210323 02:29:37.388" starttime="20210323 02:29:37.369"/>
</kw>
<status status="PASS" endtime="20210323 02:29:37.388" starttime="20210323 02:29:37.356"/>
</kw>
<status status="PASS" endtime="20210323 02:29:37.388" starttime="20210323 02:29:37.356"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:29:37.392" level="INFO">Running command 'ozone sh volume info /70451-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:29:43.526" level="INFO">${rc} = 255</msg>
<msg timestamp="20210323 02:29:43.526" level="INFO">${output} = VOLUME_NOT_FOUND Volume 70451-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210323 02:29:43.526" starttime="20210323 02:29:37.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:29:43.528" level="INFO">VOLUME_NOT_FOUND Volume 70451-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210323 02:29:43.529" starttime="20210323 02:29:43.527"/>
</kw>
<msg timestamp="20210323 02:29:43.530" level="INFO">${result} = VOLUME_NOT_FOUND Volume 70451-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210323 02:29:43.530" starttime="20210323 02:29:37.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:29:43.531" starttime="20210323 02:29:43.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:29:43.536" level="INFO">Running command 'ozone sh volume create /70451-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:29:50.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:29:50.115" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:29:50.116" starttime="20210323 02:29:43.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:29:50.118" level="INFO"/>
<status status="PASS" endtime="20210323 02:29:50.118" starttime="20210323 02:29:50.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:29:50.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:29:50.120" starttime="20210323 02:29:50.119"/>
</kw>
<status status="PASS" endtime="20210323 02:29:50.120" starttime="20210323 02:29:43.532"/>
</kw>
<msg timestamp="20210323 02:29:50.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:29:50.121" starttime="20210323 02:29:43.531"/>
</kw>
<msg timestamp="20210323 02:29:50.121" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210323 02:29:50.121" starttime="20210323 02:29:43.531"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:29:50.122" starttime="20210323 02:29:50.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:29:50.129" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="70451-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:29:57.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:29:57.241" level="INFO">${output} = {
  "metadata": {},
  "name": "70451-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210323 02:29:57.241" starttime="20210323 02:29:50.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:29:57.244" level="INFO">{
  "metadata": {},
  "name": "70451-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-23T02:29:49.872Z",
  "modificationTime": "2021-03-23T02:29:49.872Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210323 02:29:57.244" starttime="20210323 02:29:57.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:29:57.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:29:57.245" starttime="20210323 02:29:57.244"/>
</kw>
<status status="PASS" endtime="20210323 02:29:57.246" starttime="20210323 02:29:50.124"/>
</kw>
<msg timestamp="20210323 02:29:57.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:29:57.246" starttime="20210323 02:29:50.124"/>
</kw>
<msg timestamp="20210323 02:29:57.247" level="INFO">${result} = {
  "metadata": {},
  "name": "70451-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210323 02:29:57.247" starttime="20210323 02:29:50.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:29:57.248" starttime="20210323 02:29:57.247"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:29:57.255" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="70451-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:30:04.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:30:04.387" level="INFO">${output} = {
  "metadata": {},
  "name": "70451-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210323 02:30:04.387" starttime="20210323 02:29:57.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:30:04.389" level="INFO">{
  "metadata": {},
  "name": "70451-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-23T02:29:49.872Z",
  "modificationTime": "2021-03-23T02:29:49.872Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210323 02:30:04.390" starttime="20210323 02:30:04.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:30:04.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:30:04.391" starttime="20210323 02:30:04.390"/>
</kw>
<status status="PASS" endtime="20210323 02:30:04.392" starttime="20210323 02:29:57.250"/>
</kw>
<msg timestamp="20210323 02:30:04.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:30:04.392" starttime="20210323 02:29:57.250"/>
</kw>
<msg timestamp="20210323 02:30:04.393" level="INFO">${result} = {
  "metadata": {},
  "name": "70451-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210323 02:30:04.393" starttime="20210323 02:29:57.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210323 02:30:04.395" starttime="20210323 02:30:04.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:30:04.400" level="INFO">Running command 'ozone sh volume setquota /70451-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:30:10.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:30:10.727" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:30:10.727" starttime="20210323 02:30:04.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:30:10.728" level="INFO"/>
<status status="PASS" endtime="20210323 02:30:10.728" starttime="20210323 02:30:10.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:30:10.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:30:10.729" starttime="20210323 02:30:10.728"/>
</kw>
<status status="PASS" endtime="20210323 02:30:10.730" starttime="20210323 02:30:04.397"/>
</kw>
<msg timestamp="20210323 02:30:10.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:30:10.730" starttime="20210323 02:30:04.396"/>
</kw>
<status status="PASS" endtime="20210323 02:30:10.730" starttime="20210323 02:30:04.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:30:10.736" level="INFO">Running command 'ozone sh volume info /70451-rpcwoscheme | jq -r '. | select(.name=="70451-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:30:17.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:30:17.098" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:30:17.098" starttime="20210323 02:30:10.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:30:17.100" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210323 02:30:17.100" starttime="20210323 02:30:17.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:30:17.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:30:17.102" starttime="20210323 02:30:17.100"/>
</kw>
<status status="PASS" endtime="20210323 02:30:17.102" starttime="20210323 02:30:10.732"/>
</kw>
<msg timestamp="20210323 02:30:17.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:30:17.103" starttime="20210323 02:30:10.732"/>
</kw>
<msg timestamp="20210323 02:30:17.103" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:30:17.103" starttime="20210323 02:30:10.731"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:30:17.104" starttime="20210323 02:30:17.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:30:17.111" level="INFO">Running command 'ozone sh bucket create /70451-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:30:22.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:30:22.625" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:30:22.625" starttime="20210323 02:30:17.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:30:22.626" level="INFO"/>
<status status="PASS" endtime="20210323 02:30:22.626" starttime="20210323 02:30:22.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:30:22.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:30:22.627" starttime="20210323 02:30:22.626"/>
</kw>
<status status="PASS" endtime="20210323 02:30:22.627" starttime="20210323 02:30:17.106"/>
</kw>
<msg timestamp="20210323 02:30:22.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:30:22.627" starttime="20210323 02:30:17.106"/>
</kw>
<status status="PASS" endtime="20210323 02:30:22.627" starttime="20210323 02:30:17.104"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:30:22.632" level="INFO">Running command 'ozone sh bucket info /70451-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:30:28.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:30:28.574" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210323 02:30:28.574" starttime="20210323 02:30:22.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:30:28.576" level="INFO">DISK</msg>
<status status="PASS" endtime="20210323 02:30:28.576" starttime="20210323 02:30:28.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:30:28.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:30:28.578" starttime="20210323 02:30:28.577"/>
</kw>
<status status="PASS" endtime="20210323 02:30:28.579" starttime="20210323 02:30:22.629"/>
</kw>
<msg timestamp="20210323 02:30:28.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:30:28.579" starttime="20210323 02:30:22.628"/>
</kw>
<msg timestamp="20210323 02:30:28.580" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210323 02:30:28.580" starttime="20210323 02:30:22.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:30:28.581" starttime="20210323 02:30:28.580"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:30:28.588" level="INFO">Running command 'ozone sh bucket info /70451-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:30:33.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:30:33.917" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:30:33.917" starttime="20210323 02:30:28.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:30:33.918" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210323 02:30:33.918" starttime="20210323 02:30:33.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:30:33.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:30:33.919" starttime="20210323 02:30:33.918"/>
</kw>
<status status="PASS" endtime="20210323 02:30:33.919" starttime="20210323 02:30:28.583"/>
</kw>
<msg timestamp="20210323 02:30:33.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:30:33.919" starttime="20210323 02:30:28.583"/>
</kw>
<msg timestamp="20210323 02:30:33.920" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210323 02:30:33.920" starttime="20210323 02:30:28.581"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:30:33.920" starttime="20210323 02:30:33.920"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:30:33.924" level="INFO">Running command 'ozone sh bucket info /70451-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:30:39.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:30:39.974" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210323 02:30:39.974" starttime="20210323 02:30:33.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:30:39.975" level="INFO">100</msg>
<status status="PASS" endtime="20210323 02:30:39.975" starttime="20210323 02:30:39.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:30:39.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:30:39.976" starttime="20210323 02:30:39.975"/>
</kw>
<status status="PASS" endtime="20210323 02:30:39.976" starttime="20210323 02:30:33.922"/>
</kw>
<msg timestamp="20210323 02:30:39.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:30:39.976" starttime="20210323 02:30:33.921"/>
</kw>
<msg timestamp="20210323 02:30:39.977" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210323 02:30:39.977" starttime="20210323 02:30:33.920"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:30:39.977" starttime="20210323 02:30:39.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:30:39.982" level="INFO">Running command 'ozone sh bucket setquota /70451-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:30:44.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:30:44.427" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:30:44.427" starttime="20210323 02:30:39.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:30:44.428" level="INFO"/>
<status status="PASS" endtime="20210323 02:30:44.428" starttime="20210323 02:30:44.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:30:44.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:30:44.429" starttime="20210323 02:30:44.428"/>
</kw>
<status status="PASS" endtime="20210323 02:30:44.429" starttime="20210323 02:30:39.978"/>
</kw>
<msg timestamp="20210323 02:30:44.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:30:44.429" starttime="20210323 02:30:39.978"/>
</kw>
<status status="PASS" endtime="20210323 02:30:44.429" starttime="20210323 02:30:39.977"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:30:44.434" level="INFO">Running command 'ozone sh bucket info /70451-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:30:51.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:30:51.086" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210323 02:30:51.086" starttime="20210323 02:30:44.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:30:51.089" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210323 02:30:51.089" starttime="20210323 02:30:51.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:30:51.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:30:51.091" starttime="20210323 02:30:51.090"/>
</kw>
<status status="PASS" endtime="20210323 02:30:51.092" starttime="20210323 02:30:44.431"/>
</kw>
<msg timestamp="20210323 02:30:51.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:30:51.092" starttime="20210323 02:30:44.430"/>
</kw>
<msg timestamp="20210323 02:30:51.092" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210323 02:30:51.093" starttime="20210323 02:30:44.429"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:30:51.094" starttime="20210323 02:30:51.093"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:30:51.100" level="INFO">Running command 'ozone sh bucket info /70451-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:30:57.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:30:57.797" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210323 02:30:57.797" starttime="20210323 02:30:51.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:30:57.798" level="INFO">1000</msg>
<status status="PASS" endtime="20210323 02:30:57.798" starttime="20210323 02:30:57.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:30:57.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:30:57.799" starttime="20210323 02:30:57.798"/>
</kw>
<status status="PASS" endtime="20210323 02:30:57.799" starttime="20210323 02:30:51.096"/>
</kw>
<msg timestamp="20210323 02:30:57.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:30:57.799" starttime="20210323 02:30:51.096"/>
</kw>
<msg timestamp="20210323 02:30:57.800" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210323 02:30:57.800" starttime="20210323 02:30:51.094"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:30:57.800" starttime="20210323 02:30:57.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:30:57.805" level="INFO">Running command 'ozone sh bucket list /70451-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:31:05.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:31:05.767" level="INFO">${output} = 70451-rpcwoscheme</msg>
<status status="PASS" endtime="20210323 02:31:05.767" starttime="20210323 02:30:57.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:31:05.769" level="INFO">70451-rpcwoscheme</msg>
<status status="PASS" endtime="20210323 02:31:05.769" starttime="20210323 02:31:05.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:31:05.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:31:05.770" starttime="20210323 02:31:05.769"/>
</kw>
<status status="PASS" endtime="20210323 02:31:05.771" starttime="20210323 02:30:57.802"/>
</kw>
<msg timestamp="20210323 02:31:05.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:31:05.771" starttime="20210323 02:30:57.801"/>
</kw>
<msg timestamp="20210323 02:31:05.771" level="INFO">${result} = 70451-rpcwoscheme</msg>
<status status="PASS" endtime="20210323 02:31:05.771" starttime="20210323 02:30:57.800"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210323 02:31:05.772" starttime="20210323 02:31:05.772"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:31:05.779" level="INFO">Running command 'ozone sh key put /70451-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:34:17.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:34:17.266" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:34:17.266" starttime="20210323 02:31:05.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:34:17.268" level="INFO"/>
<status status="PASS" endtime="20210323 02:34:17.268" starttime="20210323 02:34:17.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:34:17.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:34:17.269" starttime="20210323 02:34:17.268"/>
</kw>
<status status="PASS" endtime="20210323 02:34:17.269" starttime="20210323 02:31:05.775"/>
</kw>
<msg timestamp="20210323 02:34:17.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:34:17.270" starttime="20210323 02:31:05.775"/>
</kw>
<status status="PASS" endtime="20210323 02:34:17.270" starttime="20210323 02:31:05.774"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:34:17.276" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:34:17.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:34:17.278" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:34:17.278" starttime="20210323 02:34:17.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:34:17.279" level="INFO"/>
<status status="PASS" endtime="20210323 02:34:17.279" starttime="20210323 02:34:17.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:34:17.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:34:17.280" starttime="20210323 02:34:17.279"/>
</kw>
<status status="PASS" endtime="20210323 02:34:17.281" starttime="20210323 02:34:17.271"/>
</kw>
<msg timestamp="20210323 02:34:17.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:34:17.281" starttime="20210323 02:34:17.271"/>
</kw>
<status status="PASS" endtime="20210323 02:34:17.282" starttime="20210323 02:34:17.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:34:17.287" level="INFO">Running command 'ozone sh key get /70451-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:34:28.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:34:28.191" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:34:28.191" starttime="20210323 02:34:17.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:34:28.192" level="INFO"/>
<status status="PASS" endtime="20210323 02:34:28.192" starttime="20210323 02:34:28.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:34:28.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:34:28.193" starttime="20210323 02:34:28.193"/>
</kw>
<status status="PASS" endtime="20210323 02:34:28.194" starttime="20210323 02:34:17.284"/>
</kw>
<msg timestamp="20210323 02:34:28.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:34:28.194" starttime="20210323 02:34:17.283"/>
</kw>
<status status="PASS" endtime="20210323 02:34:28.194" starttime="20210323 02:34:17.282"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:34:28.200" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:34:28.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 02:34:28.204" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 02:34:28.205" starttime="20210323 02:34:28.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 02:34:28.206" level="INFO"/>
<status status="PASS" endtime="20210323 02:34:28.207" starttime="20210323 02:34:28.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 02:34:28.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 02:34:28.208" starttime="20210323 02:34:28.207"/>
</kw>
<status status="PASS" endtime="20210323 02:34:28.208" starttime="20210323 02:34:28.196"/>
</kw>
<msg timestamp="20210323 02:34:28.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 02:34:28.209" starttime="20210323 02:34:28.196"/>
</kw>
<status status="PASS" endtime="20210323 02:34:28.210" starttime="20210323 02:34:28.195"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 02:34:28.216" level="INFO">Running command 'ozone sh key put -t RATIS /70451-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 02:34:37.355" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210323 02:34:37.356" starttime="20210323 02:34:28.213"/>
</kw>
<status status="FAIL" endtime="20210323 02:34:37.357" starttime="20210323 02:34:28.212"/>
</kw>
<msg timestamp="20210323 02:34:37.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210323 02:34:37.357" starttime="20210323 02:34:28.211"/>
</kw>
<status status="FAIL" endtime="20210323 02:34:37.357" starttime="20210323 02:34:28.210"/>
</kw>
<status status="FAIL" endtime="20210323 02:34:37.357" starttime="20210323 02:31:05.773"/>
</kw>
<status status="FAIL" endtime="20210323 02:34:37.357" starttime="20210323 02:31:05.772"/>
</kw>
<status status="FAIL" endtime="20210323 02:34:37.358" starttime="20210323 02:29:37.388"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210323 02:34:37.359" starttime="20210323 02:29:37.355">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210323 02:34:37.364" starttime="20210323 02:10:00.501"/>
</suite>
<status status="FAIL" endtime="20210323 02:34:37.381" starttime="20210323 01:46:18.284"/>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:46:13.282" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:46:13.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:46:13.286" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210323 01:46:13.286" starttime="20210323 01:46:13.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:46:13.287" level="INFO">scm</msg>
<status status="PASS" endtime="20210323 01:46:13.287" starttime="20210323 01:46:13.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:46:13.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:46:13.287" starttime="20210323 01:46:13.287"/>
</kw>
<status status="PASS" endtime="20210323 01:46:13.288" starttime="20210323 01:46:13.277"/>
</kw>
<msg timestamp="20210323 01:46:13.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:46:13.288" starttime="20210323 01:46:13.277"/>
</kw>
<msg timestamp="20210323 01:46:13.288" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210323 01:46:13.288" starttime="20210323 01:46:13.276"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210323 01:46:13.289" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210323 01:46:13.289" starttime="20210323 01:46:13.288"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210323 01:46:13.293" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210323 01:46:13.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210323 01:46:13.300" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210323 01:46:13.300" starttime="20210323 01:46:13.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210323 01:46:13.301" level="INFO"/>
<status status="PASS" endtime="20210323 01:46:13.301" starttime="20210323 01:46:13.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210323 01:46:13.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210323 01:46:13.302" starttime="20210323 01:46:13.302"/>
</kw>
<status status="PASS" endtime="20210323 01:46:13.302" starttime="20210323 01:46:13.290"/>
</kw>
<msg timestamp="20210323 01:46:13.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210323 01:46:13.303" starttime="20210323 01:46:13.290"/>
</kw>
<status status="PASS" endtime="20210323 01:46:13.303" starttime="20210323 01:46:13.290"/>
</kw>
<status status="PASS" endtime="20210323 01:46:13.303" starttime="20210323 01:46:13.289"/>
</kw>
<status status="PASS" endtime="20210323 01:46:13.303" starttime="20210323 01:46:13.276"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210323 01:46:13.303" starttime="20210323 01:46:13.274"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210323 01:46:13.305" starttime="20210323 01:46:13.224"/>
</suite>
<status status="FAIL" elapsedtime="2899178" endtime="N/A" starttime="N/A"/>
</suite>
<statistics>
<total>
<stat fail="10" skip="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="10" skip="0" id="s1" name="ozonesecure" pass="20">ozonesecure</stat>
<stat fail="10" skip="0" id="s1-s1" name="Basic" pass="19">ozonesecure.Basic</stat>
<stat fail="1" skip="0" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="0" skip="0" id="s1-s1-s2" name="Getconf" pass="4">ozonesecure.Basic.Getconf</stat>
<stat fail="5" skip="0" id="s1-s1-s3" name="Links" pass="10">ozonesecure.Basic.Links</stat>
<stat fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell" pass="4">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" skip="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
