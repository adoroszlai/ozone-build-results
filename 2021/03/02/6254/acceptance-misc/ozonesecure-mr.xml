<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210302 02:03:29.107" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:59:29.110" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:59:33.210" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 01:59:33.210" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:59:33.210" starttime="20210302 01:59:29.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:59:33.211" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:59:33.211" starttime="20210302 01:59:33.211"></status>
</kw>
<msg timestamp="20210302 01:59:33.212" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:59:33.212" starttime="20210302 01:59:29.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:59:33.217" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:59:37.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:59:37.037" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:59:37.037" starttime="20210302 01:59:33.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:59:37.038" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:59:37.038" starttime="20210302 01:59:37.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:59:37.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:59:37.039" starttime="20210302 01:59:37.038"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:37.039" starttime="20210302 01:59:33.213"></status>
</kw>
<msg timestamp="20210302 01:59:37.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:59:37.039" starttime="20210302 01:59:33.213"></status>
</kw>
<msg timestamp="20210302 01:59:37.039" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210302 01:59:37.039" starttime="20210302 01:59:33.213"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210302 01:59:37.040" starttime="20210302 01:59:37.040"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:37.040" starttime="20210302 01:59:33.212"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:37.040" starttime="20210302 01:59:33.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:59:37.044" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:59:40.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:59:40.621" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:59:40.621" starttime="20210302 01:59:37.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:59:40.622" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:59:40.622" starttime="20210302 01:59:40.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:59:40.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:59:40.623" starttime="20210302 01:59:40.623"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:40.623" starttime="20210302 01:59:37.042"></status>
</kw>
<msg timestamp="20210302 01:59:40.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:59:40.623" starttime="20210302 01:59:37.041"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:40.624" starttime="20210302 01:59:37.041"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:40.624" starttime="20210302 01:59:37.041"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:40.624" starttime="20210302 01:59:37.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210302 01:59:40.624" starttime="20210302 01:59:40.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:59:40.628" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:59:44.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:59:44.285" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:59...</msg>
<status status="PASS" endtime="20210302 01:59:44.285" starttime="20210302 01:59:40.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:59:44.286" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:59:40.407Z",
  "modificationTime" : "2021-03-02T01:59:40.407Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210302 01:59:44.286" starttime="20210302 01:59:44.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:59:44.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:59:44.287" starttime="20210302 01:59:44.286"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:44.287" starttime="20210302 01:59:40.625"></status>
</kw>
<msg timestamp="20210302 01:59:44.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:59:44.287" starttime="20210302 01:59:40.625"></status>
</kw>
<msg timestamp="20210302 01:59:44.287" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:59...</msg>
<status status="PASS" endtime="20210302 01:59:44.287" starttime="20210302 01:59:40.625"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210302 01:59:44.288" starttime="20210302 01:59:44.288"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:59:44.292" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:59:44.292" starttime="20210302 01:59:44.291"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:59:44.293" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:59:44.293" starttime="20210302 01:59:44.292"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:44.293" starttime="20210302 01:59:44.291"></status>
</kw>
<msg timestamp="20210302 01:59:44.293" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:59:44.293" starttime="20210302 01:59:44.290"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:44.293" starttime="20210302 01:59:44.290"></status>
</kw>
<msg timestamp="20210302 01:59:44.293" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210302 01:59:44.293" starttime="20210302 01:59:44.289"></status>
</kw>
<msg timestamp="20210302 01:59:44.294" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210302 01:59:44.294" starttime="20210302 01:59:44.288"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:59:44.297" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:59:47.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:59:47.655" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:59:47.655" starttime="20210302 01:59:44.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:59:47.656" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:59:47.657" starttime="20210302 01:59:47.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:59:47.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:59:47.658" starttime="20210302 01:59:47.657"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:47.658" starttime="20210302 01:59:44.294"></status>
</kw>
<msg timestamp="20210302 01:59:47.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:59:47.658" starttime="20210302 01:59:44.294"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:47.658" starttime="20210302 01:59:44.294"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:59:47.662" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:59:55.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:59:55.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:59:55.710" starttime="20210302 01:59:47.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:59:55.711" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:59:55.711" starttime="20210302 01:59:55.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:59:55.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:59:55.712" starttime="20210302 01:59:55.711"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:55.712" starttime="20210302 01:59:47.659"></status>
</kw>
<msg timestamp="20210302 01:59:55.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:59:55.712" starttime="20210302 01:59:47.659"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:55.713" starttime="20210302 01:59:47.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:59:55.716" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:00:01.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:00:01.234" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:00:01.235" starttime="20210302 01:59:55.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:00:01.236" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:00:01.236" starttime="20210302 02:00:01.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:00:01.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:00:01.236" starttime="20210302 02:00:01.236"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:01.237" starttime="20210302 01:59:55.714"></status>
</kw>
<msg timestamp="20210302 02:00:01.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:00:01.237" starttime="20210302 01:59:55.713"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:01.237" starttime="20210302 01:59:55.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:00:01.241" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:00:06.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:00:06.842" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:00:06.842" starttime="20210302 02:00:01.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:00:06.843" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:00:06.843" starttime="20210302 02:00:06.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:00:06.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:00:06.844" starttime="20210302 02:00:06.843"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:06.844" starttime="20210302 02:00:01.238"></status>
</kw>
<msg timestamp="20210302 02:00:06.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:00:06.844" starttime="20210302 02:00:01.238"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:06.845" starttime="20210302 02:00:01.237"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:00:06.845" critical="yes" starttime="20210302 01:59:29.105"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 02:00:06.851" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 02:00:06.851" starttime="20210302 02:00:06.850"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:00:06.851" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 02:00:06.851" starttime="20210302 02:00:06.851"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:06.851" starttime="20210302 02:00:06.849"></status>
</kw>
<msg timestamp="20210302 02:00:06.851" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 02:00:06.852" starttime="20210302 02:00:06.849"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:06.852" starttime="20210302 02:00:06.848"></status>
</kw>
<msg timestamp="20210302 02:00:06.852" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 02:00:06.852" starttime="20210302 02:00:06.848"></status>
</kw>
<msg timestamp="20210302 02:00:06.852" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 02:00:06.852" starttime="20210302 02:00:06.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:00:06.855" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:00:10.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:00:10.051" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:00:10.051" starttime="20210302 02:00:06.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:00:10.052" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:00:10.052" starttime="20210302 02:00:10.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:00:10.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:00:10.053" starttime="20210302 02:00:10.052"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:10.053" starttime="20210302 02:00:06.853"></status>
</kw>
<msg timestamp="20210302 02:00:10.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:00:10.053" starttime="20210302 02:00:06.853"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:10.053" starttime="20210302 02:00:06.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:00:10.057" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:00:13.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:00:13.313" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:00:13.313" starttime="20210302 02:00:10.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:00:13.314" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:00:13.314" starttime="20210302 02:00:13.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:00:13.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:00:13.315" starttime="20210302 02:00:13.314"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:13.315" starttime="20210302 02:00:10.054"></status>
</kw>
<msg timestamp="20210302 02:00:13.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:00:13.315" starttime="20210302 02:00:10.054"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:13.315" starttime="20210302 02:00:10.053"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:00:13.315" critical="yes" starttime="20210302 02:00:06.846"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210302 02:00:13.317" starttime="20210302 01:59:29.048"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 02:02:01.537" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 02:02:01.537" starttime="20210302 02:02:01.537"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:02:01.538" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 02:02:01.538" starttime="20210302 02:02:01.537"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:01.538" starttime="20210302 02:02:01.536"></status>
</kw>
<msg timestamp="20210302 02:02:01.538" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 02:02:01.538" starttime="20210302 02:02:01.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:02:01.539" starttime="20210302 02:02:01.539"></status>
</kw>
<msg timestamp="20210302 02:02:01.539" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 02:02:01.539" starttime="20210302 02:02:01.538"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:01.540" starttime="20210302 02:02:01.535"></status>
</kw>
<msg timestamp="20210302 02:02:01.540" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 02:02:01.540" starttime="20210302 02:02:01.535"></status>
</kw>
<msg timestamp="20210302 02:02:01.540" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 02:02:01.540" starttime="20210302 02:02:01.534"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 02:02:01.540" level="INFO">${random} = 13086</msg>
<status status="PASS" endtime="20210302 02:02:01.541" starttime="20210302 02:02:01.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:02:01.546" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-13086 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:02:05.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:02:05.215" level="INFO">${output} = 2021-03-02 02:02:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:02:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210302 02:02:05.215" starttime="20210302 02:02:01.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:02:05.216" level="INFO">2021-03-02 02:02:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:02:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:02:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 02:02:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 02:02:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-915AC1BA815C-&gt;d85aa15c-db4f-406c-8779-3e498a050506
2021-03-02 02:02:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210302 02:02:05.216" starttime="20210302 02:02:05.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:02:05.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:02:05.217" starttime="20210302 02:02:05.217"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:05.217" starttime="20210302 02:02:01.541"></status>
</kw>
<msg timestamp="20210302 02:02:05.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:02:05.217" starttime="20210302 02:02:01.541"></status>
</kw>
<msg timestamp="20210302 02:02:05.218" level="INFO">${result} = 2021-03-02 02:02:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:02:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210302 02:02:05.218" starttime="20210302 02:02:01.541"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:02:05.221" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:02:07.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:02:07.275" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 02:02 ofs://om/volume1/bucket1/ozone-13086
-rw-...</msg>
<status status="PASS" endtime="20210302 02:02:07.275" starttime="20210302 02:02:05.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:02:07.276" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 02:02 ofs://om/volume1/bucket1/ozone-13086
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 02:00 ofs://om/volume1/bucket1/ozone-16825
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 02:00 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 02:01 ofs://om/volume1/bucket1/wordcount-zlKxnmB1.txt</msg>
<status status="PASS" endtime="20210302 02:02:07.276" starttime="20210302 02:02:07.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:02:07.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:02:07.277" starttime="20210302 02:02:07.276"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:07.277" starttime="20210302 02:02:05.219"></status>
</kw>
<msg timestamp="20210302 02:02:07.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:02:07.277" starttime="20210302 02:02:05.218"></status>
</kw>
<msg timestamp="20210302 02:02:07.277" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 02:02 ofs://om/volume1/bucket1/ozone-13086
-rw-...</msg>
<status status="PASS" endtime="20210302 02:02:07.277" starttime="20210302 02:02:05.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:02:07.278" starttime="20210302 02:02:07.278"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:02:07.278" critical="yes" starttime="20210302 02:02:01.533"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210302 02:02:07.280" starttime="20210302 02:02:01.481"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 02:00:34.326" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 02:00:34.326" starttime="20210302 02:00:34.326"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:00:34.327" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 02:00:34.327" starttime="20210302 02:00:34.326"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:34.327" starttime="20210302 02:00:34.325"></status>
</kw>
<msg timestamp="20210302 02:00:34.327" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 02:00:34.327" starttime="20210302 02:00:34.325"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:34.327" starttime="20210302 02:00:34.324"></status>
</kw>
<msg timestamp="20210302 02:00:34.328" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 02:00:34.328" starttime="20210302 02:00:34.323"></status>
</kw>
<msg timestamp="20210302 02:00:34.328" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 02:00:34.328" starttime="20210302 02:00:34.322"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 02:00:34.328" level="INFO">${random} = 16825</msg>
<status status="PASS" endtime="20210302 02:00:34.328" starttime="20210302 02:00:34.328"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:00:34.333" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-16825 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:00:38.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:00:38.383" level="INFO">${output} = 2021-03-02 02:00:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:00:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210302 02:00:38.383" starttime="20210302 02:00:34.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:00:38.385" level="INFO">2021-03-02 02:00:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:00:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:00:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 02:00:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 02:00:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-98C1592C053D-&gt;d85aa15c-db4f-406c-8779-3e498a050506
2021-03-02 02:00:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210302 02:00:38.385" starttime="20210302 02:00:38.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:00:38.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:00:38.386" starttime="20210302 02:00:38.385"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:38.386" starttime="20210302 02:00:34.329"></status>
</kw>
<msg timestamp="20210302 02:00:38.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:00:38.386" starttime="20210302 02:00:34.329"></status>
</kw>
<msg timestamp="20210302 02:00:38.386" level="INFO">${result} = 2021-03-02 02:00:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:00:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210302 02:00:38.386" starttime="20210302 02:00:34.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:00:38.390" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:00:40.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:00:40.287" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 02:00 o3fs://bucket1.volume1.om/ozone-16825
dr...</msg>
<status status="PASS" endtime="20210302 02:00:40.287" starttime="20210302 02:00:38.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:00:40.288" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 02:00 o3fs://bucket1.volume1.om/ozone-16825
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 02:00 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 02:00:40.289" starttime="20210302 02:00:40.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:00:40.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:00:40.289" starttime="20210302 02:00:40.289"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:40.290" starttime="20210302 02:00:38.387"></status>
</kw>
<msg timestamp="20210302 02:00:40.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:00:40.290" starttime="20210302 02:00:38.387"></status>
</kw>
<msg timestamp="20210302 02:00:40.290" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 02:00 o3fs://bucket1.volume1.om/ozone-16825
dr...</msg>
<status status="PASS" endtime="20210302 02:00:40.290" starttime="20210302 02:00:38.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:00:40.291" starttime="20210302 02:00:40.290"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:00:40.291" critical="yes" starttime="20210302 02:00:34.321"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210302 02:00:40.292" starttime="20210302 02:00:34.271"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:00:29.457" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:00:29.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:00:29.460" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210302 02:00:29.460" starttime="20210302 02:00:29.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:00:29.461" level="INFO">rm</msg>
<status status="PASS" endtime="20210302 02:00:29.461" starttime="20210302 02:00:29.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:00:29.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:00:29.462" starttime="20210302 02:00:29.462"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:29.462" starttime="20210302 02:00:29.453"></status>
</kw>
<msg timestamp="20210302 02:00:29.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:00:29.463" starttime="20210302 02:00:29.453"></status>
</kw>
<msg timestamp="20210302 02:00:29.463" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210302 02:00:29.463" starttime="20210302 02:00:29.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:00:29.464" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:00:29.464" starttime="20210302 02:00:29.463"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:00:29.469" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:00:29.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:00:29.476" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:00:29.476" starttime="20210302 02:00:29.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:00:29.477" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:00:29.477" starttime="20210302 02:00:29.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:00:29.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:00:29.478" starttime="20210302 02:00:29.478"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:29.478" starttime="20210302 02:00:29.466"></status>
</kw>
<msg timestamp="20210302 02:00:29.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:00:29.479" starttime="20210302 02:00:29.465"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:29.479" starttime="20210302 02:00:29.465"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:29.479" starttime="20210302 02:00:29.464"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:29.479" starttime="20210302 02:00:29.452"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:00:29.479" critical="yes" starttime="20210302 02:00:29.451"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210302 02:00:29.480" starttime="20210302 02:00:29.404"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:59:24.325" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:59:24.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:59:24.328" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210302 01:59:24.328" starttime="20210302 01:59:24.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:59:24.329" level="INFO">om</msg>
<status status="PASS" endtime="20210302 01:59:24.329" starttime="20210302 01:59:24.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:59:24.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:59:24.329" starttime="20210302 01:59:24.329"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:24.330" starttime="20210302 01:59:24.321"></status>
</kw>
<msg timestamp="20210302 01:59:24.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:59:24.330" starttime="20210302 01:59:24.320"></status>
</kw>
<msg timestamp="20210302 01:59:24.330" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210302 01:59:24.330" starttime="20210302 01:59:24.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 01:59:24.331" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 01:59:24.331" starttime="20210302 01:59:24.330"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:59:24.335" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:59:24.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:59:24.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:59:24.342" starttime="20210302 01:59:24.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:59:24.342" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:59:24.343" starttime="20210302 01:59:24.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:59:24.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:59:24.343" starttime="20210302 01:59:24.343"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:24.343" starttime="20210302 01:59:24.332"></status>
</kw>
<msg timestamp="20210302 01:59:24.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:59:24.344" starttime="20210302 01:59:24.332"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:24.344" starttime="20210302 01:59:24.331"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:24.344" starttime="20210302 01:59:24.331"></status>
</kw>
<status status="PASS" endtime="20210302 01:59:24.344" starttime="20210302 01:59:24.319"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 01:59:24.344" critical="yes" starttime="20210302 01:59:24.318"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210302 01:59:24.345" starttime="20210302 01:59:24.271"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:02:12.151" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:02:12.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:02:12.158" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:02:12.158" starttime="20210302 02:02:12.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:02:12.159" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:02:12.160" starttime="20210302 02:02:12.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:02:12.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:02:12.160" starttime="20210302 02:02:12.160"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:12.160" starttime="20210302 02:02:12.147"></status>
</kw>
<msg timestamp="20210302 02:02:12.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:02:12.161" starttime="20210302 02:02:12.147"></status>
</kw>
<msg timestamp="20210302 02:02:12.161" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:02:12.161" starttime="20210302 02:02:12.146"></status>
</kw>
<msg timestamp="20210302 02:02:12.161" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:02:12.161" starttime="20210302 02:02:12.146"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 02:02:12.166" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 02:02:12.166" starttime="20210302 02:02:12.166"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:02:12.167" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 02:02:12.167" starttime="20210302 02:02:12.166"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:12.167" starttime="20210302 02:02:12.165"></status>
</kw>
<msg timestamp="20210302 02:02:12.167" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 02:02:12.167" starttime="20210302 02:02:12.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:02:12.168" starttime="20210302 02:02:12.167"></status>
</kw>
<msg timestamp="20210302 02:02:12.168" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 02:02:12.168" starttime="20210302 02:02:12.167"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:12.168" starttime="20210302 02:02:12.164"></status>
</kw>
<msg timestamp="20210302 02:02:12.168" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 02:02:12.168" starttime="20210302 02:02:12.162"></status>
</kw>
<msg timestamp="20210302 02:02:12.169" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 02:02:12.169" starttime="20210302 02:02:12.161"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:02:12.172" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:02:45.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:02:45.768" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 02:02:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:02:14 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210302 02:02:45.768" starttime="20210302 02:02:12.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:02:45.769" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-03-02 02:02:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:02:14 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:02:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 02:02:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 02:02:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8A7F74D05B59-&gt;5d60b738-421a-4fea-96d1-55433e5ac446
2021-03-02 02:02:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-03-02 02:02:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-498F433E40FA-&gt;d85aa15c-db4f-406c-8779-3e498a050506
2021-03-02 02:02:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-03-02 02:02:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-03-02 02:02:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.9:10200
2021-03-02 02:02:16 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650536063, maxDate=1615255336063, sequenceNumber=3, masterKeyId=2))
2021-03-02 02:02:16 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 af e0 af 85 ff 2e 38 af e8 e1 a5 81 2f 40 03 48 01 5a 0d 32 32 39 36 35 32 31 30 36 38 31 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-03-02 02:02:16 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650536063, maxDate=1615255336063, sequenceNumber=3, masterKeyId=2)
2021-03-02 02:02:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 02:02:16 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 02:02:16 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 02:02:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614650307186_0003
2021-03-02 02:02:16 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650536063, maxDate=1615255336063, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 af e0 af 85 ff 2e 38 af e8 e1 a5 81 2f 40 03 48 01 5a 0d 32 32 39 36 35 32 31 30 36 38 31 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-03-02 02:02:17 INFO  Configuration:2795 - resource-types.xml not found
2021-03-02 02:02:17 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-03-02 02:02:17 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-03-02 02:02:17 INFO  YarnClientImpl:329 - Submitted application application_1614650307186_0003
2021-03-02 02:02:17 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1614650307186_0003/
2021-03-02 02:02:17 INFO  Job:1614 - Running job: job_1614650307186_0003
2021-03-02 02:02:24 INFO  Job:1635 - Job job_1614650307186_0003 running in uber mode : false
2021-03-02 02:02:24 INFO  Job:1642 -  map 0% reduce 0%
2021-03-02 02:02:36 INFO  Job:1642 -  map 33% reduce 0%
2021-03-02 02:02:38 INFO  Job:1642 -  map 100% reduce 0%
2021-03-02 02:02:45 INFO  Job:1642 -  map 100% reduce 100%
2021-03-02 02:02:45 INFO  Job:1653 - Job job_1614650307186_0003 completed successfully
2021-03-02 02:02:45 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1103045
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47700
		Total time spent by all reduces in occupied slots (ms)=12644
		Total time spent by all map tasks (ms)=23850
		Total time spent by all reduce tasks (ms)=6322
		Total vcore-milliseconds taken by all map tasks=23850
		Total vcore-milliseconds taken by all reduce tasks=6322
		Total megabyte-milliseconds taken by all map tasks=48844800
		Total megabyte-milliseconds taken by all reduce tasks=12947456
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1653
		CPU time spent (ms)=8290
		Physical memory (bytes) snapshot=1650831360
		Virtual memory (bytes) snapshot=14058807296
		Total committed heap usage (bytes)=1448607744
		Peak Map Physical memory (bytes)=551645184
		Peak Map Virtual memory (bytes)=3511808000
		Peak Reduce Physical memory (bytes)=327573504
		Peak Reduce Virtual memory (bytes)=3526979584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.658 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210302 02:02:45.770" starttime="20210302 02:02:45.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:02:45.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:02:45.770" starttime="20210302 02:02:45.770"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:45.770" starttime="20210302 02:02:12.170"></status>
</kw>
<msg timestamp="20210302 02:02:45.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:02:45.771" starttime="20210302 02:02:12.169"></status>
</kw>
<msg timestamp="20210302 02:02:45.771" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 02:02:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:02:14 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210302 02:02:45.771" starttime="20210302 02:02:12.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 02:02:45.772" starttime="20210302 02:02:45.771"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 02:02:45.772" critical="yes" starttime="20210302 02:02:12.145"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:02:45.777" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:02:45.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:02:45.782" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:02:45.782" starttime="20210302 02:02:45.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:02:45.783" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:02:45.783" starttime="20210302 02:02:45.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:02:45.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:02:45.784" starttime="20210302 02:02:45.784"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:45.785" starttime="20210302 02:02:45.775"></status>
</kw>
<msg timestamp="20210302 02:02:45.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:02:45.785" starttime="20210302 02:02:45.775"></status>
</kw>
<msg timestamp="20210302 02:02:45.785" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:02:45.785" starttime="20210302 02:02:45.774"></status>
</kw>
<msg timestamp="20210302 02:02:45.785" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:02:45.785" starttime="20210302 02:02:45.774"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 02:02:45.786" level="INFO">${random} = tCzQW2nf</msg>
<status status="PASS" endtime="20210302 02:02:45.786" starttime="20210302 02:02:45.785"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 02:02:45.790" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 02:02:45.790" starttime="20210302 02:02:45.789"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:02:45.790" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 02:02:45.790" starttime="20210302 02:02:45.790"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:45.791" starttime="20210302 02:02:45.789"></status>
</kw>
<msg timestamp="20210302 02:02:45.791" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 02:02:45.791" starttime="20210302 02:02:45.788"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:02:45.792" starttime="20210302 02:02:45.791"></status>
</kw>
<msg timestamp="20210302 02:02:45.792" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 02:02:45.792" starttime="20210302 02:02:45.791"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:45.792" starttime="20210302 02:02:45.788"></status>
</kw>
<msg timestamp="20210302 02:02:45.792" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 02:02:45.792" starttime="20210302 02:02:45.787"></status>
</kw>
<msg timestamp="20210302 02:02:45.792" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 02:02:45.792" starttime="20210302 02:02:45.786"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 02:02:45.796" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 02:02:45.796" starttime="20210302 02:02:45.795"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:02:45.796" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 02:02:45.796" starttime="20210302 02:02:45.796"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:45.797" starttime="20210302 02:02:45.795"></status>
</kw>
<msg timestamp="20210302 02:02:45.797" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 02:02:45.797" starttime="20210302 02:02:45.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 02:02:45.798" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210302 02:02:45.798" starttime="20210302 02:02:45.798"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:02:45.799" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210302 02:02:45.799" starttime="20210302 02:02:45.798"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:45.799" starttime="20210302 02:02:45.797"></status>
</kw>
<msg timestamp="20210302 02:02:45.799" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210302 02:02:45.799" starttime="20210302 02:02:45.797"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:45.799" starttime="20210302 02:02:45.794"></status>
</kw>
<msg timestamp="20210302 02:02:45.799" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210302 02:02:45.799" starttime="20210302 02:02:45.793"></status>
</kw>
<msg timestamp="20210302 02:02:45.800" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210302 02:02:45.800" starttime="20210302 02:02:45.793"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 02:02:45.803" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 02:02:45.803" starttime="20210302 02:02:45.802"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:02:45.803" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 02:02:45.803" starttime="20210302 02:02:45.803"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:45.804" starttime="20210302 02:02:45.802"></status>
</kw>
<msg timestamp="20210302 02:02:45.804" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 02:02:45.804" starttime="20210302 02:02:45.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 02:02:45.805" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210302 02:02:45.805" starttime="20210302 02:02:45.805"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:02:45.806" level="INFO">${result} = /wordcount-tCzQW2nf.txt</msg>
<status status="PASS" endtime="20210302 02:02:45.806" starttime="20210302 02:02:45.805"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:45.806" starttime="20210302 02:02:45.804"></status>
</kw>
<msg timestamp="20210302 02:02:45.806" level="INFO">${path_with_leading} = /wordcount-tCzQW2nf.txt</msg>
<status status="PASS" endtime="20210302 02:02:45.806" starttime="20210302 02:02:45.804"></status>
</kw>
<status status="PASS" endtime="20210302 02:02:45.806" starttime="20210302 02:02:45.801"></status>
</kw>
<msg timestamp="20210302 02:02:45.807" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-tCzQW2nf.txt</msg>
<status status="PASS" endtime="20210302 02:02:45.807" starttime="20210302 02:02:45.800"></status>
</kw>
<msg timestamp="20210302 02:02:45.807" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-tCzQW2nf.txt</msg>
<status status="PASS" endtime="20210302 02:02:45.807" starttime="20210302 02:02:45.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:02:45.811" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-tCzQW2nf.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:03:21.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:03:21.526" level="INFO">${output} = 2021-03-02 02:02:47 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-03-02 02:02:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.9:10200
202...</msg>
<status status="PASS" endtime="20210302 02:03:21.526" starttime="20210302 02:02:45.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:03:21.527" level="INFO">2021-03-02 02:02:47 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-03-02 02:02:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.9:10200
2021-03-02 02:02:48 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650568193, maxDate=1615255368193, sequenceNumber=4, masterKeyId=2))
2021-03-02 02:02:48 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a5 db b1 85 ff 2e 38 a5 e3 e3 a5 81 2f 40 04 48 01 5a 0d 32 32 39 36 35 32 31 30 36 38 31 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-03-02 02:02:48 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650568193, maxDate=1615255368193, sequenceNumber=4, masterKeyId=2)
2021-03-02 02:02:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 02:02:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:02:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:02:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 02:02:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 02:02:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6CDDFD53B265-&gt;5d60b738-421a-4fea-96d1-55433e5ac446
2021-03-02 02:02:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 02:02:49 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 02:02:49 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 02:02:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-16D38B0A9BB7-&gt;d85aa15c-db4f-406c-8779-3e498a050506
2021-03-02 02:02:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 02:02:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614650307186_0004
2021-03-02 02:02:52 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650568193, maxDate=1615255368193, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a5 db b1 85 ff 2e 38 a5 e3 e3 a5 81 2f 40 04 48 01 5a 0d 32 32 39 36 35 32 31 30 36 38 31 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-03-02 02:02:52 INFO  Configuration:2795 - resource-types.xml not found
2021-03-02 02:02:52 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-03-02 02:02:52 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-03-02 02:02:53 INFO  YarnClientImpl:329 - Submitted application application_1614650307186_0004
2021-03-02 02:02:53 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1614650307186_0004/
2021-03-02 02:02:53 INFO  Job:1614 - Running job: job_1614650307186_0004
2021-03-02 02:03:00 INFO  Job:1635 - Job job_1614650307186_0004 running in uber mode : false
2021-03-02 02:03:00 INFO  Job:1642 -  map 0% reduce 0%
2021-03-02 02:03:10 INFO  Job:1642 -  map 33% reduce 0%
2021-03-02 02:03:11 INFO  Job:1642 -  map 67% reduce 0%
2021-03-02 02:03:12 INFO  Job:1642 -  map 100% reduce 0%
2021-03-02 02:03:20 INFO  Job:1642 -  map 100% reduce 100%
2021-03-02 02:03:21 INFO  Job:1653 - Job job_1614650307186_0004 completed successfully
2021-03-02 02:03:21 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1165719
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43000
		Total time spent by all reduces in occupied slots (ms)=12152
		Total time spent by all map tasks (ms)=21500
		Total time spent by all reduce tasks (ms)=6076
		Total vcore-milliseconds taken by all map tasks=21500
		Total vcore-milliseconds taken by all reduce tasks=6076
		Total megabyte-milliseconds taken by all map tasks=44032000
		Total megabyte-milliseconds taken by all reduce tasks=12443648
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1081
		CPU time spent (ms)=7540
		Physical memory (bytes) snapshot=1426644992
		Virtual memory (bytes) snapshot=14050136064
		Total committed heap usage (bytes)=1164443648
		Peak Map Physical memory (bytes)=385458176
		Peak Map Virtual memory (bytes)=3511107584
		Peak Reduce Physical memory (bytes)=319692800
		Peak Reduce Virtual memory (bytes)=3520466944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210302 02:03:21.527" starttime="20210302 02:03:21.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:03:21.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:03:21.528" starttime="20210302 02:03:21.527"></status>
</kw>
<status status="PASS" endtime="20210302 02:03:21.528" starttime="20210302 02:02:45.808"></status>
</kw>
<msg timestamp="20210302 02:03:21.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:03:21.528" starttime="20210302 02:02:45.808"></status>
</kw>
<msg timestamp="20210302 02:03:21.529" level="INFO">${output} = 2021-03-02 02:02:47 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-03-02 02:02:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.9:10200
202...</msg>
<status status="PASS" endtime="20210302 02:03:21.529" starttime="20210302 02:02:45.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210302 02:03:21.529" starttime="20210302 02:03:21.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 02:03:21.530" starttime="20210302 02:03:21.529"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 02:03:21.530" critical="yes" starttime="20210302 02:02:45.773"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210302 02:03:21.531" starttime="20210302 02:02:12.093"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:00:45.170" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:00:45.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:00:45.176" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:00:45.176" starttime="20210302 02:00:45.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:00:45.177" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:00:45.177" starttime="20210302 02:00:45.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:00:45.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:00:45.178" starttime="20210302 02:00:45.177"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:45.178" starttime="20210302 02:00:45.166"></status>
</kw>
<msg timestamp="20210302 02:00:45.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:00:45.178" starttime="20210302 02:00:45.166"></status>
</kw>
<msg timestamp="20210302 02:00:45.178" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:00:45.178" starttime="20210302 02:00:45.166"></status>
</kw>
<msg timestamp="20210302 02:00:45.179" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:00:45.179" starttime="20210302 02:00:45.165"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 02:00:45.183" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 02:00:45.183" starttime="20210302 02:00:45.183"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:00:45.184" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 02:00:45.184" starttime="20210302 02:00:45.183"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:45.184" starttime="20210302 02:00:45.182"></status>
</kw>
<msg timestamp="20210302 02:00:45.184" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 02:00:45.184" starttime="20210302 02:00:45.182"></status>
</kw>
<status status="PASS" endtime="20210302 02:00:45.184" starttime="20210302 02:00:45.181"></status>
</kw>
<msg timestamp="20210302 02:00:45.184" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 02:00:45.184" starttime="20210302 02:00:45.180"></status>
</kw>
<msg timestamp="20210302 02:00:45.185" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 02:00:45.185" starttime="20210302 02:00:45.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:00:45.188" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:01:24.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:01:24.898" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 02:00:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:00:47 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210302 02:01:24.898" starttime="20210302 02:00:45.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:01:24.899" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-03-02 02:00:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:00:47 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:00:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 02:00:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 02:00:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C92DB1CC7520-&gt;5d60b738-421a-4fea-96d1-55433e5ac446
2021-03-02 02:00:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-03-02 02:00:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AEE1C8D6CB77-&gt;d85aa15c-db4f-406c-8779-3e498a050506
2021-03-02 02:00:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-03-02 02:00:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-03-02 02:00:49 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.9:10200
2021-03-02 02:00:50 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650450328, maxDate=1615255250328, sequenceNumber=1, masterKeyId=2))
2021-03-02 02:00:50 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e1 bb aa 85 ff 2e 38 e1 c3 dc a5 81 2f 40 01 48 01 5a 0d 32 32 39 36 35 32 31 30 36 38 31 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-03-02 02:00:50 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650450328, maxDate=1615255250328, sequenceNumber=1, masterKeyId=2)
2021-03-02 02:00:50 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 02:00:50 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 02:00:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614650307186_0001
2021-03-02 02:00:53 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650450328, maxDate=1615255250328, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e1 bb aa 85 ff 2e 38 e1 c3 dc a5 81 2f 40 01 48 01 5a 0d 32 32 39 36 35 32 31 30 36 38 31 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-03-02 02:00:53 INFO  Configuration:2795 - resource-types.xml not found
2021-03-02 02:00:53 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-03-02 02:00:54 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-03-02 02:00:55 INFO  YarnClientImpl:329 - Submitted application application_1614650307186_0001
2021-03-02 02:00:55 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1614650307186_0001/
2021-03-02 02:00:55 INFO  Job:1614 - Running job: job_1614650307186_0001
2021-03-02 02:01:05 INFO  Job:1635 - Job job_1614650307186_0001 running in uber mode : false
2021-03-02 02:01:05 INFO  Job:1642 -  map 0% reduce 0%
2021-03-02 02:01:17 INFO  Job:1642 -  map 33% reduce 0%
2021-03-02 02:01:19 INFO  Job:1642 -  map 67% reduce 0%
2021-03-02 02:01:20 INFO  Job:1642 -  map 100% reduce 0%
2021-03-02 02:01:23 INFO  Job:1642 -  map 100% reduce 100%
2021-03-02 02:01:24 INFO  Job:1653 - Job job_1614650307186_0001 completed successfully
2021-03-02 02:01:24 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1103265
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49196
		Total time spent by all reduces in occupied slots (ms)=8196
		Total time spent by all map tasks (ms)=24598
		Total time spent by all reduce tasks (ms)=4098
		Total vcore-milliseconds taken by all map tasks=24598
		Total vcore-milliseconds taken by all reduce tasks=4098
		Total megabyte-milliseconds taken by all map tasks=50376704
		Total megabyte-milliseconds taken by all reduce tasks=8392704
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1176
		CPU time spent (ms)=7890
		Physical memory (bytes) snapshot=1512611840
		Virtual memory (bytes) snapshot=14059343872
		Total committed heap usage (bytes)=1331691520
		Peak Map Physical memory (bytes)=396763136
		Peak Map Virtual memory (bytes)=3511558144
		Peak Reduce Physical memory (bytes)=329654272
		Peak Reduce Virtual memory (bytes)=3526627328
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.375 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210302 02:01:24.899" starttime="20210302 02:01:24.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:01:24.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:01:24.900" starttime="20210302 02:01:24.900"></status>
</kw>
<status status="PASS" endtime="20210302 02:01:24.901" starttime="20210302 02:00:45.186"></status>
</kw>
<msg timestamp="20210302 02:01:24.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:01:24.901" starttime="20210302 02:00:45.185"></status>
</kw>
<msg timestamp="20210302 02:01:24.901" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 02:00:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:00:47 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210302 02:01:24.901" starttime="20210302 02:00:45.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 02:01:24.902" starttime="20210302 02:01:24.901"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 02:01:24.902" critical="yes" starttime="20210302 02:00:45.164"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:01:24.909" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:01:24.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:01:24.915" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:01:24.915" starttime="20210302 02:01:24.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:01:24.916" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:01:24.916" starttime="20210302 02:01:24.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:01:24.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:01:24.917" starttime="20210302 02:01:24.916"></status>
</kw>
<status status="PASS" endtime="20210302 02:01:24.917" starttime="20210302 02:01:24.905"></status>
</kw>
<msg timestamp="20210302 02:01:24.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:01:24.917" starttime="20210302 02:01:24.904"></status>
</kw>
<msg timestamp="20210302 02:01:24.917" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:01:24.917" starttime="20210302 02:01:24.904"></status>
</kw>
<msg timestamp="20210302 02:01:24.917" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 02:01:24.917" starttime="20210302 02:01:24.904"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 02:01:24.918" level="INFO">${random} = zlKxnmB1</msg>
<status status="PASS" endtime="20210302 02:01:24.918" starttime="20210302 02:01:24.918"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 02:01:24.922" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 02:01:24.922" starttime="20210302 02:01:24.922"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:01:24.923" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 02:01:24.923" starttime="20210302 02:01:24.922"></status>
</kw>
<status status="PASS" endtime="20210302 02:01:24.923" starttime="20210302 02:01:24.921"></status>
</kw>
<msg timestamp="20210302 02:01:24.923" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 02:01:24.923" starttime="20210302 02:01:24.921"></status>
</kw>
<status status="PASS" endtime="20210302 02:01:24.923" starttime="20210302 02:01:24.920"></status>
</kw>
<msg timestamp="20210302 02:01:24.923" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 02:01:24.923" starttime="20210302 02:01:24.919"></status>
</kw>
<msg timestamp="20210302 02:01:24.923" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 02:01:24.923" starttime="20210302 02:01:24.918"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 02:01:24.927" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 02:01:24.927" starttime="20210302 02:01:24.926"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:01:24.927" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 02:01:24.927" starttime="20210302 02:01:24.927"></status>
</kw>
<status status="PASS" endtime="20210302 02:01:24.927" starttime="20210302 02:01:24.926"></status>
</kw>
<msg timestamp="20210302 02:01:24.928" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 02:01:24.928" starttime="20210302 02:01:24.925"></status>
</kw>
<status status="PASS" endtime="20210302 02:01:24.928" starttime="20210302 02:01:24.925"></status>
</kw>
<msg timestamp="20210302 02:01:24.928" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210302 02:01:24.928" starttime="20210302 02:01:24.924"></status>
</kw>
<msg timestamp="20210302 02:01:24.928" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210302 02:01:24.928" starttime="20210302 02:01:24.924"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 02:01:24.932" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 02:01:24.932" starttime="20210302 02:01:24.931"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:01:24.932" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 02:01:24.932" starttime="20210302 02:01:24.932"></status>
</kw>
<status status="PASS" endtime="20210302 02:01:24.932" starttime="20210302 02:01:24.931"></status>
</kw>
<msg timestamp="20210302 02:01:24.933" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 02:01:24.933" starttime="20210302 02:01:24.930"></status>
</kw>
<status status="PASS" endtime="20210302 02:01:24.933" starttime="20210302 02:01:24.929"></status>
</kw>
<msg timestamp="20210302 02:01:24.933" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-zlKxnmB1.txt</msg>
<status status="PASS" endtime="20210302 02:01:24.933" starttime="20210302 02:01:24.929"></status>
</kw>
<msg timestamp="20210302 02:01:24.933" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-zlKxnmB1.txt</msg>
<status status="PASS" endtime="20210302 02:01:24.933" starttime="20210302 02:01:24.928"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:01:24.936" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-zlKxnmB1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:01:56.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:01:56.204" level="INFO">${output} = 2021-03-02 02:01:26 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-03-02 02:01:27 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.9:10200
202...</msg>
<status status="PASS" endtime="20210302 02:01:56.204" starttime="20210302 02:01:24.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:01:56.206" level="INFO">2021-03-02 02:01:26 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-03-02 02:01:27 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.9:10200
2021-03-02 02:01:27 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650487320, maxDate=1615255287320, sequenceNumber=2, masterKeyId=2))
2021-03-02 02:01:27 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c2 e3 ac 85 ff 2e 38 c2 eb de a5 81 2f 40 02 48 01 5a 0d 32 32 39 36 35 32 31 30 36 38 31 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-03-02 02:01:27 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650487320, maxDate=1615255287320, sequenceNumber=2, masterKeyId=2)
2021-03-02 02:01:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 02:01:27 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 02:01:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:01:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 02:01:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 02:01:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B645FD092601-&gt;5d60b738-421a-4fea-96d1-55433e5ac446
2021-03-02 02:01:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 02:01:28 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 02:01:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8058820026AA-&gt;d85aa15c-db4f-406c-8779-3e498a050506
2021-03-02 02:01:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 02:01:29 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 02:01:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614650307186_0002
2021-03-02 02:01:29 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1614650487320, maxDate=1615255287320, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c2 e3 ac 85 ff 2e 38 c2 eb de a5 81 2f 40 02 48 01 5a 0d 32 32 39 36 35 32 31 30 36 38 31 39 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-03-02 02:01:29 INFO  Configuration:2795 - resource-types.xml not found
2021-03-02 02:01:29 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-03-02 02:01:29 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-03-02 02:01:30 INFO  YarnClientImpl:329 - Submitted application application_1614650307186_0002
2021-03-02 02:01:30 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1614650307186_0002/
2021-03-02 02:01:30 INFO  Job:1614 - Running job: job_1614650307186_0002
2021-03-02 02:01:38 INFO  Job:1635 - Job job_1614650307186_0002 running in uber mode : false
2021-03-02 02:01:38 INFO  Job:1642 -  map 0% reduce 0%
2021-03-02 02:01:48 INFO  Job:1642 -  map 33% reduce 0%
2021-03-02 02:01:50 INFO  Job:1642 -  map 100% reduce 0%
2021-03-02 02:01:55 INFO  Job:1642 -  map 100% reduce 100%
2021-03-02 02:01:55 INFO  Job:1653 - Job job_1614650307186_0002 completed successfully
2021-03-02 02:01:55 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1165803
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45276
		Total time spent by all reduces in occupied slots (ms)=7570
		Total time spent by all map tasks (ms)=22638
		Total time spent by all reduce tasks (ms)=3785
		Total vcore-milliseconds taken by all map tasks=22638
		Total vcore-milliseconds taken by all reduce tasks=3785
		Total megabyte-milliseconds taken by all map tasks=46362624
		Total megabyte-milliseconds taken by all reduce tasks=7751680
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1378
		CPU time spent (ms)=7840
		Physical memory (bytes) snapshot=1665224704
		Virtual memory (bytes) snapshot=14055391232
		Total committed heap usage (bytes)=1500512256
		Peak Map Physical memory (bytes)=559091712
		Peak Map Virtual memory (bytes)=3509526528
		Peak Reduce Physical memory (bytes)=326377472
		Peak Reduce Virtual memory (bytes)=3528531968
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210302 02:01:56.206" starttime="20210302 02:01:56.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:01:56.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:01:56.207" starttime="20210302 02:01:56.206"></status>
</kw>
<status status="PASS" endtime="20210302 02:01:56.207" starttime="20210302 02:01:24.934"></status>
</kw>
<msg timestamp="20210302 02:01:56.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:01:56.207" starttime="20210302 02:01:24.934"></status>
</kw>
<msg timestamp="20210302 02:01:56.208" level="INFO">${output} = 2021-03-02 02:01:26 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-03-02 02:01:27 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.9:10200
202...</msg>
<status status="PASS" endtime="20210302 02:01:56.208" starttime="20210302 02:01:24.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210302 02:01:56.208" starttime="20210302 02:01:56.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 02:01:56.209" starttime="20210302 02:01:56.208"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 02:01:56.209" critical="yes" starttime="20210302 02:01:24.903"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210302 02:01:56.210" starttime="20210302 02:00:45.112"></status>
</suite>
<status status="PASS" elapsedtime="196775" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
