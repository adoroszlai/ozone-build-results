<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210302 01:47:08.749" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:33:27.067" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:33:36.787" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 01:33:36.787" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:33:36.787" starttime="20210302 01:33:27.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:33:36.788" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:33:36.788" starttime="20210302 01:33:36.787"></status>
</kw>
<msg timestamp="20210302 01:33:36.788" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:33:36.788" starttime="20210302 01:33:27.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:33:36.794" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:33:38.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:33:38.938" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:33:38.938" starttime="20210302 01:33:36.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:33:38.939" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:33:38.939" starttime="20210302 01:33:38.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:33:38.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:33:38.940" starttime="20210302 01:33:38.940"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:38.940" starttime="20210302 01:33:36.790"></status>
</kw>
<msg timestamp="20210302 01:33:38.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:33:38.941" starttime="20210302 01:33:36.790"></status>
</kw>
<msg timestamp="20210302 01:33:38.941" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210302 01:33:38.941" starttime="20210302 01:33:36.790"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210302 01:33:38.941" starttime="20210302 01:33:38.941"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:38.942" starttime="20210302 01:33:36.789"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:38.942" starttime="20210302 01:33:36.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:33:38.947" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:33:40.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:33:40.906" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:33:40.907" starttime="20210302 01:33:38.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:33:40.908" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:33:40.908" starttime="20210302 01:33:40.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:33:40.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:33:40.909" starttime="20210302 01:33:40.908"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:40.909" starttime="20210302 01:33:38.943"></status>
</kw>
<msg timestamp="20210302 01:33:40.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:33:40.909" starttime="20210302 01:33:38.943"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:40.909" starttime="20210302 01:33:38.943"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:40.909" starttime="20210302 01:33:38.942"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:40.910" starttime="20210302 01:33:38.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210302 01:33:40.910" starttime="20210302 01:33:40.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:33:40.917" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:33:43.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:33:43.282" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:33...</msg>
<status status="PASS" endtime="20210302 01:33:43.282" starttime="20210302 01:33:40.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:33:43.283" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:33:40.881Z",
  "modificationTime" : "2021-03-02T01:33:40.881Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210302 01:33:43.283" starttime="20210302 01:33:43.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:33:43.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:33:43.284" starttime="20210302 01:33:43.284"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:43.284" starttime="20210302 01:33:40.913"></status>
</kw>
<msg timestamp="20210302 01:33:43.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:33:43.285" starttime="20210302 01:33:40.913"></status>
</kw>
<msg timestamp="20210302 01:33:43.285" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:33...</msg>
<status status="PASS" endtime="20210302 01:33:43.285" starttime="20210302 01:33:40.912"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210302 01:33:43.285" starttime="20210302 01:33:43.285"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:33:43.289" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:33:43.289" starttime="20210302 01:33:43.289"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:33:43.290" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:33:43.290" starttime="20210302 01:33:43.289"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:43.290" starttime="20210302 01:33:43.288"></status>
</kw>
<msg timestamp="20210302 01:33:43.290" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:33:43.290" starttime="20210302 01:33:43.288"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:43.290" starttime="20210302 01:33:43.287"></status>
</kw>
<msg timestamp="20210302 01:33:43.290" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210302 01:33:43.290" starttime="20210302 01:33:43.286"></status>
</kw>
<msg timestamp="20210302 01:33:43.291" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210302 01:33:43.291" starttime="20210302 01:33:43.286"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:33:43.294" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:33:45.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:33:45.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:33:45.719" starttime="20210302 01:33:43.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:33:45.720" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:33:45.720" starttime="20210302 01:33:45.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:33:45.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:33:45.721" starttime="20210302 01:33:45.720"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:45.721" starttime="20210302 01:33:43.292"></status>
</kw>
<msg timestamp="20210302 01:33:45.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:33:45.721" starttime="20210302 01:33:43.292"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:45.721" starttime="20210302 01:33:43.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:33:45.725" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:33:50.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:33:50.744" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:33:50.744" starttime="20210302 01:33:45.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:33:50.746" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:33:50.746" starttime="20210302 01:33:50.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:33:50.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:33:50.747" starttime="20210302 01:33:50.746"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:50.747" starttime="20210302 01:33:45.723"></status>
</kw>
<msg timestamp="20210302 01:33:50.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:33:50.747" starttime="20210302 01:33:45.722"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:50.747" starttime="20210302 01:33:45.722"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:33:50.752" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:33:54.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:33:54.522" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:33:54.522" starttime="20210302 01:33:50.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:33:54.523" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:33:54.523" starttime="20210302 01:33:54.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:33:54.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:33:54.523" starttime="20210302 01:33:54.523"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:54.524" starttime="20210302 01:33:50.748"></status>
</kw>
<msg timestamp="20210302 01:33:54.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:33:54.524" starttime="20210302 01:33:50.748"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:54.524" starttime="20210302 01:33:50.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:33:54.527" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:33:58.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:33:58.284" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:33:58.284" starttime="20210302 01:33:54.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:33:58.286" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:33:58.286" starttime="20210302 01:33:58.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:33:58.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:33:58.286" starttime="20210302 01:33:58.286"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:58.287" starttime="20210302 01:33:54.525"></status>
</kw>
<msg timestamp="20210302 01:33:58.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:33:58.287" starttime="20210302 01:33:54.525"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:58.287" starttime="20210302 01:33:54.524"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 01:33:58.287" critical="yes" starttime="20210302 01:33:27.060"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:33:58.293" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:33:58.293" starttime="20210302 01:33:58.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:33:58.293" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:33:58.293" starttime="20210302 01:33:58.293"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:58.294" starttime="20210302 01:33:58.291"></status>
</kw>
<msg timestamp="20210302 01:33:58.294" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:33:58.294" starttime="20210302 01:33:58.291"></status>
</kw>
<status status="PASS" endtime="20210302 01:33:58.294" starttime="20210302 01:33:58.290"></status>
</kw>
<msg timestamp="20210302 01:33:58.294" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 01:33:58.294" starttime="20210302 01:33:58.290"></status>
</kw>
<msg timestamp="20210302 01:33:58.294" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 01:33:58.294" starttime="20210302 01:33:58.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:33:58.297" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:34:00.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:34:00.515" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:34:00.515" starttime="20210302 01:33:58.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:34:00.517" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:34:00.517" starttime="20210302 01:34:00.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:34:00.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:34:00.517" starttime="20210302 01:34:00.517"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:00.518" starttime="20210302 01:33:58.295"></status>
</kw>
<msg timestamp="20210302 01:34:00.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:34:00.518" starttime="20210302 01:33:58.295"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:00.518" starttime="20210302 01:33:58.294"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:34:00.522" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:34:02.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:34:02.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:34:02.695" starttime="20210302 01:34:00.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:34:02.697" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:34:02.697" starttime="20210302 01:34:02.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:34:02.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:34:02.697" starttime="20210302 01:34:02.697"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:02.698" starttime="20210302 01:34:00.519"></status>
</kw>
<msg timestamp="20210302 01:34:02.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:34:02.698" starttime="20210302 01:34:00.519"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:02.698" starttime="20210302 01:34:00.518"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 01:34:02.698" critical="yes" starttime="20210302 01:33:58.288"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210302 01:34:02.700" starttime="20210302 01:33:27.000"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:35:34.266" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:35:34.266" starttime="20210302 01:35:34.265"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:35:34.266" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:35:34.266" starttime="20210302 01:35:34.266"></status>
</kw>
<status status="PASS" endtime="20210302 01:35:34.267" starttime="20210302 01:35:34.265"></status>
</kw>
<msg timestamp="20210302 01:35:34.267" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:35:34.267" starttime="20210302 01:35:34.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:35:34.268" starttime="20210302 01:35:34.267"></status>
</kw>
<msg timestamp="20210302 01:35:34.268" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 01:35:34.268" starttime="20210302 01:35:34.267"></status>
</kw>
<status status="PASS" endtime="20210302 01:35:34.268" starttime="20210302 01:35:34.264"></status>
</kw>
<msg timestamp="20210302 01:35:34.268" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:35:34.268" starttime="20210302 01:35:34.263"></status>
</kw>
<msg timestamp="20210302 01:35:34.268" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:35:34.268" starttime="20210302 01:35:34.262"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:35:34.269" level="INFO">${random} = 93470</msg>
<status status="PASS" endtime="20210302 01:35:34.269" starttime="20210302 01:35:34.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:35:34.274" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-93470 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:35:37.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:35:37.564" level="INFO">${output} = 2021-03-02 01:35:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:35:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-03-02 ...</msg>
<status status="PASS" endtime="20210302 01:35:37.564" starttime="20210302 01:35:34.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:35:37.565" level="INFO">2021-03-02 01:35:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:35:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-03-02 01:35:36 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-03-02 01:35:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:35:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2005C8809CF2-&gt;a354107f-2af7-44bd-943a-d7060c5e01da
2021-03-02 01:35:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210302 01:35:37.565" starttime="20210302 01:35:37.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:35:37.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:35:37.566" starttime="20210302 01:35:37.565"></status>
</kw>
<status status="PASS" endtime="20210302 01:35:37.566" starttime="20210302 01:35:34.270"></status>
</kw>
<msg timestamp="20210302 01:35:37.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:35:37.566" starttime="20210302 01:35:34.270"></status>
</kw>
<msg timestamp="20210302 01:35:37.567" level="INFO">${result} = 2021-03-02 01:35:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:35:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-03-02 ...</msg>
<status status="PASS" endtime="20210302 01:35:37.567" starttime="20210302 01:35:34.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:35:37.570" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:35:39.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:35:39.315" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-03-02 01:34 ofs://om/volume1/bucket1/ozone-88904
-rw-...</msg>
<status status="PASS" endtime="20210302 01:35:39.315" starttime="20210302 01:35:37.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:35:39.316" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-03-02 01:34 ofs://om/volume1/bucket1/ozone-88904
-rw-rw-rw-   3 hadoop hadoop      14978 2021-03-02 01:35 ofs://om/volume1/bucket1/ozone-93470
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:34 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:35 ofs://om/volume1/bucket1/wordcount-BEuTaeFP.txt</msg>
<status status="PASS" endtime="20210302 01:35:39.316" starttime="20210302 01:35:39.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:35:39.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:35:39.317" starttime="20210302 01:35:39.316"></status>
</kw>
<status status="PASS" endtime="20210302 01:35:39.317" starttime="20210302 01:35:37.568"></status>
</kw>
<msg timestamp="20210302 01:35:39.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:35:39.317" starttime="20210302 01:35:37.567"></status>
</kw>
<msg timestamp="20210302 01:35:39.318" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-03-02 01:34 ofs://om/volume1/bucket1/ozone-88904
-rw-...</msg>
<status status="PASS" endtime="20210302 01:35:39.318" starttime="20210302 01:35:37.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:35:39.318" starttime="20210302 01:35:39.318"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:35:39.318" critical="yes" starttime="20210302 01:35:34.262"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210302 01:35:39.319" starttime="20210302 01:35:34.211"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:34:07.061" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:34:07.061" starttime="20210302 01:34:07.060"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:34:07.061" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:34:07.061" starttime="20210302 01:34:07.061"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:07.062" starttime="20210302 01:34:07.060"></status>
</kw>
<msg timestamp="20210302 01:34:07.062" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:34:07.062" starttime="20210302 01:34:07.059"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:07.062" starttime="20210302 01:34:07.058"></status>
</kw>
<msg timestamp="20210302 01:34:07.062" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:34:07.062" starttime="20210302 01:34:07.058"></status>
</kw>
<msg timestamp="20210302 01:34:07.062" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:34:07.062" starttime="20210302 01:34:07.057"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:34:07.063" level="INFO">${random} = 88904</msg>
<status status="PASS" endtime="20210302 01:34:07.063" starttime="20210302 01:34:07.063"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:34:07.068" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-88904 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:34:10.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:34:10.376" level="INFO">${output} = 2021-03-02 01:34:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:34:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-03-02 ...</msg>
<status status="PASS" endtime="20210302 01:34:10.376" starttime="20210302 01:34:07.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:34:10.378" level="INFO">2021-03-02 01:34:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:34:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-03-02 01:34:08 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-03-02 01:34:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:34:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E0E37ADB6D4B-&gt;4cd73370-8103-410f-8de7-1e3584460bcb
2021-03-02 01:34:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210302 01:34:10.378" starttime="20210302 01:34:10.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:34:10.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:34:10.379" starttime="20210302 01:34:10.379"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:10.379" starttime="20210302 01:34:07.064"></status>
</kw>
<msg timestamp="20210302 01:34:10.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:34:10.379" starttime="20210302 01:34:07.064"></status>
</kw>
<msg timestamp="20210302 01:34:10.380" level="INFO">${result} = 2021-03-02 01:34:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:34:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-03-02 ...</msg>
<status status="PASS" endtime="20210302 01:34:10.380" starttime="20210302 01:34:07.063"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:34:10.383" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:34:12.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:34:12.074" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-03-02 01:34 o3fs://bucket1.volume1.om/ozone-88904
dr...</msg>
<status status="PASS" endtime="20210302 01:34:12.074" starttime="20210302 01:34:10.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:34:12.075" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-03-02 01:34 o3fs://bucket1.volume1.om/ozone-88904
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:34 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 01:34:12.075" starttime="20210302 01:34:12.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:34:12.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:34:12.076" starttime="20210302 01:34:12.075"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:12.076" starttime="20210302 01:34:10.381"></status>
</kw>
<msg timestamp="20210302 01:34:12.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:34:12.076" starttime="20210302 01:34:10.380"></status>
</kw>
<msg timestamp="20210302 01:34:12.076" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-03-02 01:34 o3fs://bucket1.volume1.om/ozone-88904
dr...</msg>
<status status="PASS" endtime="20210302 01:34:12.076" starttime="20210302 01:34:10.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:34:12.077" starttime="20210302 01:34:12.077"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:34:12.077" critical="yes" starttime="20210302 01:34:07.056"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210302 01:34:12.078" starttime="20210302 01:34:07.006"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:35:43.582" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:35:43.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:35:43.588" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:35:43.588" starttime="20210302 01:35:43.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:35:43.589" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:35:43.589" starttime="20210302 01:35:43.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:35:43.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:35:43.590" starttime="20210302 01:35:43.590"></status>
</kw>
<status status="PASS" endtime="20210302 01:35:43.590" starttime="20210302 01:35:43.578"></status>
</kw>
<msg timestamp="20210302 01:35:43.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:35:43.590" starttime="20210302 01:35:43.577"></status>
</kw>
<msg timestamp="20210302 01:35:43.591" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:35:43.591" starttime="20210302 01:35:43.577"></status>
</kw>
<msg timestamp="20210302 01:35:43.591" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:35:43.591" starttime="20210302 01:35:43.576"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:35:43.596" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:35:43.596" starttime="20210302 01:35:43.595"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:35:43.596" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:35:43.597" starttime="20210302 01:35:43.596"></status>
</kw>
<status status="PASS" endtime="20210302 01:35:43.597" starttime="20210302 01:35:43.595"></status>
</kw>
<msg timestamp="20210302 01:35:43.597" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:35:43.597" starttime="20210302 01:35:43.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:35:43.598" starttime="20210302 01:35:43.598"></status>
</kw>
<msg timestamp="20210302 01:35:43.598" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 01:35:43.598" starttime="20210302 01:35:43.597"></status>
</kw>
<status status="PASS" endtime="20210302 01:35:43.598" starttime="20210302 01:35:43.594"></status>
</kw>
<msg timestamp="20210302 01:35:43.598" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:35:43.598" starttime="20210302 01:35:43.592"></status>
</kw>
<msg timestamp="20210302 01:35:43.599" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:35:43.599" starttime="20210302 01:35:43.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:35:43.602" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:36:19.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:36:19.711" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:35:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:35:45 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210302 01:36:19.711" starttime="20210302 01:35:43.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:36:19.713" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:35:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:35:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-03-02 01:35:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-03-02 01:35:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:35:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8EF7AF0C3C14-&gt;4cd73370-8103-410f-8de7-1e3584460bcb
2021-03-02 01:35:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-03-02 01:35:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A36F9B9CD90C-&gt;a354107f-2af7-44bd-943a-d7060c5e01da
2021-03-02 01:35:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-03-02 01:35:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-03-02 01:35:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 01:35:47 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-03-02 01:35:47 INFO  JobSubmitter:198 - number of splits:3
2021-03-02 01:35:47 INFO  JobSubmitter:287 - Submitting tokens for job: job_1614648774093_0003
2021-03-02 01:35:47 INFO  YarnClientImpl:273 - Submitted application application_1614648774093_0003
2021-03-02 01:35:47 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1614648774093_0003/
2021-03-02 01:35:47 INFO  Job:1339 - Running job: job_1614648774093_0003
2021-03-02 01:35:54 INFO  Job:1360 - Job job_1614648774093_0003 running in uber mode : false
2021-03-02 01:35:54 INFO  Job:1367 -  map 0% reduce 0%
2021-03-02 01:36:01 INFO  Job:1367 -  map 33% reduce 0%
2021-03-02 01:36:06 INFO  Job:1367 -  map 67% reduce 0%
2021-03-02 01:36:11 INFO  Job:1367 -  map 100% reduce 0%
2021-03-02 01:36:16 INFO  Job:1367 -  map 100% reduce 100%
2021-03-02 01:36:19 INFO  Job:1378 - Job job_1614648774093_0003 completed successfully
2021-03-02 01:36:19 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=612457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40352
		Total time spent by all reduces in occupied slots (ms)=16460
		Total time spent by all map tasks (ms)=10088
		Total time spent by all reduce tasks (ms)=4115
		Total vcore-milliseconds taken by all map tasks=10088
		Total vcore-milliseconds taken by all reduce tasks=4115
		Total megabyte-milliseconds taken by all map tasks=41320448
		Total megabyte-milliseconds taken by all reduce tasks=16855040
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=625
		CPU time spent (ms)=7470
		Physical memory (bytes) snapshot=1190354944
		Virtual memory (bytes) snapshot=15788306432
		Total committed heap usage (bytes)=1019215872
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.44 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210302 01:36:19.713" starttime="20210302 01:36:19.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:36:19.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:36:19.713" starttime="20210302 01:36:19.713"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:19.714" starttime="20210302 01:35:43.599"></status>
</kw>
<msg timestamp="20210302 01:36:19.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:36:19.714" starttime="20210302 01:35:43.599"></status>
</kw>
<msg timestamp="20210302 01:36:19.714" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:35:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:35:45 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210302 01:36:19.714" starttime="20210302 01:35:43.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:36:19.715" starttime="20210302 01:36:19.714"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:36:19.715" critical="yes" starttime="20210302 01:35:43.575"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:36:19.722" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:36:19.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:36:19.727" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:36:19.727" starttime="20210302 01:36:19.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:36:19.728" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:36:19.728" starttime="20210302 01:36:19.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:36:19.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:36:19.729" starttime="20210302 01:36:19.728"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:19.729" starttime="20210302 01:36:19.718"></status>
</kw>
<msg timestamp="20210302 01:36:19.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:36:19.729" starttime="20210302 01:36:19.718"></status>
</kw>
<msg timestamp="20210302 01:36:19.729" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:36:19.729" starttime="20210302 01:36:19.717"></status>
</kw>
<msg timestamp="20210302 01:36:19.730" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:36:19.730" starttime="20210302 01:36:19.717"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:36:19.730" level="INFO">${random} = JP1oGVRB</msg>
<status status="PASS" endtime="20210302 01:36:19.730" starttime="20210302 01:36:19.730"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:36:19.734" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:36:19.734" starttime="20210302 01:36:19.734"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:36:19.735" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:36:19.735" starttime="20210302 01:36:19.734"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:19.735" starttime="20210302 01:36:19.733"></status>
</kw>
<msg timestamp="20210302 01:36:19.735" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:36:19.735" starttime="20210302 01:36:19.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:36:19.736" starttime="20210302 01:36:19.735"></status>
</kw>
<msg timestamp="20210302 01:36:19.736" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 01:36:19.736" starttime="20210302 01:36:19.735"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:19.736" starttime="20210302 01:36:19.732"></status>
</kw>
<msg timestamp="20210302 01:36:19.736" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:36:19.736" starttime="20210302 01:36:19.731"></status>
</kw>
<msg timestamp="20210302 01:36:19.737" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:36:19.737" starttime="20210302 01:36:19.730"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:36:19.740" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:36:19.740" starttime="20210302 01:36:19.739"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:36:19.740" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:36:19.740" starttime="20210302 01:36:19.740"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:19.741" starttime="20210302 01:36:19.739"></status>
</kw>
<msg timestamp="20210302 01:36:19.741" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:36:19.741" starttime="20210302 01:36:19.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:36:19.742" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210302 01:36:19.742" starttime="20210302 01:36:19.742"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:36:19.743" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210302 01:36:19.743" starttime="20210302 01:36:19.742"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:19.743" starttime="20210302 01:36:19.741"></status>
</kw>
<msg timestamp="20210302 01:36:19.743" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210302 01:36:19.743" starttime="20210302 01:36:19.741"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:19.743" starttime="20210302 01:36:19.738"></status>
</kw>
<msg timestamp="20210302 01:36:19.743" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210302 01:36:19.743" starttime="20210302 01:36:19.737"></status>
</kw>
<msg timestamp="20210302 01:36:19.744" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210302 01:36:19.744" starttime="20210302 01:36:19.737"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:36:19.747" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:36:19.747" starttime="20210302 01:36:19.746"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:36:19.747" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:36:19.747" starttime="20210302 01:36:19.747"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:19.748" starttime="20210302 01:36:19.746"></status>
</kw>
<msg timestamp="20210302 01:36:19.748" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:36:19.748" starttime="20210302 01:36:19.745"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:36:19.749" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210302 01:36:19.749" starttime="20210302 01:36:19.749"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:36:19.750" level="INFO">${result} = /wordcount-JP1oGVRB.txt</msg>
<status status="PASS" endtime="20210302 01:36:19.750" starttime="20210302 01:36:19.749"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:19.750" starttime="20210302 01:36:19.748"></status>
</kw>
<msg timestamp="20210302 01:36:19.750" level="INFO">${path_with_leading} = /wordcount-JP1oGVRB.txt</msg>
<status status="PASS" endtime="20210302 01:36:19.750" starttime="20210302 01:36:19.748"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:19.750" starttime="20210302 01:36:19.745"></status>
</kw>
<msg timestamp="20210302 01:36:19.750" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-JP1oGVRB.txt</msg>
<status status="PASS" endtime="20210302 01:36:19.750" starttime="20210302 01:36:19.744"></status>
</kw>
<msg timestamp="20210302 01:36:19.751" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-JP1oGVRB.txt</msg>
<status status="PASS" endtime="20210302 01:36:19.751" starttime="20210302 01:36:19.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:36:19.754" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-JP1oGVRB.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:36:57.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:36:57.929" level="INFO">${output} = 2021-03-02 01:36:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-03-02 01:36:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210302 01:36:57.929" starttime="20210302 01:36:19.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:36:57.931" level="INFO">2021-03-02 01:36:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-03-02 01:36:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 01:36:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:36:22 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-03-02 01:36:22 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-03-02 01:36:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:36:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4CD9328500A9-&gt;a354107f-2af7-44bd-943a-d7060c5e01da
2021-03-02 01:36:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:36:23 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-03-02 01:36:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-42FAB8E5B25A-&gt;4cd73370-8103-410f-8de7-1e3584460bcb
2021-03-02 01:36:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:36:25 INFO  JobSubmitter:198 - number of splits:3
2021-03-02 01:36:25 INFO  JobSubmitter:287 - Submitting tokens for job: job_1614648774093_0004
2021-03-02 01:36:26 INFO  YarnClientImpl:273 - Submitted application application_1614648774093_0004
2021-03-02 01:36:26 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1614648774093_0004/
2021-03-02 01:36:26 INFO  Job:1339 - Running job: job_1614648774093_0004
2021-03-02 01:36:33 INFO  Job:1360 - Job job_1614648774093_0004 running in uber mode : false
2021-03-02 01:36:33 INFO  Job:1367 -  map 0% reduce 0%
2021-03-02 01:36:39 INFO  Job:1367 -  map 33% reduce 0%
2021-03-02 01:36:44 INFO  Job:1367 -  map 67% reduce 0%
2021-03-02 01:36:49 INFO  Job:1367 -  map 100% reduce 0%
2021-03-02 01:36:53 INFO  Job:1367 -  map 100% reduce 100%
2021-03-02 01:36:57 INFO  Job:1378 - Job job_1614648774093_0004 completed successfully
2021-03-02 01:36:57 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=675243
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40200
		Total time spent by all reduces in occupied slots (ms)=15072
		Total time spent by all map tasks (ms)=10050
		Total time spent by all reduce tasks (ms)=3768
		Total vcore-milliseconds taken by all map tasks=10050
		Total vcore-milliseconds taken by all reduce tasks=3768
		Total megabyte-milliseconds taken by all map tasks=41164800
		Total megabyte-milliseconds taken by all reduce tasks=15433728
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=635
		CPU time spent (ms)=7520
		Physical memory (bytes) snapshot=1229135872
		Virtual memory (bytes) snapshot=15805005824
		Total committed heap usage (bytes)=1108344832
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210302 01:36:57.931" starttime="20210302 01:36:57.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:36:57.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:36:57.933" starttime="20210302 01:36:57.932"></status>
</kw>
<status status="PASS" endtime="20210302 01:36:57.933" starttime="20210302 01:36:19.752"></status>
</kw>
<msg timestamp="20210302 01:36:57.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:36:57.933" starttime="20210302 01:36:19.751"></status>
</kw>
<msg timestamp="20210302 01:36:57.934" level="INFO">${output} = 2021-03-02 01:36:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-03-02 01:36:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210302 01:36:57.934" starttime="20210302 01:36:19.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210302 01:36:57.934" starttime="20210302 01:36:57.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:36:57.935" starttime="20210302 01:36:57.935"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:36:57.935" critical="yes" starttime="20210302 01:36:19.716"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210302 01:36:57.937" starttime="20210302 01:35:43.525"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:34:16.410" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:34:16.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:34:16.417" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:34:16.417" starttime="20210302 01:34:16.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:34:16.418" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:34:16.418" starttime="20210302 01:34:16.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:34:16.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:34:16.419" starttime="20210302 01:34:16.418"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:16.419" starttime="20210302 01:34:16.406"></status>
</kw>
<msg timestamp="20210302 01:34:16.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:34:16.419" starttime="20210302 01:34:16.406"></status>
</kw>
<msg timestamp="20210302 01:34:16.419" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:34:16.419" starttime="20210302 01:34:16.406"></status>
</kw>
<msg timestamp="20210302 01:34:16.420" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:34:16.420" starttime="20210302 01:34:16.405"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:34:16.424" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:34:16.424" starttime="20210302 01:34:16.424"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:34:16.425" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:34:16.425" starttime="20210302 01:34:16.424"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:16.425" starttime="20210302 01:34:16.423"></status>
</kw>
<msg timestamp="20210302 01:34:16.425" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:34:16.425" starttime="20210302 01:34:16.423"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:16.425" starttime="20210302 01:34:16.422"></status>
</kw>
<msg timestamp="20210302 01:34:16.425" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:34:16.425" starttime="20210302 01:34:16.421"></status>
</kw>
<msg timestamp="20210302 01:34:16.426" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:34:16.426" starttime="20210302 01:34:16.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:34:16.429" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:34:52.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:34:52.858" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:34:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:34:18 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210302 01:34:52.858" starttime="20210302 01:34:16.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:34:52.859" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:34:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:34:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-03-02 01:34:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-03-02 01:34:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:34:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B41D8D56BEBA-&gt;a354107f-2af7-44bd-943a-d7060c5e01da
2021-03-02 01:34:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-03-02 01:34:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DBC0E634A1E2-&gt;4cd73370-8103-410f-8de7-1e3584460bcb
2021-03-02 01:34:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-03-02 01:34:19 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-03-02 01:34:20 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-03-02 01:34:20 INFO  JobSubmitter:198 - number of splits:3
2021-03-02 01:34:20 INFO  JobSubmitter:287 - Submitting tokens for job: job_1614648774093_0001
2021-03-02 01:34:20 INFO  YarnClientImpl:273 - Submitted application application_1614648774093_0001
2021-03-02 01:34:20 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1614648774093_0001/
2021-03-02 01:34:20 INFO  Job:1339 - Running job: job_1614648774093_0001
2021-03-02 01:34:31 INFO  Job:1360 - Job job_1614648774093_0001 running in uber mode : false
2021-03-02 01:34:31 INFO  Job:1367 -  map 0% reduce 0%
2021-03-02 01:34:37 INFO  Job:1367 -  map 33% reduce 0%
2021-03-02 01:34:42 INFO  Job:1367 -  map 67% reduce 0%
2021-03-02 01:34:47 INFO  Job:1367 -  map 100% reduce 0%
2021-03-02 01:34:52 INFO  Job:1367 -  map 100% reduce 100%
2021-03-02 01:34:52 INFO  Job:1378 - Job job_1614648774093_0001 completed successfully
2021-03-02 01:34:52 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=612677
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39624
		Total time spent by all reduces in occupied slots (ms)=15036
		Total time spent by all map tasks (ms)=9906
		Total time spent by all reduce tasks (ms)=3759
		Total vcore-milliseconds taken by all map tasks=9906
		Total vcore-milliseconds taken by all reduce tasks=3759
		Total megabyte-milliseconds taken by all map tasks=40574976
		Total megabyte-milliseconds taken by all reduce tasks=15396864
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=609
		CPU time spent (ms)=6920
		Physical memory (bytes) snapshot=1213284352
		Virtual memory (bytes) snapshot=15806017536
		Total committed heap usage (bytes)=1065877504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.773 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210302 01:34:52.859" starttime="20210302 01:34:52.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:34:52.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:34:52.860" starttime="20210302 01:34:52.859"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:52.860" starttime="20210302 01:34:16.427"></status>
</kw>
<msg timestamp="20210302 01:34:52.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:34:52.860" starttime="20210302 01:34:16.427"></status>
</kw>
<msg timestamp="20210302 01:34:52.861" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:34:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:34:18 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210302 01:34:52.861" starttime="20210302 01:34:16.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:34:52.861" starttime="20210302 01:34:52.861"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:34:52.862" critical="yes" starttime="20210302 01:34:16.404"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:34:52.867" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:34:52.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:34:52.872" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:34:52.873" starttime="20210302 01:34:52.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:34:52.873" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:34:52.873" starttime="20210302 01:34:52.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:34:52.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:34:52.874" starttime="20210302 01:34:52.874"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:52.874" starttime="20210302 01:34:52.864"></status>
</kw>
<msg timestamp="20210302 01:34:52.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:34:52.875" starttime="20210302 01:34:52.864"></status>
</kw>
<msg timestamp="20210302 01:34:52.875" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:34:52.875" starttime="20210302 01:34:52.864"></status>
</kw>
<msg timestamp="20210302 01:34:52.875" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210302 01:34:52.875" starttime="20210302 01:34:52.863"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:34:52.876" level="INFO">${random} = BEuTaeFP</msg>
<status status="PASS" endtime="20210302 01:34:52.876" starttime="20210302 01:34:52.875"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:34:52.880" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:34:52.880" starttime="20210302 01:34:52.879"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:34:52.880" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:34:52.880" starttime="20210302 01:34:52.880"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:52.880" starttime="20210302 01:34:52.879"></status>
</kw>
<msg timestamp="20210302 01:34:52.880" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:34:52.880" starttime="20210302 01:34:52.878"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:52.881" starttime="20210302 01:34:52.877"></status>
</kw>
<msg timestamp="20210302 01:34:52.881" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:34:52.881" starttime="20210302 01:34:52.877"></status>
</kw>
<msg timestamp="20210302 01:34:52.881" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:34:52.881" starttime="20210302 01:34:52.876"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:34:52.884" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:34:52.884" starttime="20210302 01:34:52.884"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:34:52.885" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:34:52.885" starttime="20210302 01:34:52.885"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:52.885" starttime="20210302 01:34:52.883"></status>
</kw>
<msg timestamp="20210302 01:34:52.885" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:34:52.885" starttime="20210302 01:34:52.883"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:52.886" starttime="20210302 01:34:52.882"></status>
</kw>
<msg timestamp="20210302 01:34:52.886" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210302 01:34:52.886" starttime="20210302 01:34:52.882"></status>
</kw>
<msg timestamp="20210302 01:34:52.886" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210302 01:34:52.886" starttime="20210302 01:34:52.881"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:34:52.889" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:34:52.889" starttime="20210302 01:34:52.889"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:34:52.890" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:34:52.890" starttime="20210302 01:34:52.889"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:52.890" starttime="20210302 01:34:52.888"></status>
</kw>
<msg timestamp="20210302 01:34:52.890" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:34:52.890" starttime="20210302 01:34:52.888"></status>
</kw>
<status status="PASS" endtime="20210302 01:34:52.890" starttime="20210302 01:34:52.887"></status>
</kw>
<msg timestamp="20210302 01:34:52.890" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-BEuTaeFP.txt</msg>
<status status="PASS" endtime="20210302 01:34:52.890" starttime="20210302 01:34:52.887"></status>
</kw>
<msg timestamp="20210302 01:34:52.891" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-BEuTaeFP.txt</msg>
<status status="PASS" endtime="20210302 01:34:52.891" starttime="20210302 01:34:52.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:34:52.894" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-BEuTaeFP.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:35:29.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:35:29.600" level="INFO">${output} = 2021-03-02 01:34:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-03-02 01:34:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210302 01:35:29.600" starttime="20210302 01:34:52.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:35:29.601" level="INFO">2021-03-02 01:34:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-03-02 01:34:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 01:34:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:34:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-03-02 01:34:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-03-02 01:34:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:34:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-371D2AB0E5C8-&gt;4cd73370-8103-410f-8de7-1e3584460bcb
2021-03-02 01:34:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:34:56 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-03-02 01:34:56 INFO  JobSubmitter:198 - number of splits:3
2021-03-02 01:34:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C7B943B33FDB-&gt;a354107f-2af7-44bd-943a-d7060c5e01da
2021-03-02 01:34:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:34:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1614648774093_0002
2021-03-02 01:34:56 INFO  YarnClientImpl:273 - Submitted application application_1614648774093_0002
2021-03-02 01:34:56 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1614648774093_0002/
2021-03-02 01:34:56 INFO  Job:1339 - Running job: job_1614648774093_0002
2021-03-02 01:35:04 INFO  Job:1360 - Job job_1614648774093_0002 running in uber mode : false
2021-03-02 01:35:04 INFO  Job:1367 -  map 0% reduce 0%
2021-03-02 01:35:12 INFO  Job:1367 -  map 33% reduce 0%
2021-03-02 01:35:17 INFO  Job:1367 -  map 67% reduce 0%
2021-03-02 01:35:22 INFO  Job:1367 -  map 100% reduce 0%
2021-03-02 01:35:26 INFO  Job:1367 -  map 100% reduce 100%
2021-03-02 01:35:29 INFO  Job:1378 - Job job_1614648774093_0002 completed successfully
2021-03-02 01:35:29 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=675327
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39080
		Total time spent by all reduces in occupied slots (ms)=14848
		Total time spent by all map tasks (ms)=9770
		Total time spent by all reduce tasks (ms)=3712
		Total vcore-milliseconds taken by all map tasks=9770
		Total vcore-milliseconds taken by all reduce tasks=3712
		Total megabyte-milliseconds taken by all map tasks=40017920
		Total megabyte-milliseconds taken by all reduce tasks=15204352
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=572
		CPU time spent (ms)=7180
		Physical memory (bytes) snapshot=1205960704
		Virtual memory (bytes) snapshot=15802335232
		Total committed heap usage (bytes)=1052246016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210302 01:35:29.602" starttime="20210302 01:35:29.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:35:29.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:35:29.602" starttime="20210302 01:35:29.602"></status>
</kw>
<status status="PASS" endtime="20210302 01:35:29.603" starttime="20210302 01:34:52.892"></status>
</kw>
<msg timestamp="20210302 01:35:29.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:35:29.603" starttime="20210302 01:34:52.891"></status>
</kw>
<msg timestamp="20210302 01:35:29.603" level="INFO">${output} = 2021-03-02 01:34:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-03-02 01:34:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210302 01:35:29.603" starttime="20210302 01:34:52.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210302 01:35:29.604" starttime="20210302 01:35:29.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:35:29.604" starttime="20210302 01:35:29.604"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:35:29.605" critical="yes" starttime="20210302 01:34:52.862"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210302 01:35:29.606" starttime="20210302 01:34:16.354"></status>
</suite>
<status status="PASS" elapsedtime="193544" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:08.538" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:10.904" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 01:38:10.904" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:38:10.904" starttime="20210302 01:38:08.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:10.905" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:38:10.905" starttime="20210302 01:38:10.904"></status>
</kw>
<msg timestamp="20210302 01:38:10.905" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:38:10.906" starttime="20210302 01:38:08.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:10.911" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:13.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:13.130" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:38:13.130" starttime="20210302 01:38:10.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:13.131" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:38:13.131" starttime="20210302 01:38:13.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:13.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:13.132" starttime="20210302 01:38:13.132"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:13.132" starttime="20210302 01:38:10.908"></status>
</kw>
<msg timestamp="20210302 01:38:13.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:13.133" starttime="20210302 01:38:10.907"></status>
</kw>
<msg timestamp="20210302 01:38:13.133" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210302 01:38:13.133" starttime="20210302 01:38:10.907"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210302 01:38:13.133" starttime="20210302 01:38:13.133"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:13.134" starttime="20210302 01:38:10.906"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:13.134" starttime="20210302 01:38:10.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:13.142" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:15.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:15.462" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:38:15.462" starttime="20210302 01:38:13.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:15.463" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:38:15.463" starttime="20210302 01:38:15.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:15.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:15.464" starttime="20210302 01:38:15.463"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:15.464" starttime="20210302 01:38:13.136"></status>
</kw>
<msg timestamp="20210302 01:38:15.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:15.464" starttime="20210302 01:38:13.136"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:15.464" starttime="20210302 01:38:13.135"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:15.465" starttime="20210302 01:38:13.134"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:15.465" starttime="20210302 01:38:13.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210302 01:38:15.465" starttime="20210302 01:38:15.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:15.469" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:17.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:17.899" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:38...</msg>
<status status="PASS" endtime="20210302 01:38:17.899" starttime="20210302 01:38:15.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:17.900" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:38:15.418Z",
  "modificationTime" : "2021-03-02T01:38:15.418Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210302 01:38:17.900" starttime="20210302 01:38:17.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:17.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:17.901" starttime="20210302 01:38:17.900"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:17.901" starttime="20210302 01:38:15.466"></status>
</kw>
<msg timestamp="20210302 01:38:17.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:17.901" starttime="20210302 01:38:15.466"></status>
</kw>
<msg timestamp="20210302 01:38:17.902" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:38...</msg>
<status status="PASS" endtime="20210302 01:38:17.902" starttime="20210302 01:38:15.465"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210302 01:38:17.902" starttime="20210302 01:38:17.902"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:38:17.906" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:38:17.906" starttime="20210302 01:38:17.906"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:38:17.907" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:38:17.907" starttime="20210302 01:38:17.906"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:17.907" starttime="20210302 01:38:17.905"></status>
</kw>
<msg timestamp="20210302 01:38:17.907" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:38:17.907" starttime="20210302 01:38:17.905"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:17.907" starttime="20210302 01:38:17.904"></status>
</kw>
<msg timestamp="20210302 01:38:17.907" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210302 01:38:17.907" starttime="20210302 01:38:17.903"></status>
</kw>
<msg timestamp="20210302 01:38:17.908" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210302 01:38:17.908" starttime="20210302 01:38:17.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:17.911" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:20.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:20.142" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:38:20.142" starttime="20210302 01:38:17.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:20.143" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:38:20.143" starttime="20210302 01:38:20.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:20.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:20.144" starttime="20210302 01:38:20.144"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:20.144" starttime="20210302 01:38:17.909"></status>
</kw>
<msg timestamp="20210302 01:38:20.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:20.145" starttime="20210302 01:38:17.908"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:20.145" starttime="20210302 01:38:17.908"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:20.149" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:25.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:25.204" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:38:25.204" starttime="20210302 01:38:20.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:25.205" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:38:25.205" starttime="20210302 01:38:25.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:25.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:25.209" starttime="20210302 01:38:25.205"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:25.209" starttime="20210302 01:38:20.146"></status>
</kw>
<msg timestamp="20210302 01:38:25.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:25.209" starttime="20210302 01:38:20.146"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:25.209" starttime="20210302 01:38:20.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:25.213" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:29.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:29.367" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:38:29.367" starttime="20210302 01:38:25.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:29.369" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:38:29.369" starttime="20210302 01:38:29.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:29.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:29.370" starttime="20210302 01:38:29.369"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:29.370" starttime="20210302 01:38:25.211"></status>
</kw>
<msg timestamp="20210302 01:38:29.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:29.370" starttime="20210302 01:38:25.210"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:29.370" starttime="20210302 01:38:25.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:29.374" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:33.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:33.675" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:38:33.675" starttime="20210302 01:38:29.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:33.676" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:38:33.677" starttime="20210302 01:38:33.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:33.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:33.677" starttime="20210302 01:38:33.677"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:33.678" starttime="20210302 01:38:29.371"></status>
</kw>
<msg timestamp="20210302 01:38:33.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:33.678" starttime="20210302 01:38:29.371"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:33.678" starttime="20210302 01:38:29.370"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 01:38:33.678" critical="yes" starttime="20210302 01:38:08.533"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:38:33.683" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:38:33.683" starttime="20210302 01:38:33.683"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:38:33.684" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:38:33.684" starttime="20210302 01:38:33.683"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:33.684" starttime="20210302 01:38:33.682"></status>
</kw>
<msg timestamp="20210302 01:38:33.684" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:38:33.684" starttime="20210302 01:38:33.682"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:33.685" starttime="20210302 01:38:33.681"></status>
</kw>
<msg timestamp="20210302 01:38:33.685" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 01:38:33.685" starttime="20210302 01:38:33.680"></status>
</kw>
<msg timestamp="20210302 01:38:33.685" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 01:38:33.685" starttime="20210302 01:38:33.680"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:33.688" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:36.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:36.013" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:38:36.013" starttime="20210302 01:38:33.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:36.014" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:38:36.014" starttime="20210302 01:38:36.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:36.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:36.015" starttime="20210302 01:38:36.015"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:36.015" starttime="20210302 01:38:33.686"></status>
</kw>
<msg timestamp="20210302 01:38:36.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:36.016" starttime="20210302 01:38:33.685"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:36.016" starttime="20210302 01:38:33.685"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:36.021" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:38.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:38.332" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:38:38.332" starttime="20210302 01:38:36.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:38.334" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:38:38.334" starttime="20210302 01:38:38.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:38.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:38.334" starttime="20210302 01:38:38.334"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:38.335" starttime="20210302 01:38:36.017"></status>
</kw>
<msg timestamp="20210302 01:38:38.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:38.335" starttime="20210302 01:38:36.017"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:38.335" starttime="20210302 01:38:36.016"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 01:38:38.335" critical="yes" starttime="20210302 01:38:33.679"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210302 01:38:38.337" starttime="20210302 01:38:08.478"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:40:24.249" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:40:24.249" starttime="20210302 01:40:24.249"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:40:24.250" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:40:24.250" starttime="20210302 01:40:24.249"></status>
</kw>
<status status="PASS" endtime="20210302 01:40:24.250" starttime="20210302 01:40:24.248"></status>
</kw>
<msg timestamp="20210302 01:40:24.250" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:40:24.250" starttime="20210302 01:40:24.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:40:24.251" starttime="20210302 01:40:24.251"></status>
</kw>
<msg timestamp="20210302 01:40:24.251" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 01:40:24.251" starttime="20210302 01:40:24.250"></status>
</kw>
<status status="PASS" endtime="20210302 01:40:24.251" starttime="20210302 01:40:24.247"></status>
</kw>
<msg timestamp="20210302 01:40:24.251" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:40:24.251" starttime="20210302 01:40:24.246"></status>
</kw>
<msg timestamp="20210302 01:40:24.252" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:40:24.252" starttime="20210302 01:40:24.245"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:40:24.252" level="INFO">${random} = 04180</msg>
<status status="PASS" endtime="20210302 01:40:24.252" starttime="20210302 01:40:24.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:40:24.258" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-04180 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:40:27.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:40:27.899" level="INFO">${output} = 2021-03-02 01:40:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:40:27.899" starttime="20210302 01:40:24.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:40:27.900" level="INFO">2021-03-02 01:40:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:26 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-03-02 01:40:26 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:40:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:40:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:40:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:40:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5794452C1B82-&gt;3878eaed-43c7-41ac-986c-a39b6ea14785
2021-03-02 01:40:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:40:27 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210302 01:40:27.900" starttime="20210302 01:40:27.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:40:27.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:40:27.901" starttime="20210302 01:40:27.901"></status>
</kw>
<status status="PASS" endtime="20210302 01:40:27.901" starttime="20210302 01:40:24.253"></status>
</kw>
<msg timestamp="20210302 01:40:27.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:40:27.902" starttime="20210302 01:40:24.253"></status>
</kw>
<msg timestamp="20210302 01:40:27.902" level="INFO">${result} = 2021-03-02 01:40:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:40:27.902" starttime="20210302 01:40:24.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:40:27.905" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:40:29.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:40:29.764" level="INFO">${output} = 2021-03-02 01:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:40:29.765" starttime="20210302 01:40:27.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:40:29.766" level="INFO">2021-03-02 01:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:29 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:38 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-03-02 01:40 ofs://om/volume1/bucket1/ozone-04180
-rw-rw-rw-   3 hadoop hadoop      21867 2021-03-02 01:38 ofs://om/volume1/bucket1/ozone-32828
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:38 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:39 ofs://om/volume1/bucket1/wordcount-AGQq3YGH.txt
2021-03-02 01:40:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210302 01:40:29.766" starttime="20210302 01:40:29.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:40:29.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:40:29.767" starttime="20210302 01:40:29.766"></status>
</kw>
<status status="PASS" endtime="20210302 01:40:29.767" starttime="20210302 01:40:27.903"></status>
</kw>
<msg timestamp="20210302 01:40:29.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:40:29.767" starttime="20210302 01:40:27.903"></status>
</kw>
<msg timestamp="20210302 01:40:29.767" level="INFO">${result} = 2021-03-02 01:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:40:29.767" starttime="20210302 01:40:27.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:40:29.768" starttime="20210302 01:40:29.767"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:40:29.768" critical="yes" starttime="20210302 01:40:24.244"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210302 01:40:29.769" starttime="20210302 01:40:24.193"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:38:42.780" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:38:42.780" starttime="20210302 01:38:42.780"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:38:42.781" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:38:42.781" starttime="20210302 01:38:42.780"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:42.781" starttime="20210302 01:38:42.779"></status>
</kw>
<msg timestamp="20210302 01:38:42.781" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:38:42.781" starttime="20210302 01:38:42.779"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:42.782" starttime="20210302 01:38:42.778"></status>
</kw>
<msg timestamp="20210302 01:38:42.782" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:38:42.782" starttime="20210302 01:38:42.778"></status>
</kw>
<msg timestamp="20210302 01:38:42.782" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:38:42.782" starttime="20210302 01:38:42.776"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:38:42.783" level="INFO">${random} = 32828</msg>
<status status="PASS" endtime="20210302 01:38:42.783" starttime="20210302 01:38:42.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:42.788" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-32828 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:46.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:46.599" level="INFO">${output} = 2021-03-02 01:38:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:38:46.599" starttime="20210302 01:38:42.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:46.601" level="INFO">2021-03-02 01:38:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-03-02 01:38:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:38:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:38:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:38:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:38:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-487B46116384-&gt;3878eaed-43c7-41ac-986c-a39b6ea14785
2021-03-02 01:38:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:38:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210302 01:38:46.602" starttime="20210302 01:38:46.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:46.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:46.602" starttime="20210302 01:38:46.602"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:46.602" starttime="20210302 01:38:42.784"></status>
</kw>
<msg timestamp="20210302 01:38:46.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:46.603" starttime="20210302 01:38:42.783"></status>
</kw>
<msg timestamp="20210302 01:38:46.603" level="INFO">${result} = 2021-03-02 01:38:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:38:46.603" starttime="20210302 01:38:42.783"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:46.607" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:48.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:48.523" level="INFO">${output} = 2021-03-02 01:38:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:38:48.523" starttime="20210302 01:38:46.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:48.524" level="INFO">2021-03-02 01:38:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:48 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-03-02 01:38 o3fs://bucket1.volume1.om/ozone-32828
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:38 o3fs://bucket1.volume1.om/user
2021-03-02 01:38:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210302 01:38:48.524" starttime="20210302 01:38:48.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:48.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:48.525" starttime="20210302 01:38:48.525"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:48.525" starttime="20210302 01:38:46.604"></status>
</kw>
<msg timestamp="20210302 01:38:48.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:48.525" starttime="20210302 01:38:46.604"></status>
</kw>
<msg timestamp="20210302 01:38:48.526" level="INFO">${result} = 2021-03-02 01:38:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:38:48.526" starttime="20210302 01:38:46.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:38:48.526" starttime="20210302 01:38:48.526"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:38:48.527" critical="yes" starttime="20210302 01:38:42.776"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210302 01:38:48.527" starttime="20210302 01:38:42.722"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:40:34.202" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:40:34.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:40:34.209" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:40:34.209" starttime="20210302 01:40:34.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:40:34.210" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:40:34.210" starttime="20210302 01:40:34.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:40:34.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:40:34.211" starttime="20210302 01:40:34.210"></status>
</kw>
<status status="PASS" endtime="20210302 01:40:34.211" starttime="20210302 01:40:34.198"></status>
</kw>
<msg timestamp="20210302 01:40:34.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:40:34.211" starttime="20210302 01:40:34.198"></status>
</kw>
<msg timestamp="20210302 01:40:34.211" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:40:34.211" starttime="20210302 01:40:34.197"></status>
</kw>
<msg timestamp="20210302 01:40:34.211" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:40:34.211" starttime="20210302 01:40:34.197"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:40:34.216" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:40:34.216" starttime="20210302 01:40:34.216"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:40:34.217" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:40:34.217" starttime="20210302 01:40:34.216"></status>
</kw>
<status status="PASS" endtime="20210302 01:40:34.217" starttime="20210302 01:40:34.215"></status>
</kw>
<msg timestamp="20210302 01:40:34.217" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:40:34.217" starttime="20210302 01:40:34.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:40:34.218" starttime="20210302 01:40:34.218"></status>
</kw>
<msg timestamp="20210302 01:40:34.218" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 01:40:34.218" starttime="20210302 01:40:34.217"></status>
</kw>
<status status="PASS" endtime="20210302 01:40:34.219" starttime="20210302 01:40:34.214"></status>
</kw>
<msg timestamp="20210302 01:40:34.219" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:40:34.219" starttime="20210302 01:40:34.212"></status>
</kw>
<msg timestamp="20210302 01:40:34.219" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:40:34.219" starttime="20210302 01:40:34.212"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:40:34.222" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:41:14.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:41:14.930" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40...</msg>
<status status="PASS" endtime="20210302 01:41:14.930" starttime="20210302 01:40:34.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:41:14.931" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:36 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-03-02 01:40:36 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:40:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:40:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:40:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:40:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7ECB093E8C73-&gt;3878eaed-43c7-41ac-986c-a39b6ea14785
2021-03-02 01:40:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-03-02 01:40:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5996E8F48DAB-&gt;7f47faf5-0a77-4032-94c7-bf68bb429551
2021-03-02 01:40:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-03-02 01:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-03-02 01:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:40 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 01:40:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:40 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 01:40:40 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 01:40:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614649059843_0003
2021-03-02 01:40:43 INFO  JobSubmitter:299 - Executing with tokens: []
2021-03-02 01:40:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:43 INFO  Configuration:2752 - resource-types.xml not found
2021-03-02 01:40:43 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-03-02 01:40:43 INFO  YarnClientImpl:324 - Submitted application application_1614649059843_0003
2021-03-02 01:40:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1614649059843_0003/
2021-03-02 01:40:43 INFO  Job:1619 - Running job: job_1614649059843_0003
2021-03-02 01:40:52 INFO  Job:1640 - Job job_1614649059843_0003 running in uber mode : false
2021-03-02 01:40:52 INFO  Job:1647 -  map 0% reduce 0%
2021-03-02 01:40:58 INFO  Job:1647 -  map 33% reduce 0%
2021-03-02 01:41:03 INFO  Job:1647 -  map 67% reduce 0%
2021-03-02 01:41:09 INFO  Job:1647 -  map 100% reduce 0%
2021-03-02 01:41:13 INFO  Job:1647 -  map 100% reduce 100%
2021-03-02 01:41:14 INFO  Job:1658 - Job job_1614649059843_0003 completed successfully
2021-03-02 01:41:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:14 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1018145
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40508
		Total time spent by all reduces in occupied slots (ms)=14792
		Total time spent by all map tasks (ms)=10127
		Total time spent by all reduce tasks (ms)=3698
		Total vcore-milliseconds taken by all map tasks=10127
		Total vcore-milliseconds taken by all reduce tasks=3698
		Total megabyte-milliseconds taken by all map tasks=41480192
		Total megabyte-milliseconds taken by all reduce tasks=15147008
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=675
		CPU time spent (ms)=7190
		Physical memory (bytes) snapshot=1274101760
		Virtual memory (bytes) snapshot=15815389184
		Total committed heap usage (bytes)=1080557568
		Peak Map Physical memory (bytes)=323723264
		Peak Map Virtual memory (bytes)=3950923776
		Peak Reduce Physical memory (bytes)=308240384
		Peak Reduce Virtual memory (bytes)=3968086016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.308 seconds
2021-03-02 01:41:14 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-03-02 01:41:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210302 01:41:14.931" starttime="20210302 01:41:14.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:41:14.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:41:14.932" starttime="20210302 01:41:14.931"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:14.932" starttime="20210302 01:40:34.220"></status>
</kw>
<msg timestamp="20210302 01:41:14.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:41:14.933" starttime="20210302 01:40:34.220"></status>
</kw>
<msg timestamp="20210302 01:41:14.933" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40...</msg>
<status status="PASS" endtime="20210302 01:41:14.933" starttime="20210302 01:40:34.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:41:14.934" starttime="20210302 01:41:14.933"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:41:14.934" critical="yes" starttime="20210302 01:40:34.196"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:41:14.939" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:41:14.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:41:14.944" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:41:14.944" starttime="20210302 01:41:14.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:41:14.945" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:41:14.945" starttime="20210302 01:41:14.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:41:14.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:41:14.946" starttime="20210302 01:41:14.945"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:14.946" starttime="20210302 01:41:14.937"></status>
</kw>
<msg timestamp="20210302 01:41:14.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:41:14.946" starttime="20210302 01:41:14.936"></status>
</kw>
<msg timestamp="20210302 01:41:14.947" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:41:14.947" starttime="20210302 01:41:14.936"></status>
</kw>
<msg timestamp="20210302 01:41:14.947" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:41:14.947" starttime="20210302 01:41:14.935"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:41:14.947" level="INFO">${random} = wg1wrkYH</msg>
<status status="PASS" endtime="20210302 01:41:14.947" starttime="20210302 01:41:14.947"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:41:14.951" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:41:14.951" starttime="20210302 01:41:14.951"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:41:14.952" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:41:14.952" starttime="20210302 01:41:14.952"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:14.952" starttime="20210302 01:41:14.950"></status>
</kw>
<msg timestamp="20210302 01:41:14.952" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:41:14.952" starttime="20210302 01:41:14.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:41:14.953" starttime="20210302 01:41:14.953"></status>
</kw>
<msg timestamp="20210302 01:41:14.953" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 01:41:14.953" starttime="20210302 01:41:14.952"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:14.954" starttime="20210302 01:41:14.949"></status>
</kw>
<msg timestamp="20210302 01:41:14.954" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:41:14.954" starttime="20210302 01:41:14.948"></status>
</kw>
<msg timestamp="20210302 01:41:14.954" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:41:14.954" starttime="20210302 01:41:14.948"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:41:14.957" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:41:14.958" starttime="20210302 01:41:14.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:41:14.958" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:41:14.958" starttime="20210302 01:41:14.958"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:14.959" starttime="20210302 01:41:14.957"></status>
</kw>
<msg timestamp="20210302 01:41:14.959" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:41:14.959" starttime="20210302 01:41:14.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:41:14.961" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210302 01:41:14.961" starttime="20210302 01:41:14.960"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:41:14.962" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210302 01:41:14.962" starttime="20210302 01:41:14.961"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:14.962" starttime="20210302 01:41:14.959"></status>
</kw>
<msg timestamp="20210302 01:41:14.962" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210302 01:41:14.962" starttime="20210302 01:41:14.959"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:14.962" starttime="20210302 01:41:14.955"></status>
</kw>
<msg timestamp="20210302 01:41:14.962" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210302 01:41:14.962" starttime="20210302 01:41:14.955"></status>
</kw>
<msg timestamp="20210302 01:41:14.963" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210302 01:41:14.963" starttime="20210302 01:41:14.954"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:41:14.966" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:41:14.966" starttime="20210302 01:41:14.965"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:41:14.968" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:41:14.968" starttime="20210302 01:41:14.967"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:14.968" starttime="20210302 01:41:14.965"></status>
</kw>
<msg timestamp="20210302 01:41:14.969" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:41:14.969" starttime="20210302 01:41:14.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:41:14.970" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210302 01:41:14.970" starttime="20210302 01:41:14.970"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:41:14.971" level="INFO">${result} = /wordcount-wg1wrkYH.txt</msg>
<status status="PASS" endtime="20210302 01:41:14.971" starttime="20210302 01:41:14.971"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:14.971" starttime="20210302 01:41:14.969"></status>
</kw>
<msg timestamp="20210302 01:41:14.971" level="INFO">${path_with_leading} = /wordcount-wg1wrkYH.txt</msg>
<status status="PASS" endtime="20210302 01:41:14.971" starttime="20210302 01:41:14.969"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:14.972" starttime="20210302 01:41:14.964"></status>
</kw>
<msg timestamp="20210302 01:41:14.972" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-wg1wrkYH.txt</msg>
<status status="PASS" endtime="20210302 01:41:14.972" starttime="20210302 01:41:14.963"></status>
</kw>
<msg timestamp="20210302 01:41:14.972" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-wg1wrkYH.txt</msg>
<status status="PASS" endtime="20210302 01:41:14.972" starttime="20210302 01:41:14.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:41:14.976" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-wg1wrkYH.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:41:54.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:41:54.480" level="INFO">${output} = 2021-03-02 01:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:41:54.480" starttime="20210302 01:41:14.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:41:54.481" level="INFO">2021-03-02 01:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 01:41:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:17 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-03-02 01:41:17 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:41:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:41:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:41:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:41:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D547D162DC06-&gt;7f47faf5-0a77-4032-94c7-bf68bb429551
2021-03-02 01:41:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:41:18 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 01:41:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ED7643F7086B-&gt;3878eaed-43c7-41ac-986c-a39b6ea14785
2021-03-02 01:41:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:41:21 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 01:41:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614649059843_0004
2021-03-02 01:41:21 INFO  JobSubmitter:299 - Executing with tokens: []
2021-03-02 01:41:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:21 INFO  Configuration:2752 - resource-types.xml not found
2021-03-02 01:41:21 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-03-02 01:41:21 INFO  YarnClientImpl:324 - Submitted application application_1614649059843_0004
2021-03-02 01:41:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1614649059843_0004/
2021-03-02 01:41:21 INFO  Job:1619 - Running job: job_1614649059843_0004
2021-03-02 01:41:28 INFO  Job:1640 - Job job_1614649059843_0004 running in uber mode : false
2021-03-02 01:41:28 INFO  Job:1647 -  map 0% reduce 0%
2021-03-02 01:41:35 INFO  Job:1647 -  map 33% reduce 0%
2021-03-02 01:41:41 INFO  Job:1647 -  map 67% reduce 0%
2021-03-02 01:41:46 INFO  Job:1647 -  map 100% reduce 0%
2021-03-02 01:41:50 INFO  Job:1647 -  map 100% reduce 100%
2021-03-02 01:41:53 INFO  Job:1658 - Job job_1614649059843_0004 completed successfully
2021-03-02 01:41:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080819
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40768
		Total time spent by all reduces in occupied slots (ms)=14564
		Total time spent by all map tasks (ms)=10192
		Total time spent by all reduce tasks (ms)=3641
		Total vcore-milliseconds taken by all map tasks=10192
		Total vcore-milliseconds taken by all reduce tasks=3641
		Total megabyte-milliseconds taken by all map tasks=41746432
		Total megabyte-milliseconds taken by all reduce tasks=14913536
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=602
		CPU time spent (ms)=7450
		Physical memory (bytes) snapshot=1277546496
		Virtual memory (bytes) snapshot=15811645440
		Total committed heap usage (bytes)=1067974656
		Peak Map Physical memory (bytes)=322551808
		Peak Map Virtual memory (bytes)=3949268992
		Peak Reduce Physical memory (bytes)=311312384
		Peak Reduce Virtual memory (bytes)=3967455232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-03-02 01:41:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210302 01:41:54.482" starttime="20210302 01:41:54.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:41:54.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:41:54.482" starttime="20210302 01:41:54.482"></status>
</kw>
<status status="PASS" endtime="20210302 01:41:54.483" starttime="20210302 01:41:14.973"></status>
</kw>
<msg timestamp="20210302 01:41:54.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:41:54.483" starttime="20210302 01:41:14.973"></status>
</kw>
<msg timestamp="20210302 01:41:54.483" level="INFO">${output} = 2021-03-02 01:41:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:41:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:41:54.483" starttime="20210302 01:41:14.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210302 01:41:54.484" starttime="20210302 01:41:54.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:41:54.484" starttime="20210302 01:41:54.484"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:41:54.485" critical="yes" starttime="20210302 01:41:14.935"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210302 01:41:54.486" starttime="20210302 01:40:34.145"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:52.995" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:38:53.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:38:53.001" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:38:53.001" starttime="20210302 01:38:52.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:38:53.002" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:38:53.002" starttime="20210302 01:38:53.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:38:53.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:38:53.003" starttime="20210302 01:38:53.003"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:53.003" starttime="20210302 01:38:52.991"></status>
</kw>
<msg timestamp="20210302 01:38:53.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:38:53.004" starttime="20210302 01:38:52.990"></status>
</kw>
<msg timestamp="20210302 01:38:53.004" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:38:53.004" starttime="20210302 01:38:52.990"></status>
</kw>
<msg timestamp="20210302 01:38:53.004" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:38:53.004" starttime="20210302 01:38:52.989"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:38:53.009" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:38:53.009" starttime="20210302 01:38:53.008"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:38:53.009" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:38:53.009" starttime="20210302 01:38:53.009"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:53.009" starttime="20210302 01:38:53.008"></status>
</kw>
<msg timestamp="20210302 01:38:53.009" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:38:53.009" starttime="20210302 01:38:53.007"></status>
</kw>
<status status="PASS" endtime="20210302 01:38:53.010" starttime="20210302 01:38:53.007"></status>
</kw>
<msg timestamp="20210302 01:38:53.010" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:38:53.010" starttime="20210302 01:38:53.005"></status>
</kw>
<msg timestamp="20210302 01:38:53.010" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:38:53.010" starttime="20210302 01:38:53.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:38:53.013" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:39:43.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:39:43.245" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38...</msg>
<status status="PASS" endtime="20210302 01:39:43.245" starttime="20210302 01:38:53.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:39:43.246" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:54 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-03-02 01:38:55 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:38:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:38:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:38:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:38:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CB3A09B39989-&gt;7f47faf5-0a77-4032-94c7-bf68bb429551
2021-03-02 01:38:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-03-02 01:38:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3B5CB8A4123D-&gt;3878eaed-43c7-41ac-986c-a39b6ea14785
2021-03-02 01:38:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-03-02 01:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-03-02 01:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:59 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 01:39:02 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 01:39:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614649059843_0001
2021-03-02 01:39:02 INFO  JobSubmitter:299 - Executing with tokens: []
2021-03-02 01:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:02 INFO  Configuration:2752 - resource-types.xml not found
2021-03-02 01:39:02 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-03-02 01:39:03 INFO  YarnClientImpl:324 - Submitted application application_1614649059843_0001
2021-03-02 01:39:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1614649059843_0001/
2021-03-02 01:39:03 INFO  Job:1619 - Running job: job_1614649059843_0001
2021-03-02 01:39:14 INFO  Job:1640 - Job job_1614649059843_0001 running in uber mode : false
2021-03-02 01:39:14 INFO  Job:1647 -  map 0% reduce 0%
2021-03-02 01:39:21 INFO  Job:1647 -  map 33% reduce 0%
2021-03-02 01:39:27 INFO  Job:1647 -  map 67% reduce 0%
2021-03-02 01:39:33 INFO  Job:1647 -  map 100% reduce 0%
2021-03-02 01:39:38 INFO  Job:1647 -  map 100% reduce 100%
2021-03-02 01:39:42 INFO  Job:1658 - Job job_1614649059843_0001 completed successfully
2021-03-02 01:39:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:42 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1018357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42332
		Total time spent by all reduces in occupied slots (ms)=17356
		Total time spent by all map tasks (ms)=10583
		Total time spent by all reduce tasks (ms)=4339
		Total vcore-milliseconds taken by all map tasks=10583
		Total vcore-milliseconds taken by all reduce tasks=4339
		Total megabyte-milliseconds taken by all map tasks=43347968
		Total megabyte-milliseconds taken by all reduce tasks=17772544
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=680
		CPU time spent (ms)=7150
		Physical memory (bytes) snapshot=1275650048
		Virtual memory (bytes) snapshot=15808380928
		Total committed heap usage (bytes)=1077936128
		Peak Map Physical memory (bytes)=324980736
		Peak Map Virtual memory (bytes)=3949129728
		Peak Reduce Physical memory (bytes)=313167872
		Peak Reduce Virtual memory (bytes)=3969466368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.53 seconds
2021-03-02 01:39:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:42 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-03-02 01:39:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210302 01:39:43.246" starttime="20210302 01:39:43.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:39:43.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:39:43.247" starttime="20210302 01:39:43.246"></status>
</kw>
<status status="PASS" endtime="20210302 01:39:43.247" starttime="20210302 01:38:53.011"></status>
</kw>
<msg timestamp="20210302 01:39:43.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:39:43.248" starttime="20210302 01:38:53.011"></status>
</kw>
<msg timestamp="20210302 01:39:43.248" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:38...</msg>
<status status="PASS" endtime="20210302 01:39:43.248" starttime="20210302 01:38:53.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:39:43.249" starttime="20210302 01:39:43.248"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:39:43.249" critical="yes" starttime="20210302 01:38:52.989"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:39:43.261" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:39:43.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:39:43.267" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:39:43.267" starttime="20210302 01:39:43.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:39:43.269" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:39:43.269" starttime="20210302 01:39:43.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:39:43.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:39:43.270" starttime="20210302 01:39:43.269"></status>
</kw>
<status status="PASS" endtime="20210302 01:39:43.270" starttime="20210302 01:39:43.253"></status>
</kw>
<msg timestamp="20210302 01:39:43.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:39:43.270" starttime="20210302 01:39:43.252"></status>
</kw>
<msg timestamp="20210302 01:39:43.271" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:39:43.271" starttime="20210302 01:39:43.251"></status>
</kw>
<msg timestamp="20210302 01:39:43.271" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210302 01:39:43.271" starttime="20210302 01:39:43.251"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:39:43.272" level="INFO">${random} = AGQq3YGH</msg>
<status status="PASS" endtime="20210302 01:39:43.272" starttime="20210302 01:39:43.271"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:39:43.276" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:39:43.276" starttime="20210302 01:39:43.276"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:39:43.277" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:39:43.277" starttime="20210302 01:39:43.277"></status>
</kw>
<status status="PASS" endtime="20210302 01:39:43.277" starttime="20210302 01:39:43.275"></status>
</kw>
<msg timestamp="20210302 01:39:43.277" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:39:43.277" starttime="20210302 01:39:43.275"></status>
</kw>
<status status="PASS" endtime="20210302 01:39:43.278" starttime="20210302 01:39:43.273"></status>
</kw>
<msg timestamp="20210302 01:39:43.278" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:39:43.278" starttime="20210302 01:39:43.273"></status>
</kw>
<msg timestamp="20210302 01:39:43.278" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:39:43.278" starttime="20210302 01:39:43.272"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:39:43.282" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:39:43.282" starttime="20210302 01:39:43.281"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:39:43.282" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:39:43.282" starttime="20210302 01:39:43.282"></status>
</kw>
<status status="PASS" endtime="20210302 01:39:43.282" starttime="20210302 01:39:43.281"></status>
</kw>
<msg timestamp="20210302 01:39:43.282" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:39:43.283" starttime="20210302 01:39:43.280"></status>
</kw>
<status status="PASS" endtime="20210302 01:39:43.283" starttime="20210302 01:39:43.280"></status>
</kw>
<msg timestamp="20210302 01:39:43.283" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210302 01:39:43.283" starttime="20210302 01:39:43.279"></status>
</kw>
<msg timestamp="20210302 01:39:43.283" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210302 01:39:43.283" starttime="20210302 01:39:43.278"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:39:43.287" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:39:43.287" starttime="20210302 01:39:43.287"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:39:43.288" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:39:43.288" starttime="20210302 01:39:43.288"></status>
</kw>
<status status="PASS" endtime="20210302 01:39:43.288" starttime="20210302 01:39:43.287"></status>
</kw>
<msg timestamp="20210302 01:39:43.288" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:39:43.288" starttime="20210302 01:39:43.286"></status>
</kw>
<status status="PASS" endtime="20210302 01:39:43.289" starttime="20210302 01:39:43.285"></status>
</kw>
<msg timestamp="20210302 01:39:43.289" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-AGQq3YGH.txt</msg>
<status status="PASS" endtime="20210302 01:39:43.289" starttime="20210302 01:39:43.285"></status>
</kw>
<msg timestamp="20210302 01:39:43.289" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-AGQq3YGH.txt</msg>
<status status="PASS" endtime="20210302 01:39:43.289" starttime="20210302 01:39:43.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:39:43.292" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-AGQq3YGH.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:40:19.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:40:19.771" level="INFO">${output} = 2021-03-02 01:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:40:19.771" starttime="20210302 01:39:43.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:40:19.772" level="INFO">2021-03-02 01:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-03-02 01:39:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:45 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 01:39:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:45 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-03-02 01:39:45 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-03-02 01:39:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:39:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:39:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:39:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E18AEFFB77FE-&gt;7f47faf5-0a77-4032-94c7-bf68bb429551
2021-03-02 01:39:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:39:47 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 01:39:47 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 01:39:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3B76A4EC5827-&gt;3878eaed-43c7-41ac-986c-a39b6ea14785
2021-03-02 01:39:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:39:47 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614649059843_0002
2021-03-02 01:39:47 INFO  JobSubmitter:299 - Executing with tokens: []
2021-03-02 01:39:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:47 INFO  Configuration:2752 - resource-types.xml not found
2021-03-02 01:39:47 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-03-02 01:39:47 INFO  YarnClientImpl:324 - Submitted application application_1614649059843_0002
2021-03-02 01:39:47 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1614649059843_0002/
2021-03-02 01:39:47 INFO  Job:1619 - Running job: job_1614649059843_0002
2021-03-02 01:39:56 INFO  Job:1640 - Job job_1614649059843_0002 running in uber mode : false
2021-03-02 01:39:56 INFO  Job:1647 -  map 0% reduce 0%
2021-03-02 01:40:02 INFO  Job:1647 -  map 33% reduce 0%
2021-03-02 01:40:08 INFO  Job:1647 -  map 67% reduce 0%
2021-03-02 01:40:14 INFO  Job:1647 -  map 100% reduce 0%
2021-03-02 01:40:18 INFO  Job:1647 -  map 100% reduce 100%
2021-03-02 01:40:19 INFO  Job:1658 - Job job_1614649059843_0002 completed successfully
2021-03-02 01:40:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:40:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080903
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41716
		Total time spent by all reduces in occupied slots (ms)=14704
		Total time spent by all map tasks (ms)=10429
		Total time spent by all reduce tasks (ms)=3676
		Total vcore-milliseconds taken by all map tasks=10429
		Total vcore-milliseconds taken by all reduce tasks=3676
		Total megabyte-milliseconds taken by all map tasks=42717184
		Total megabyte-milliseconds taken by all reduce tasks=15056896
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=570
		CPU time spent (ms)=6980
		Physical memory (bytes) snapshot=1290645504
		Virtual memory (bytes) snapshot=15814938624
		Total committed heap usage (bytes)=1070071808
		Peak Map Physical memory (bytes)=332935168
		Peak Map Virtual memory (bytes)=3952435200
		Peak Reduce Physical memory (bytes)=309907456
		Peak Reduce Virtual memory (bytes)=3967340544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-03-02 01:40:19 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210302 01:40:19.772" starttime="20210302 01:40:19.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:40:19.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:40:19.773" starttime="20210302 01:40:19.773"></status>
</kw>
<status status="PASS" endtime="20210302 01:40:19.773" starttime="20210302 01:39:43.290"></status>
</kw>
<msg timestamp="20210302 01:40:19.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:40:19.774" starttime="20210302 01:39:43.290"></status>
</kw>
<msg timestamp="20210302 01:40:19.774" level="INFO">${output} = 2021-03-02 01:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-03-02 01:39:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210302 01:40:19.774" starttime="20210302 01:39:43.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210302 01:40:19.775" starttime="20210302 01:40:19.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:40:19.775" starttime="20210302 01:40:19.775"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:40:19.775" critical="yes" starttime="20210302 01:39:43.250"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210302 01:40:19.776" starttime="20210302 01:38:52.938"></status>
</suite>
<status status="PASS" elapsedtime="208419" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:04.717" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:43:16.985" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 01:43:16.985" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:43:16.985" starttime="20210302 01:43:04.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:43:16.986" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:43:16.987" starttime="20210302 01:43:16.986"></status>
</kw>
<msg timestamp="20210302 01:43:16.987" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210302 01:43:16.987" starttime="20210302 01:43:04.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:16.993" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:43:20.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:43:20.273" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:43:20.273" starttime="20210302 01:43:16.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:43:20.274" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:43:20.274" starttime="20210302 01:43:20.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:43:20.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:43:20.275" starttime="20210302 01:43:20.274"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:20.275" starttime="20210302 01:43:16.989"></status>
</kw>
<msg timestamp="20210302 01:43:20.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:43:20.275" starttime="20210302 01:43:16.988"></status>
</kw>
<msg timestamp="20210302 01:43:20.276" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210302 01:43:20.276" starttime="20210302 01:43:16.988"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210302 01:43:20.276" starttime="20210302 01:43:20.276"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:20.276" starttime="20210302 01:43:16.988"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:20.276" starttime="20210302 01:43:16.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:20.280" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:43:23.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:43:23.231" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:43:23.231" starttime="20210302 01:43:20.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:43:23.232" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:43:23.232" starttime="20210302 01:43:23.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:43:23.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:43:23.233" starttime="20210302 01:43:23.232"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:23.233" starttime="20210302 01:43:20.278"></status>
</kw>
<msg timestamp="20210302 01:43:23.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:43:23.234" starttime="20210302 01:43:20.278"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:23.234" starttime="20210302 01:43:20.277"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:23.234" starttime="20210302 01:43:20.277"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:23.234" starttime="20210302 01:43:20.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210302 01:43:23.234" starttime="20210302 01:43:23.234"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:23.238" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:43:26.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:43:26.469" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:43...</msg>
<status status="PASS" endtime="20210302 01:43:26.469" starttime="20210302 01:43:23.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:43:26.470" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:43:23.085Z",
  "modificationTime" : "2021-03-02T01:43:23.085Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210302 01:43:26.470" starttime="20210302 01:43:26.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:43:26.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:43:26.471" starttime="20210302 01:43:26.470"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:26.471" starttime="20210302 01:43:23.236"></status>
</kw>
<msg timestamp="20210302 01:43:26.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:43:26.471" starttime="20210302 01:43:23.235"></status>
</kw>
<msg timestamp="20210302 01:43:26.471" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T01:43...</msg>
<status status="PASS" endtime="20210302 01:43:26.471" starttime="20210302 01:43:23.235"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210302 01:43:26.472" starttime="20210302 01:43:26.472"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:43:26.476" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:43:26.476" starttime="20210302 01:43:26.475"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:43:26.477" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:43:26.477" starttime="20210302 01:43:26.476"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:26.477" starttime="20210302 01:43:26.475"></status>
</kw>
<msg timestamp="20210302 01:43:26.477" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:43:26.477" starttime="20210302 01:43:26.474"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:26.477" starttime="20210302 01:43:26.474"></status>
</kw>
<msg timestamp="20210302 01:43:26.477" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210302 01:43:26.477" starttime="20210302 01:43:26.473"></status>
</kw>
<msg timestamp="20210302 01:43:26.478" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210302 01:43:26.478" starttime="20210302 01:43:26.472"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:26.481" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:43:29.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:43:29.843" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:43:29.843" starttime="20210302 01:43:26.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:43:29.844" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:43:29.844" starttime="20210302 01:43:29.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:43:29.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:43:29.845" starttime="20210302 01:43:29.844"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:29.845" starttime="20210302 01:43:26.478"></status>
</kw>
<msg timestamp="20210302 01:43:29.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:43:29.845" starttime="20210302 01:43:26.478"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:29.845" starttime="20210302 01:43:26.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:29.849" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:43:36.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:43:36.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:43:36.551" starttime="20210302 01:43:29.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:43:36.553" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:43:36.553" starttime="20210302 01:43:36.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:43:36.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:43:36.553" starttime="20210302 01:43:36.553"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:36.554" starttime="20210302 01:43:29.846"></status>
</kw>
<msg timestamp="20210302 01:43:36.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:43:36.554" starttime="20210302 01:43:29.846"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:36.554" starttime="20210302 01:43:29.845"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:36.558" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:43:41.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:43:41.549" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:43:41.549" starttime="20210302 01:43:36.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:43:41.550" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:43:41.550" starttime="20210302 01:43:41.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:43:41.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:43:41.551" starttime="20210302 01:43:41.551"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:41.551" starttime="20210302 01:43:36.555"></status>
</kw>
<msg timestamp="20210302 01:43:41.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:43:41.552" starttime="20210302 01:43:36.555"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:41.552" starttime="20210302 01:43:36.554"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:41.556" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:43:46.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:43:46.748" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:43:46.748" starttime="20210302 01:43:41.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:43:46.749" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:43:46.749" starttime="20210302 01:43:46.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:43:46.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:43:46.750" starttime="20210302 01:43:46.749"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:46.750" starttime="20210302 01:43:41.553"></status>
</kw>
<msg timestamp="20210302 01:43:46.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:43:46.750" starttime="20210302 01:43:41.553"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:46.750" starttime="20210302 01:43:41.552"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 01:43:46.751" critical="yes" starttime="20210302 01:43:04.712"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:43:46.756" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:43:46.756" starttime="20210302 01:43:46.755"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:43:46.756" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:43:46.756" starttime="20210302 01:43:46.756"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:46.757" starttime="20210302 01:43:46.755"></status>
</kw>
<msg timestamp="20210302 01:43:46.757" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:43:46.757" starttime="20210302 01:43:46.754"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:46.757" starttime="20210302 01:43:46.754"></status>
</kw>
<msg timestamp="20210302 01:43:46.757" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 01:43:46.757" starttime="20210302 01:43:46.753"></status>
</kw>
<msg timestamp="20210302 01:43:46.757" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 01:43:46.758" starttime="20210302 01:43:46.752"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:46.761" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:43:50.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:43:50.044" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:43:50.044" starttime="20210302 01:43:46.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:43:50.046" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:43:50.046" starttime="20210302 01:43:50.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:43:50.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:43:50.047" starttime="20210302 01:43:50.047"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:50.047" starttime="20210302 01:43:46.758"></status>
</kw>
<msg timestamp="20210302 01:43:50.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:43:50.048" starttime="20210302 01:43:46.758"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:50.048" starttime="20210302 01:43:46.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:50.052" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:43:53.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:43:53.112" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:43:53.112" starttime="20210302 01:43:50.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:43:53.113" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:43:53.113" starttime="20210302 01:43:53.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:43:53.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:43:53.114" starttime="20210302 01:43:53.114"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:53.114" starttime="20210302 01:43:50.049"></status>
</kw>
<msg timestamp="20210302 01:43:53.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:43:53.115" starttime="20210302 01:43:50.049"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:53.115" starttime="20210302 01:43:50.048"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 01:43:53.115" critical="yes" starttime="20210302 01:43:46.751"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210302 01:43:53.117" starttime="20210302 01:43:04.657"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:45:37.365" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:45:37.365" starttime="20210302 01:45:37.364"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:45:37.365" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:45:37.366" starttime="20210302 01:45:37.365"></status>
</kw>
<status status="PASS" endtime="20210302 01:45:37.366" starttime="20210302 01:45:37.364"></status>
</kw>
<msg timestamp="20210302 01:45:37.366" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:45:37.366" starttime="20210302 01:45:37.364"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:45:37.367" starttime="20210302 01:45:37.366"></status>
</kw>
<msg timestamp="20210302 01:45:37.367" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 01:45:37.367" starttime="20210302 01:45:37.366"></status>
</kw>
<status status="PASS" endtime="20210302 01:45:37.367" starttime="20210302 01:45:37.363"></status>
</kw>
<msg timestamp="20210302 01:45:37.367" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:45:37.367" starttime="20210302 01:45:37.362"></status>
</kw>
<msg timestamp="20210302 01:45:37.368" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:45:37.368" starttime="20210302 01:45:37.361"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:45:37.368" level="INFO">${random} = 87460</msg>
<status status="PASS" endtime="20210302 01:45:37.368" starttime="20210302 01:45:37.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:45:37.374" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-87460 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:45:40.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:45:40.905" level="INFO">${output} = 2021-03-02 01:45:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:45:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210302 01:45:40.905" starttime="20210302 01:45:37.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:45:40.906" level="INFO">2021-03-02 01:45:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:45:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:45:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:45:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:45:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-27782E6D8F51-&gt;f7ee929b-6734-43ba-84da-5483d97eb56f
2021-03-02 01:45:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210302 01:45:40.906" starttime="20210302 01:45:40.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:45:40.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:45:40.907" starttime="20210302 01:45:40.906"></status>
</kw>
<status status="PASS" endtime="20210302 01:45:40.907" starttime="20210302 01:45:37.369"></status>
</kw>
<msg timestamp="20210302 01:45:40.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:45:40.907" starttime="20210302 01:45:37.369"></status>
</kw>
<msg timestamp="20210302 01:45:40.908" level="INFO">${result} = 2021-03-02 01:45:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:45:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210302 01:45:40.908" starttime="20210302 01:45:37.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:45:40.911" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:45:42.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:45:42.763" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 01:44 ofs://om/volume1/bucket1/ozone-06219
-rw-...</msg>
<status status="PASS" endtime="20210302 01:45:42.763" starttime="20210302 01:45:40.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:45:42.764" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 01:44 ofs://om/volume1/bucket1/ozone-06219
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 01:45 ofs://om/volume1/bucket1/ozone-87460
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:43 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:45 ofs://om/volume1/bucket1/wordcount-4HwOMKTC.txt</msg>
<status status="PASS" endtime="20210302 01:45:42.764" starttime="20210302 01:45:42.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:45:42.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:45:42.765" starttime="20210302 01:45:42.764"></status>
</kw>
<status status="PASS" endtime="20210302 01:45:42.765" starttime="20210302 01:45:40.909"></status>
</kw>
<msg timestamp="20210302 01:45:42.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:45:42.765" starttime="20210302 01:45:40.908"></status>
</kw>
<msg timestamp="20210302 01:45:42.766" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 01:44 ofs://om/volume1/bucket1/ozone-06219
-rw-...</msg>
<status status="PASS" endtime="20210302 01:45:42.766" starttime="20210302 01:45:40.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:45:42.766" starttime="20210302 01:45:42.766"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:45:42.766" critical="yes" starttime="20210302 01:45:37.360"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210302 01:45:42.767" starttime="20210302 01:45:37.289"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:43:57.521" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:43:57.521" starttime="20210302 01:43:57.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:43:57.521" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:43:57.521" starttime="20210302 01:43:57.521"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:57.522" starttime="20210302 01:43:57.520"></status>
</kw>
<msg timestamp="20210302 01:43:57.522" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:43:57.522" starttime="20210302 01:43:57.519"></status>
</kw>
<status status="PASS" endtime="20210302 01:43:57.522" starttime="20210302 01:43:57.519"></status>
</kw>
<msg timestamp="20210302 01:43:57.522" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:43:57.522" starttime="20210302 01:43:57.518"></status>
</kw>
<msg timestamp="20210302 01:43:57.522" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:43:57.522" starttime="20210302 01:43:57.517"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:43:57.523" level="INFO">${random} = 06219</msg>
<status status="PASS" endtime="20210302 01:43:57.523" starttime="20210302 01:43:57.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:43:57.528" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-06219 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:44:01.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:44:01.293" level="INFO">${output} = 2021-03-02 01:43:59 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:43:59 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210302 01:44:01.293" starttime="20210302 01:43:57.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:44:01.296" level="INFO">2021-03-02 01:43:59 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:43:59 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:43:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:43:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:43:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F3F5D76DD9BD-&gt;f7ee929b-6734-43ba-84da-5483d97eb56f
2021-03-02 01:43:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210302 01:44:01.296" starttime="20210302 01:44:01.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:44:01.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:44:01.296" starttime="20210302 01:44:01.296"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:01.297" starttime="20210302 01:43:57.524"></status>
</kw>
<msg timestamp="20210302 01:44:01.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:44:01.297" starttime="20210302 01:43:57.524"></status>
</kw>
<msg timestamp="20210302 01:44:01.297" level="INFO">${result} = 2021-03-02 01:43:59 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:43:59 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210302 01:44:01.297" starttime="20210302 01:43:57.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:44:01.300" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:44:03.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:44:03.045" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 01:44 o3fs://bucket1.volume1.om/ozone-06219
dr...</msg>
<status status="PASS" endtime="20210302 01:44:03.046" starttime="20210302 01:44:01.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:44:03.047" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 01:44 o3fs://bucket1.volume1.om/ozone-06219
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:43 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210302 01:44:03.047" starttime="20210302 01:44:03.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:44:03.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:44:03.048" starttime="20210302 01:44:03.047"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:03.048" starttime="20210302 01:44:01.298"></status>
</kw>
<msg timestamp="20210302 01:44:03.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:44:03.048" starttime="20210302 01:44:01.298"></status>
</kw>
<msg timestamp="20210302 01:44:03.048" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-03-02 01:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-03-02 01:44 o3fs://bucket1.volume1.om/ozone-06219
dr...</msg>
<status status="PASS" endtime="20210302 01:44:03.048" starttime="20210302 01:44:01.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:44:03.049" starttime="20210302 01:44:03.049"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:44:03.049" critical="yes" starttime="20210302 01:43:57.516"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210302 01:44:03.050" starttime="20210302 01:43:57.465"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:45:47.268" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:45:47.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:45:47.274" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:45:47.275" starttime="20210302 01:45:47.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:45:47.275" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:45:47.276" starttime="20210302 01:45:47.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:45:47.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:45:47.276" starttime="20210302 01:45:47.276"></status>
</kw>
<status status="PASS" endtime="20210302 01:45:47.276" starttime="20210302 01:45:47.264"></status>
</kw>
<msg timestamp="20210302 01:45:47.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:45:47.277" starttime="20210302 01:45:47.264"></status>
</kw>
<msg timestamp="20210302 01:45:47.277" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:45:47.277" starttime="20210302 01:45:47.263"></status>
</kw>
<msg timestamp="20210302 01:45:47.277" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:45:47.277" starttime="20210302 01:45:47.263"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:45:47.281" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:45:47.281" starttime="20210302 01:45:47.281"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:45:47.282" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:45:47.282" starttime="20210302 01:45:47.282"></status>
</kw>
<status status="PASS" endtime="20210302 01:45:47.282" starttime="20210302 01:45:47.281"></status>
</kw>
<msg timestamp="20210302 01:45:47.282" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:45:47.282" starttime="20210302 01:45:47.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:45:47.283" starttime="20210302 01:45:47.283"></status>
</kw>
<msg timestamp="20210302 01:45:47.283" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 01:45:47.283" starttime="20210302 01:45:47.283"></status>
</kw>
<status status="PASS" endtime="20210302 01:45:47.284" starttime="20210302 01:45:47.280"></status>
</kw>
<msg timestamp="20210302 01:45:47.284" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:45:47.284" starttime="20210302 01:45:47.278"></status>
</kw>
<msg timestamp="20210302 01:45:47.284" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:45:47.284" starttime="20210302 01:45:47.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:45:47.287" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:46:23.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:46:23.557" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:45:49 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:45:49 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210302 01:46:23.557" starttime="20210302 01:45:47.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:46:23.558" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:45:49 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:45:49 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:45:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:45:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:45:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-92346EBC2D07-&gt;aa0d5438-a42c-4269-8d49-d74290fc33fe
2021-03-02 01:45:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-03-02 01:45:53 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-03-02 01:45:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 01:45:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AC85D5C64D7A-&gt;f7ee929b-6734-43ba-84da-5483d97eb56f
2021-03-02 01:45:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:45:53 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 01:45:53 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 01:45:53 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614649358488_0003
2021-03-02 01:45:53 INFO  JobSubmitter:299 - Executing with tokens: []
2021-03-02 01:45:54 INFO  Configuration:2795 - resource-types.xml not found
2021-03-02 01:45:54 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-03-02 01:45:54 INFO  YarnClientImpl:329 - Submitted application application_1614649358488_0003
2021-03-02 01:45:54 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1614649358488_0003/
2021-03-02 01:45:54 INFO  Job:1614 - Running job: job_1614649358488_0003
2021-03-02 01:46:01 INFO  Job:1635 - Job job_1614649358488_0003 running in uber mode : false
2021-03-02 01:46:01 INFO  Job:1642 -  map 0% reduce 0%
2021-03-02 01:46:07 INFO  Job:1642 -  map 33% reduce 0%
2021-03-02 01:46:12 INFO  Job:1642 -  map 67% reduce 0%
2021-03-02 01:46:17 INFO  Job:1642 -  map 100% reduce 0%
2021-03-02 01:46:22 INFO  Job:1642 -  map 100% reduce 100%
2021-03-02 01:46:22 INFO  Job:1653 - Job job_1614649358488_0003 completed successfully
2021-03-02 01:46:22 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1093529
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39508
		Total time spent by all reduces in occupied slots (ms)=15620
		Total time spent by all map tasks (ms)=9877
		Total time spent by all reduce tasks (ms)=3905
		Total vcore-milliseconds taken by all map tasks=9877
		Total vcore-milliseconds taken by all reduce tasks=3905
		Total megabyte-milliseconds taken by all map tasks=40456192
		Total megabyte-milliseconds taken by all reduce tasks=15994880
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=637
		CPU time spent (ms)=7210
		Physical memory (bytes) snapshot=1219153920
		Virtual memory (bytes) snapshot=15818424320
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=305434624
		Peak Map Virtual memory (bytes)=3949891584
		Peak Reduce Physical memory (bytes)=308146176
		Peak Reduce Virtual memory (bytes)=3969150976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.958 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210302 01:46:23.558" starttime="20210302 01:46:23.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:46:23.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:46:23.559" starttime="20210302 01:46:23.558"></status>
</kw>
<status status="PASS" endtime="20210302 01:46:23.559" starttime="20210302 01:45:47.285"></status>
</kw>
<msg timestamp="20210302 01:46:23.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:46:23.559" starttime="20210302 01:45:47.285"></status>
</kw>
<msg timestamp="20210302 01:46:23.560" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:45:49 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:45:49 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210302 01:46:23.560" starttime="20210302 01:45:47.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:46:23.560" starttime="20210302 01:46:23.560"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:46:23.561" critical="yes" starttime="20210302 01:45:47.262"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:46:23.566" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:46:23.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:46:23.571" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:46:23.571" starttime="20210302 01:46:23.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:46:23.572" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:46:23.572" starttime="20210302 01:46:23.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:46:23.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:46:23.573" starttime="20210302 01:46:23.572"></status>
</kw>
<status status="PASS" endtime="20210302 01:46:23.573" starttime="20210302 01:46:23.564"></status>
</kw>
<msg timestamp="20210302 01:46:23.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:46:23.573" starttime="20210302 01:46:23.563"></status>
</kw>
<msg timestamp="20210302 01:46:23.574" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:46:23.574" starttime="20210302 01:46:23.563"></status>
</kw>
<msg timestamp="20210302 01:46:23.574" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:46:23.574" starttime="20210302 01:46:23.562"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:46:23.574" level="INFO">${random} = vbMNwFCy</msg>
<status status="PASS" endtime="20210302 01:46:23.574" starttime="20210302 01:46:23.574"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:46:23.578" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:46:23.578" starttime="20210302 01:46:23.578"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:46:23.579" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:46:23.579" starttime="20210302 01:46:23.578"></status>
</kw>
<status status="PASS" endtime="20210302 01:46:23.579" starttime="20210302 01:46:23.577"></status>
</kw>
<msg timestamp="20210302 01:46:23.579" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:46:23.579" starttime="20210302 01:46:23.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210302 01:46:23.580" starttime="20210302 01:46:23.580"></status>
</kw>
<msg timestamp="20210302 01:46:23.580" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210302 01:46:23.580" starttime="20210302 01:46:23.579"></status>
</kw>
<status status="PASS" endtime="20210302 01:46:23.581" starttime="20210302 01:46:23.576"></status>
</kw>
<msg timestamp="20210302 01:46:23.581" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:46:23.581" starttime="20210302 01:46:23.575"></status>
</kw>
<msg timestamp="20210302 01:46:23.581" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210302 01:46:23.581" starttime="20210302 01:46:23.575"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:46:23.584" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:46:23.584" starttime="20210302 01:46:23.584"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:46:23.585" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:46:23.585" starttime="20210302 01:46:23.585"></status>
</kw>
<status status="PASS" endtime="20210302 01:46:23.585" starttime="20210302 01:46:23.583"></status>
</kw>
<msg timestamp="20210302 01:46:23.585" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:46:23.585" starttime="20210302 01:46:23.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:46:23.587" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210302 01:46:23.587" starttime="20210302 01:46:23.586"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:46:23.587" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210302 01:46:23.587" starttime="20210302 01:46:23.587"></status>
</kw>
<status status="PASS" endtime="20210302 01:46:23.588" starttime="20210302 01:46:23.586"></status>
</kw>
<msg timestamp="20210302 01:46:23.588" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210302 01:46:23.588" starttime="20210302 01:46:23.586"></status>
</kw>
<status status="PASS" endtime="20210302 01:46:23.588" starttime="20210302 01:46:23.582"></status>
</kw>
<msg timestamp="20210302 01:46:23.588" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210302 01:46:23.588" starttime="20210302 01:46:23.582"></status>
</kw>
<msg timestamp="20210302 01:46:23.588" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210302 01:46:23.588" starttime="20210302 01:46:23.581"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210302 01:46:23.592" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210302 01:46:23.592" starttime="20210302 01:46:23.591"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:46:23.592" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210302 01:46:23.592" starttime="20210302 01:46:23.592"></status>
</kw>
<status status="PASS" endtime="20210302 01:46:23.593" starttime="20210302 01:46:23.591"></status>
</kw>
<msg timestamp="20210302 01:46:23.593" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210302 01:46:23.593" starttime="20210302 01:46:23.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:46:23.594" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210302 01:46:23.594" starttime="20210302 01:46:23.594"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:46:23.595" level="INFO">${result} = /wordcount-vbMNwFCy.txt</msg>
<status status="PASS" endtime="20210302 01:46:23.595" starttime="20210302 01:46:23.594"></status>
</kw>
<status status="PASS" endtime="20210302 01:46:23.595" starttime="20210302 01:46:23.593"></status>
</kw>
<msg timestamp="20210302 01:46:23.595" level="INFO">${path_with_leading} = /wordcount-vbMNwFCy.txt</msg>
<status status="PASS" endtime="20210302 01:46:23.595" starttime="20210302 01:46:23.593"></status>
</kw>
<status status="PASS" endtime="20210302 01:46:23.596" starttime="20210302 01:46:23.590"></status>
</kw>
<msg timestamp="20210302 01:46:23.596" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-vbMNwFCy.txt</msg>
<status status="PASS" endtime="20210302 01:46:23.596" starttime="20210302 01:46:23.589"></status>
</kw>
<msg timestamp="20210302 01:46:23.596" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-vbMNwFCy.txt</msg>
<status status="PASS" endtime="20210302 01:46:23.596" starttime="20210302 01:46:23.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:46:23.601" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-vbMNwFCy.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:47:02.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:47:02.003" level="INFO">${output} = 2021-03-02 01:46:25 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-03-02 01:46:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210302 01:47:02.003" starttime="20210302 01:46:23.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:47:02.004" level="INFO">2021-03-02 01:46:25 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-03-02 01:46:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 01:46:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:46:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:46:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:46:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:46:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-19C47F1A328D-&gt;aa0d5438-a42c-4269-8d49-d74290fc33fe
2021-03-02 01:46:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:46:26 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 01:46:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5D97D3A283FB-&gt;f7ee929b-6734-43ba-84da-5483d97eb56f
2021-03-02 01:46:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:46:29 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 01:46:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614649358488_0004
2021-03-02 01:46:29 INFO  JobSubmitter:299 - Executing with tokens: []
2021-03-02 01:46:30 INFO  Configuration:2795 - resource-types.xml not found
2021-03-02 01:46:30 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-03-02 01:46:30 INFO  YarnClientImpl:329 - Submitted application application_1614649358488_0004
2021-03-02 01:46:30 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1614649358488_0004/
2021-03-02 01:46:30 INFO  Job:1614 - Running job: job_1614649358488_0004
2021-03-02 01:46:37 INFO  Job:1635 - Job job_1614649358488_0004 running in uber mode : false
2021-03-02 01:46:37 INFO  Job:1642 -  map 0% reduce 0%
2021-03-02 01:46:43 INFO  Job:1642 -  map 33% reduce 0%
2021-03-02 01:46:48 INFO  Job:1642 -  map 67% reduce 0%
2021-03-02 01:46:53 INFO  Job:1642 -  map 100% reduce 0%
2021-03-02 01:46:57 INFO  Job:1642 -  map 100% reduce 100%
2021-03-02 01:47:01 INFO  Job:1653 - Job job_1614649358488_0004 completed successfully
2021-03-02 01:47:01 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1156219
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40080
		Total time spent by all reduces in occupied slots (ms)=14516
		Total time spent by all map tasks (ms)=10020
		Total time spent by all reduce tasks (ms)=3629
		Total vcore-milliseconds taken by all map tasks=10020
		Total vcore-milliseconds taken by all reduce tasks=3629
		Total megabyte-milliseconds taken by all map tasks=41041920
		Total megabyte-milliseconds taken by all reduce tasks=14864384
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=656
		CPU time spent (ms)=7450
		Physical memory (bytes) snapshot=1235595264
		Virtual memory (bytes) snapshot=15815200768
		Total committed heap usage (bytes)=1135607808
		Peak Map Physical memory (bytes)=310370304
		Peak Map Virtual memory (bytes)=3949301760
		Peak Reduce Physical memory (bytes)=316698624
		Peak Reduce Virtual memory (bytes)=3972247552
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210302 01:47:02.005" starttime="20210302 01:47:02.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:47:02.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:47:02.005" starttime="20210302 01:47:02.005"></status>
</kw>
<status status="PASS" endtime="20210302 01:47:02.005" starttime="20210302 01:46:23.597"></status>
</kw>
<msg timestamp="20210302 01:47:02.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:47:02.006" starttime="20210302 01:46:23.597"></status>
</kw>
<msg timestamp="20210302 01:47:02.006" level="INFO">${output} = 2021-03-02 01:46:25 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-03-02 01:46:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210302 01:47:02.006" starttime="20210302 01:46:23.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210302 01:47:02.007" starttime="20210302 01:47:02.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:47:02.007" starttime="20210302 01:47:02.007"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:47:02.007" critical="yes" starttime="20210302 01:46:23.561"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210302 01:47:02.009" starttime="20210302 01:45:47.212"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:44:07.471" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:44:07.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:44:07.478" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:44:07.478" starttime="20210302 01:44:07.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:44:07.479" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:44:07.479" starttime="20210302 01:44:07.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:44:07.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:44:07.480" starttime="20210302 01:44:07.479"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:07.480" starttime="20210302 01:44:07.467"></status>
</kw>
<msg timestamp="20210302 01:44:07.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:44:07.480" starttime="20210302 01:44:07.467"></status>
</kw>
<msg timestamp="20210302 01:44:07.481" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:44:07.481" starttime="20210302 01:44:07.466"></status>
</kw>
<msg timestamp="20210302 01:44:07.481" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:44:07.481" starttime="20210302 01:44:07.466"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:44:07.485" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:44:07.486" starttime="20210302 01:44:07.485"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:44:07.486" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:44:07.486" starttime="20210302 01:44:07.486"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:07.486" starttime="20210302 01:44:07.485"></status>
</kw>
<msg timestamp="20210302 01:44:07.487" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:44:07.487" starttime="20210302 01:44:07.484"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:07.487" starttime="20210302 01:44:07.483"></status>
</kw>
<msg timestamp="20210302 01:44:07.487" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:44:07.487" starttime="20210302 01:44:07.482"></status>
</kw>
<msg timestamp="20210302 01:44:07.487" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:44:07.487" starttime="20210302 01:44:07.481"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:44:07.491" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:44:49.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:44:49.221" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:44:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:44:09 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210302 01:44:49.221" starttime="20210302 01:44:07.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:44:49.222" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:44:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:44:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:44:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:44:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:44:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EA9F8CCE0C63-&gt;aa0d5438-a42c-4269-8d49-d74290fc33fe
2021-03-02 01:44:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-03-02 01:44:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-48F0A787486B-&gt;f7ee929b-6734-43ba-84da-5483d97eb56f
2021-03-02 01:44:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-03-02 01:44:10 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-03-02 01:44:11 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 01:44:14 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 01:44:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614649358488_0001
2021-03-02 01:44:14 INFO  JobSubmitter:299 - Executing with tokens: []
2021-03-02 01:44:14 INFO  Configuration:2795 - resource-types.xml not found
2021-03-02 01:44:14 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-03-02 01:44:15 INFO  YarnClientImpl:329 - Submitted application application_1614649358488_0001
2021-03-02 01:44:15 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1614649358488_0001/
2021-03-02 01:44:15 INFO  Job:1614 - Running job: job_1614649358488_0001
2021-03-02 01:44:25 INFO  Job:1635 - Job job_1614649358488_0001 running in uber mode : false
2021-03-02 01:44:25 INFO  Job:1642 -  map 0% reduce 0%
2021-03-02 01:44:32 INFO  Job:1642 -  map 33% reduce 0%
2021-03-02 01:44:38 INFO  Job:1642 -  map 67% reduce 0%
2021-03-02 01:44:43 INFO  Job:1642 -  map 100% reduce 0%
2021-03-02 01:44:47 INFO  Job:1642 -  map 100% reduce 100%
2021-03-02 01:44:48 INFO  Job:1653 - Job job_1614649358488_0001 completed successfully
2021-03-02 01:44:48 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1093741
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40272
		Total time spent by all reduces in occupied slots (ms)=15584
		Total time spent by all map tasks (ms)=10068
		Total time spent by all reduce tasks (ms)=3896
		Total vcore-milliseconds taken by all map tasks=10068
		Total vcore-milliseconds taken by all reduce tasks=3896
		Total megabyte-milliseconds taken by all map tasks=41238528
		Total megabyte-milliseconds taken by all reduce tasks=15958016
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=604
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1322614784
		Virtual memory (bytes) snapshot=15808598016
		Total committed heap usage (bytes)=1270874112
		Peak Map Physical memory (bytes)=309420032
		Peak Map Virtual memory (bytes)=3948830720
		Peak Reduce Physical memory (bytes)=404717568
		Peak Reduce Virtual memory (bytes)=3970539520
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.814 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210302 01:44:49.222" starttime="20210302 01:44:49.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:44:49.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:44:49.223" starttime="20210302 01:44:49.223"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:49.228" starttime="20210302 01:44:07.488"></status>
</kw>
<msg timestamp="20210302 01:44:49.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:44:49.229" starttime="20210302 01:44:07.488"></status>
</kw>
<msg timestamp="20210302 01:44:49.229" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-03-02 01:44:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:44:09 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210302 01:44:49.229" starttime="20210302 01:44:07.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:44:49.230" starttime="20210302 01:44:49.229"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:44:49.230" critical="yes" starttime="20210302 01:44:07.465"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:44:49.236" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:44:49.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:44:49.241" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:44:49.241" starttime="20210302 01:44:49.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:44:49.242" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:44:49.243" starttime="20210302 01:44:49.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:44:49.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:44:49.243" starttime="20210302 01:44:49.243"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:49.243" starttime="20210302 01:44:49.233"></status>
</kw>
<msg timestamp="20210302 01:44:49.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:44:49.244" starttime="20210302 01:44:49.233"></status>
</kw>
<msg timestamp="20210302 01:44:49.244" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:44:49.244" starttime="20210302 01:44:49.232"></status>
</kw>
<msg timestamp="20210302 01:44:49.244" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210302 01:44:49.244" starttime="20210302 01:44:49.232"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 01:44:49.245" level="INFO">${random} = 4HwOMKTC</msg>
<status status="PASS" endtime="20210302 01:44:49.245" starttime="20210302 01:44:49.244"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:44:49.249" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:44:49.249" starttime="20210302 01:44:49.248"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:44:49.249" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:44:49.249" starttime="20210302 01:44:49.249"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:49.250" starttime="20210302 01:44:49.248"></status>
</kw>
<msg timestamp="20210302 01:44:49.250" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:44:49.250" starttime="20210302 01:44:49.247"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:49.250" starttime="20210302 01:44:49.246"></status>
</kw>
<msg timestamp="20210302 01:44:49.250" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:44:49.250" starttime="20210302 01:44:49.246"></status>
</kw>
<msg timestamp="20210302 01:44:49.250" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210302 01:44:49.250" starttime="20210302 01:44:49.245"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:44:49.254" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:44:49.254" starttime="20210302 01:44:49.253"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:44:49.254" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:44:49.254" starttime="20210302 01:44:49.254"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:49.254" starttime="20210302 01:44:49.253"></status>
</kw>
<msg timestamp="20210302 01:44:49.255" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:44:49.255" starttime="20210302 01:44:49.252"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:49.255" starttime="20210302 01:44:49.252"></status>
</kw>
<msg timestamp="20210302 01:44:49.255" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210302 01:44:49.255" starttime="20210302 01:44:49.251"></status>
</kw>
<msg timestamp="20210302 01:44:49.255" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210302 01:44:49.255" starttime="20210302 01:44:49.251"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210302 01:44:49.258" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210302 01:44:49.258" starttime="20210302 01:44:49.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 01:44:49.259" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210302 01:44:49.259" starttime="20210302 01:44:49.259"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:49.259" starttime="20210302 01:44:49.258"></status>
</kw>
<msg timestamp="20210302 01:44:49.259" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210302 01:44:49.259" starttime="20210302 01:44:49.257"></status>
</kw>
<status status="PASS" endtime="20210302 01:44:49.260" starttime="20210302 01:44:49.256"></status>
</kw>
<msg timestamp="20210302 01:44:49.260" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-4HwOMKTC.txt</msg>
<status status="PASS" endtime="20210302 01:44:49.260" starttime="20210302 01:44:49.256"></status>
</kw>
<msg timestamp="20210302 01:44:49.260" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-4HwOMKTC.txt</msg>
<status status="PASS" endtime="20210302 01:44:49.260" starttime="20210302 01:44:49.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:44:49.264" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-4HwOMKTC.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:45:32.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:45:32.860" level="INFO">${output} = 2021-03-02 01:44:51 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-03-02 01:44:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210302 01:45:32.860" starttime="20210302 01:44:49.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:45:32.861" level="INFO">2021-03-02 01:44:51 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-03-02 01:44:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-03-02 01:44:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-03-02 01:44:51 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-03-02 01:44:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-03-02 01:44:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 01:44:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-43E08555F7AA-&gt;aa0d5438-a42c-4269-8d49-d74290fc33fe
2021-03-02 01:44:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:44:52 INFO  FileInputFormat:292 - Total input files to process : 3
2021-03-02 01:44:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D42E54BE8D87-&gt;f7ee929b-6734-43ba-84da-5483d97eb56f
2021-03-02 01:44:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 01:44:55 INFO  JobSubmitter:202 - number of splits:3
2021-03-02 01:44:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1614649358488_0002
2021-03-02 01:44:55 INFO  JobSubmitter:299 - Executing with tokens: []
2021-03-02 01:44:55 INFO  Configuration:2795 - resource-types.xml not found
2021-03-02 01:44:55 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-03-02 01:44:55 INFO  YarnClientImpl:329 - Submitted application application_1614649358488_0002
2021-03-02 01:44:56 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1614649358488_0002/
2021-03-02 01:44:56 INFO  Job:1614 - Running job: job_1614649358488_0002
2021-03-02 01:45:04 INFO  Job:1635 - Job job_1614649358488_0002 running in uber mode : false
2021-03-02 01:45:04 INFO  Job:1642 -  map 0% reduce 0%
2021-03-02 01:45:10 INFO  Job:1642 -  map 33% reduce 0%
2021-03-02 01:45:16 INFO  Job:1642 -  map 67% reduce 0%
2021-03-02 01:45:21 INFO  Job:1642 -  map 100% reduce 0%
2021-03-02 01:45:29 INFO  Job:1642 -  map 100% reduce 100%
2021-03-02 01:45:32 INFO  Job:1653 - Job job_1614649358488_0002 completed successfully
2021-03-02 01:45:32 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1156303
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41580
		Total time spent by all reduces in occupied slots (ms)=24476
		Total time spent by all map tasks (ms)=10395
		Total time spent by all reduce tasks (ms)=6119
		Total vcore-milliseconds taken by all map tasks=10395
		Total vcore-milliseconds taken by all reduce tasks=6119
		Total megabyte-milliseconds taken by all map tasks=42577920
		Total megabyte-milliseconds taken by all reduce tasks=25063424
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=623
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1210179584
		Virtual memory (bytes) snapshot=15796002816
		Total committed heap usage (bytes)=1065877504
		Peak Map Physical memory (bytes)=310251520
		Peak Map Virtual memory (bytes)=3949899776
		Peak Reduce Physical memory (bytes)=306950144
		Peak Reduce Virtual memory (bytes)=3968098304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210302 01:45:32.862" starttime="20210302 01:45:32.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:45:32.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:45:32.862" starttime="20210302 01:45:32.862"></status>
</kw>
<status status="PASS" endtime="20210302 01:45:32.863" starttime="20210302 01:44:49.261"></status>
</kw>
<msg timestamp="20210302 01:45:32.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:45:32.863" starttime="20210302 01:44:49.261"></status>
</kw>
<msg timestamp="20210302 01:45:32.863" level="INFO">${output} = 2021-03-02 01:44:51 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-03-02 01:44:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210302 01:45:32.863" starttime="20210302 01:44:49.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210302 01:45:32.864" starttime="20210302 01:45:32.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210302 01:45:32.864" starttime="20210302 01:45:32.864"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210302 01:45:32.865" critical="yes" starttime="20210302 01:44:49.231"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210302 01:45:32.866" starttime="20210302 01:44:07.414"></status>
</suite>
<status status="PASS" elapsedtime="219772" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="621735" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
