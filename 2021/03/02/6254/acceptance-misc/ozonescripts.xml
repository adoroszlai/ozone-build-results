<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210302 01:57:31.220" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/admincli/pipeline.robot" id="s1" name="ozonescripts">
<test id="s1-t1" name="Create pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline create</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:56:51.320" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:56:53.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:56:53.248" level="INFO">${output} = PipelineID=e3ce618e-e487-4f68-8c15-04d21109c5eb is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210302 01:56:53.248" starttime="20210302 01:56:51.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:56:53.249" level="INFO">PipelineID=e3ce618e-e487-4f68-8c15-04d21109c5eb is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210302 01:56:53.249" starttime="20210302 01:56:53.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:56:53.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:56:53.250" starttime="20210302 01:56:53.249"></status>
</kw>
<status status="PASS" endtime="20210302 01:56:53.250" starttime="20210302 01:56:51.316"></status>
</kw>
<msg timestamp="20210302 01:56:53.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:56:53.250" starttime="20210302 01:56:51.316"></status>
</kw>
<msg timestamp="20210302 01:56:53.250" level="INFO">${output} = PipelineID=e3ce618e-e487-4f68-8c15-04d21109c5eb is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210302 01:56:53.250" starttime="20210302 01:56:51.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is created. Factor: ONE, Type: STAND_ALONE</arg>
</arguments>
<status status="PASS" endtime="20210302 01:56:53.251" starttime="20210302 01:56:53.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
</arguments>
<assign>
<var>${pipeline}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:56:53.255" level="INFO">Running command 'echo "PipelineID=e3ce618e-e487-4f68-8c15-04d21109c5eb is created. Factor: ONE, Type: STAND_ALONE" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:56:53.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:56:53.259" level="INFO">${output} = e3ce618e-e487-4f68-8c15-04d21109c5eb</msg>
<status status="PASS" endtime="20210302 01:56:53.259" starttime="20210302 01:56:53.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:56:53.260" level="INFO">e3ce618e-e487-4f68-8c15-04d21109c5eb</msg>
<status status="PASS" endtime="20210302 01:56:53.260" starttime="20210302 01:56:53.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:56:53.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:56:53.261" starttime="20210302 01:56:53.260"></status>
</kw>
<status status="PASS" endtime="20210302 01:56:53.261" starttime="20210302 01:56:53.252"></status>
</kw>
<msg timestamp="20210302 01:56:53.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:56:53.261" starttime="20210302 01:56:53.252"></status>
</kw>
<msg timestamp="20210302 01:56:53.261" level="INFO">${pipeline} = e3ce618e-e487-4f68-8c15-04d21109c5eb</msg>
<status status="PASS" endtime="20210302 01:56:53.261" starttime="20210302 01:56:53.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
</arguments>
<msg timestamp="20210302 01:56:53.262" level="INFO">${PIPELINE} = e3ce618e-e487-4f68-8c15-04d21109c5eb</msg>
<status status="PASS" endtime="20210302 01:56:53.262" starttime="20210302 01:56:53.261"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:56:53.262" critical="yes" starttime="20210302 01:56:51.314"></status>
</test>
<test id="s1-t2" name="List pipelines">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:56:53.266" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:56:55.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:56:55.216" level="INFO">${output} = Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210302 01:56:55.216" starttime="20210302 01:56:53.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:56:55.217" level="INFO">Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-03-02T01:56:53.162Z]
Pipeline[ Id: 9ecbbc3e-cd7d-4c1b-9f76-7cb4da261b39, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:9a83883d-c36a-4d44-bd59-4537b42af24d, CreationTimestamp2021-03-02T01:56:29.599Z]</msg>
<status status="PASS" endtime="20210302 01:56:55.217" starttime="20210302 01:56:55.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:56:55.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:56:55.218" starttime="20210302 01:56:55.218"></status>
</kw>
<status status="PASS" endtime="20210302 01:56:55.218" starttime="20210302 01:56:53.264"></status>
</kw>
<msg timestamp="20210302 01:56:55.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:56:55.219" starttime="20210302 01:56:53.264"></status>
</kw>
<msg timestamp="20210302 01:56:55.219" level="INFO">${output} = Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210302 01:56:55.219" starttime="20210302 01:56:53.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210302 01:56:55.219" starttime="20210302 01:56:55.219"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:56:55.220" critical="yes" starttime="20210302 01:56:53.263"></status>
</test>
<test id="s1-t3" name="List pipelines with explicit host">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list --scm scm</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:56:55.224" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:56:57.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:56:57.008" level="INFO">${output} = Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210302 01:56:57.008" starttime="20210302 01:56:55.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:56:57.009" level="INFO">Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-03-02T01:56:53.162Z]
Pipeline[ Id: 9ecbbc3e-cd7d-4c1b-9f76-7cb4da261b39, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:9a83883d-c36a-4d44-bd59-4537b42af24d, CreationTimestamp2021-03-02T01:56:29.599Z]</msg>
<status status="PASS" endtime="20210302 01:56:57.009" starttime="20210302 01:56:57.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:56:57.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:56:57.010" starttime="20210302 01:56:57.009"></status>
</kw>
<status status="PASS" endtime="20210302 01:56:57.010" starttime="20210302 01:56:55.222"></status>
</kw>
<msg timestamp="20210302 01:56:57.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:56:57.010" starttime="20210302 01:56:55.222"></status>
</kw>
<msg timestamp="20210302 01:56:57.011" level="INFO">${output} = Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210302 01:56:57.011" starttime="20210302 01:56:55.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210302 01:56:57.011" starttime="20210302 01:56:57.011"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:56:57.011" critical="yes" starttime="20210302 01:56:55.220"></status>
</test>
<test id="s1-t4" name="Deactivate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:56:57.016" level="INFO">Running command 'ozone admin pipeline deactivate "e3ce618e-e487-4f68-8c15-04d21109c5eb" 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:56:58.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:56:58.741" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:56:58.741" starttime="20210302 01:56:57.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:56:58.742" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:56:58.742" starttime="20210302 01:56:58.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:56:58.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:56:58.743" starttime="20210302 01:56:58.742"></status>
</kw>
<status status="PASS" endtime="20210302 01:56:58.743" starttime="20210302 01:56:57.013"></status>
</kw>
<msg timestamp="20210302 01:56:58.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:56:58.743" starttime="20210302 01:56:57.013"></status>
</kw>
<status status="PASS" endtime="20210302 01:56:58.743" starttime="20210302 01:56:57.013"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:56:58.747" level="INFO">Running command 'ozone admin pipeline list | grep "e3ce618e-e487-4f68-8c15-04d21109c5eb" 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:57:00.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:57:00.557" level="INFO">${output} = Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210302 01:57:00.557" starttime="20210302 01:56:58.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:57:00.558" level="INFO">Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:DORMANT, leaderId:, CreationTimestamp2021-03-02T01:56:53.162Z]</msg>
<status status="PASS" endtime="20210302 01:57:00.558" starttime="20210302 01:57:00.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:57:00.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:57:00.559" starttime="20210302 01:57:00.559"></status>
</kw>
<status status="PASS" endtime="20210302 01:57:00.559" starttime="20210302 01:56:58.744"></status>
</kw>
<msg timestamp="20210302 01:57:00.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:57:00.560" starttime="20210302 01:56:58.744"></status>
</kw>
<msg timestamp="20210302 01:57:00.560" level="INFO">${output} = Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210302 01:57:00.560" starttime="20210302 01:56:58.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>DORMANT</arg>
</arguments>
<status status="PASS" endtime="20210302 01:57:00.560" starttime="20210302 01:57:00.560"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:57:00.561" critical="yes" starttime="20210302 01:56:57.012"></status>
</test>
<test id="s1-t5" name="Activate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:57:00.565" level="INFO">Running command 'ozone admin pipeline activate "e3ce618e-e487-4f68-8c15-04d21109c5eb" 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:57:02.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:57:02.264" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:57:02.265" starttime="20210302 01:57:00.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:57:02.266" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:57:02.266" starttime="20210302 01:57:02.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:57:02.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:57:02.266" starttime="20210302 01:57:02.266"></status>
</kw>
<status status="PASS" endtime="20210302 01:57:02.267" starttime="20210302 01:57:00.562"></status>
</kw>
<msg timestamp="20210302 01:57:02.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:57:02.267" starttime="20210302 01:57:00.562"></status>
</kw>
<status status="PASS" endtime="20210302 01:57:02.267" starttime="20210302 01:57:00.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:57:02.270" level="INFO">Running command 'ozone admin pipeline list | grep "e3ce618e-e487-4f68-8c15-04d21109c5eb" 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:57:03.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:57:03.957" level="INFO">${output} = Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210302 01:57:03.957" starttime="20210302 01:57:02.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:57:03.958" level="INFO">Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-03-02T01:56:53.162Z]</msg>
<status status="PASS" endtime="20210302 01:57:03.958" starttime="20210302 01:57:03.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:57:03.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:57:03.959" starttime="20210302 01:57:03.958"></status>
</kw>
<status status="PASS" endtime="20210302 01:57:03.959" starttime="20210302 01:57:02.268"></status>
</kw>
<msg timestamp="20210302 01:57:03.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:57:03.960" starttime="20210302 01:57:02.268"></status>
</kw>
<msg timestamp="20210302 01:57:03.960" level="INFO">${output} = Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210302 01:57:03.960" starttime="20210302 01:57:02.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" endtime="20210302 01:57:03.961" starttime="20210302 01:57:03.960"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:57:03.961" critical="yes" starttime="20210302 01:57:00.561"></status>
</test>
<test id="s1-t6" name="Close pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:57:03.966" level="INFO">Running command 'ozone admin pipeline close "e3ce618e-e487-4f68-8c15-04d21109c5eb" 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:57:05.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:57:05.801" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 01:57:05.801" starttime="20210302 01:57:03.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:57:05.802" level="INFO"></msg>
<status status="PASS" endtime="20210302 01:57:05.803" starttime="20210302 01:57:05.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:57:05.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:57:05.803" starttime="20210302 01:57:05.803"></status>
</kw>
<status status="PASS" endtime="20210302 01:57:05.803" starttime="20210302 01:57:03.963"></status>
</kw>
<msg timestamp="20210302 01:57:05.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:57:05.804" starttime="20210302 01:57:03.963"></status>
</kw>
<status status="PASS" endtime="20210302 01:57:05.804" starttime="20210302 01:57:03.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:57:05.807" level="INFO">Running command 'ozone admin pipeline list | grep "e3ce618e-e487-4f68-8c15-04d21109c5eb" 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:57:07.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 01:57:07.551" level="INFO">${output} = Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210302 01:57:07.551" starttime="20210302 01:57:05.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:57:07.552" level="INFO">Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:CLOSED, leaderId:, CreationTimestamp2021-03-02T01:56:53.162Z]</msg>
<status status="PASS" endtime="20210302 01:57:07.552" starttime="20210302 01:57:07.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 01:57:07.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 01:57:07.553" starttime="20210302 01:57:07.552"></status>
</kw>
<status status="PASS" endtime="20210302 01:57:07.553" starttime="20210302 01:57:05.805"></status>
</kw>
<msg timestamp="20210302 01:57:07.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 01:57:07.553" starttime="20210302 01:57:05.805"></status>
</kw>
<msg timestamp="20210302 01:57:07.554" level="INFO">${output} = Pipeline[ Id: e3ce618e-e487-4f68-8c15-04d21109c5eb, Nodes: 9a83883d-c36a-4d44-bd59-4537b42af24d{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210302 01:57:07.554" starttime="20210302 01:57:05.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>CLOSED</arg>
</arguments>
<status status="PASS" endtime="20210302 01:57:07.554" starttime="20210302 01:57:07.554"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:57:07.554" critical="yes" starttime="20210302 01:57:03.962"></status>
</test>
<test id="s1-t7" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin pipeline</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:57:07.558" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:57:08.690" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 01:57:08.691" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210302 01:57:08.691" starttime="20210302 01:57:07.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:57:08.692" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" endtime="20210302 01:57:08.692" starttime="20210302 01:57:08.691"></status>
</kw>
<msg timestamp="20210302 01:57:08.692" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210302 01:57:08.692" starttime="20210302 01:57:07.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Incomplete command</arg>
</arguments>
<status status="PASS" endtime="20210302 01:57:08.693" starttime="20210302 01:57:08.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>close</arg>
</arguments>
<status status="PASS" endtime="20210302 01:57:08.693" starttime="20210302 01:57:08.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>create</arg>
</arguments>
<status status="PASS" endtime="20210302 01:57:08.694" starttime="20210302 01:57:08.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>deactivate</arg>
</arguments>
<status status="PASS" endtime="20210302 01:57:08.694" starttime="20210302 01:57:08.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>list</arg>
</arguments>
<status status="PASS" endtime="20210302 01:57:08.695" starttime="20210302 01:57:08.694"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:57:08.695" critical="yes" starttime="20210302 01:57:07.555"></status>
</test>
<test id="s1-t8" name="List pipelines on unknown host">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin --verbose pipeline list --scm unknown-host</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 01:57:08.699" level="INFO">Running command 'ozone admin --verbose pipeline list --scm unknown-host 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 01:57:10.449" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 01:57:10.449" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210302 01:57:10.449" starttime="20210302 01:57:08.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 01:57:10.450" level="INFO">java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.hadoop.net.NetUtils.wrapWithMessage(NetUtils.java:836)
	at org.apache.hadoop.net.NetUtils.wrapException(NetUtils.java:773)
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1592)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy16.submitRequest(Unknown Source)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRpcRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:137)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:128)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.listPipelines(StorageContainerLocationProtocolClientSideTranslatorPB.java:445)
	at org.apache.hadoop.hdds.scm.cli.ContainerOperationClient.listPipelines(ContainerOperationClient.java:311)
	at org.apache.hadoop.hdds.scm.cli.pipeline.ListPipelinesSubcommand.execute(ListPipelinesSubcommand.java:53)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:39)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:29)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.hdds.cli.OzoneAdmin.main(OzoneAdmin.java:65)
Caused by: java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	... 23 more</msg>
<status status="PASS" endtime="20210302 01:57:10.450" starttime="20210302 01:57:10.449"></status>
</kw>
<msg timestamp="20210302 01:57:10.450" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210302 01:57:10.450" starttime="20210302 01:57:08.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Invalid host name</arg>
</arguments>
<status status="PASS" endtime="20210302 01:57:10.451" starttime="20210302 01:57:10.450"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 01:57:10.451" critical="yes" starttime="20210302 01:57:08.695"></status>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" endtime="20210302 01:57:10.453" starttime="20210302 01:56:51.268"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonescripts" pass="8">ozonescripts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
