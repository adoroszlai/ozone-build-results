<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210302 02:13:02.990" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="restart">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1" name="Generate">
<test id="s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:12:21.793" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:12:41.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:12:41.993" level="INFO">${output} = 2021-03-02 02:12:22,778 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:22,961 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:12:41.993" starttime="20210302 02:12:21.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:12:41.994" level="INFO">2021-03-02 02:12:22,778 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:22,961 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:12:22,961 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:12:23,089 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-03-02 02:12:23,104 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:24,110 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:24,630 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-03-02 02:12:24,839 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 02:12:24,839 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1D095EF8E52A-&gt;e5362418-bfd8-485e-9d16-6690df4f3599
2021-03-02 02:12:24,840 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 02:12:25,113 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:26,120 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:27,121 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:27,992 [java.util.concurrent.ThreadPoolExecutor$Worker@651ee58f[State = -1, empty queue]] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1D095EF8E52A-&gt;6db2fd71-5735-4003-aa36-c3bbd341aaa6
2021-03-02 02:12:27,993 [java.util.concurrent.ThreadPoolExecutor$Worker@651ee58f[State = -1, empty queue]] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 02:12:28,121 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:29,122 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:30,122 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:31,123 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:32,123 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:33,124 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:34,124 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:35,125 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:36,125 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:37,126 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:38,126 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:39,127 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:40,127 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:40,474 [java.util.concurrent.ThreadPoolExecutor$Worker@6fc61c66[State = -1, empty queue]] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1D095EF8E52A-&gt;4d809107-f324-4b3e-905d-04c3a9994c09
2021-03-02 02:12:40,474 [java.util.concurrent.ThreadPoolExecutor$Worker@6fc61c66[State = -1, empty queue]] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 02:12:41,128 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:12:41,665 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=17185.918261, max=17185.918261, mean=17185.918261, stddev=0.0, median=17185.918261, p75=17185.918261, p95=17185.918261, p98=17185.918261, p99=17185.918261, p999=17185.918261, mean_rate=0.0554877493439807, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:12:41,666 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 19
2021-03-02 02:12:41,666 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:12:41,666 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:12:41.994" starttime="20210302 02:12:41.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:12:41.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:12:41.995" starttime="20210302 02:12:41.995"></status>
</kw>
<status status="PASS" endtime="20210302 02:12:41.995" starttime="20210302 02:12:21.789"></status>
</kw>
<msg timestamp="20210302 02:12:41.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:12:41.996" starttime="20210302 02:12:21.789"></status>
</kw>
<msg timestamp="20210302 02:12:41.996" level="INFO">${result} = 2021-03-02 02:12:22,778 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:22,961 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:12:41.996" starttime="20210302 02:12:21.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:12:41.997" starttime="20210302 02:12:41.996"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:12:41.997" critical="yes" starttime="20210302 02:12:21.787"></status>
</test>
<test id="s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:12:42.002" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:12:44.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:12:44.989" level="INFO">${output} = 2021-03-02 02:12:43,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:43,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:12:44.989" starttime="20210302 02:12:42.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:12:44.990" level="INFO">2021-03-02 02:12:43,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:43,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:12:43,211 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:12:43,382 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost
2021-03-02 02:12:43,396 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:44,409 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:12:44,981 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=91.893188, max=91.893188, mean=91.893188, stddev=0.0, median=91.893188, p75=91.893188, p95=91.893188, p98=91.893188, p99=91.893188, p999=91.893188, mean_rate=0.9816105193286134, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:12:44,981 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-03-02 02:12:44,982 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:12:44,982 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:12:44.990" starttime="20210302 02:12:44.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:12:44.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:12:44.991" starttime="20210302 02:12:44.991"></status>
</kw>
<status status="PASS" endtime="20210302 02:12:44.991" starttime="20210302 02:12:42.000"></status>
</kw>
<msg timestamp="20210302 02:12:44.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:12:44.991" starttime="20210302 02:12:41.999"></status>
</kw>
<msg timestamp="20210302 02:12:44.992" level="INFO">${result} = 2021-03-02 02:12:43,064 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:43,211 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:12:44.992" starttime="20210302 02:12:41.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:12:44.992" starttime="20210302 02:12:44.992"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:12:44.993" critical="yes" starttime="20210302 02:12:41.998"></status>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:12:44.997" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:12:47.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:12:47.829" level="INFO">${output} = 2021-03-02 02:12:46,021 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:46,109 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:12:47.829" starttime="20210302 02:12:44.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:12:47.830" level="INFO">2021-03-02 02:12:46,021 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:46,109 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:12:46,109 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:12:46,268 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost
2021-03-02 02:12:46,287 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:47,293 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:12:47,816 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=23.884886, max=23.884886, mean=23.884886, stddev=0.0, median=23.884886, p75=23.884886, p95=23.884886, p98=23.884886, p99=23.884886, p999=23.884886, mean_rate=0.9769579590341577, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:12:47,817 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-03-02 02:12:47,822 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:12:47,822 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:12:47.830" starttime="20210302 02:12:47.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:12:47.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:12:47.831" starttime="20210302 02:12:47.830"></status>
</kw>
<status status="PASS" endtime="20210302 02:12:47.831" starttime="20210302 02:12:44.995"></status>
</kw>
<msg timestamp="20210302 02:12:47.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:12:47.831" starttime="20210302 02:12:44.995"></status>
</kw>
<msg timestamp="20210302 02:12:47.832" level="INFO">${result} = 2021-03-02 02:12:46,021 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:46,109 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:12:47.832" starttime="20210302 02:12:44.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:12:47.832" starttime="20210302 02:12:47.832"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:12:47.833" critical="yes" starttime="20210302 02:12:44.993"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210302 02:12:47.834" starttime="20210302 02:12:21.751"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s2" name="Generate">
<test id="s1-s2-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:11:03.771" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:11:10.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:11:10.757" level="INFO">${output} = 2021-03-02 02:11:04,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:05,009 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:11:10.757" starttime="20210302 02:11:03.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:11:10.758" level="INFO">2021-03-02 02:11:04,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:05,009 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:11:05,009 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:11:05,129 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-03-02 02:11:05,147 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:11:05,959 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-03-02 02:11:06,149 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:11:06,278 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-03-02 02:11:07,149 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:11:07,188 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-03-02 02:11:07,415 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 02:11:07,415 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-7940F9CD591D-&gt;e5362418-bfd8-485e-9d16-6690df4f3599
2021-03-02 02:11:07,416 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 02:11:08,150 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:11:09,151 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:11:10,151 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:11:10,430 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=3209.911136, max=3209.911136, mean=3209.911136, stddev=0.0, median=3209.911136, p75=3209.911136, p95=3209.911136, p98=3209.911136, p99=3209.911136, p999=3209.911136, mean_rate=0.24413577697367492, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:11:10,430 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-03-02 02:11:10,430 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:11:10,430 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:11:10.758" starttime="20210302 02:11:10.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:11:10.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:11:10.759" starttime="20210302 02:11:10.759"></status>
</kw>
<status status="PASS" endtime="20210302 02:11:10.759" starttime="20210302 02:11:03.767"></status>
</kw>
<msg timestamp="20210302 02:11:10.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:11:10.760" starttime="20210302 02:11:03.767"></status>
</kw>
<msg timestamp="20210302 02:11:10.760" level="INFO">${result} = 2021-03-02 02:11:04,894 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:05,009 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:11:10.760" starttime="20210302 02:11:03.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:11:10.760" starttime="20210302 02:11:10.760"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:11:10.761" critical="yes" starttime="20210302 02:11:03.765"></status>
</test>
<test id="s1-s2-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:11:10.766" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:11:13.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:11:13.694" level="INFO">${output} = 2021-03-02 02:11:11,873 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:12,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:11:13.694" starttime="20210302 02:11:10.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:11:13.695" level="INFO">2021-03-02 02:11:11,873 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:12,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:11:12,015 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:11:12,144 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2021-03-02 02:11:12,154 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:11:13,161 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:11:13,675 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=97.370884, max=97.370884, mean=97.370884, stddev=0.0, median=97.370884, p75=97.370884, p95=97.370884, p98=97.370884, p99=97.370884, p999=97.370884, mean_rate=0.9868483227322122, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:11:13,676 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-03-02 02:11:13,676 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:11:13,676 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:11:13.695" starttime="20210302 02:11:13.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:11:13.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:11:13.696" starttime="20210302 02:11:13.695"></status>
</kw>
<status status="PASS" endtime="20210302 02:11:13.696" starttime="20210302 02:11:10.763"></status>
</kw>
<msg timestamp="20210302 02:11:13.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:11:13.696" starttime="20210302 02:11:10.763"></status>
</kw>
<msg timestamp="20210302 02:11:13.697" level="INFO">${result} = 2021-03-02 02:11:11,873 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:12,015 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:11:13.697" starttime="20210302 02:11:10.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:11:13.697" starttime="20210302 02:11:13.697"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:11:13.697" critical="yes" starttime="20210302 02:11:10.761"></status>
</test>
<test id="s1-s2-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:11:13.702" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:11:16.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:11:16.583" level="INFO">${output} = 2021-03-02 02:11:14,775 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:14,867 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:11:16.583" starttime="20210302 02:11:13.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:11:16.584" level="INFO">2021-03-02 02:11:14,775 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:14,867 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:11:14,867 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:11:14,988 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2021-03-02 02:11:15,004 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:11:16,009 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:11:16,573 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=17.770824, max=17.770824, mean=17.770824, stddev=0.0, median=17.770824, p75=17.770824, p95=17.770824, p98=17.770824, p99=17.770824, p999=17.770824, mean_rate=0.9809058062648509, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:11:16,574 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-03-02 02:11:16,575 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:11:16,575 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:11:16.584" starttime="20210302 02:11:16.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:11:16.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:11:16.585" starttime="20210302 02:11:16.584"></status>
</kw>
<status status="PASS" endtime="20210302 02:11:16.585" starttime="20210302 02:11:13.700"></status>
</kw>
<msg timestamp="20210302 02:11:16.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:11:16.585" starttime="20210302 02:11:13.700"></status>
</kw>
<msg timestamp="20210302 02:11:16.586" level="INFO">${result} = 2021-03-02 02:11:14,775 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:14,867 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:11:16.586" starttime="20210302 02:11:13.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:11:16.586" starttime="20210302 02:11:16.586"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:11:16.586" critical="yes" starttime="20210302 02:11:13.698"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210302 02:11:16.587" starttime="20210302 02:11:03.728"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s3" name="Validate">
<test id="s1-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:12:12.559" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:12:17.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:12:17.334" level="INFO">${output} = 2021-03-02 02:12:13,626 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:13,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:12:17.334" starttime="20210302 02:12:12.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:12:17.335" level="INFO">2021-03-02 02:12:13,626 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:13,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:12:13,716 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:12:13,875 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-03-02 02:12:13,887 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:14,896 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:15,324 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-03-02 02:12:15,902 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:16,902 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:12:17,009 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=40.154977, max=40.154977, mean=40.154977, stddev=0.0, median=40.154977, p75=40.154977, p95=40.154977, p98=40.154977, p99=40.154977, p999=40.154977, mean_rate=0.9819973547701576, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:12:17,009 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-03-02 02:12:17,009 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:12:17,009 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:12:17.335" starttime="20210302 02:12:17.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:12:17.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:12:17.336" starttime="20210302 02:12:17.335"></status>
</kw>
<status status="PASS" endtime="20210302 02:12:17.336" starttime="20210302 02:12:12.555"></status>
</kw>
<msg timestamp="20210302 02:12:17.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:12:17.337" starttime="20210302 02:12:12.555"></status>
</kw>
<msg timestamp="20210302 02:12:17.337" level="INFO">${result} = 2021-03-02 02:12:13,626 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:13,716 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:12:17.337" starttime="20210302 02:12:12.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:12:17.337" starttime="20210302 02:12:17.337"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:12:17.337" critical="yes" starttime="20210302 02:12:12.553"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210302 02:12:17.338" starttime="20210302 02:12:12.512"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s4" name="Validate">
<test id="s1-s4-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:12:51.928" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:12:56.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:12:56.397" level="INFO">${output} = 2021-03-02 02:12:52,971 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:53,120 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:12:56.397" starttime="20210302 02:12:51.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:12:56.398" level="INFO">2021-03-02 02:12:52,971 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:53,120 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:12:53,120 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:12:53,236 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-03-02 02:12:53,250 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:54,254 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:12:54,431 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-03-02 02:12:55,255 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:12:56,071 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=49.289985, max=49.289985, mean=49.289985, stddev=0.0, median=49.289985, p75=49.289985, p95=49.289985, p98=49.289985, p99=49.289985, p999=49.289985, mean_rate=0.9873900154531178, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:12:56,071 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-03-02 02:12:56,071 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:12:56,071 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:12:56.398" starttime="20210302 02:12:56.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:12:56.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:12:56.398" starttime="20210302 02:12:56.398"></status>
</kw>
<status status="PASS" endtime="20210302 02:12:56.399" starttime="20210302 02:12:51.925"></status>
</kw>
<msg timestamp="20210302 02:12:56.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:12:56.399" starttime="20210302 02:12:51.924"></status>
</kw>
<msg timestamp="20210302 02:12:56.399" level="INFO">${result} = 2021-03-02 02:12:52,971 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:12:53,120 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:12:56.399" starttime="20210302 02:12:51.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:12:56.400" starttime="20210302 02:12:56.399"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:12:56.400" critical="yes" starttime="20210302 02:12:51.923"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210302 02:12:56.401" starttime="20210302 02:12:51.886"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s5" name="Validate">
<test id="s1-s5-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:11:20.633" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:11:25.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:11:25.283" level="INFO">${output} = 2021-03-02 02:11:21,628 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:21,763 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:11:25.283" starttime="20210302 02:11:20.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:11:25.284" level="INFO">2021-03-02 02:11:21,628 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:21,763 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:11:21,763 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:11:21,916 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-03-02 02:11:21,932 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:11:22,939 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:11:23,273 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-03-02 02:11:23,939 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:11:24,939 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:11:24,959 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=42.506866, max=42.506866, mean=42.506866, stddev=0.0, median=42.506866, p75=42.506866, p95=42.506866, p98=42.506866, p99=42.506866, p999=42.506866, mean_rate=0.9626242007464826, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:11:24,959 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-03-02 02:11:24,960 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:11:24,960 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:11:25.285" starttime="20210302 02:11:25.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:11:25.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:11:25.285" starttime="20210302 02:11:25.285"></status>
</kw>
<status status="PASS" endtime="20210302 02:11:25.285" starttime="20210302 02:11:20.630"></status>
</kw>
<msg timestamp="20210302 02:11:25.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:11:25.286" starttime="20210302 02:11:20.629"></status>
</kw>
<msg timestamp="20210302 02:11:25.286" level="INFO">${result} = 2021-03-02 02:11:21,628 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:11:21,763 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:11:25.286" starttime="20210302 02:11:20.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:11:25.286" starttime="20210302 02:11:25.286"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:11:25.287" critical="yes" starttime="20210302 02:11:20.628"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210302 02:11:25.287" starttime="20210302 02:11:20.591"></status>
</suite>
<status status="PASS" elapsedtime="52979" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="restart" pass="9">restart</stat>
<stat fail="0" id="s1-s1" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s2" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s3" name="Validate" pass="1">restart.Validate</stat>
<stat fail="0" id="s1-s4" name="Validate" pass="1">restart.Validate</stat>
<stat fail="0" id="s1-s5" name="Validate" pass="1">restart.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
