<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210302 02:10:07.798" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:06:15.712" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:06:27.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:06:27.307" level="INFO">${output} = 2021-03-02 02:06:17,393 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:17,542 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:06:27.307" starttime="20210302 02:06:15.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:06:27.309" level="INFO">2021-03-02 02:06:17,393 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:17,542 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:06:17,543 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:06:17,754 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-03-02 02:06:17,770 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:18,772 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:19,157 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-03-02 02:06:19,651 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-03-02 02:06:19,772 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:20,773 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:21,773 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:22,360 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-03-02 02:06:22,626 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-02 02:06:22,626 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-AE6F86F3B596-&gt;c166f570-f8fb-494e-a4fd-f6366b392231
2021-03-02 02:06:22,627 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-02 02:06:22,774 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:23,774 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:24,774 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:25,775 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:26,775 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:06:26,845 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5958.599509, max=5958.599509, mean=5958.599509, stddev=0.0, median=5958.599509, p75=5958.599509, p95=5958.599509, p98=5958.599509, p99=5958.599509, p999=5958.599509, mean_rate=0.14367629752466257, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:06:26,846 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2021-03-02 02:06:26,848 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:06:26,848 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:06:27.309" starttime="20210302 02:06:27.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:06:27.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:06:27.309" starttime="20210302 02:06:27.309"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:27.310" starttime="20210302 02:06:15.707"></status>
</kw>
<msg timestamp="20210302 02:06:27.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:06:27.310" starttime="20210302 02:06:15.707"></status>
</kw>
<msg timestamp="20210302 02:06:27.310" level="INFO">${result} = 2021-03-02 02:06:17,393 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:17,542 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:06:27.310" starttime="20210302 02:06:15.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:06:27.311" starttime="20210302 02:06:27.310"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:06:27.311" critical="yes" starttime="20210302 02:06:15.705"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:06:27.316" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:06:32.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:06:32.898" level="INFO">${output} = 2021-03-02 02:06:30,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:30,163 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:06:32.899" starttime="20210302 02:06:27.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:06:32.900" level="INFO">2021-03-02 02:06:30,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:30,163 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:06:30,163 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:06:30,321 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-03-02 02:06:30,332 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:31,337 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:32,338 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:06:32,872 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=270.567031, max=270.567031, mean=270.567031, stddev=0.0, median=270.567031, p75=270.567031, p95=270.567031, p98=270.567031, p99=270.567031, p999=270.567031, mean_rate=0.9555493757416951, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:06:32,877 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-03-02 02:06:32,877 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:06:32,877 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:06:32.900" starttime="20210302 02:06:32.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:06:32.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:06:32.901" starttime="20210302 02:06:32.900"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:32.901" starttime="20210302 02:06:27.313"></status>
</kw>
<msg timestamp="20210302 02:06:32.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:06:32.901" starttime="20210302 02:06:27.313"></status>
</kw>
<msg timestamp="20210302 02:06:32.901" level="INFO">${result} = 2021-03-02 02:06:30,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:30,163 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:06:32.901" starttime="20210302 02:06:27.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:06:32.902" starttime="20210302 02:06:32.902"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:06:32.902" critical="yes" starttime="20210302 02:06:27.312"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:06:32.908" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:06:37.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:06:37.285" level="INFO">${output} = 2021-03-02 02:06:34,518 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:34,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:06:37.285" starttime="20210302 02:06:32.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:06:37.286" level="INFO">2021-03-02 02:06:34,518 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:34,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:06:34,695 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:06:34,813 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-03-02 02:06:34,830 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:35,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:36,835 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:06:37,240 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=101.844688, max=101.844688, mean=101.844688, stddev=0.0, median=101.844688, p75=101.844688, p95=101.844688, p98=101.844688, p99=101.844688, p999=101.844688, mean_rate=0.9851522104841852, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:06:37,243 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-03-02 02:06:37,250 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:06:37,250 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:06:37.286" starttime="20210302 02:06:37.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:06:37.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:06:37.287" starttime="20210302 02:06:37.286"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:37.287" starttime="20210302 02:06:32.905"></status>
</kw>
<msg timestamp="20210302 02:06:37.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:06:37.287" starttime="20210302 02:06:32.905"></status>
</kw>
<msg timestamp="20210302 02:06:37.287" level="INFO">${result} = 2021-03-02 02:06:34,518 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:34,695 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:06:37.287" starttime="20210302 02:06:32.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:06:37.288" starttime="20210302 02:06:37.288"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:06:37.288" critical="yes" starttime="20210302 02:06:32.903"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210302 02:06:37.290" starttime="20210302 02:06:15.690"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:06:37.300" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:06:44.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:06:44.135" level="INFO">${output} = 2021-03-02 02:06:39,203 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:39,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:06:44.136" starttime="20210302 02:06:37.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:06:44.137" level="INFO">2021-03-02 02:06:39,203 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:39,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-02 02:06:39,316 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-02 02:06:39,490 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-03-02 02:06:39,515 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:40,519 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:41,520 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:41,824 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-03-02 02:06:42,520 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-02 02:06:43,521 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-02 02:06:43,784 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=94.933581, max=94.933581, mean=94.933581, stddev=0.0, median=94.933581, p75=94.933581, p95=94.933581, p98=94.933581, p99=94.933581, p999=94.933581, mean_rate=0.9789782310807685, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-02 02:06:43,785 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-03-02 02:06:43,786 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-02 02:06:43,786 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210302 02:06:44.137" starttime="20210302 02:06:44.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:06:44.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:06:44.138" starttime="20210302 02:06:44.137"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:44.138" starttime="20210302 02:06:37.298"></status>
</kw>
<msg timestamp="20210302 02:06:44.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:06:44.138" starttime="20210302 02:06:37.298"></status>
</kw>
<msg timestamp="20210302 02:06:44.139" level="INFO">${result} = 2021-03-02 02:06:39,203 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-02 02:06:39,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210302 02:06:44.139" starttime="20210302 02:06:37.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:06:44.139" starttime="20210302 02:06:44.139"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210302 02:06:44.139" critical="yes" starttime="20210302 02:06:37.296"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210302 02:06:44.141" starttime="20210302 02:06:37.293"></status>
</suite>
<status status="PASS" endtime="20210302 02:06:44.143" starttime="20210302 02:06:15.665"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:06:10.725" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:06:10.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:06:10.737" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:06:10.737" starttime="20210302 02:06:10.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:06:10.738" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:06:10.738" starttime="20210302 02:06:10.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:06:10.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:06:10.739" starttime="20210302 02:06:10.738"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:10.739" starttime="20210302 02:06:10.719"></status>
</kw>
<msg timestamp="20210302 02:06:10.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:06:10.739" starttime="20210302 02:06:10.719"></status>
</kw>
<msg timestamp="20210302 02:06:10.740" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:06:10.740" starttime="20210302 02:06:10.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:06:10.740" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:06:10.740" starttime="20210302 02:06:10.740"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:06:10.745" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:06:10.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:06:10.753" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:06:10.753" starttime="20210302 02:06:10.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:06:10.754" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:06:10.754" starttime="20210302 02:06:10.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:06:10.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:06:10.755" starttime="20210302 02:06:10.754"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:10.755" starttime="20210302 02:06:10.742"></status>
</kw>
<msg timestamp="20210302 02:06:10.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:06:10.755" starttime="20210302 02:06:10.742"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:10.755" starttime="20210302 02:06:10.741"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:10.755" starttime="20210302 02:06:10.741"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:10.755" starttime="20210302 02:06:10.717"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:06:10.756" critical="yes" starttime="20210302 02:06:10.716"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210302 02:06:10.757" starttime="20210302 02:06:10.669"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210302 02:06:49.172" level="INFO">${random} = 11000</msg>
<status status="PASS" endtime="20210302 02:06:49.172" starttime="20210302 02:06:49.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210302 02:06:49.174" level="INFO">${source} = 11000-source</msg>
<status status="PASS" endtime="20210302 02:06:49.174" starttime="20210302 02:06:49.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210302 02:06:49.175" level="INFO">${target} = 11000-target</msg>
<status status="PASS" endtime="20210302 02:06:49.175" starttime="20210302 02:06:49.174"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:06:49.180" level="INFO">Running command 'ozone sh volume create 11000-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:06:52.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:06:52.678" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:06:52.679" starttime="20210302 02:06:49.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:06:52.680" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:06:52.680" starttime="20210302 02:06:52.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:06:52.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:06:52.680" starttime="20210302 02:06:52.680"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:52.681" starttime="20210302 02:06:49.176"></status>
</kw>
<msg timestamp="20210302 02:06:52.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:06:52.681" starttime="20210302 02:06:49.176"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:52.681" starttime="20210302 02:06:49.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:06:52.684" level="INFO">Running command 'ozone sh volume create 11000-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:06:56.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:06:56.087" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:06:56.087" starttime="20210302 02:06:52.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:06:56.088" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:06:56.088" starttime="20210302 02:06:56.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:06:56.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:06:56.089" starttime="20210302 02:06:56.088"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:56.089" starttime="20210302 02:06:52.682"></status>
</kw>
<msg timestamp="20210302 02:06:56.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:06:56.089" starttime="20210302 02:06:52.682"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:56.089" starttime="20210302 02:06:52.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:06:56.094" level="INFO">Running command 'ozone sh bucket create 11000-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:06:59.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:06:59.797" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:06:59.797" starttime="20210302 02:06:56.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:06:59.798" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:06:59.798" starttime="20210302 02:06:59.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:06:59.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:06:59.799" starttime="20210302 02:06:59.798"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:59.799" starttime="20210302 02:06:56.091"></status>
</kw>
<msg timestamp="20210302 02:06:59.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:06:59.799" starttime="20210302 02:06:56.091"></status>
</kw>
<status status="PASS" endtime="20210302 02:06:59.799" starttime="20210302 02:06:56.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:06:59.803" level="INFO">Running command 'ozone sh key put 11000-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:05.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:05.872" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:05.872" starttime="20210302 02:06:59.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:05.873" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:05.873" starttime="20210302 02:07:05.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:05.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:05.874" starttime="20210302 02:07:05.873"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:05.874" starttime="20210302 02:06:59.800"></status>
</kw>
<msg timestamp="20210302 02:07:05.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:05.874" starttime="20210302 02:06:59.800"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:05.874" starttime="20210302 02:06:59.799"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:05.878" level="INFO">Running command 'ozone sh bucket create 11000-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:09.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:09.328" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:09.328" starttime="20210302 02:07:05.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:09.329" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:09.329" starttime="20210302 02:07:09.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:09.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:09.330" starttime="20210302 02:07:09.329"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:09.330" starttime="20210302 02:07:05.875"></status>
</kw>
<msg timestamp="20210302 02:07:09.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:09.330" starttime="20210302 02:07:05.875"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:09.330" starttime="20210302 02:07:05.874"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:09.334" level="INFO">Running command 'ozone sh bucket link 11000-source/readable-bucket 11000-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:12.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:12.683" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:12.683" starttime="20210302 02:07:09.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:12.684" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:12.684" starttime="20210302 02:07:12.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:12.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:12.685" starttime="20210302 02:07:12.685"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:12.685" starttime="20210302 02:07:09.331"></status>
</kw>
<msg timestamp="20210302 02:07:12.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:12.685" starttime="20210302 02:07:09.331"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:12.686" starttime="20210302 02:07:09.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:12.689" level="INFO">Running command 'ozone sh bucket link 11000-source/readable-bucket 11000-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:16.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:16.178" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:16.178" starttime="20210302 02:07:12.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:16.179" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:16.179" starttime="20210302 02:07:16.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:16.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:16.180" starttime="20210302 02:07:16.179"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:16.180" starttime="20210302 02:07:12.686"></status>
</kw>
<msg timestamp="20210302 02:07:16.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:16.180" starttime="20210302 02:07:12.686"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:16.181" starttime="20210302 02:07:12.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:16.184" level="INFO">Running command 'ozone sh bucket link 11000-source/unreadable-bucket 11000-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:19.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:19.713" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:19.713" starttime="20210302 02:07:16.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:19.714" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:19.714" starttime="20210302 02:07:19.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:19.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:19.715" starttime="20210302 02:07:19.714"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:19.715" starttime="20210302 02:07:16.182"></status>
</kw>
<msg timestamp="20210302 02:07:19.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:19.715" starttime="20210302 02:07:16.181"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:19.715" starttime="20210302 02:07:16.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:19.719" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 11000-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:22.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:22.888" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:07:22.888" starttime="20210302 02:07:19.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:22.889" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:07:22.889" starttime="20210302 02:07:22.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:22.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:22.890" starttime="20210302 02:07:22.889"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:22.890" starttime="20210302 02:07:19.716"></status>
</kw>
<msg timestamp="20210302 02:07:22.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:22.890" starttime="20210302 02:07:19.716"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:22.890" starttime="20210302 02:07:19.715"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:22.894" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 11000-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:26.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:26.213" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:07:26.213" starttime="20210302 02:07:22.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:26.214" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:07:26.214" starttime="20210302 02:07:26.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:26.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:26.214" starttime="20210302 02:07:26.214"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:26.215" starttime="20210302 02:07:22.891"></status>
</kw>
<msg timestamp="20210302 02:07:26.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:26.215" starttime="20210302 02:07:22.891"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:26.215" starttime="20210302 02:07:22.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:26.218" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 11000-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:29.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:29.661" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:07:29.661" starttime="20210302 02:07:26.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:29.662" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:07:29.662" starttime="20210302 02:07:29.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:29.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:29.662" starttime="20210302 02:07:29.662"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:29.663" starttime="20210302 02:07:26.216"></status>
</kw>
<msg timestamp="20210302 02:07:29.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:29.663" starttime="20210302 02:07:26.216"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:29.663" starttime="20210302 02:07:26.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:29.676" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 11000-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:33.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:33.234" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:07:33.234" starttime="20210302 02:07:29.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:33.235" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:07:33.235" starttime="20210302 02:07:33.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:33.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:33.235" starttime="20210302 02:07:33.235"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:33.236" starttime="20210302 02:07:29.668"></status>
</kw>
<msg timestamp="20210302 02:07:33.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:33.236" starttime="20210302 02:07:29.668"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:33.236" starttime="20210302 02:07:29.663"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:33.240" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 11000-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:36.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:36.645" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:07:36.645" starttime="20210302 02:07:33.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:36.646" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:07:36.646" starttime="20210302 02:07:36.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:36.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:36.647" starttime="20210302 02:07:36.646"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.647" starttime="20210302 02:07:33.237"></status>
</kw>
<msg timestamp="20210302 02:07:36.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:36.647" starttime="20210302 02:07:33.237"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.647" starttime="20210302 02:07:33.236"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.648" starttime="20210302 02:06:56.090"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.648" starttime="20210302 02:06:56.090"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.648" starttime="20210302 02:06:49.172"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:36.658" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:36.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:36.661" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:07:36.661" starttime="20210302 02:07:36.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:36.662" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:07:36.662" starttime="20210302 02:07:36.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:36.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:36.663" starttime="20210302 02:07:36.662"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.663" starttime="20210302 02:07:36.656"></status>
</kw>
<msg timestamp="20210302 02:07:36.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:36.663" starttime="20210302 02:07:36.655"></status>
</kw>
<msg timestamp="20210302 02:07:36.663" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:07:36.663" starttime="20210302 02:07:36.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:07:36.665" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:07:36.665" starttime="20210302 02:07:36.663"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:36.668" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:36.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:36.675" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:36.675" starttime="20210302 02:07:36.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:36.676" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:36.676" starttime="20210302 02:07:36.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:36.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:36.677" starttime="20210302 02:07:36.676"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.677" starttime="20210302 02:07:36.666"></status>
</kw>
<msg timestamp="20210302 02:07:36.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:36.681" starttime="20210302 02:07:36.666"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.682" starttime="20210302 02:07:36.665"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.682" starttime="20210302 02:07:36.665"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.682" starttime="20210302 02:07:36.654"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:36.682" starttime="20210302 02:07:36.653"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:36.686" level="INFO">Running command 'ozone sh bucket link 11000-source/no-such-bucket 11000-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:39.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:39.879" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:39.879" starttime="20210302 02:07:36.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:39.881" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:39.881" starttime="20210302 02:07:39.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:39.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:39.882" starttime="20210302 02:07:39.881"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:39.882" starttime="20210302 02:07:36.683"></status>
</kw>
<msg timestamp="20210302 02:07:39.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:39.882" starttime="20210302 02:07:36.683"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:39.882" starttime="20210302 02:07:36.682"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:39.885" level="INFO">Running command 'ozone sh key list 11000-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:43.383" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 02:07:43.383" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210302 02:07:43.383" starttime="20210302 02:07:39.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:43.384" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210302 02:07:43.384" starttime="20210302 02:07:43.384"></status>
</kw>
<msg timestamp="20210302 02:07:43.385" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210302 02:07:43.385" starttime="20210302 02:07:39.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210302 02:07:43.385" starttime="20210302 02:07:43.385"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:07:43.385" critical="yes" starttime="20210302 02:07:36.648"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:43.392" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:43.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:43.394" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:07:43.394" starttime="20210302 02:07:43.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:43.395" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:07:43.395" starttime="20210302 02:07:43.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:43.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:43.396" starttime="20210302 02:07:43.395"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:43.396" starttime="20210302 02:07:43.389"></status>
</kw>
<msg timestamp="20210302 02:07:43.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:43.397" starttime="20210302 02:07:43.389"></status>
</kw>
<msg timestamp="20210302 02:07:43.397" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:07:43.397" starttime="20210302 02:07:43.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:07:43.398" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:07:43.398" starttime="20210302 02:07:43.397"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:43.401" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:43.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:43.408" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:43.408" starttime="20210302 02:07:43.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:43.409" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:43.409" starttime="20210302 02:07:43.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:43.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:43.410" starttime="20210302 02:07:43.410"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:43.410" starttime="20210302 02:07:43.399"></status>
</kw>
<msg timestamp="20210302 02:07:43.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:43.411" starttime="20210302 02:07:43.399"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:43.411" starttime="20210302 02:07:43.398"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:43.411" starttime="20210302 02:07:43.398"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:43.411" starttime="20210302 02:07:43.388"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:43.411" starttime="20210302 02:07:43.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:43.415" level="INFO">Running command 'ozone sh bucket link 11000-source/bucket1 11000-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:46.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:46.752" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:46.752" starttime="20210302 02:07:43.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:46.753" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:46.753" starttime="20210302 02:07:46.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:46.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:46.754" starttime="20210302 02:07:46.754"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:46.755" starttime="20210302 02:07:43.412"></status>
</kw>
<msg timestamp="20210302 02:07:46.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:46.755" starttime="20210302 02:07:43.412"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:46.755" starttime="20210302 02:07:43.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:46.758" level="INFO">Running command 'ozone sh bucket create 11000-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:50.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:50.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:50.005" starttime="20210302 02:07:46.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:50.006" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:50.006" starttime="20210302 02:07:50.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:50.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:50.007" starttime="20210302 02:07:50.006"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:50.007" starttime="20210302 02:07:46.756"></status>
</kw>
<msg timestamp="20210302 02:07:50.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:50.007" starttime="20210302 02:07:46.756"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:50.008" starttime="20210302 02:07:46.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:50.011" level="INFO">Running command 'ozone sh key put 11000-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:07:56.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:07:56.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:07:56.106" starttime="20210302 02:07:50.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:07:56.107" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:07:56.107" starttime="20210302 02:07:56.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:07:56.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:07:56.108" starttime="20210302 02:07:56.107"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:56.108" starttime="20210302 02:07:50.009"></status>
</kw>
<msg timestamp="20210302 02:07:56.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:07:56.108" starttime="20210302 02:07:50.008"></status>
</kw>
<status status="PASS" endtime="20210302 02:07:56.109" starttime="20210302 02:07:50.008"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210302 02:07:56.110" level="INFO">${postfix} = 35393</msg>
<status status="PASS" endtime="20210302 02:07:56.110" starttime="20210302 02:07:56.110"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210302 02:07:56.111" level="INFO">${tmpfile} = /tmp/tempkey-35393</msg>
<status status="PASS" endtime="20210302 02:07:56.111" starttime="20210302 02:07:56.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:07:56.114" level="INFO">Running command 'ozone sh key get 11000-target/link1/key1 /tmp/tempkey-35393 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:01.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:01.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:01.488" starttime="20210302 02:07:56.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:01.489" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:01.489" starttime="20210302 02:08:01.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:01.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:01.491" starttime="20210302 02:08:01.490"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.491" starttime="20210302 02:07:56.112"></status>
</kw>
<msg timestamp="20210302 02:08:01.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:01.491" starttime="20210302 02:07:56.111"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.491" starttime="20210302 02:07:56.111"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210302 02:08:01.493" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-35393 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:01.497" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210302 02:08:01.497" starttime="20210302 02:08:01.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:01.501" level="INFO">Running command 'rm -f /tmp/tempkey-35393 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:01.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:01.503" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:01.503" starttime="20210302 02:08:01.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:01.504" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:01.504" starttime="20210302 02:08:01.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:01.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:01.505" starttime="20210302 02:08:01.505"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.505" starttime="20210302 02:08:01.498"></status>
</kw>
<msg timestamp="20210302 02:08:01.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:01.506" starttime="20210302 02:08:01.498"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.506" starttime="20210302 02:08:01.497"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:08:01.506" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210302 02:08:01.506" starttime="20210302 02:08:01.506"></status>
</kw>
<msg timestamp="20210302 02:08:01.507" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210302 02:08:01.507" starttime="20210302 02:07:56.109"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:01.507" starttime="20210302 02:08:01.507"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.507" starttime="20210302 02:07:56.109"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:08:01.507" critical="yes" starttime="20210302 02:07:43.387"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:01.513" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:01.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:01.515" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:08:01.515" starttime="20210302 02:08:01.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:01.516" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:08:01.516" starttime="20210302 02:08:01.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:01.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:01.517" starttime="20210302 02:08:01.516"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.517" starttime="20210302 02:08:01.510"></status>
</kw>
<msg timestamp="20210302 02:08:01.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:01.517" starttime="20210302 02:08:01.510"></status>
</kw>
<msg timestamp="20210302 02:08:01.518" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:08:01.518" starttime="20210302 02:08:01.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:08:01.518" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:08:01.518" starttime="20210302 02:08:01.518"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:01.522" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:01.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:01.529" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:01.529" starttime="20210302 02:08:01.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:01.530" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:01.531" starttime="20210302 02:08:01.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:01.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:01.531" starttime="20210302 02:08:01.531"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.531" starttime="20210302 02:08:01.520"></status>
</kw>
<msg timestamp="20210302 02:08:01.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:01.532" starttime="20210302 02:08:01.520"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.532" starttime="20210302 02:08:01.519"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.532" starttime="20210302 02:08:01.518"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.532" starttime="20210302 02:08:01.509"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:01.532" starttime="20210302 02:08:01.509"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:01.535" level="INFO">Running command 'ozone sh key put 11000-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:07.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:07.578" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:07.578" starttime="20210302 02:08:01.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:07.579" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:07.579" starttime="20210302 02:08:07.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:07.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:07.580" starttime="20210302 02:08:07.579"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:07.580" starttime="20210302 02:08:01.533"></status>
</kw>
<msg timestamp="20210302 02:08:07.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:07.580" starttime="20210302 02:08:01.533"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:07.580" starttime="20210302 02:08:01.532"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210302 02:08:07.588" level="INFO">${postfix} = 88490</msg>
<status status="PASS" endtime="20210302 02:08:07.588" starttime="20210302 02:08:07.588"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210302 02:08:07.589" level="INFO">${tmpfile} = /tmp/tempkey-88490</msg>
<status status="PASS" endtime="20210302 02:08:07.589" starttime="20210302 02:08:07.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:07.593" level="INFO">Running command 'ozone sh key get 11000-source/bucket1/key2 /tmp/tempkey-88490 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:13.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:13.108" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:13.108" starttime="20210302 02:08:07.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:13.109" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:13.110" starttime="20210302 02:08:13.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:13.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:13.110" starttime="20210302 02:08:13.110"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.110" starttime="20210302 02:08:07.590"></status>
</kw>
<msg timestamp="20210302 02:08:13.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:13.111" starttime="20210302 02:08:07.589"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.111" starttime="20210302 02:08:07.589"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210302 02:08:13.113" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-88490 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:13.116" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210302 02:08:13.116" starttime="20210302 02:08:13.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:13.122" level="INFO">Running command 'rm -f /tmp/tempkey-88490 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:13.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:13.125" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:13.125" starttime="20210302 02:08:13.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:13.126" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:13.126" starttime="20210302 02:08:13.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:13.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:13.127" starttime="20210302 02:08:13.126"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.127" starttime="20210302 02:08:13.117"></status>
</kw>
<msg timestamp="20210302 02:08:13.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:13.127" starttime="20210302 02:08:13.117"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.127" starttime="20210302 02:08:13.116"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:08:13.128" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210302 02:08:13.128" starttime="20210302 02:08:13.127"></status>
</kw>
<msg timestamp="20210302 02:08:13.128" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210302 02:08:13.128" starttime="20210302 02:08:07.587"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:13.129" starttime="20210302 02:08:13.129"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.129" starttime="20210302 02:08:07.581"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:08:13.129" critical="yes" starttime="20210302 02:08:01.508"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:13.134" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:13.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:13.136" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:08:13.136" starttime="20210302 02:08:13.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:13.137" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:08:13.137" starttime="20210302 02:08:13.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:13.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:13.138" starttime="20210302 02:08:13.137"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.138" starttime="20210302 02:08:13.132"></status>
</kw>
<msg timestamp="20210302 02:08:13.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:13.138" starttime="20210302 02:08:13.132"></status>
</kw>
<msg timestamp="20210302 02:08:13.138" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:08:13.139" starttime="20210302 02:08:13.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:08:13.139" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:08:13.139" starttime="20210302 02:08:13.139"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:13.144" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:13.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:13.149" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:13.149" starttime="20210302 02:08:13.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:13.150" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:13.150" starttime="20210302 02:08:13.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:13.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:13.151" starttime="20210302 02:08:13.150"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.151" starttime="20210302 02:08:13.141"></status>
</kw>
<msg timestamp="20210302 02:08:13.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:13.151" starttime="20210302 02:08:13.140"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.151" starttime="20210302 02:08:13.140"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.151" starttime="20210302 02:08:13.139"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.152" starttime="20210302 02:08:13.131"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:13.152" starttime="20210302 02:08:13.131"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:13.155" level="INFO">Running command 'ozone sh key list 11000-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:16.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:16.464" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210302 02:08:16.464" starttime="20210302 02:08:13.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:16.465" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210302 02:08:16.465" starttime="20210302 02:08:16.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:16.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:16.466" starttime="20210302 02:08:16.466"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:16.466" starttime="20210302 02:08:13.153"></status>
</kw>
<msg timestamp="20210302 02:08:16.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:16.467" starttime="20210302 02:08:13.152"></status>
</kw>
<msg timestamp="20210302 02:08:16.467" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210302 02:08:16.467" starttime="20210302 02:08:13.152"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:16.470" level="INFO">Running command 'ozone sh key list 11000-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:19.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:19.636" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210302 02:08:19.636" starttime="20210302 02:08:16.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:19.637" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210302 02:08:19.638" starttime="20210302 02:08:19.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:19.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:19.638" starttime="20210302 02:08:19.638"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:19.638" starttime="20210302 02:08:16.468"></status>
</kw>
<msg timestamp="20210302 02:08:19.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:19.639" starttime="20210302 02:08:16.468"></status>
</kw>
<msg timestamp="20210302 02:08:19.639" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210302 02:08:19.639" starttime="20210302 02:08:16.467"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:19.639" starttime="20210302 02:08:19.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:19.640" starttime="20210302 02:08:19.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:19.641" starttime="20210302 02:08:19.640"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:08:19.641" critical="yes" starttime="20210302 02:08:13.130"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:19.646" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:19.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:19.649" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:08:19.649" starttime="20210302 02:08:19.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:19.650" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:08:19.650" starttime="20210302 02:08:19.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:19.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:19.651" starttime="20210302 02:08:19.650"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:19.651" starttime="20210302 02:08:19.644"></status>
</kw>
<msg timestamp="20210302 02:08:19.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:19.651" starttime="20210302 02:08:19.643"></status>
</kw>
<msg timestamp="20210302 02:08:19.652" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:08:19.652" starttime="20210302 02:08:19.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:08:19.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:08:19.652" starttime="20210302 02:08:19.652"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:19.657" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:19.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:19.663" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:19.663" starttime="20210302 02:08:19.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:19.664" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:19.664" starttime="20210302 02:08:19.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:19.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:19.665" starttime="20210302 02:08:19.664"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:19.665" starttime="20210302 02:08:19.654"></status>
</kw>
<msg timestamp="20210302 02:08:19.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:19.665" starttime="20210302 02:08:19.653"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:19.665" starttime="20210302 02:08:19.653"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:19.666" starttime="20210302 02:08:19.653"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:19.666" starttime="20210302 02:08:19.643"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:19.666" starttime="20210302 02:08:19.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:19.669" level="INFO">Running command 'ozone sh key delete 11000-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:23.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:23.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:23.019" starttime="20210302 02:08:19.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:23.020" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:23.020" starttime="20210302 02:08:23.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:23.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:23.021" starttime="20210302 02:08:23.020"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:23.021" starttime="20210302 02:08:19.667"></status>
</kw>
<msg timestamp="20210302 02:08:23.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:23.021" starttime="20210302 02:08:19.666"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:23.021" starttime="20210302 02:08:19.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:23.027" level="INFO">Running command 'ozone sh key list 11000-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:26.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:26.623" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210302 02:08:26.623" starttime="20210302 02:08:23.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:26.624" level="INFO">key1</msg>
<status status="PASS" endtime="20210302 02:08:26.624" starttime="20210302 02:08:26.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:26.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:26.625" starttime="20210302 02:08:26.624"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:26.625" starttime="20210302 02:08:23.022"></status>
</kw>
<msg timestamp="20210302 02:08:26.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:26.625" starttime="20210302 02:08:23.022"></status>
</kw>
<msg timestamp="20210302 02:08:26.626" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210302 02:08:26.626" starttime="20210302 02:08:23.022"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:26.626" starttime="20210302 02:08:26.626"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:08:26.626" critical="yes" starttime="20210302 02:08:19.641"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:26.632" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:26.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:26.635" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:08:26.635" starttime="20210302 02:08:26.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:26.636" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:08:26.636" starttime="20210302 02:08:26.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:26.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:26.637" starttime="20210302 02:08:26.636"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:26.637" starttime="20210302 02:08:26.629"></status>
</kw>
<msg timestamp="20210302 02:08:26.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:26.637" starttime="20210302 02:08:26.629"></status>
</kw>
<msg timestamp="20210302 02:08:26.638" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:08:26.638" starttime="20210302 02:08:26.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:08:26.638" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:08:26.638" starttime="20210302 02:08:26.638"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:26.642" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:26.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:26.649" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:26.649" starttime="20210302 02:08:26.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:26.650" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:26.650" starttime="20210302 02:08:26.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:26.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:26.650" starttime="20210302 02:08:26.650"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:26.651" starttime="20210302 02:08:26.640"></status>
</kw>
<msg timestamp="20210302 02:08:26.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:26.651" starttime="20210302 02:08:26.639"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:26.651" starttime="20210302 02:08:26.639"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:26.651" starttime="20210302 02:08:26.638"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:26.651" starttime="20210302 02:08:26.628"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:26.651" starttime="20210302 02:08:26.628"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:26.655" level="INFO">Running command 'ozone sh bucket list 11000-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:30.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:30.367" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210302 02:08:30.367" starttime="20210302 02:08:26.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:30.368" level="INFO">{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:07:39.710Z",
  "modificationTime" : "2021-03-02T02:07:39.710Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:07:19.595Z",
  "modificationTime" : "2021-03-02T02:07:36.505Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:07:46.658Z",
  "modificationTime" : "2021-03-02T02:07:46.658Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:07:12.570Z",
  "modificationTime" : "2021-03-02T02:07:33.134Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:07:16.003Z",
  "modificationTime" : "2021-03-02T02:07:16.003Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210302 02:08:30.368" starttime="20210302 02:08:30.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:30.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:30.369" starttime="20210302 02:08:30.368"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:30.369" starttime="20210302 02:08:26.653"></status>
</kw>
<msg timestamp="20210302 02:08:30.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:30.370" starttime="20210302 02:08:26.652"></status>
</kw>
<msg timestamp="20210302 02:08:30.370" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210302 02:08:30.370" starttime="20210302 02:08:26.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:30.376" starttime="20210302 02:08:30.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:30.377" starttime="20210302 02:08:30.376"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:08:30.377" critical="yes" starttime="20210302 02:08:26.627"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:30.386" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:30.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:30.389" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:08:30.389" starttime="20210302 02:08:30.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:30.390" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:08:30.391" starttime="20210302 02:08:30.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:30.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:30.391" starttime="20210302 02:08:30.391"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:30.391" starttime="20210302 02:08:30.384"></status>
</kw>
<msg timestamp="20210302 02:08:30.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:30.392" starttime="20210302 02:08:30.384"></status>
</kw>
<msg timestamp="20210302 02:08:30.392" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:08:30.392" starttime="20210302 02:08:30.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:08:30.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:08:30.393" starttime="20210302 02:08:30.392"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:30.396" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:30.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:30.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:30.403" starttime="20210302 02:08:30.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:30.404" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:30.404" starttime="20210302 02:08:30.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:30.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:30.405" starttime="20210302 02:08:30.405"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:30.405" starttime="20210302 02:08:30.394"></status>
</kw>
<msg timestamp="20210302 02:08:30.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:30.406" starttime="20210302 02:08:30.394"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:30.406" starttime="20210302 02:08:30.393"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:30.406" starttime="20210302 02:08:30.393"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:30.406" starttime="20210302 02:08:30.383"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:30.406" starttime="20210302 02:08:30.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:30.410" level="INFO">Running command 'ozone sh bucket info 11000-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:33.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:33.890" level="INFO">${output} = 11000-source bucket1</msg>
<status status="PASS" endtime="20210302 02:08:33.890" starttime="20210302 02:08:30.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:33.891" level="INFO">11000-source bucket1</msg>
<status status="PASS" endtime="20210302 02:08:33.891" starttime="20210302 02:08:33.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:33.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:33.892" starttime="20210302 02:08:33.891"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:33.892" starttime="20210302 02:08:30.407"></status>
</kw>
<msg timestamp="20210302 02:08:33.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:33.892" starttime="20210302 02:08:30.407"></status>
</kw>
<msg timestamp="20210302 02:08:33.892" level="INFO">${result} = 11000-source bucket1</msg>
<status status="PASS" endtime="20210302 02:08:33.892" starttime="20210302 02:08:30.406"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:33.893" starttime="20210302 02:08:33.892"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:08:33.893" critical="yes" starttime="20210302 02:08:30.380"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:33.900" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:33.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:33.902" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:08:33.902" starttime="20210302 02:08:33.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:33.903" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:08:33.903" starttime="20210302 02:08:33.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:33.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:33.904" starttime="20210302 02:08:33.903"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:33.905" starttime="20210302 02:08:33.897"></status>
</kw>
<msg timestamp="20210302 02:08:33.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:33.905" starttime="20210302 02:08:33.897"></status>
</kw>
<msg timestamp="20210302 02:08:33.905" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:08:33.905" starttime="20210302 02:08:33.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:08:33.906" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:08:33.906" starttime="20210302 02:08:33.905"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:33.910" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:33.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:33.917" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:33.917" starttime="20210302 02:08:33.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:33.918" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:33.918" starttime="20210302 02:08:33.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:33.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:33.918" starttime="20210302 02:08:33.918"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:33.919" starttime="20210302 02:08:33.907"></status>
</kw>
<msg timestamp="20210302 02:08:33.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:33.919" starttime="20210302 02:08:33.907"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:33.919" starttime="20210302 02:08:33.906"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:33.919" starttime="20210302 02:08:33.906"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:33.919" starttime="20210302 02:08:33.896"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:33.919" starttime="20210302 02:08:33.895"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:33.923" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 11000-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:37.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:37.436" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:08:37.436" starttime="20210302 02:08:33.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:37.437" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:08:37.438" starttime="20210302 02:08:37.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:37.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:37.438" starttime="20210302 02:08:37.438"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:37.438" starttime="20210302 02:08:33.920"></status>
</kw>
<msg timestamp="20210302 02:08:37.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:37.439" starttime="20210302 02:08:33.920"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:37.439" starttime="20210302 02:08:33.919"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:37.443" level="INFO">Running command 'ozone sh bucket getacl 11000-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:40.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:40.766" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210302 02:08:40.766" starttime="20210302 02:08:37.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:40.767" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210302 02:08:40.767" starttime="20210302 02:08:40.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:40.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:40.768" starttime="20210302 02:08:40.767"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:40.768" starttime="20210302 02:08:37.441"></status>
</kw>
<msg timestamp="20210302 02:08:40.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:40.768" starttime="20210302 02:08:37.440"></status>
</kw>
<msg timestamp="20210302 02:08:40.768" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210302 02:08:40.768" starttime="20210302 02:08:37.440"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:40.769" starttime="20210302 02:08:40.769"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:40.769" starttime="20210302 02:08:37.439"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:40.774" level="INFO">Running command 'ozone sh bucket getacl 11000-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:44.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:44.429" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:44.429" starttime="20210302 02:08:40.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:44.430" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:44.431" starttime="20210302 02:08:44.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:44.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:44.431" starttime="20210302 02:08:44.431"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:44.431" starttime="20210302 02:08:40.771"></status>
</kw>
<msg timestamp="20210302 02:08:44.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:44.432" starttime="20210302 02:08:40.771"></status>
</kw>
<msg timestamp="20210302 02:08:44.432" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210302 02:08:44.432" starttime="20210302 02:08:40.770"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:44.433" starttime="20210302 02:08:44.432"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:44.433" starttime="20210302 02:08:40.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:44.436" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 11000-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:47.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:47.520" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:08:47.520" starttime="20210302 02:08:44.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:47.521" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210302 02:08:47.521" starttime="20210302 02:08:47.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:47.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:47.522" starttime="20210302 02:08:47.521"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:47.522" starttime="20210302 02:08:44.434"></status>
</kw>
<msg timestamp="20210302 02:08:47.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:47.522" starttime="20210302 02:08:44.433"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:47.522" starttime="20210302 02:08:44.433"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:47.527" level="INFO">Running command 'ozone sh bucket getacl 11000-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:50.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:50.994" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:50.994" starttime="20210302 02:08:47.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:50.996" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:50.996" starttime="20210302 02:08:50.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:50.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:50.996" starttime="20210302 02:08:50.996"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:50.997" starttime="20210302 02:08:47.525"></status>
</kw>
<msg timestamp="20210302 02:08:50.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:50.997" starttime="20210302 02:08:47.524"></status>
</kw>
<msg timestamp="20210302 02:08:50.997" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210302 02:08:50.997" starttime="20210302 02:08:47.523"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:50.998" starttime="20210302 02:08:50.997"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:50.998" starttime="20210302 02:08:47.523"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:51.002" level="INFO">Running command 'ozone sh bucket getacl 11000-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:54.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:54.462" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210302 02:08:54.462" starttime="20210302 02:08:51.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:54.463" level="INFO">READ</msg>
<status status="PASS" endtime="20210302 02:08:54.463" starttime="20210302 02:08:54.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:54.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:54.464" starttime="20210302 02:08:54.463"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:54.464" starttime="20210302 02:08:50.999"></status>
</kw>
<msg timestamp="20210302 02:08:54.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:54.464" starttime="20210302 02:08:50.999"></status>
</kw>
<msg timestamp="20210302 02:08:54.464" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210302 02:08:54.464" starttime="20210302 02:08:50.999"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:08:54.465" starttime="20210302 02:08:54.465"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:54.465" starttime="20210302 02:08:50.998"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:08:54.465" critical="yes" starttime="20210302 02:08:33.894"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:54.471" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:54.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:54.474" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:08:54.474" starttime="20210302 02:08:54.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:54.475" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:08:54.475" starttime="20210302 02:08:54.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:54.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:54.475" starttime="20210302 02:08:54.475"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:54.476" starttime="20210302 02:08:54.469"></status>
</kw>
<msg timestamp="20210302 02:08:54.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:54.476" starttime="20210302 02:08:54.469"></status>
</kw>
<msg timestamp="20210302 02:08:54.476" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:08:54.476" starttime="20210302 02:08:54.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:08:54.477" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:08:54.477" starttime="20210302 02:08:54.476"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:54.481" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:54.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:54.487" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:54.487" starttime="20210302 02:08:54.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:54.488" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:54.488" starttime="20210302 02:08:54.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:54.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:54.489" starttime="20210302 02:08:54.488"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:54.489" starttime="20210302 02:08:54.478"></status>
</kw>
<msg timestamp="20210302 02:08:54.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:54.489" starttime="20210302 02:08:54.478"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:54.490" starttime="20210302 02:08:54.477"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:54.490" starttime="20210302 02:08:54.477"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:54.490" starttime="20210302 02:08:54.468"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:54.490" starttime="20210302 02:08:54.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:54.493" level="INFO">Running command 'ozone sh bucket link 11000-source/bucket2 11000-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:08:57.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:08:57.793" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:08:57.794" starttime="20210302 02:08:54.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:08:57.795" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:08:57.795" starttime="20210302 02:08:57.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:08:57.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:08:57.796" starttime="20210302 02:08:57.795"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:57.796" starttime="20210302 02:08:54.491"></status>
</kw>
<msg timestamp="20210302 02:08:57.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:08:57.796" starttime="20210302 02:08:54.491"></status>
</kw>
<status status="PASS" endtime="20210302 02:08:57.797" starttime="20210302 02:08:54.490"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:08:57.799" level="INFO">Running command 'ozone sh bucket create 11000-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:00.888" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 02:09:00.889" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210302 02:09:00.889" starttime="20210302 02:08:57.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:00.890" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210302 02:09:00.890" starttime="20210302 02:09:00.889"></status>
</kw>
<msg timestamp="20210302 02:09:00.890" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210302 02:09:00.890" starttime="20210302 02:08:57.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210302 02:09:00.891" starttime="20210302 02:09:00.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:00.894" level="INFO">Running command 'ozone sh bucket create 11000-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:04.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:04.166" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:04.166" starttime="20210302 02:09:00.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:04.167" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:04.167" starttime="20210302 02:09:04.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:04.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:04.168" starttime="20210302 02:09:04.168"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:04.169" starttime="20210302 02:09:00.892"></status>
</kw>
<msg timestamp="20210302 02:09:04.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:04.169" starttime="20210302 02:09:00.891"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:04.169" starttime="20210302 02:09:00.891"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:04.172" level="INFO">Running command 'ozone sh bucket link 11000-source/bucket1 11000-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:07.495" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 02:09:07.496" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210302 02:09:07.496" starttime="20210302 02:09:04.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.497" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210302 02:09:07.497" starttime="20210302 02:09:07.496"></status>
</kw>
<msg timestamp="20210302 02:09:07.497" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210302 02:09:07.497" starttime="20210302 02:09:04.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210302 02:09:07.498" starttime="20210302 02:09:07.497"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:09:07.498" critical="yes" starttime="20210302 02:08:54.466"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:07.504" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:07.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:07.507" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:09:07.507" starttime="20210302 02:09:07.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.508" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:09:07.508" starttime="20210302 02:09:07.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:07.508" starttime="20210302 02:09:07.508"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.509" starttime="20210302 02:09:07.501"></status>
</kw>
<msg timestamp="20210302 02:09:07.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:07.509" starttime="20210302 02:09:07.501"></status>
</kw>
<msg timestamp="20210302 02:09:07.509" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:09:07.509" starttime="20210302 02:09:07.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:09:07.510" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:09:07.510" starttime="20210302 02:09:07.509"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:07.514" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:07.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:07.540" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:07.540" starttime="20210302 02:09:07.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.541" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:07.541" starttime="20210302 02:09:07.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:07.542" starttime="20210302 02:09:07.541"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.542" starttime="20210302 02:09:07.512"></status>
</kw>
<msg timestamp="20210302 02:09:07.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:07.542" starttime="20210302 02:09:07.511"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.543" starttime="20210302 02:09:07.510"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.543" starttime="20210302 02:09:07.510"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.543" starttime="20210302 02:09:07.500"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.543" starttime="20210302 02:09:07.500"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:07.547" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:07.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:07.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:07.551" starttime="20210302 02:09:07.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.552" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:07.552" starttime="20210302 02:09:07.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:07.553" starttime="20210302 02:09:07.552"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.553" starttime="20210302 02:09:07.545"></status>
</kw>
<msg timestamp="20210302 02:09:07.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:07.553" starttime="20210302 02:09:07.545"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.553" starttime="20210302 02:09:07.544"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:07.557" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:07.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:07.559" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:09:07.559" starttime="20210302 02:09:07.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.561" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:09:07.561" starttime="20210302 02:09:07.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:07.561" starttime="20210302 02:09:07.561"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.562" starttime="20210302 02:09:07.555"></status>
</kw>
<msg timestamp="20210302 02:09:07.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:07.562" starttime="20210302 02:09:07.555"></status>
</kw>
<msg timestamp="20210302 02:09:07.562" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:09:07.562" starttime="20210302 02:09:07.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:09:07.562" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:09:07.563" starttime="20210302 02:09:07.562"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:07.566" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:07.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:07.572" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:07.572" starttime="20210302 02:09:07.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.573" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:07.573" starttime="20210302 02:09:07.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:07.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:07.574" starttime="20210302 02:09:07.573"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.574" starttime="20210302 02:09:07.564"></status>
</kw>
<msg timestamp="20210302 02:09:07.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:07.574" starttime="20210302 02:09:07.564"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.574" starttime="20210302 02:09:07.563"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.574" starttime="20210302 02:09:07.563"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.575" starttime="20210302 02:09:07.554"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:07.575" starttime="20210302 02:09:07.554"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:07.579" level="INFO">Running command 'ozone sh key list 11000-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:11.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:11.727" level="INFO">${output} = {
  "volumeName" : "11000-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-02T02:07:03.114Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210302 02:09:11.727" starttime="20210302 02:09:07.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.728" level="INFO">{
  "volumeName" : "11000-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-02T02:07:03.114Z",
  "modificationTime" : "2021-03-02T02:07:05.433Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210302 02:09:11.729" starttime="20210302 02:09:11.728"></status>
</kw>
<msg timestamp="20210302 02:09:11.729" level="INFO">${result} = {
  "volumeName" : "11000-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-02T02:07:03.114Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210302 02:09:11.729" starttime="20210302 02:09:07.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210302 02:09:11.729" starttime="20210302 02:09:11.729"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.730" starttime="20210302 02:09:07.544"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.730" starttime="20210302 02:09:07.543"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:09:11.730" critical="yes" starttime="20210302 02:09:07.499"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:11.735" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:11.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:11.738" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:09:11.738" starttime="20210302 02:09:11.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.739" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:09:11.739" starttime="20210302 02:09:11.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:11.740" starttime="20210302 02:09:11.739"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.740" starttime="20210302 02:09:11.733"></status>
</kw>
<msg timestamp="20210302 02:09:11.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:11.740" starttime="20210302 02:09:11.733"></status>
</kw>
<msg timestamp="20210302 02:09:11.740" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:09:11.740" starttime="20210302 02:09:11.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:09:11.741" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:09:11.741" starttime="20210302 02:09:11.741"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:11.745" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:11.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:11.752" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:11.752" starttime="20210302 02:09:11.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.753" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:11.753" starttime="20210302 02:09:11.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:11.754" starttime="20210302 02:09:11.753"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.754" starttime="20210302 02:09:11.743"></status>
</kw>
<msg timestamp="20210302 02:09:11.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:11.754" starttime="20210302 02:09:11.742"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.754" starttime="20210302 02:09:11.742"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.754" starttime="20210302 02:09:11.741"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.755" starttime="20210302 02:09:11.732"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.755" starttime="20210302 02:09:11.731"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:11.759" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:11.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:11.762" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:11.762" starttime="20210302 02:09:11.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.763" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:11.763" starttime="20210302 02:09:11.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:11.763" starttime="20210302 02:09:11.763"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.764" starttime="20210302 02:09:11.756"></status>
</kw>
<msg timestamp="20210302 02:09:11.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:11.764" starttime="20210302 02:09:11.756"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.764" starttime="20210302 02:09:11.756"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:11.768" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:11.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:11.770" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:09:11.770" starttime="20210302 02:09:11.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.771" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:09:11.771" starttime="20210302 02:09:11.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:11.772" starttime="20210302 02:09:11.771"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.772" starttime="20210302 02:09:11.766"></status>
</kw>
<msg timestamp="20210302 02:09:11.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:11.772" starttime="20210302 02:09:11.765"></status>
</kw>
<msg timestamp="20210302 02:09:11.772" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:09:11.773" starttime="20210302 02:09:11.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:09:11.773" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:09:11.773" starttime="20210302 02:09:11.773"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:11.777" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:11.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:11.784" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:11.784" starttime="20210302 02:09:11.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.785" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:11.785" starttime="20210302 02:09:11.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:11.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:11.785" starttime="20210302 02:09:11.785"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.786" starttime="20210302 02:09:11.775"></status>
</kw>
<msg timestamp="20210302 02:09:11.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:11.786" starttime="20210302 02:09:11.775"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.786" starttime="20210302 02:09:11.774"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.786" starttime="20210302 02:09:11.773"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.786" starttime="20210302 02:09:11.765"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:11.786" starttime="20210302 02:09:11.764"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:11.789" level="INFO">Running command 'ozone sh key list 11000-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:14.981" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 02:09:14.981" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 11000-target unreadable-link null</msg>
<status status="PASS" endtime="20210302 02:09:14.981" starttime="20210302 02:09:11.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:14.982" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 11000-target unreadable-link null</msg>
<status status="PASS" endtime="20210302 02:09:14.982" starttime="20210302 02:09:14.981"></status>
</kw>
<msg timestamp="20210302 02:09:14.982" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 11000-target unreadable-link null</msg>
<status status="PASS" endtime="20210302 02:09:14.982" starttime="20210302 02:09:11.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210302 02:09:14.983" starttime="20210302 02:09:14.982"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:14.983" starttime="20210302 02:09:11.755"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:14.983" starttime="20210302 02:09:11.755"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:09:14.983" critical="yes" starttime="20210302 02:09:11.731"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:14.989" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:14.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:14.991" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:09:14.992" starttime="20210302 02:09:14.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:14.992" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:09:14.993" starttime="20210302 02:09:14.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:14.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:14.993" starttime="20210302 02:09:14.993"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:14.993" starttime="20210302 02:09:14.986"></status>
</kw>
<msg timestamp="20210302 02:09:14.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:14.994" starttime="20210302 02:09:14.986"></status>
</kw>
<msg timestamp="20210302 02:09:14.994" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:09:14.994" starttime="20210302 02:09:14.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:09:14.995" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:09:14.995" starttime="20210302 02:09:14.994"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:14.999" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:15.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:15.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:15.005" starttime="20210302 02:09:14.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:15.006" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:15.006" starttime="20210302 02:09:15.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:15.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:15.007" starttime="20210302 02:09:15.006"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.007" starttime="20210302 02:09:14.996"></status>
</kw>
<msg timestamp="20210302 02:09:15.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:15.007" starttime="20210302 02:09:14.996"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.008" starttime="20210302 02:09:14.995"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.008" starttime="20210302 02:09:14.995"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.008" starttime="20210302 02:09:14.985"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.008" starttime="20210302 02:09:14.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:15.012" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:15.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:15.015" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:15.016" starttime="20210302 02:09:15.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:15.016" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:15.017" starttime="20210302 02:09:15.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:15.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:15.017" starttime="20210302 02:09:15.017"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.018" starttime="20210302 02:09:15.010"></status>
</kw>
<msg timestamp="20210302 02:09:15.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:15.018" starttime="20210302 02:09:15.009"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.018" starttime="20210302 02:09:15.009"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:15.022" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:15.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:15.024" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:09:15.024" starttime="20210302 02:09:15.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:15.025" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:09:15.025" starttime="20210302 02:09:15.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:15.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:15.026" starttime="20210302 02:09:15.026"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.026" starttime="20210302 02:09:15.020"></status>
</kw>
<msg timestamp="20210302 02:09:15.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:15.026" starttime="20210302 02:09:15.019"></status>
</kw>
<msg timestamp="20210302 02:09:15.027" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:09:15.027" starttime="20210302 02:09:15.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:09:15.027" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:09:15.027" starttime="20210302 02:09:15.027"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:15.032" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:15.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:15.039" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:15.039" starttime="20210302 02:09:15.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:15.040" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:15.040" starttime="20210302 02:09:15.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:15.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:15.041" starttime="20210302 02:09:15.040"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.041" starttime="20210302 02:09:15.029"></status>
</kw>
<msg timestamp="20210302 02:09:15.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:15.041" starttime="20210302 02:09:15.028"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.041" starttime="20210302 02:09:15.028"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.041" starttime="20210302 02:09:15.027"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.041" starttime="20210302 02:09:15.018"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:15.041" starttime="20210302 02:09:15.018"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:15.045" level="INFO">Running command 'ozone sh bucket info 11000-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:18.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:18.426" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210302 02:09:18.426" starttime="20210302 02:09:15.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:18.427" level="INFO">{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:07:19.595Z",
  "modificationTime" : "2021-03-02T02:07:36.505Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210302 02:09:18.427" starttime="20210302 02:09:18.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:18.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:18.428" starttime="20210302 02:09:18.427"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:18.428" starttime="20210302 02:09:15.042"></status>
</kw>
<msg timestamp="20210302 02:09:18.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:18.428" starttime="20210302 02:09:15.042"></status>
</kw>
<msg timestamp="20210302 02:09:18.428" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210302 02:09:18.428" starttime="20210302 02:09:15.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210302 02:09:18.429" starttime="20210302 02:09:18.428"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210302 02:09:18.429" starttime="20210302 02:09:18.429"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:18.432" level="INFO">Running command 'ozone sh key list 11000-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:21.719" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 02:09:21.719" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 11000-source unreadable-bucket </msg>
<status status="PASS" endtime="20210302 02:09:21.719" starttime="20210302 02:09:18.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:21.720" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 11000-source unreadable-bucket </msg>
<status status="PASS" endtime="20210302 02:09:21.721" starttime="20210302 02:09:21.720"></status>
</kw>
<msg timestamp="20210302 02:09:21.721" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 11000-source unreadable-bucket </msg>
<status status="PASS" endtime="20210302 02:09:21.721" starttime="20210302 02:09:18.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210302 02:09:21.721" starttime="20210302 02:09:21.721"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:21.722" starttime="20210302 02:09:15.009"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:21.722" starttime="20210302 02:09:15.008"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:09:21.722" critical="yes" starttime="20210302 02:09:14.984"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:21.727" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:21.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:21.730" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:09:21.730" starttime="20210302 02:09:21.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:21.731" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:09:21.731" starttime="20210302 02:09:21.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:21.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:21.732" starttime="20210302 02:09:21.731"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:21.732" starttime="20210302 02:09:21.725"></status>
</kw>
<msg timestamp="20210302 02:09:21.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:21.732" starttime="20210302 02:09:21.724"></status>
</kw>
<msg timestamp="20210302 02:09:21.732" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:09:21.732" starttime="20210302 02:09:21.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:09:21.733" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:09:21.733" starttime="20210302 02:09:21.733"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:21.737" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:21.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:21.761" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:21.761" starttime="20210302 02:09:21.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:21.762" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:21.762" starttime="20210302 02:09:21.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:21.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:21.763" starttime="20210302 02:09:21.762"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:21.763" starttime="20210302 02:09:21.735"></status>
</kw>
<msg timestamp="20210302 02:09:21.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:21.763" starttime="20210302 02:09:21.734"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:21.763" starttime="20210302 02:09:21.734"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:21.763" starttime="20210302 02:09:21.733"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:21.764" starttime="20210302 02:09:21.724"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:21.764" starttime="20210302 02:09:21.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:21.767" level="INFO">Running command 'ozone sh bucket link 11000-target/loop1 11000-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:24.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:24.760" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:24.760" starttime="20210302 02:09:21.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:24.761" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:24.761" starttime="20210302 02:09:24.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:24.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:24.762" starttime="20210302 02:09:24.761"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:24.762" starttime="20210302 02:09:21.765"></status>
</kw>
<msg timestamp="20210302 02:09:24.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:24.762" starttime="20210302 02:09:21.765"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:24.762" starttime="20210302 02:09:21.764"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:24.766" level="INFO">Running command 'ozone sh bucket link 11000-target/loop2 11000-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:28.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:28.063" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:28.063" starttime="20210302 02:09:24.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:28.064" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:28.064" starttime="20210302 02:09:28.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:28.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:28.065" starttime="20210302 02:09:28.064"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:28.065" starttime="20210302 02:09:24.763"></status>
</kw>
<msg timestamp="20210302 02:09:28.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:28.065" starttime="20210302 02:09:24.763"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:28.066" starttime="20210302 02:09:24.762"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:28.069" level="INFO">Running command 'ozone sh bucket link 11000-target/loop3 11000-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:31.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:31.596" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:31.596" starttime="20210302 02:09:28.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:31.597" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:31.597" starttime="20210302 02:09:31.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:31.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:31.598" starttime="20210302 02:09:31.597"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:31.598" starttime="20210302 02:09:28.067"></status>
</kw>
<msg timestamp="20210302 02:09:31.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:31.598" starttime="20210302 02:09:28.066"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:31.598" starttime="20210302 02:09:28.066"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:31.602" level="INFO">Running command 'ozone sh key list 11000-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:35.199" level="INFO">${rc} = 255</msg>
<msg timestamp="20210302 02:09:35.199" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210302 02:09:35.199" starttime="20210302 02:09:31.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:35.201" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210302 02:09:35.201" starttime="20210302 02:09:35.200"></status>
</kw>
<msg timestamp="20210302 02:09:35.201" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210302 02:09:35.201" starttime="20210302 02:09:31.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210302 02:09:35.202" starttime="20210302 02:09:35.201"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:09:35.202" critical="yes" starttime="20210302 02:09:21.722"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:35.208" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:35.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:35.210" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:09:35.210" starttime="20210302 02:09:35.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:35.211" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:09:35.211" starttime="20210302 02:09:35.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:35.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:35.212" starttime="20210302 02:09:35.212"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:35.213" starttime="20210302 02:09:35.205"></status>
</kw>
<msg timestamp="20210302 02:09:35.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:35.213" starttime="20210302 02:09:35.205"></status>
</kw>
<msg timestamp="20210302 02:09:35.213" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:09:35.213" starttime="20210302 02:09:35.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:09:35.214" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:09:35.214" starttime="20210302 02:09:35.214"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:35.218" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:35.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:35.225" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:35.225" starttime="20210302 02:09:35.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:35.226" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:35.226" starttime="20210302 02:09:35.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:35.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:35.226" starttime="20210302 02:09:35.226"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:35.226" starttime="20210302 02:09:35.215"></status>
</kw>
<msg timestamp="20210302 02:09:35.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:35.227" starttime="20210302 02:09:35.215"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:35.227" starttime="20210302 02:09:35.215"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:35.227" starttime="20210302 02:09:35.214"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:35.227" starttime="20210302 02:09:35.204"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:35.227" starttime="20210302 02:09:35.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:35.230" level="INFO">Running command 'ozone sh bucket link 11000-source/bucket1 11000-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:38.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:38.584" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:38.584" starttime="20210302 02:09:35.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:38.585" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:38.585" starttime="20210302 02:09:38.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:38.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:38.587" starttime="20210302 02:09:38.586"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:38.587" starttime="20210302 02:09:35.228"></status>
</kw>
<msg timestamp="20210302 02:09:38.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:38.587" starttime="20210302 02:09:35.228"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:38.587" starttime="20210302 02:09:35.227"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:38.591" level="INFO">Running command 'ozone sh key put 11000-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:44.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:44.083" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:44.083" starttime="20210302 02:09:38.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:44.084" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:44.084" starttime="20210302 02:09:44.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:44.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:44.085" starttime="20210302 02:09:44.084"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:44.085" starttime="20210302 02:09:38.588"></status>
</kw>
<msg timestamp="20210302 02:09:44.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:44.085" starttime="20210302 02:09:38.588"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:44.085" starttime="20210302 02:09:38.587"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210302 02:09:44.087" level="INFO">${postfix} = 71768</msg>
<status status="PASS" endtime="20210302 02:09:44.087" starttime="20210302 02:09:44.087"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210302 02:09:44.088" level="INFO">${tmpfile} = /tmp/tempkey-71768</msg>
<status status="PASS" endtime="20210302 02:09:44.088" starttime="20210302 02:09:44.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:44.091" level="INFO">Running command 'ozone sh key get 11000-target/link1/key3 /tmp/tempkey-71768 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:49.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:49.301" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:49.301" starttime="20210302 02:09:44.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:49.302" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:49.302" starttime="20210302 02:09:49.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:49.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:49.303" starttime="20210302 02:09:49.302"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.303" starttime="20210302 02:09:44.089"></status>
</kw>
<msg timestamp="20210302 02:09:49.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:49.303" starttime="20210302 02:09:44.089"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.303" starttime="20210302 02:09:44.088"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210302 02:09:49.306" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-71768 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:49.308" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210302 02:09:49.308" starttime="20210302 02:09:49.304"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:49.312" level="INFO">Running command 'rm -f /tmp/tempkey-71768 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:49.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:49.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:49.315" starttime="20210302 02:09:49.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:49.316" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:49.316" starttime="20210302 02:09:49.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:49.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:49.317" starttime="20210302 02:09:49.316"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.317" starttime="20210302 02:09:49.310"></status>
</kw>
<msg timestamp="20210302 02:09:49.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:49.318" starttime="20210302 02:09:49.309"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.318" starttime="20210302 02:09:49.309"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210302 02:09:49.318" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210302 02:09:49.318" starttime="20210302 02:09:49.318"></status>
</kw>
<msg timestamp="20210302 02:09:49.319" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210302 02:09:49.319" starttime="20210302 02:09:44.086"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210302 02:09:49.319" starttime="20210302 02:09:49.319"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.319" starttime="20210302 02:09:44.086"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:09:49.319" critical="yes" starttime="20210302 02:09:35.203"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:49.325" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:49.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:49.328" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210302 02:09:49.328" starttime="20210302 02:09:49.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:49.329" level="INFO">scm</msg>
<status status="PASS" endtime="20210302 02:09:49.329" starttime="20210302 02:09:49.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:49.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:49.330" starttime="20210302 02:09:49.329"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.330" starttime="20210302 02:09:49.323"></status>
</kw>
<msg timestamp="20210302 02:09:49.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:49.330" starttime="20210302 02:09:49.323"></status>
</kw>
<msg timestamp="20210302 02:09:49.330" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210302 02:09:49.330" starttime="20210302 02:09:49.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210302 02:09:49.331" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210302 02:09:49.331" starttime="20210302 02:09:49.331"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:49.335" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:49.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:49.341" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:49.341" starttime="20210302 02:09:49.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:49.342" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:49.342" starttime="20210302 02:09:49.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:49.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:49.343" starttime="20210302 02:09:49.343"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.343" starttime="20210302 02:09:49.333"></status>
</kw>
<msg timestamp="20210302 02:09:49.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:49.344" starttime="20210302 02:09:49.332"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.344" starttime="20210302 02:09:49.332"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.344" starttime="20210302 02:09:49.331"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.344" starttime="20210302 02:09:49.322"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:49.344" starttime="20210302 02:09:49.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:49.348" level="INFO">Running command 'ozone sh bucket delete 11000-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:52.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:52.714" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210302 02:09:52.714" starttime="20210302 02:09:49.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:52.715" level="INFO"></msg>
<status status="PASS" endtime="20210302 02:09:52.715" starttime="20210302 02:09:52.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:52.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:52.717" starttime="20210302 02:09:52.716"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:52.717" starttime="20210302 02:09:49.345"></status>
</kw>
<msg timestamp="20210302 02:09:52.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:52.717" starttime="20210302 02:09:49.345"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:52.717" starttime="20210302 02:09:49.344"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:52.721" level="INFO">Running command 'ozone sh bucket list 11000-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:09:56.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:09:56.110" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T...</msg>
<status status="PASS" endtime="20210302 02:09:56.110" starttime="20210302 02:09:52.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:09:56.111" level="INFO">{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:09:04.061Z",
  "modificationTime" : "2021-03-02T02:09:04.061Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:07:39.710Z",
  "modificationTime" : "2021-03-02T02:07:39.710Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:07:19.595Z",
  "modificationTime" : "2021-03-02T02:07:36.505Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:08:57.619Z",
  "modificationTime" : "2021-03-02T02:08:57.619Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:09:38.442Z",
  "modificationTime" : "2021-03-02T02:09:38.442Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:09:31.528Z",
  "modificationTime" : "2021-03-02T02:09:31.528Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:09:24.600Z",
  "modificationTime" : "2021-03-02T02:09:24.600Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:09:27.899Z",
  "modificationTime" : "2021-03-02T02:09:27.899Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:07:12.570Z",
  "modificationTime" : "2021-03-02T02:07:33.134Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T02:07:16.003Z",
  "modificationTime" : "2021-03-02T02:07:16.003Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11000-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210302 02:09:56.111" starttime="20210302 02:09:56.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:09:56.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:09:56.112" starttime="20210302 02:09:56.111"></status>
</kw>
<status status="PASS" endtime="20210302 02:09:56.112" starttime="20210302 02:09:52.718"></status>
</kw>
<msg timestamp="20210302 02:09:56.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:09:56.112" starttime="20210302 02:09:52.718"></status>
</kw>
<msg timestamp="20210302 02:09:56.112" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "11000-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-02T...</msg>
<status status="PASS" endtime="20210302 02:09:56.113" starttime="20210302 02:09:52.718"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:09:56.113" starttime="20210302 02:09:56.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210302 02:09:56.117" level="INFO">Running command 'ozone sh key list 11000-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210302 02:10:00.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210302 02:10:00.058" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210302 02:10:00.058" starttime="20210302 02:09:56.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210302 02:10:00.059" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210302 02:10:00.060" starttime="20210302 02:10:00.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210302 02:10:00.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210302 02:10:00.060" starttime="20210302 02:10:00.060"></status>
</kw>
<status status="PASS" endtime="20210302 02:10:00.061" starttime="20210302 02:09:56.114"></status>
</kw>
<msg timestamp="20210302 02:10:00.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210302 02:10:00.061" starttime="20210302 02:09:56.114"></status>
</kw>
<msg timestamp="20210302 02:10:00.062" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210302 02:10:00.062" starttime="20210302 02:09:56.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210302 02:10:00.062" starttime="20210302 02:10:00.062"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210302 02:10:00.063" critical="yes" starttime="20210302 02:09:49.321"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210302 02:10:00.068" starttime="20210302 02:06:49.115"></status>
</suite>
<status status="PASS" elapsedtime="219519" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
