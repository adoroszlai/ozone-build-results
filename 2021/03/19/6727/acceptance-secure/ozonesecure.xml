<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210319 11:47:06.338" schemaversion="2" generator="Rebot 4.0 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 10:56:57.443" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 10:56:57.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 10:56:57.446" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 10:56:57.446" starttime="20210319 10:56:57.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 10:56:57.448" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 10:56:57.448" starttime="20210319 10:56:57.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 10:56:57.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 10:56:57.449" starttime="20210319 10:56:57.448"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.449" starttime="20210319 10:56:57.438"/>
</kw>
<msg timestamp="20210319 10:56:57.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 10:56:57.450" starttime="20210319 10:56:57.438"/>
</kw>
<msg timestamp="20210319 10:56:57.450" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 10:56:57.450" starttime="20210319 10:56:57.437"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 10:56:57.454" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 10:56:57.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 10:56:57.463" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 10:56:57.464" starttime="20210319 10:56:57.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 10:56:57.465" level="INFO"/>
<status status="PASS" endtime="20210319 10:56:57.465" starttime="20210319 10:56:57.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 10:56:57.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 10:56:57.466" starttime="20210319 10:56:57.466"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.467" starttime="20210319 10:56:57.452"/>
</kw>
<msg timestamp="20210319 10:56:57.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 10:56:57.467" starttime="20210319 10:56:57.451"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.467" starttime="20210319 10:56:57.451"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.467" starttime="20210319 10:56:57.450"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.468" starttime="20210319 10:56:57.436"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.468" starttime="20210319 10:56:57.436"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 10:56:57.472" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 10:56:57.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 10:56:57.622" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210319 10:56:57.622" starttime="20210319 10:56:57.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 10:56:57.624" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Fri, 19 Mar 2021 10:56:57 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCooCfUofNXse4ulVkpg1C2J998gwMKJ9OQns6YAIjFShpqQsPZfbkAG2aOXUmsXpUL1bfZb+jiXLOZGyG0VtENVjx
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1616187417600&amp;s=30kz6t1+7Vok8VWry0RFgdyS1sEoooH0NYUlxYtAnRQ="; Path=/; HttpOnly
Last-Modified: Fri, 19 Mar 2021 09:52:34 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210319 10:56:57.624" starttime="20210319 10:56:57.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 10:56:57.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 10:56:57.625" starttime="20210319 10:56:57.624"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.626" starttime="20210319 10:56:57.469"/>
</kw>
<msg timestamp="20210319 10:56:57.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 10:56:57.626" starttime="20210319 10:56:57.468"/>
</kw>
<msg timestamp="20210319 10:56:57.627" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210319 10:56:57.627" starttime="20210319 10:56:57.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 10:56:57.628" starttime="20210319 10:56:57.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210319 10:56:57.628" starttime="20210319 10:56:57.435"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 10:56:57.639" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 10:56:57.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 10:56:57.643" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 10:56:57.643" starttime="20210319 10:56:57.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 10:56:57.644" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 10:56:57.644" starttime="20210319 10:56:57.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 10:56:57.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 10:56:57.645" starttime="20210319 10:56:57.644"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.645" starttime="20210319 10:56:57.635"/>
</kw>
<msg timestamp="20210319 10:56:57.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 10:56:57.646" starttime="20210319 10:56:57.635"/>
</kw>
<msg timestamp="20210319 10:56:57.646" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 10:56:57.646" starttime="20210319 10:56:57.634"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 10:56:57.650" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 10:56:57.650" starttime="20210319 10:56:57.646"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 10:56:57.654" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 10:56:57.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 10:56:57.663" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 10:56:57.663" starttime="20210319 10:56:57.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 10:56:57.664" level="INFO"/>
<status status="PASS" endtime="20210319 10:56:57.664" starttime="20210319 10:56:57.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 10:56:57.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 10:56:57.665" starttime="20210319 10:56:57.665"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.666" starttime="20210319 10:56:57.652"/>
</kw>
<msg timestamp="20210319 10:56:57.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 10:56:57.666" starttime="20210319 10:56:57.651"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.666" starttime="20210319 10:56:57.650"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.666" starttime="20210319 10:56:57.650"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.666" starttime="20210319 10:56:57.633"/>
</kw>
<status status="PASS" endtime="20210319 10:56:57.666" starttime="20210319 10:56:57.632"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 10:56:57.670" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:01:57.632" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210319 11:01:57.632" starttime="20210319 10:56:57.669"/>
</kw>
<status status="FAIL" endtime="20210319 11:01:57.633" starttime="20210319 10:56:57.668"/>
</kw>
<msg timestamp="20210319 11:01:57.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210319 11:01:57.633" starttime="20210319 10:56:57.667"/>
</kw>
<status status="FAIL" endtime="20210319 11:01:57.633" starttime="20210319 10:56:57.667"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210319 11:01:57.634" starttime="20210319 10:56:57.630">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20210319 11:01:57.636" starttime="20210319 10:56:57.385"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:01:57.651" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:01.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:02:01.006" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210319 11:02:01.006" starttime="20210319 11:01:57.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:01.007" level="INFO">om</msg>
<status status="PASS" endtime="20210319 11:02:01.008" starttime="20210319 11:02:01.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:01.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:01.009" starttime="20210319 11:02:01.008"/>
</kw>
<status status="PASS" endtime="20210319 11:02:01.009" starttime="20210319 11:01:57.646"/>
</kw>
<msg timestamp="20210319 11:02:01.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:02:01.010" starttime="20210319 11:01:57.645"/>
</kw>
<msg timestamp="20210319 11:02:01.010" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210319 11:02:01.010" starttime="20210319 11:01:57.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:02:01.012" starttime="20210319 11:02:01.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:01.018" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:03.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:02:03.729" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210319 11:02:03.730" starttime="20210319 11:02:01.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:03.731" level="INFO">om</msg>
<status status="PASS" endtime="20210319 11:02:03.731" starttime="20210319 11:02:03.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:03.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:03.733" starttime="20210319 11:02:03.732"/>
</kw>
<status status="PASS" endtime="20210319 11:02:03.734" starttime="20210319 11:02:01.013"/>
</kw>
<msg timestamp="20210319 11:02:03.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:02:03.734" starttime="20210319 11:02:01.013"/>
</kw>
<msg timestamp="20210319 11:02:03.734" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210319 11:02:03.734" starttime="20210319 11:02:01.012"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:02:03.736" starttime="20210319 11:02:03.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210319 11:02:03.736" starttime="20210319 11:01:57.643"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:03.745" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:06.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:02:06.848" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:02:06.848" starttime="20210319 11:02:03.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:06.849" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:02:06.849" starttime="20210319 11:02:06.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:06.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:06.850" starttime="20210319 11:02:06.849"/>
</kw>
<status status="PASS" endtime="20210319 11:02:06.851" starttime="20210319 11:02:03.741"/>
</kw>
<msg timestamp="20210319 11:02:06.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:02:06.851" starttime="20210319 11:02:03.740"/>
</kw>
<msg timestamp="20210319 11:02:06.851" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210319 11:02:06.851" starttime="20210319 11:02:03.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:02:06.852" starttime="20210319 11:02:06.852"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:06.857" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:10.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:02:10.023" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:02:10.024" starttime="20210319 11:02:06.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:10.025" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:02:10.025" starttime="20210319 11:02:10.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:10.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:10.026" starttime="20210319 11:02:10.025"/>
</kw>
<status status="PASS" endtime="20210319 11:02:10.027" starttime="20210319 11:02:06.853"/>
</kw>
<msg timestamp="20210319 11:02:10.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:02:10.028" starttime="20210319 11:02:06.853"/>
</kw>
<msg timestamp="20210319 11:02:10.028" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210319 11:02:10.028" starttime="20210319 11:02:06.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:02:10.029" starttime="20210319 11:02:10.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210319 11:02:10.030" starttime="20210319 11:02:03.738"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:10.047" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:12.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:02:12.827" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210319 11:02:12.827" starttime="20210319 11:02:10.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:12.828" level="INFO">om</msg>
<status status="PASS" endtime="20210319 11:02:12.828" starttime="20210319 11:02:12.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:12.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:12.829" starttime="20210319 11:02:12.829"/>
</kw>
<status status="PASS" endtime="20210319 11:02:12.830" starttime="20210319 11:02:10.041"/>
</kw>
<msg timestamp="20210319 11:02:12.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:02:12.830" starttime="20210319 11:02:10.041"/>
</kw>
<msg timestamp="20210319 11:02:12.830" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210319 11:02:12.830" starttime="20210319 11:02:10.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:02:12.831" starttime="20210319 11:02:12.830"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:02:12.832" starttime="20210319 11:02:12.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:12.840" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:15.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:02:15.636" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210319 11:02:15.636" starttime="20210319 11:02:12.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:15.638" level="INFO">om</msg>
<status status="PASS" endtime="20210319 11:02:15.638" starttime="20210319 11:02:15.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:15.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:15.639" starttime="20210319 11:02:15.638"/>
</kw>
<status status="PASS" endtime="20210319 11:02:15.639" starttime="20210319 11:02:12.835"/>
</kw>
<msg timestamp="20210319 11:02:15.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:02:15.640" starttime="20210319 11:02:12.833"/>
</kw>
<msg timestamp="20210319 11:02:15.640" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210319 11:02:15.640" starttime="20210319 11:02:12.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:02:15.641" starttime="20210319 11:02:15.640"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:02:15.641" starttime="20210319 11:02:15.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210319 11:02:15.642" starttime="20210319 11:02:10.031"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:15.650" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:18.305" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:02:18.305" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210319 11:02:18.305" starttime="20210319 11:02:15.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:18.306" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210319 11:02:18.307" starttime="20210319 11:02:18.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:18.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:18.308" starttime="20210319 11:02:18.307"/>
</kw>
<msg timestamp="20210319 11:02:18.309" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210319 11:02:18.309" starttime="20210319 11:02:15.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:02:18.310" starttime="20210319 11:02:18.309"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:18.315" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:21.105" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:02:21.105" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210319 11:02:21.105" starttime="20210319 11:02:18.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:21.108" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210319 11:02:21.108" starttime="20210319 11:02:21.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:21.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:21.109" starttime="20210319 11:02:21.108"/>
</kw>
<msg timestamp="20210319 11:02:21.109" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210319 11:02:21.110" starttime="20210319 11:02:18.310"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:02:21.110" starttime="20210319 11:02:21.110"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210319 11:02:21.110" starttime="20210319 11:02:15.643"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210319 11:02:21.112" starttime="20210319 11:01:57.638"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="SETUP" name="Create volumes">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210319 11:02:21.146" level="INFO">${random} = 85329</msg>
<status status="PASS" endtime="20210319 11:02:21.147" starttime="20210319 11:02:21.145"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:02:21.152" level="INFO">${source} = 85329-source</msg>
<status status="PASS" endtime="20210319 11:02:21.152" starttime="20210319 11:02:21.147"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:02:21.154" level="INFO">${target} = 85329-target</msg>
<status status="PASS" endtime="20210319 11:02:21.154" starttime="20210319 11:02:21.152"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:21.158" level="INFO">Running command 'ozone sh volume create 85329-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:30.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:02:30.222" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:02:30.223" starttime="20210319 11:02:21.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:30.226" level="INFO"/>
<status status="PASS" endtime="20210319 11:02:30.227" starttime="20210319 11:02:30.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:30.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:30.229" starttime="20210319 11:02:30.228"/>
</kw>
<status status="PASS" endtime="20210319 11:02:30.231" starttime="20210319 11:02:21.155"/>
</kw>
<msg timestamp="20210319 11:02:30.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:02:30.232" starttime="20210319 11:02:21.154"/>
</kw>
<status status="PASS" endtime="20210319 11:02:30.233" starttime="20210319 11:02:21.154"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:30.243" level="INFO">Running command 'ozone sh volume create 85329-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:38.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:02:38.172" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:02:38.172" starttime="20210319 11:02:30.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:38.175" level="INFO"/>
<status status="PASS" endtime="20210319 11:02:38.175" starttime="20210319 11:02:38.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:38.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:38.177" starttime="20210319 11:02:38.176"/>
</kw>
<status status="PASS" endtime="20210319 11:02:38.178" starttime="20210319 11:02:30.236"/>
</kw>
<msg timestamp="20210319 11:02:38.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:02:38.179" starttime="20210319 11:02:30.234"/>
</kw>
<status status="PASS" endtime="20210319 11:02:38.180" starttime="20210319 11:02:30.233"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:38.190" level="INFO">Running command 'ozone sh bucket create 85329-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:02:46.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:02:46.234" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:02:46.234" starttime="20210319 11:02:38.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:02:46.236" level="INFO"/>
<status status="PASS" endtime="20210319 11:02:46.237" starttime="20210319 11:02:46.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:02:46.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:02:46.238" starttime="20210319 11:02:46.237"/>
</kw>
<status status="PASS" endtime="20210319 11:02:46.238" starttime="20210319 11:02:38.185"/>
</kw>
<msg timestamp="20210319 11:02:46.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:02:46.239" starttime="20210319 11:02:38.184"/>
</kw>
<status status="PASS" endtime="20210319 11:02:46.239" starttime="20210319 11:02:38.182"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:02:46.246" level="INFO">Running command 'ozone sh key put 85329-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:05:59.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:05:59.499" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:05:59.499" starttime="20210319 11:02:46.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:05:59.501" level="INFO"/>
<status status="PASS" endtime="20210319 11:05:59.501" starttime="20210319 11:05:59.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:05:59.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:05:59.502" starttime="20210319 11:05:59.501"/>
</kw>
<status status="PASS" endtime="20210319 11:05:59.503" starttime="20210319 11:02:46.243"/>
</kw>
<msg timestamp="20210319 11:05:59.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:05:59.503" starttime="20210319 11:02:46.242"/>
</kw>
<status status="PASS" endtime="20210319 11:05:59.504" starttime="20210319 11:02:46.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:05:59.512" level="INFO">Running command 'ozone sh bucket create 85329-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:06:06.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:06:06.691" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:06:06.691" starttime="20210319 11:05:59.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:06:06.692" level="INFO"/>
<status status="PASS" endtime="20210319 11:06:06.692" starttime="20210319 11:06:06.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:06:06.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:06:06.694" starttime="20210319 11:06:06.692"/>
</kw>
<status status="PASS" endtime="20210319 11:06:06.694" starttime="20210319 11:05:59.507"/>
</kw>
<msg timestamp="20210319 11:06:06.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:06:06.694" starttime="20210319 11:05:59.505"/>
</kw>
<status status="PASS" endtime="20210319 11:06:06.695" starttime="20210319 11:05:59.504"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:06:06.700" level="INFO">Running command 'ozone sh bucket link 85329-source/readable-bucket 85329-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:06:13.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:06:13.436" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:06:13.437" starttime="20210319 11:06:06.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:06:13.438" level="INFO"/>
<status status="PASS" endtime="20210319 11:06:13.438" starttime="20210319 11:06:13.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:06:13.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:06:13.439" starttime="20210319 11:06:13.438"/>
</kw>
<status status="PASS" endtime="20210319 11:06:13.439" starttime="20210319 11:06:06.697"/>
</kw>
<msg timestamp="20210319 11:06:13.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:06:13.439" starttime="20210319 11:06:06.696"/>
</kw>
<status status="PASS" endtime="20210319 11:06:13.440" starttime="20210319 11:06:06.695"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:06:13.445" level="INFO">Running command 'ozone sh bucket link 85329-source/readable-bucket 85329-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:06:20.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:06:20.786" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:06:20.786" starttime="20210319 11:06:13.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:06:20.788" level="INFO"/>
<status status="PASS" endtime="20210319 11:06:20.788" starttime="20210319 11:06:20.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:06:20.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:06:20.789" starttime="20210319 11:06:20.789"/>
</kw>
<status status="PASS" endtime="20210319 11:06:20.790" starttime="20210319 11:06:13.441"/>
</kw>
<msg timestamp="20210319 11:06:20.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:06:20.790" starttime="20210319 11:06:13.441"/>
</kw>
<status status="PASS" endtime="20210319 11:06:20.791" starttime="20210319 11:06:13.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:06:20.797" level="INFO">Running command 'ozone sh bucket link 85329-source/unreadable-bucket 85329-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:06:26.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:06:26.624" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:06:26.624" starttime="20210319 11:06:20.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:06:26.626" level="INFO"/>
<status status="PASS" endtime="20210319 11:06:26.626" starttime="20210319 11:06:26.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:06:26.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:06:26.628" starttime="20210319 11:06:26.627"/>
</kw>
<status status="PASS" endtime="20210319 11:06:26.629" starttime="20210319 11:06:20.793"/>
</kw>
<msg timestamp="20210319 11:06:26.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:06:26.629" starttime="20210319 11:06:20.792"/>
</kw>
<status status="PASS" endtime="20210319 11:06:26.630" starttime="20210319 11:06:20.791"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:06:26.638" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 85329-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:06:33.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:06:33.542" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:06:33.542" starttime="20210319 11:06:26.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:06:33.543" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:06:33.544" starttime="20210319 11:06:33.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:06:33.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:06:33.546" starttime="20210319 11:06:33.544"/>
</kw>
<status status="PASS" endtime="20210319 11:06:33.547" starttime="20210319 11:06:26.633"/>
</kw>
<msg timestamp="20210319 11:06:33.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:06:33.547" starttime="20210319 11:06:26.632"/>
</kw>
<status status="PASS" endtime="20210319 11:06:33.548" starttime="20210319 11:06:26.631"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:06:33.559" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 85329-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:06:41.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:06:41.509" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:06:41.510" starttime="20210319 11:06:33.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:06:41.512" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:06:41.513" starttime="20210319 11:06:41.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:06:41.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:06:41.514" starttime="20210319 11:06:41.513"/>
</kw>
<status status="PASS" endtime="20210319 11:06:41.515" starttime="20210319 11:06:33.552"/>
</kw>
<msg timestamp="20210319 11:06:41.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:06:41.516" starttime="20210319 11:06:33.551"/>
</kw>
<status status="PASS" endtime="20210319 11:06:41.517" starttime="20210319 11:06:33.548"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:06:41.524" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 85329-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:06:49.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:06:49.393" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:06:49.393" starttime="20210319 11:06:41.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:06:49.394" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:06:49.394" starttime="20210319 11:06:49.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:06:49.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:06:49.395" starttime="20210319 11:06:49.395"/>
</kw>
<status status="PASS" endtime="20210319 11:06:49.396" starttime="20210319 11:06:41.520"/>
</kw>
<msg timestamp="20210319 11:06:49.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:06:49.399" starttime="20210319 11:06:41.519"/>
</kw>
<status status="PASS" endtime="20210319 11:06:49.400" starttime="20210319 11:06:41.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:06:49.409" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 85329-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:06:56.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:06:56.017" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:06:56.017" starttime="20210319 11:06:49.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:06:56.019" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:06:56.019" starttime="20210319 11:06:56.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:06:56.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:06:56.020" starttime="20210319 11:06:56.019"/>
</kw>
<status status="PASS" endtime="20210319 11:06:56.020" starttime="20210319 11:06:49.403"/>
</kw>
<msg timestamp="20210319 11:06:56.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:06:56.020" starttime="20210319 11:06:49.401"/>
</kw>
<status status="PASS" endtime="20210319 11:06:56.021" starttime="20210319 11:06:49.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:06:56.028" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 85329-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:07:02.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:07:02.511" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:07:02.511" starttime="20210319 11:06:56.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:07:02.513" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:07:02.513" starttime="20210319 11:07:02.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:07:02.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:07:02.514" starttime="20210319 11:07:02.513"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.514" starttime="20210319 11:06:56.025"/>
</kw>
<msg timestamp="20210319 11:07:02.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:07:02.514" starttime="20210319 11:06:56.024"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.515" starttime="20210319 11:06:56.021"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.515" starttime="20210319 11:02:38.182"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.515" starttime="20210319 11:02:38.180"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.515" starttime="20210319 11:02:21.145"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:07:02.524" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:07:02.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:07:02.531" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:07:02.531" starttime="20210319 11:07:02.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:07:02.532" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:07:02.533" starttime="20210319 11:07:02.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:07:02.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:07:02.534" starttime="20210319 11:07:02.533"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.534" starttime="20210319 11:07:02.520"/>
</kw>
<msg timestamp="20210319 11:07:02.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:07:02.535" starttime="20210319 11:07:02.519"/>
</kw>
<msg timestamp="20210319 11:07:02.535" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:07:02.535" starttime="20210319 11:07:02.518"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:07:02.538" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:07:02.538" starttime="20210319 11:07:02.535"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:07:02.544" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:07:02.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:07:02.747" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:07:02.748" starttime="20210319 11:07:02.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:07:02.749" level="INFO"/>
<status status="PASS" endtime="20210319 11:07:02.749" starttime="20210319 11:07:02.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:07:02.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:07:02.750" starttime="20210319 11:07:02.749"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.751" starttime="20210319 11:07:02.540"/>
</kw>
<msg timestamp="20210319 11:07:02.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:07:02.751" starttime="20210319 11:07:02.539"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.751" starttime="20210319 11:07:02.538"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.751" starttime="20210319 11:07:02.538"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.751" starttime="20210319 11:07:02.518"/>
</kw>
<status status="PASS" endtime="20210319 11:07:02.752" starttime="20210319 11:07:02.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:07:02.757" level="INFO">Running command 'ozone sh bucket link 85329-source/no-such-bucket 85329-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:07:09.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:07:09.404" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:07:09.404" starttime="20210319 11:07:02.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:07:09.405" level="INFO"/>
<status status="PASS" endtime="20210319 11:07:09.405" starttime="20210319 11:07:09.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:07:09.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:07:09.406" starttime="20210319 11:07:09.405"/>
</kw>
<status status="PASS" endtime="20210319 11:07:09.406" starttime="20210319 11:07:02.753"/>
</kw>
<msg timestamp="20210319 11:07:09.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:07:09.406" starttime="20210319 11:07:02.753"/>
</kw>
<status status="PASS" endtime="20210319 11:07:09.407" starttime="20210319 11:07:02.752"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:07:09.410" level="INFO">Running command 'ozone sh key list 85329-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:07:17.330" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:07:17.330" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210319 11:07:17.330" starttime="20210319 11:07:09.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:07:17.332" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210319 11:07:17.333" starttime="20210319 11:07:17.331"/>
</kw>
<msg timestamp="20210319 11:07:17.333" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210319 11:07:17.334" starttime="20210319 11:07:09.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:07:17.334" starttime="20210319 11:07:17.334"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 11:07:17.335" starttime="20210319 11:07:02.515"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:07:17.346" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:07:17.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:07:17.349" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:07:17.350" starttime="20210319 11:07:17.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:07:17.351" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:07:17.352" starttime="20210319 11:07:17.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:07:17.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:07:17.353" starttime="20210319 11:07:17.352"/>
</kw>
<status status="PASS" endtime="20210319 11:07:17.353" starttime="20210319 11:07:17.342"/>
</kw>
<msg timestamp="20210319 11:07:17.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:07:17.353" starttime="20210319 11:07:17.341"/>
</kw>
<msg timestamp="20210319 11:07:17.354" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:07:17.354" starttime="20210319 11:07:17.341"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:07:17.354" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:07:17.355" starttime="20210319 11:07:17.354"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:07:17.360" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:07:17.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:07:17.372" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:07:17.372" starttime="20210319 11:07:17.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:07:17.374" level="INFO"/>
<status status="PASS" endtime="20210319 11:07:17.374" starttime="20210319 11:07:17.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:07:17.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:07:17.376" starttime="20210319 11:07:17.375"/>
</kw>
<status status="PASS" endtime="20210319 11:07:17.376" starttime="20210319 11:07:17.357"/>
</kw>
<msg timestamp="20210319 11:07:17.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:07:17.377" starttime="20210319 11:07:17.356"/>
</kw>
<status status="PASS" endtime="20210319 11:07:17.377" starttime="20210319 11:07:17.355"/>
</kw>
<status status="PASS" endtime="20210319 11:07:17.377" starttime="20210319 11:07:17.355"/>
</kw>
<status status="PASS" endtime="20210319 11:07:17.378" starttime="20210319 11:07:17.340"/>
</kw>
<status status="PASS" endtime="20210319 11:07:17.378" starttime="20210319 11:07:17.339"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:07:17.384" level="INFO">Running command 'ozone sh bucket link 85329-source/bucket1 85329-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:07:25.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:07:25.183" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:07:25.183" starttime="20210319 11:07:17.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:07:25.185" level="INFO"/>
<status status="PASS" endtime="20210319 11:07:25.185" starttime="20210319 11:07:25.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:07:25.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:07:25.187" starttime="20210319 11:07:25.186"/>
</kw>
<status status="PASS" endtime="20210319 11:07:25.188" starttime="20210319 11:07:17.381"/>
</kw>
<msg timestamp="20210319 11:07:25.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:07:25.188" starttime="20210319 11:07:17.380"/>
</kw>
<status status="PASS" endtime="20210319 11:07:25.189" starttime="20210319 11:07:17.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:07:25.197" level="INFO">Running command 'ozone sh bucket create 85329-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:07:32.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:07:32.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:07:32.429" starttime="20210319 11:07:25.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:07:32.430" level="INFO"/>
<status status="PASS" endtime="20210319 11:07:32.430" starttime="20210319 11:07:32.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:07:32.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:07:32.431" starttime="20210319 11:07:32.430"/>
</kw>
<status status="PASS" endtime="20210319 11:07:32.432" starttime="20210319 11:07:25.193"/>
</kw>
<msg timestamp="20210319 11:07:32.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:07:32.432" starttime="20210319 11:07:25.191"/>
</kw>
<status status="PASS" endtime="20210319 11:07:32.432" starttime="20210319 11:07:25.189"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:07:32.440" level="INFO">Running command 'ozone sh key put 85329-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:09:17.339" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210319 11:09:17.339" starttime="20210319 11:07:32.437"/>
</kw>
<status status="FAIL" endtime="20210319 11:09:17.340" starttime="20210319 11:07:32.435"/>
</kw>
<msg timestamp="20210319 11:09:17.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210319 11:09:17.340" starttime="20210319 11:07:32.434"/>
</kw>
<status status="FAIL" endtime="20210319 11:09:17.340" starttime="20210319 11:07:32.433"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210319 11:09:17.341" starttime="20210319 11:07:17.338">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:09:17.350" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:09:17.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:09:17.355" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:09:17.355" starttime="20210319 11:09:17.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:09:17.357" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:09:17.357" starttime="20210319 11:09:17.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:09:17.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:09:17.358" starttime="20210319 11:09:17.357"/>
</kw>
<status status="PASS" endtime="20210319 11:09:17.359" starttime="20210319 11:09:17.346"/>
</kw>
<msg timestamp="20210319 11:09:17.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:09:17.359" starttime="20210319 11:09:17.346"/>
</kw>
<msg timestamp="20210319 11:09:17.359" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:09:17.360" starttime="20210319 11:09:17.345"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:09:17.361" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:09:17.361" starttime="20210319 11:09:17.360"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:09:17.368" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:09:17.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:09:17.378" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:09:17.378" starttime="20210319 11:09:17.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:09:17.380" level="INFO"/>
<status status="PASS" endtime="20210319 11:09:17.380" starttime="20210319 11:09:17.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:09:17.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:09:17.382" starttime="20210319 11:09:17.381"/>
</kw>
<status status="PASS" endtime="20210319 11:09:17.382" starttime="20210319 11:09:17.365"/>
</kw>
<msg timestamp="20210319 11:09:17.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:09:17.383" starttime="20210319 11:09:17.364"/>
</kw>
<status status="PASS" endtime="20210319 11:09:17.383" starttime="20210319 11:09:17.362"/>
</kw>
<status status="PASS" endtime="20210319 11:09:17.383" starttime="20210319 11:09:17.361"/>
</kw>
<status status="PASS" endtime="20210319 11:09:17.384" starttime="20210319 11:09:17.344"/>
</kw>
<status status="PASS" endtime="20210319 11:09:17.384" starttime="20210319 11:09:17.343"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:09:17.390" level="INFO">Running command 'ozone sh key put 85329-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:17.343" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210319 11:11:17.343" starttime="20210319 11:09:17.387"/>
</kw>
<status status="FAIL" endtime="20210319 11:11:17.344" starttime="20210319 11:09:17.386"/>
</kw>
<msg timestamp="20210319 11:11:17.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210319 11:11:17.344" starttime="20210319 11:09:17.385"/>
</kw>
<status status="FAIL" endtime="20210319 11:11:17.345" starttime="20210319 11:09:17.384"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210319 11:11:17.345" starttime="20210319 11:09:17.342">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:17.361" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:17.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:17.366" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:11:17.367" starttime="20210319 11:11:17.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:17.369" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:11:17.369" starttime="20210319 11:11:17.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:17.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:17.370" starttime="20210319 11:11:17.369"/>
</kw>
<status status="PASS" endtime="20210319 11:11:17.371" starttime="20210319 11:11:17.354"/>
</kw>
<msg timestamp="20210319 11:11:17.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:17.371" starttime="20210319 11:11:17.354"/>
</kw>
<msg timestamp="20210319 11:11:17.372" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:11:17.372" starttime="20210319 11:11:17.353"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:11:17.373" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:11:17.373" starttime="20210319 11:11:17.372"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:17.384" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:17.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:17.411" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:11:17.411" starttime="20210319 11:11:17.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:17.413" level="INFO"/>
<status status="PASS" endtime="20210319 11:11:17.413" starttime="20210319 11:11:17.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:17.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:17.414" starttime="20210319 11:11:17.413"/>
</kw>
<status status="PASS" endtime="20210319 11:11:17.414" starttime="20210319 11:11:17.376"/>
</kw>
<msg timestamp="20210319 11:11:17.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:17.415" starttime="20210319 11:11:17.376"/>
</kw>
<status status="PASS" endtime="20210319 11:11:17.415" starttime="20210319 11:11:17.374"/>
</kw>
<status status="PASS" endtime="20210319 11:11:17.415" starttime="20210319 11:11:17.374"/>
</kw>
<status status="PASS" endtime="20210319 11:11:17.415" starttime="20210319 11:11:17.352"/>
</kw>
<status status="PASS" endtime="20210319 11:11:17.415" starttime="20210319 11:11:17.351"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:17.422" level="INFO">Running command 'ozone sh key list 85329-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:24.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:24.267" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210319 11:11:24.267" starttime="20210319 11:11:17.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:24.268" level="INFO">key1</msg>
<status status="PASS" endtime="20210319 11:11:24.268" starttime="20210319 11:11:24.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:24.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:24.269" starttime="20210319 11:11:24.268"/>
</kw>
<status status="PASS" endtime="20210319 11:11:24.269" starttime="20210319 11:11:17.418"/>
</kw>
<msg timestamp="20210319 11:11:24.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:24.269" starttime="20210319 11:11:17.417"/>
</kw>
<msg timestamp="20210319 11:11:24.276" level="INFO">${target_list} = key1</msg>
<status status="PASS" endtime="20210319 11:11:24.277" starttime="20210319 11:11:17.416"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:24.281" level="INFO">Running command 'ozone sh key list 85329-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:32.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:32.575" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210319 11:11:32.575" starttime="20210319 11:11:24.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:32.576" level="INFO">key1</msg>
<status status="PASS" endtime="20210319 11:11:32.576" starttime="20210319 11:11:32.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:32.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:32.577" starttime="20210319 11:11:32.576"/>
</kw>
<status status="PASS" endtime="20210319 11:11:32.577" starttime="20210319 11:11:24.278"/>
</kw>
<msg timestamp="20210319 11:11:32.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:32.577" starttime="20210319 11:11:24.277"/>
</kw>
<msg timestamp="20210319 11:11:32.578" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210319 11:11:32.578" starttime="20210319 11:11:24.277"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:11:32.579" starttime="20210319 11:11:32.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:11:32.579" starttime="20210319 11:11:32.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210319 11:11:32.580" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" endtime="20210319 11:11:32.580" starttime="20210319 11:11:32.580"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210319 11:11:32.581" starttime="20210319 11:11:17.350">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:32.590" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:32.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:32.595" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:11:32.595" starttime="20210319 11:11:32.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:32.598" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:11:32.598" starttime="20210319 11:11:32.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:32.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:32.599" starttime="20210319 11:11:32.598"/>
</kw>
<status status="PASS" endtime="20210319 11:11:32.600" starttime="20210319 11:11:32.586"/>
</kw>
<msg timestamp="20210319 11:11:32.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:32.600" starttime="20210319 11:11:32.586"/>
</kw>
<msg timestamp="20210319 11:11:32.600" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:11:32.600" starttime="20210319 11:11:32.585"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:11:32.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:11:32.602" starttime="20210319 11:11:32.601"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:32.607" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:32.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:32.617" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:11:32.617" starttime="20210319 11:11:32.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:32.619" level="INFO"/>
<status status="PASS" endtime="20210319 11:11:32.619" starttime="20210319 11:11:32.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:32.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:32.621" starttime="20210319 11:11:32.619"/>
</kw>
<status status="PASS" endtime="20210319 11:11:32.621" starttime="20210319 11:11:32.604"/>
</kw>
<msg timestamp="20210319 11:11:32.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:32.621" starttime="20210319 11:11:32.603"/>
</kw>
<status status="PASS" endtime="20210319 11:11:32.622" starttime="20210319 11:11:32.602"/>
</kw>
<status status="PASS" endtime="20210319 11:11:32.622" starttime="20210319 11:11:32.602"/>
</kw>
<status status="PASS" endtime="20210319 11:11:32.622" starttime="20210319 11:11:32.584"/>
</kw>
<status status="PASS" endtime="20210319 11:11:32.622" starttime="20210319 11:11:32.584"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:32.627" level="INFO">Running command 'ozone sh key delete 85329-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:40.532" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:11:40.532" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210319 11:11:40.532" starttime="20210319 11:11:32.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:40.533" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210319 11:11:40.533" starttime="20210319 11:11:40.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:40.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210319 11:11:40.534" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210319 11:11:40.535" starttime="20210319 11:11:40.534"/>
</kw>
<status status="FAIL" endtime="20210319 11:11:40.535" starttime="20210319 11:11:32.623"/>
</kw>
<msg timestamp="20210319 11:11:40.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210319 11:11:40.535" starttime="20210319 11:11:32.623"/>
</kw>
<status status="FAIL" endtime="20210319 11:11:40.536" starttime="20210319 11:11:32.622"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210319 11:11:40.537" starttime="20210319 11:11:32.583">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:40.547" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:40.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:40.554" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:11:40.554" starttime="20210319 11:11:40.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:40.555" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:11:40.555" starttime="20210319 11:11:40.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:40.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:40.556" starttime="20210319 11:11:40.555"/>
</kw>
<status status="PASS" endtime="20210319 11:11:40.557" starttime="20210319 11:11:40.543"/>
</kw>
<msg timestamp="20210319 11:11:40.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:40.557" starttime="20210319 11:11:40.543"/>
</kw>
<msg timestamp="20210319 11:11:40.558" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:11:40.558" starttime="20210319 11:11:40.542"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:11:40.559" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:11:40.559" starttime="20210319 11:11:40.558"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:40.565" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:40.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:40.579" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:11:40.579" starttime="20210319 11:11:40.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:40.580" level="INFO"/>
<status status="PASS" endtime="20210319 11:11:40.580" starttime="20210319 11:11:40.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:40.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:40.581" starttime="20210319 11:11:40.581"/>
</kw>
<status status="PASS" endtime="20210319 11:11:40.582" starttime="20210319 11:11:40.561"/>
</kw>
<msg timestamp="20210319 11:11:40.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:40.583" starttime="20210319 11:11:40.560"/>
</kw>
<status status="PASS" endtime="20210319 11:11:40.583" starttime="20210319 11:11:40.559"/>
</kw>
<status status="PASS" endtime="20210319 11:11:40.583" starttime="20210319 11:11:40.559"/>
</kw>
<status status="PASS" endtime="20210319 11:11:40.584" starttime="20210319 11:11:40.541"/>
</kw>
<status status="PASS" endtime="20210319 11:11:40.584" starttime="20210319 11:11:40.539"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:40.590" level="INFO">Running command 'ozone sh bucket list 85329-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:48.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:48.710" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210319 11:11:48.710" starttime="20210319 11:11:40.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:48.712" level="INFO">{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:07:09.293Z",
  "modificationTime" : "2021-03-19T11:07:09.293Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:06:26.544Z",
  "modificationTime" : "2021-03-19T11:07:02.305Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:07:24.898Z",
  "modificationTime" : "2021-03-19T11:07:24.898Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:06:13.357Z",
  "modificationTime" : "2021-03-19T11:06:55.694Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:06:20.631Z",
  "modificationTime" : "2021-03-19T11:06:20.631Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210319 11:11:48.712" starttime="20210319 11:11:48.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:48.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:48.714" starttime="20210319 11:11:48.713"/>
</kw>
<status status="PASS" endtime="20210319 11:11:48.714" starttime="20210319 11:11:40.586"/>
</kw>
<msg timestamp="20210319 11:11:48.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:48.715" starttime="20210319 11:11:40.585"/>
</kw>
<msg timestamp="20210319 11:11:48.715" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210319 11:11:48.715" starttime="20210319 11:11:40.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:11:48.718" starttime="20210319 11:11:48.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:11:48.719" starttime="20210319 11:11:48.718"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 11:11:48.719" starttime="20210319 11:11:40.538"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:48.731" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:48.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:48.736" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:11:48.736" starttime="20210319 11:11:48.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:48.738" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:11:48.739" starttime="20210319 11:11:48.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:48.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:48.740" starttime="20210319 11:11:48.739"/>
</kw>
<status status="PASS" endtime="20210319 11:11:48.741" starttime="20210319 11:11:48.727"/>
</kw>
<msg timestamp="20210319 11:11:48.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:48.741" starttime="20210319 11:11:48.725"/>
</kw>
<msg timestamp="20210319 11:11:48.741" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:11:48.742" starttime="20210319 11:11:48.724"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:11:48.743" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:11:48.743" starttime="20210319 11:11:48.742"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:48.750" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:48.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:48.762" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:11:48.762" starttime="20210319 11:11:48.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:48.763" level="INFO"/>
<status status="PASS" endtime="20210319 11:11:48.763" starttime="20210319 11:11:48.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:48.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:48.764" starttime="20210319 11:11:48.763"/>
</kw>
<status status="PASS" endtime="20210319 11:11:48.765" starttime="20210319 11:11:48.746"/>
</kw>
<msg timestamp="20210319 11:11:48.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:48.765" starttime="20210319 11:11:48.746"/>
</kw>
<status status="PASS" endtime="20210319 11:11:48.766" starttime="20210319 11:11:48.745"/>
</kw>
<status status="PASS" endtime="20210319 11:11:48.766" starttime="20210319 11:11:48.744"/>
</kw>
<status status="PASS" endtime="20210319 11:11:48.766" starttime="20210319 11:11:48.723"/>
</kw>
<status status="PASS" endtime="20210319 11:11:48.766" starttime="20210319 11:11:48.722"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:48.773" level="INFO">Running command 'ozone sh bucket info 85329-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:56.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:56.757" level="INFO">${output} = 85329-source bucket1</msg>
<status status="PASS" endtime="20210319 11:11:56.757" starttime="20210319 11:11:48.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:56.760" level="INFO">85329-source bucket1</msg>
<status status="PASS" endtime="20210319 11:11:56.760" starttime="20210319 11:11:56.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:56.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:56.762" starttime="20210319 11:11:56.760"/>
</kw>
<status status="PASS" endtime="20210319 11:11:56.762" starttime="20210319 11:11:48.769"/>
</kw>
<msg timestamp="20210319 11:11:56.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:56.763" starttime="20210319 11:11:48.768"/>
</kw>
<msg timestamp="20210319 11:11:56.763" level="INFO">${result} = 85329-source bucket1</msg>
<status status="PASS" endtime="20210319 11:11:56.764" starttime="20210319 11:11:48.767"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:11:56.768" starttime="20210319 11:11:56.764"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 11:11:56.768" starttime="20210319 11:11:48.721"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:56.781" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:56.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:56.785" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:11:56.785" starttime="20210319 11:11:56.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:56.787" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:11:56.788" starttime="20210319 11:11:56.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:56.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:56.789" starttime="20210319 11:11:56.788"/>
</kw>
<status status="PASS" endtime="20210319 11:11:56.790" starttime="20210319 11:11:56.776"/>
</kw>
<msg timestamp="20210319 11:11:56.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:56.790" starttime="20210319 11:11:56.774"/>
</kw>
<msg timestamp="20210319 11:11:56.791" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:11:56.791" starttime="20210319 11:11:56.773"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:11:56.792" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:11:56.793" starttime="20210319 11:11:56.791"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:56.801" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:11:56.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:11:56.810" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:11:56.810" starttime="20210319 11:11:56.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:11:56.813" level="INFO"/>
<status status="PASS" endtime="20210319 11:11:56.813" starttime="20210319 11:11:56.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:11:56.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:11:56.816" starttime="20210319 11:11:56.814"/>
</kw>
<status status="PASS" endtime="20210319 11:11:56.817" starttime="20210319 11:11:56.796"/>
</kw>
<msg timestamp="20210319 11:11:56.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:11:56.818" starttime="20210319 11:11:56.795"/>
</kw>
<status status="PASS" endtime="20210319 11:11:56.819" starttime="20210319 11:11:56.794"/>
</kw>
<status status="PASS" endtime="20210319 11:11:56.819" starttime="20210319 11:11:56.793"/>
</kw>
<status status="PASS" endtime="20210319 11:11:56.819" starttime="20210319 11:11:56.772"/>
</kw>
<status status="PASS" endtime="20210319 11:11:56.819" starttime="20210319 11:11:56.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:11:56.824" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 85329-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:12:02.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:12:02.603" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:12:02.603" starttime="20210319 11:11:56.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:12:02.605" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:12:02.605" starttime="20210319 11:12:02.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:12:02.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:12:02.606" starttime="20210319 11:12:02.605"/>
</kw>
<status status="PASS" endtime="20210319 11:12:02.606" starttime="20210319 11:11:56.821"/>
</kw>
<msg timestamp="20210319 11:12:02.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:12:02.606" starttime="20210319 11:11:56.820"/>
</kw>
<status status="PASS" endtime="20210319 11:12:02.606" starttime="20210319 11:11:56.819"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:12:02.617" level="INFO">Running command 'ozone sh bucket getacl 85329-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:12:08.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:12:08.806" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210319 11:12:08.806" starttime="20210319 11:12:02.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:12:08.808" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210319 11:12:08.809" starttime="20210319 11:12:08.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:12:08.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:12:08.811" starttime="20210319 11:12:08.809"/>
</kw>
<status status="PASS" endtime="20210319 11:12:08.812" starttime="20210319 11:12:02.612"/>
</kw>
<msg timestamp="20210319 11:12:08.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:12:08.813" starttime="20210319 11:12:02.612"/>
</kw>
<msg timestamp="20210319 11:12:08.814" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210319 11:12:08.814" starttime="20210319 11:12:02.607"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:12:08.815" starttime="20210319 11:12:08.814"/>
</kw>
<status status="PASS" endtime="20210319 11:12:08.816" starttime="20210319 11:12:02.607"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:12:08.825" level="INFO">Running command 'ozone sh bucket getacl 85329-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:12:16.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:12:16.833" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:12:16.833" starttime="20210319 11:12:08.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:12:16.834" level="INFO"/>
<status status="PASS" endtime="20210319 11:12:16.834" starttime="20210319 11:12:16.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:12:16.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:12:16.835" starttime="20210319 11:12:16.835"/>
</kw>
<status status="PASS" endtime="20210319 11:12:16.836" starttime="20210319 11:12:08.821"/>
</kw>
<msg timestamp="20210319 11:12:16.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:12:16.836" starttime="20210319 11:12:08.820"/>
</kw>
<msg timestamp="20210319 11:12:16.837" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210319 11:12:16.837" starttime="20210319 11:12:08.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:12:16.838" starttime="20210319 11:12:16.837"/>
</kw>
<status status="PASS" endtime="20210319 11:12:16.838" starttime="20210319 11:12:08.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:12:16.844" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 85329-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:12:24.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:12:24.114" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:12:24.114" starttime="20210319 11:12:16.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:12:24.115" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:12:24.115" starttime="20210319 11:12:24.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:12:24.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:12:24.116" starttime="20210319 11:12:24.116"/>
</kw>
<status status="PASS" endtime="20210319 11:12:24.117" starttime="20210319 11:12:16.840"/>
</kw>
<msg timestamp="20210319 11:12:24.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:12:24.117" starttime="20210319 11:12:16.839"/>
</kw>
<status status="PASS" endtime="20210319 11:12:24.117" starttime="20210319 11:12:16.838"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:12:24.124" level="INFO">Running command 'ozone sh bucket getacl 85329-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:12:32.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:12:32.809" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:12:32.809" starttime="20210319 11:12:24.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:12:32.812" level="INFO"/>
<status status="PASS" endtime="20210319 11:12:32.812" starttime="20210319 11:12:32.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:12:32.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:12:32.813" starttime="20210319 11:12:32.812"/>
</kw>
<status status="PASS" endtime="20210319 11:12:32.814" starttime="20210319 11:12:24.120"/>
</kw>
<msg timestamp="20210319 11:12:32.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:12:32.814" starttime="20210319 11:12:24.119"/>
</kw>
<msg timestamp="20210319 11:12:32.815" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210319 11:12:32.815" starttime="20210319 11:12:24.118"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:12:32.816" starttime="20210319 11:12:32.815"/>
</kw>
<status status="PASS" endtime="20210319 11:12:32.817" starttime="20210319 11:12:24.117"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:12:32.825" level="INFO">Running command 'ozone sh bucket getacl 85329-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:12:40.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:12:40.990" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210319 11:12:40.990" starttime="20210319 11:12:32.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:12:40.991" level="INFO">READ</msg>
<status status="PASS" endtime="20210319 11:12:40.991" starttime="20210319 11:12:40.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:12:40.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:12:40.992" starttime="20210319 11:12:40.992"/>
</kw>
<status status="PASS" endtime="20210319 11:12:40.993" starttime="20210319 11:12:32.821"/>
</kw>
<msg timestamp="20210319 11:12:40.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:12:40.993" starttime="20210319 11:12:32.820"/>
</kw>
<msg timestamp="20210319 11:12:40.993" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210319 11:12:40.993" starttime="20210319 11:12:32.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:12:40.995" starttime="20210319 11:12:40.994"/>
</kw>
<status status="PASS" endtime="20210319 11:12:40.998" starttime="20210319 11:12:32.817"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 11:12:41.001" starttime="20210319 11:11:56.769"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:12:41.015" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:12:41.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:12:41.020" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:12:41.020" starttime="20210319 11:12:41.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:12:41.023" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:12:41.023" starttime="20210319 11:12:41.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:12:41.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:12:41.028" starttime="20210319 11:12:41.024"/>
</kw>
<status status="PASS" endtime="20210319 11:12:41.029" starttime="20210319 11:12:41.010"/>
</kw>
<msg timestamp="20210319 11:12:41.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:12:41.029" starttime="20210319 11:12:41.009"/>
</kw>
<msg timestamp="20210319 11:12:41.030" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:12:41.030" starttime="20210319 11:12:41.008"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:12:41.031" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:12:41.031" starttime="20210319 11:12:41.030"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:12:41.041" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:12:41.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:12:41.246" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:12:41.246" starttime="20210319 11:12:41.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:12:41.247" level="INFO"/>
<status status="PASS" endtime="20210319 11:12:41.248" starttime="20210319 11:12:41.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:12:41.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:12:41.248" starttime="20210319 11:12:41.248"/>
</kw>
<status status="PASS" endtime="20210319 11:12:41.249" starttime="20210319 11:12:41.035"/>
</kw>
<msg timestamp="20210319 11:12:41.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:12:41.249" starttime="20210319 11:12:41.034"/>
</kw>
<status status="PASS" endtime="20210319 11:12:41.249" starttime="20210319 11:12:41.034"/>
</kw>
<status status="PASS" endtime="20210319 11:12:41.249" starttime="20210319 11:12:41.031"/>
</kw>
<status status="PASS" endtime="20210319 11:12:41.249" starttime="20210319 11:12:41.006"/>
</kw>
<status status="PASS" endtime="20210319 11:12:41.250" starttime="20210319 11:12:41.005"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:12:41.254" level="INFO">Running command 'ozone sh bucket link 85329-source/bucket2 85329-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:12:49.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:12:49.002" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:12:49.002" starttime="20210319 11:12:41.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:12:49.003" level="INFO"/>
<status status="PASS" endtime="20210319 11:12:49.003" starttime="20210319 11:12:49.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:12:49.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:12:49.005" starttime="20210319 11:12:49.003"/>
</kw>
<status status="PASS" endtime="20210319 11:12:49.005" starttime="20210319 11:12:41.251"/>
</kw>
<msg timestamp="20210319 11:12:49.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:12:49.005" starttime="20210319 11:12:41.251"/>
</kw>
<status status="PASS" endtime="20210319 11:12:49.006" starttime="20210319 11:12:41.250"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:12:49.010" level="INFO">Running command 'ozone sh bucket create 85329-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:12:56.872" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:12:56.872" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210319 11:12:56.872" starttime="20210319 11:12:49.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:12:56.874" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210319 11:12:56.874" starttime="20210319 11:12:56.873"/>
</kw>
<msg timestamp="20210319 11:12:56.874" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210319 11:12:56.874" starttime="20210319 11:12:49.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:12:56.875" starttime="20210319 11:12:56.875"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:12:56.880" level="INFO">Running command 'ozone sh bucket create 85329-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:03.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:03.968" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:03.968" starttime="20210319 11:12:56.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:03.970" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:03.970" starttime="20210319 11:13:03.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:03.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:03.971" starttime="20210319 11:13:03.970"/>
</kw>
<status status="PASS" endtime="20210319 11:13:03.972" starttime="20210319 11:12:56.876"/>
</kw>
<msg timestamp="20210319 11:13:03.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:03.973" starttime="20210319 11:12:56.876"/>
</kw>
<status status="PASS" endtime="20210319 11:13:03.973" starttime="20210319 11:12:56.875"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:03.978" level="INFO">Running command 'ozone sh bucket link 85329-source/bucket1 85329-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:13.254" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:13:13.255" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210319 11:13:13.255" starttime="20210319 11:13:03.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:13.257" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210319 11:13:13.258" starttime="20210319 11:13:13.256"/>
</kw>
<msg timestamp="20210319 11:13:13.259" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210319 11:13:13.259" starttime="20210319 11:13:03.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:13:13.260" starttime="20210319 11:13:13.259"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 11:13:13.261" starttime="20210319 11:12:41.003"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:13.274" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:13.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:13.279" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:13:13.279" starttime="20210319 11:13:13.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:13.281" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:13:13.281" starttime="20210319 11:13:13.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:13.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:13.283" starttime="20210319 11:13:13.282"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.284" starttime="20210319 11:13:13.269"/>
</kw>
<msg timestamp="20210319 11:13:13.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:13.284" starttime="20210319 11:13:13.268"/>
</kw>
<msg timestamp="20210319 11:13:13.285" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:13:13.285" starttime="20210319 11:13:13.267"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:13:13.286" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:13:13.287" starttime="20210319 11:13:13.285"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:13.292" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:13.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:13.303" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:13.304" starttime="20210319 11:13:13.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:13.305" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:13.306" starttime="20210319 11:13:13.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:13.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:13.307" starttime="20210319 11:13:13.306"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.308" starttime="20210319 11:13:13.289"/>
</kw>
<msg timestamp="20210319 11:13:13.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:13.308" starttime="20210319 11:13:13.289"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.309" starttime="20210319 11:13:13.288"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.309" starttime="20210319 11:13:13.287"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.309" starttime="20210319 11:13:13.266"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.309" starttime="20210319 11:13:13.264"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:13.319" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:13.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:13.327" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:13.327" starttime="20210319 11:13:13.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:13.330" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:13.330" starttime="20210319 11:13:13.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:13.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:13.334" starttime="20210319 11:13:13.330"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.335" starttime="20210319 11:13:13.314"/>
</kw>
<msg timestamp="20210319 11:13:13.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:13.335" starttime="20210319 11:13:13.313"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.336" starttime="20210319 11:13:13.312"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:13.345" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:13.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:13.349" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:13:13.349" starttime="20210319 11:13:13.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:13.350" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:13:13.351" starttime="20210319 11:13:13.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:13.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:13.351" starttime="20210319 11:13:13.351"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.352" starttime="20210319 11:13:13.340"/>
</kw>
<msg timestamp="20210319 11:13:13.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:13.352" starttime="20210319 11:13:13.340"/>
</kw>
<msg timestamp="20210319 11:13:13.353" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:13:13.353" starttime="20210319 11:13:13.338"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:13:13.354" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:13:13.354" starttime="20210319 11:13:13.353"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:13.360" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:13.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:13.370" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:13.370" starttime="20210319 11:13:13.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:13.371" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:13.372" starttime="20210319 11:13:13.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:13.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:13.373" starttime="20210319 11:13:13.372"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.374" starttime="20210319 11:13:13.356"/>
</kw>
<msg timestamp="20210319 11:13:13.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:13.374" starttime="20210319 11:13:13.356"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.374" starttime="20210319 11:13:13.355"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.375" starttime="20210319 11:13:13.354"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.375" starttime="20210319 11:13:13.337"/>
</kw>
<status status="PASS" endtime="20210319 11:13:13.375" starttime="20210319 11:13:13.337"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:13.378" level="INFO">Running command 'ozone sh key list 85329-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:21.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:21.492" level="INFO">${output} = {
  "volumeName" : "85329-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-19T11:02:53.757Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210319 11:13:21.492" starttime="20210319 11:13:13.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:21.495" level="INFO">{
  "volumeName" : "85329-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-19T11:02:53.757Z",
  "modificationTime" : "2021-03-19T11:05:57.823Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210319 11:13:21.495" starttime="20210319 11:13:21.493"/>
</kw>
<msg timestamp="20210319 11:13:21.496" level="INFO">${result} = {
  "volumeName" : "85329-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-19T11:02:53.757Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210319 11:13:21.497" starttime="20210319 11:13:13.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:13:21.498" starttime="20210319 11:13:21.497"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.498" starttime="20210319 11:13:13.311"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.499" starttime="20210319 11:13:13.310"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 11:13:21.500" starttime="20210319 11:13:13.262"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:21.514" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:21.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:21.521" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:13:21.521" starttime="20210319 11:13:21.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:21.523" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:13:21.523" starttime="20210319 11:13:21.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:21.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:21.525" starttime="20210319 11:13:21.524"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.526" starttime="20210319 11:13:21.510"/>
</kw>
<msg timestamp="20210319 11:13:21.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:21.527" starttime="20210319 11:13:21.510"/>
</kw>
<msg timestamp="20210319 11:13:21.528" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:13:21.528" starttime="20210319 11:13:21.509"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:13:21.529" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:13:21.530" starttime="20210319 11:13:21.528"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:21.540" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:21.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:21.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:21.557" starttime="20210319 11:13:21.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:21.558" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:21.558" starttime="20210319 11:13:21.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:21.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:21.559" starttime="20210319 11:13:21.558"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.560" starttime="20210319 11:13:21.533"/>
</kw>
<msg timestamp="20210319 11:13:21.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:21.560" starttime="20210319 11:13:21.533"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.561" starttime="20210319 11:13:21.531"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.561" starttime="20210319 11:13:21.530"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.561" starttime="20210319 11:13:21.508"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.561" starttime="20210319 11:13:21.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:21.571" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:21.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:21.577" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:21.577" starttime="20210319 11:13:21.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:21.579" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:21.579" starttime="20210319 11:13:21.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:21.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:21.581" starttime="20210319 11:13:21.580"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.581" starttime="20210319 11:13:21.566"/>
</kw>
<msg timestamp="20210319 11:13:21.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:21.581" starttime="20210319 11:13:21.565"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.582" starttime="20210319 11:13:21.563"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:21.589" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:21.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:21.593" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:13:21.593" starttime="20210319 11:13:21.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:21.595" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:13:21.595" starttime="20210319 11:13:21.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:21.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:21.596" starttime="20210319 11:13:21.595"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.596" starttime="20210319 11:13:21.585"/>
</kw>
<msg timestamp="20210319 11:13:21.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:21.597" starttime="20210319 11:13:21.585"/>
</kw>
<msg timestamp="20210319 11:13:21.597" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:13:21.597" starttime="20210319 11:13:21.584"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:13:21.599" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:13:21.599" starttime="20210319 11:13:21.598"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:21.606" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:21.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:21.615" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:21.616" starttime="20210319 11:13:21.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:21.617" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:21.618" starttime="20210319 11:13:21.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:21.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:21.619" starttime="20210319 11:13:21.618"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.620" starttime="20210319 11:13:21.602"/>
</kw>
<msg timestamp="20210319 11:13:21.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:21.621" starttime="20210319 11:13:21.601"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.621" starttime="20210319 11:13:21.600"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.621" starttime="20210319 11:13:21.599"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.621" starttime="20210319 11:13:21.583"/>
</kw>
<status status="PASS" endtime="20210319 11:13:21.622" starttime="20210319 11:13:21.582"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:21.625" level="INFO">Running command 'ozone sh key list 85329-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:29.096" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:13:29.096" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 85329-target unreadable-link null</msg>
<status status="PASS" endtime="20210319 11:13:29.096" starttime="20210319 11:13:21.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:29.099" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 85329-target unreadable-link null</msg>
<status status="PASS" endtime="20210319 11:13:29.099" starttime="20210319 11:13:29.097"/>
</kw>
<msg timestamp="20210319 11:13:29.099" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 85329-target unreadable-link null</msg>
<status status="PASS" endtime="20210319 11:13:29.099" starttime="20210319 11:13:21.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:13:29.100" starttime="20210319 11:13:29.100"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.100" starttime="20210319 11:13:21.562"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.100" starttime="20210319 11:13:21.561"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 11:13:29.101" starttime="20210319 11:13:21.505"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:29.109" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:29.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:29.115" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:13:29.115" starttime="20210319 11:13:29.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:29.118" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:13:29.118" starttime="20210319 11:13:29.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:29.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:29.120" starttime="20210319 11:13:29.118"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.120" starttime="20210319 11:13:29.105"/>
</kw>
<msg timestamp="20210319 11:13:29.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:29.121" starttime="20210319 11:13:29.104"/>
</kw>
<msg timestamp="20210319 11:13:29.122" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:13:29.122" starttime="20210319 11:13:29.104"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:13:29.124" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:13:29.124" starttime="20210319 11:13:29.122"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:29.131" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:29.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:29.142" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:29.142" starttime="20210319 11:13:29.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:29.143" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:29.144" starttime="20210319 11:13:29.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:29.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:29.145" starttime="20210319 11:13:29.144"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.146" starttime="20210319 11:13:29.127"/>
</kw>
<msg timestamp="20210319 11:13:29.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:29.147" starttime="20210319 11:13:29.127"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.147" starttime="20210319 11:13:29.125"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.147" starttime="20210319 11:13:29.124"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.148" starttime="20210319 11:13:29.103"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.148" starttime="20210319 11:13:29.103"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:29.155" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:29.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:29.160" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:29.160" starttime="20210319 11:13:29.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:29.162" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:29.162" starttime="20210319 11:13:29.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:29.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:29.163" starttime="20210319 11:13:29.162"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.164" starttime="20210319 11:13:29.151"/>
</kw>
<msg timestamp="20210319 11:13:29.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:29.164" starttime="20210319 11:13:29.151"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.164" starttime="20210319 11:13:29.150"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:29.171" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:29.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:29.175" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:13:29.175" starttime="20210319 11:13:29.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:29.177" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:13:29.177" starttime="20210319 11:13:29.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:29.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:29.179" starttime="20210319 11:13:29.178"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.179" starttime="20210319 11:13:29.167"/>
</kw>
<msg timestamp="20210319 11:13:29.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:29.179" starttime="20210319 11:13:29.167"/>
</kw>
<msg timestamp="20210319 11:13:29.180" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:13:29.180" starttime="20210319 11:13:29.166"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:13:29.181" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:13:29.181" starttime="20210319 11:13:29.180"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:29.188" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:29.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:29.198" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:29.198" starttime="20210319 11:13:29.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:29.200" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:29.200" starttime="20210319 11:13:29.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:29.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:29.202" starttime="20210319 11:13:29.200"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.202" starttime="20210319 11:13:29.184"/>
</kw>
<msg timestamp="20210319 11:13:29.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:29.203" starttime="20210319 11:13:29.183"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.203" starttime="20210319 11:13:29.182"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.203" starttime="20210319 11:13:29.182"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.203" starttime="20210319 11:13:29.165"/>
</kw>
<status status="PASS" endtime="20210319 11:13:29.203" starttime="20210319 11:13:29.165"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:29.210" level="INFO">Running command 'ozone sh bucket info 85329-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:36.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:36.717" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210319 11:13:36.717" starttime="20210319 11:13:29.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:36.719" level="INFO">{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:06:26.544Z",
  "modificationTime" : "2021-03-19T11:07:02.305Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210319 11:13:36.719" starttime="20210319 11:13:36.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:36.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:36.720" starttime="20210319 11:13:36.719"/>
</kw>
<status status="PASS" endtime="20210319 11:13:36.720" starttime="20210319 11:13:29.205"/>
</kw>
<msg timestamp="20210319 11:13:36.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:36.720" starttime="20210319 11:13:29.204"/>
</kw>
<msg timestamp="20210319 11:13:36.721" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210319 11:13:36.721" starttime="20210319 11:13:29.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:13:36.721" starttime="20210319 11:13:36.721"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:13:36.722" starttime="20210319 11:13:36.721"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:36.726" level="INFO">Running command 'ozone sh key list 85329-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:44.231" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:13:44.231" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 85329-source unreadable-bucket </msg>
<status status="PASS" endtime="20210319 11:13:44.231" starttime="20210319 11:13:36.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:44.234" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 85329-source unreadable-bucket </msg>
<status status="PASS" endtime="20210319 11:13:44.235" starttime="20210319 11:13:44.232"/>
</kw>
<msg timestamp="20210319 11:13:44.235" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 85329-source unreadable-bucket </msg>
<status status="PASS" endtime="20210319 11:13:44.236" starttime="20210319 11:13:36.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:13:44.237" starttime="20210319 11:13:44.236"/>
</kw>
<status status="PASS" endtime="20210319 11:13:44.237" starttime="20210319 11:13:29.149"/>
</kw>
<status status="PASS" endtime="20210319 11:13:44.238" starttime="20210319 11:13:29.149"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 11:13:44.238" starttime="20210319 11:13:29.101"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:44.251" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:44.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:44.256" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:13:44.256" starttime="20210319 11:13:44.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:44.258" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:13:44.259" starttime="20210319 11:13:44.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:44.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:44.260" starttime="20210319 11:13:44.259"/>
</kw>
<status status="PASS" endtime="20210319 11:13:44.261" starttime="20210319 11:13:44.246"/>
</kw>
<msg timestamp="20210319 11:13:44.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:44.261" starttime="20210319 11:13:44.245"/>
</kw>
<msg timestamp="20210319 11:13:44.262" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:13:44.262" starttime="20210319 11:13:44.243"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:13:44.264" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:13:44.264" starttime="20210319 11:13:44.263"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:44.270" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:44.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:44.280" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:44.280" starttime="20210319 11:13:44.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:44.282" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:44.282" starttime="20210319 11:13:44.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:44.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:44.283" starttime="20210319 11:13:44.282"/>
</kw>
<status status="PASS" endtime="20210319 11:13:44.284" starttime="20210319 11:13:44.267"/>
</kw>
<msg timestamp="20210319 11:13:44.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:44.284" starttime="20210319 11:13:44.266"/>
</kw>
<status status="PASS" endtime="20210319 11:13:44.284" starttime="20210319 11:13:44.265"/>
</kw>
<status status="PASS" endtime="20210319 11:13:44.285" starttime="20210319 11:13:44.264"/>
</kw>
<status status="PASS" endtime="20210319 11:13:44.285" starttime="20210319 11:13:44.241"/>
</kw>
<status status="PASS" endtime="20210319 11:13:44.285" starttime="20210319 11:13:44.241"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:44.290" level="INFO">Running command 'ozone sh bucket link 85329-target/loop1 85329-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:51.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:51.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:51.823" starttime="20210319 11:13:44.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:51.826" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:51.826" starttime="20210319 11:13:51.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:51.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:51.828" starttime="20210319 11:13:51.827"/>
</kw>
<status status="PASS" endtime="20210319 11:13:51.829" starttime="20210319 11:13:44.287"/>
</kw>
<msg timestamp="20210319 11:13:51.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:51.829" starttime="20210319 11:13:44.286"/>
</kw>
<status status="PASS" endtime="20210319 11:13:51.830" starttime="20210319 11:13:44.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:51.838" level="INFO">Running command 'ozone sh bucket link 85329-target/loop2 85329-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:13:58.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:13:58.677" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:13:58.677" starttime="20210319 11:13:51.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:13:58.679" level="INFO"/>
<status status="PASS" endtime="20210319 11:13:58.679" starttime="20210319 11:13:58.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:13:58.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:13:58.680" starttime="20210319 11:13:58.679"/>
</kw>
<status status="PASS" endtime="20210319 11:13:58.680" starttime="20210319 11:13:51.834"/>
</kw>
<msg timestamp="20210319 11:13:58.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:13:58.680" starttime="20210319 11:13:51.832"/>
</kw>
<status status="PASS" endtime="20210319 11:13:58.681" starttime="20210319 11:13:51.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:13:58.686" level="INFO">Running command 'ozone sh bucket link 85329-target/loop3 85329-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:14:04.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:14:04.802" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:14:04.802" starttime="20210319 11:13:58.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:14:04.803" level="INFO"/>
<status status="PASS" endtime="20210319 11:14:04.803" starttime="20210319 11:14:04.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:14:04.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:14:04.804" starttime="20210319 11:14:04.803"/>
</kw>
<status status="PASS" endtime="20210319 11:14:04.805" starttime="20210319 11:13:58.683"/>
</kw>
<msg timestamp="20210319 11:14:04.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:14:04.805" starttime="20210319 11:13:58.682"/>
</kw>
<status status="PASS" endtime="20210319 11:14:04.805" starttime="20210319 11:13:58.681"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:14:04.810" level="INFO">Running command 'ozone sh key list 85329-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:14:10.913" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:14:10.914" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210319 11:14:10.914" starttime="20210319 11:14:04.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:14:10.915" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210319 11:14:10.915" starttime="20210319 11:14:10.914"/>
</kw>
<msg timestamp="20210319 11:14:10.915" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210319 11:14:10.915" starttime="20210319 11:14:04.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:14:10.916" starttime="20210319 11:14:10.916"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 11:14:10.916" starttime="20210319 11:13:44.239"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:14:10.924" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:14:10.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:14:10.927" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:14:10.928" starttime="20210319 11:14:10.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:14:10.929" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:14:10.929" starttime="20210319 11:14:10.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:14:10.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:14:10.930" starttime="20210319 11:14:10.929"/>
</kw>
<status status="PASS" endtime="20210319 11:14:10.930" starttime="20210319 11:14:10.921"/>
</kw>
<msg timestamp="20210319 11:14:10.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:14:10.930" starttime="20210319 11:14:10.920"/>
</kw>
<msg timestamp="20210319 11:14:10.930" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:14:10.930" starttime="20210319 11:14:10.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:14:10.931" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:14:10.931" starttime="20210319 11:14:10.931"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:14:10.937" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:14:10.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:14:10.948" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:14:10.948" starttime="20210319 11:14:10.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:14:10.950" level="INFO"/>
<status status="PASS" endtime="20210319 11:14:10.950" starttime="20210319 11:14:10.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:14:10.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:14:10.951" starttime="20210319 11:14:10.950"/>
</kw>
<status status="PASS" endtime="20210319 11:14:10.951" starttime="20210319 11:14:10.933"/>
</kw>
<msg timestamp="20210319 11:14:10.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:14:10.951" starttime="20210319 11:14:10.933"/>
</kw>
<status status="PASS" endtime="20210319 11:14:10.952" starttime="20210319 11:14:10.932"/>
</kw>
<status status="PASS" endtime="20210319 11:14:10.952" starttime="20210319 11:14:10.931"/>
</kw>
<status status="PASS" endtime="20210319 11:14:10.952" starttime="20210319 11:14:10.919"/>
</kw>
<status status="PASS" endtime="20210319 11:14:10.952" starttime="20210319 11:14:10.919"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:14:10.956" level="INFO">Running command 'ozone sh bucket link 85329-source/bucket1 85329-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:14:18.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:14:18.543" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:14:18.543" starttime="20210319 11:14:10.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:14:18.545" level="INFO"/>
<status status="PASS" endtime="20210319 11:14:18.546" starttime="20210319 11:14:18.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:14:18.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:14:18.547" starttime="20210319 11:14:18.546"/>
</kw>
<status status="PASS" endtime="20210319 11:14:18.547" starttime="20210319 11:14:10.953"/>
</kw>
<msg timestamp="20210319 11:14:18.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:14:18.548" starttime="20210319 11:14:10.953"/>
</kw>
<status status="PASS" endtime="20210319 11:14:18.548" starttime="20210319 11:14:10.952"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:14:18.555" level="INFO">Running command 'ozone sh key put 85329-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:16:10.918" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210319 11:16:10.919" starttime="20210319 11:14:18.552"/>
</kw>
<status status="FAIL" endtime="20210319 11:16:10.919" starttime="20210319 11:14:18.550"/>
</kw>
<msg timestamp="20210319 11:16:10.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210319 11:16:10.919" starttime="20210319 11:14:18.550"/>
</kw>
<status status="FAIL" endtime="20210319 11:16:10.920" starttime="20210319 11:14:18.548"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210319 11:16:10.920" starttime="20210319 11:14:10.918">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:16:10.931" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:16:10.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:16:10.935" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:16:10.935" starttime="20210319 11:16:10.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:16:10.936" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:16:10.937" starttime="20210319 11:16:10.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:16:10.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:16:10.938" starttime="20210319 11:16:10.937"/>
</kw>
<status status="PASS" endtime="20210319 11:16:10.938" starttime="20210319 11:16:10.927"/>
</kw>
<msg timestamp="20210319 11:16:10.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:16:10.939" starttime="20210319 11:16:10.927"/>
</kw>
<msg timestamp="20210319 11:16:10.939" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:16:10.939" starttime="20210319 11:16:10.926"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:16:10.940" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:16:10.940" starttime="20210319 11:16:10.939"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:16:10.947" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:16:10.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:16:10.962" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:16:10.962" starttime="20210319 11:16:10.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:16:10.965" level="INFO"/>
<status status="PASS" endtime="20210319 11:16:10.965" starttime="20210319 11:16:10.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:16:10.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:16:10.966" starttime="20210319 11:16:10.965"/>
</kw>
<status status="PASS" endtime="20210319 11:16:10.967" starttime="20210319 11:16:10.943"/>
</kw>
<msg timestamp="20210319 11:16:10.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:16:10.967" starttime="20210319 11:16:10.943"/>
</kw>
<status status="PASS" endtime="20210319 11:16:10.968" starttime="20210319 11:16:10.941"/>
</kw>
<status status="PASS" endtime="20210319 11:16:10.968" starttime="20210319 11:16:10.940"/>
</kw>
<status status="PASS" endtime="20210319 11:16:10.968" starttime="20210319 11:16:10.925"/>
</kw>
<status status="PASS" endtime="20210319 11:16:10.968" starttime="20210319 11:16:10.924"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:16:10.975" level="INFO">Running command 'ozone sh bucket delete 85329-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:16:18.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:16:18.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:16:18.915" starttime="20210319 11:16:10.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:16:18.916" level="INFO"/>
<status status="PASS" endtime="20210319 11:16:18.916" starttime="20210319 11:16:18.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:16:18.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:16:18.917" starttime="20210319 11:16:18.916"/>
</kw>
<status status="PASS" endtime="20210319 11:16:18.917" starttime="20210319 11:16:10.970"/>
</kw>
<msg timestamp="20210319 11:16:18.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:16:18.918" starttime="20210319 11:16:10.970"/>
</kw>
<status status="PASS" endtime="20210319 11:16:18.918" starttime="20210319 11:16:10.969"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:16:18.923" level="INFO">Running command 'ozone sh bucket list 85329-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:16:27.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:16:27.532" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T...</msg>
<status status="PASS" endtime="20210319 11:16:27.532" starttime="20210319 11:16:18.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:16:27.533" level="INFO">{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:13:03.679Z",
  "modificationTime" : "2021-03-19T11:13:03.679Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:07:09.293Z",
  "modificationTime" : "2021-03-19T11:07:09.293Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:06:26.544Z",
  "modificationTime" : "2021-03-19T11:07:02.305Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:12:48.670Z",
  "modificationTime" : "2021-03-19T11:12:48.670Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:14:18.250Z",
  "modificationTime" : "2021-03-19T11:14:18.250Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:14:04.704Z",
  "modificationTime" : "2021-03-19T11:14:04.704Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:13:51.742Z",
  "modificationTime" : "2021-03-19T11:13:51.742Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:13:58.620Z",
  "modificationTime" : "2021-03-19T11:13:58.620Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:06:13.357Z",
  "modificationTime" : "2021-03-19T11:06:55.694Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T11:06:20.631Z",
  "modificationTime" : "2021-03-19T11:06:20.631Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "85329-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210319 11:16:27.534" starttime="20210319 11:16:27.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:16:27.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:16:27.535" starttime="20210319 11:16:27.534"/>
</kw>
<status status="PASS" endtime="20210319 11:16:27.535" starttime="20210319 11:16:18.920"/>
</kw>
<msg timestamp="20210319 11:16:27.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:16:27.536" starttime="20210319 11:16:18.919"/>
</kw>
<msg timestamp="20210319 11:16:27.536" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "85329-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-19T...</msg>
<status status="PASS" endtime="20210319 11:16:27.536" starttime="20210319 11:16:18.919"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:16:27.537" starttime="20210319 11:16:27.537"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:16:27.544" level="INFO">Running command 'ozone sh key list 85329-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:16:35.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:16:35.578" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210319 11:16:35.578" starttime="20210319 11:16:27.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:16:35.580" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210319 11:16:35.580" starttime="20210319 11:16:35.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:16:35.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:16:35.583" starttime="20210319 11:16:35.580"/>
</kw>
<status status="PASS" endtime="20210319 11:16:35.584" starttime="20210319 11:16:27.539"/>
</kw>
<msg timestamp="20210319 11:16:35.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:16:35.584" starttime="20210319 11:16:27.538"/>
</kw>
<msg timestamp="20210319 11:16:35.585" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210319 11:16:35.585" starttime="20210319 11:16:27.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:16:35.587" starttime="20210319 11:16:35.585"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 11:16:35.587" starttime="20210319 11:16:10.922"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20210319 11:16:35.594" starttime="20210319 11:02:21.117"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210319 11:16:35.639" level="INFO">${random} = 44904</msg>
<status status="PASS" endtime="20210319 11:16:35.639" starttime="20210319 11:16:35.638"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:16:35.640" level="INFO">${prefix} = 44904</msg>
<status status="PASS" endtime="20210319 11:16:35.640" starttime="20210319 11:16:35.639"/>
</kw>
<status status="PASS" endtime="20210319 11:16:35.640" starttime="20210319 11:16:35.638"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:16:35.646" level="INFO">Running command 'ozone sh volume info /44904-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:16:41.327" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:16:41.327" level="INFO">${output} = VOLUME_NOT_FOUND Volume 44904-rpcbasic is not found</msg>
<status status="PASS" endtime="20210319 11:16:41.327" starttime="20210319 11:16:35.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:16:41.330" level="INFO">VOLUME_NOT_FOUND Volume 44904-rpcbasic is not found</msg>
<status status="PASS" endtime="20210319 11:16:41.330" starttime="20210319 11:16:41.328"/>
</kw>
<msg timestamp="20210319 11:16:41.331" level="INFO">${result} = VOLUME_NOT_FOUND Volume 44904-rpcbasic is not found</msg>
<status status="PASS" endtime="20210319 11:16:41.331" starttime="20210319 11:16:35.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:16:41.333" starttime="20210319 11:16:41.332"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:16:41.344" level="INFO">Running command 'ozone sh volume create /44904-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:16:48.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:16:48.509" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:16:48.509" starttime="20210319 11:16:41.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:16:48.511" level="INFO"/>
<status status="PASS" endtime="20210319 11:16:48.511" starttime="20210319 11:16:48.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:16:48.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:16:48.512" starttime="20210319 11:16:48.511"/>
</kw>
<status status="PASS" endtime="20210319 11:16:48.512" starttime="20210319 11:16:41.337"/>
</kw>
<msg timestamp="20210319 11:16:48.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:16:48.512" starttime="20210319 11:16:41.336"/>
</kw>
<msg timestamp="20210319 11:16:48.513" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210319 11:16:48.513" starttime="20210319 11:16:41.334"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:16:48.514" starttime="20210319 11:16:48.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:16:48.521" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="44904-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:16:56.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:16:56.846" level="INFO">${output} = {
  "metadata": {},
  "name": "44904-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210319 11:16:56.847" starttime="20210319 11:16:48.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:16:56.849" level="INFO">{
  "metadata": {},
  "name": "44904-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-19T11:16:48.196Z",
  "modificationTime": "2021-03-19T11:16:48.196Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210319 11:16:56.849" starttime="20210319 11:16:56.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:16:56.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:16:56.850" starttime="20210319 11:16:56.849"/>
</kw>
<status status="PASS" endtime="20210319 11:16:56.850" starttime="20210319 11:16:48.515"/>
</kw>
<msg timestamp="20210319 11:16:56.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:16:56.850" starttime="20210319 11:16:48.515"/>
</kw>
<msg timestamp="20210319 11:16:56.851" level="INFO">${result} = {
  "metadata": {},
  "name": "44904-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210319 11:16:56.851" starttime="20210319 11:16:48.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:16:56.852" starttime="20210319 11:16:56.851"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:16:56.860" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="44904-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:17:04.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:17:04.606" level="INFO">${output} = {
  "metadata": {},
  "name": "44904-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210319 11:17:04.606" starttime="20210319 11:16:56.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:17:04.608" level="INFO">{
  "metadata": {},
  "name": "44904-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-19T11:16:48.196Z",
  "modificationTime": "2021-03-19T11:16:48.196Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210319 11:17:04.608" starttime="20210319 11:17:04.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:17:04.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:17:04.609" starttime="20210319 11:17:04.608"/>
</kw>
<status status="PASS" endtime="20210319 11:17:04.609" starttime="20210319 11:16:56.854"/>
</kw>
<msg timestamp="20210319 11:17:04.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:17:04.610" starttime="20210319 11:16:56.853"/>
</kw>
<msg timestamp="20210319 11:17:04.610" level="INFO">${result} = {
  "metadata": {},
  "name": "44904-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210319 11:17:04.610" starttime="20210319 11:16:56.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:17:04.611" starttime="20210319 11:17:04.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:17:04.617" level="INFO">Running command 'ozone sh volume setquota /44904-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:17:11.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:17:11.870" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:17:11.870" starttime="20210319 11:17:04.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:17:11.871" level="INFO"/>
<status status="PASS" endtime="20210319 11:17:11.871" starttime="20210319 11:17:11.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:17:11.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:17:11.872" starttime="20210319 11:17:11.871"/>
</kw>
<status status="PASS" endtime="20210319 11:17:11.872" starttime="20210319 11:17:04.612"/>
</kw>
<msg timestamp="20210319 11:17:11.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:17:11.873" starttime="20210319 11:17:04.612"/>
</kw>
<status status="PASS" endtime="20210319 11:17:11.873" starttime="20210319 11:17:04.611"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:17:11.879" level="INFO">Running command 'ozone sh volume info /44904-rpcbasic | jq -r '. | select(.name=="44904-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:17:18.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:17:18.813" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:17:18.813" starttime="20210319 11:17:11.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:17:18.816" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210319 11:17:18.816" starttime="20210319 11:17:18.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:17:18.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:17:18.817" starttime="20210319 11:17:18.816"/>
</kw>
<status status="PASS" endtime="20210319 11:17:18.818" starttime="20210319 11:17:11.875"/>
</kw>
<msg timestamp="20210319 11:17:18.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:17:18.818" starttime="20210319 11:17:11.874"/>
</kw>
<msg timestamp="20210319 11:17:18.819" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:17:18.819" starttime="20210319 11:17:11.873"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:17:18.821" starttime="20210319 11:17:18.820"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:17:18.828" level="INFO">Running command 'ozone sh bucket create /44904-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:17:26.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:17:26.415" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:17:26.415" starttime="20210319 11:17:18.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:17:26.417" level="INFO"/>
<status status="PASS" endtime="20210319 11:17:26.418" starttime="20210319 11:17:26.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:17:26.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:17:26.419" starttime="20210319 11:17:26.418"/>
</kw>
<status status="PASS" endtime="20210319 11:17:26.420" starttime="20210319 11:17:18.823"/>
</kw>
<msg timestamp="20210319 11:17:26.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:17:26.421" starttime="20210319 11:17:18.822"/>
</kw>
<status status="PASS" endtime="20210319 11:17:26.421" starttime="20210319 11:17:18.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:17:26.427" level="INFO">Running command 'ozone sh bucket info /44904-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:17:35.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:17:35.102" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210319 11:17:35.102" starttime="20210319 11:17:26.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:17:35.103" level="INFO">DISK</msg>
<status status="PASS" endtime="20210319 11:17:35.103" starttime="20210319 11:17:35.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:17:35.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:17:35.105" starttime="20210319 11:17:35.104"/>
</kw>
<status status="PASS" endtime="20210319 11:17:35.105" starttime="20210319 11:17:26.424"/>
</kw>
<msg timestamp="20210319 11:17:35.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:17:35.105" starttime="20210319 11:17:26.423"/>
</kw>
<msg timestamp="20210319 11:17:35.106" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210319 11:17:35.106" starttime="20210319 11:17:26.421"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:17:35.107" starttime="20210319 11:17:35.106"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:17:35.113" level="INFO">Running command 'ozone sh bucket info /44904-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:17:43.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:17:43.214" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:17:43.214" starttime="20210319 11:17:35.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:17:43.216" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210319 11:17:43.216" starttime="20210319 11:17:43.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:17:43.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:17:43.218" starttime="20210319 11:17:43.216"/>
</kw>
<status status="PASS" endtime="20210319 11:17:43.218" starttime="20210319 11:17:35.109"/>
</kw>
<msg timestamp="20210319 11:17:43.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:17:43.219" starttime="20210319 11:17:35.109"/>
</kw>
<msg timestamp="20210319 11:17:43.219" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:17:43.219" starttime="20210319 11:17:35.107"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:17:43.220" starttime="20210319 11:17:43.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:17:43.225" level="INFO">Running command 'ozone sh bucket info /44904-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:17:49.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:17:49.109" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210319 11:17:49.109" starttime="20210319 11:17:43.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:17:49.111" level="INFO">100</msg>
<status status="PASS" endtime="20210319 11:17:49.111" starttime="20210319 11:17:49.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:17:49.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:17:49.113" starttime="20210319 11:17:49.112"/>
</kw>
<status status="PASS" endtime="20210319 11:17:49.113" starttime="20210319 11:17:43.222"/>
</kw>
<msg timestamp="20210319 11:17:49.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:17:49.114" starttime="20210319 11:17:43.221"/>
</kw>
<msg timestamp="20210319 11:17:49.114" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210319 11:17:49.114" starttime="20210319 11:17:43.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:17:49.116" starttime="20210319 11:17:49.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:17:49.121" level="INFO">Running command 'ozone sh bucket setquota /44904-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:17:56.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:17:56.936" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:17:56.936" starttime="20210319 11:17:49.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:17:56.937" level="INFO"/>
<status status="PASS" endtime="20210319 11:17:56.937" starttime="20210319 11:17:56.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:17:56.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:17:56.938" starttime="20210319 11:17:56.938"/>
</kw>
<status status="PASS" endtime="20210319 11:17:56.939" starttime="20210319 11:17:49.117"/>
</kw>
<msg timestamp="20210319 11:17:56.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:17:56.939" starttime="20210319 11:17:49.117"/>
</kw>
<status status="PASS" endtime="20210319 11:17:56.939" starttime="20210319 11:17:49.116"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:17:56.944" level="INFO">Running command 'ozone sh bucket info /44904-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:18:04.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:18:04.084" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210319 11:18:04.084" starttime="20210319 11:17:56.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:18:04.087" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210319 11:18:04.087" starttime="20210319 11:18:04.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:18:04.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:18:04.089" starttime="20210319 11:18:04.087"/>
</kw>
<status status="PASS" endtime="20210319 11:18:04.090" starttime="20210319 11:17:56.941"/>
</kw>
<msg timestamp="20210319 11:18:04.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:18:04.091" starttime="20210319 11:17:56.941"/>
</kw>
<msg timestamp="20210319 11:18:04.092" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210319 11:18:04.092" starttime="20210319 11:17:56.939"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:18:04.093" starttime="20210319 11:18:04.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:18:04.099" level="INFO">Running command 'ozone sh bucket info /44904-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:18:11.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:18:11.064" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210319 11:18:11.064" starttime="20210319 11:18:04.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:18:11.065" level="INFO">1000</msg>
<status status="PASS" endtime="20210319 11:18:11.065" starttime="20210319 11:18:11.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:18:11.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:18:11.066" starttime="20210319 11:18:11.066"/>
</kw>
<status status="PASS" endtime="20210319 11:18:11.067" starttime="20210319 11:18:04.095"/>
</kw>
<msg timestamp="20210319 11:18:11.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:18:11.067" starttime="20210319 11:18:04.094"/>
</kw>
<msg timestamp="20210319 11:18:11.067" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210319 11:18:11.067" starttime="20210319 11:18:04.093"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:18:11.068" starttime="20210319 11:18:11.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:18:11.073" level="INFO">Running command 'ozone sh bucket list /44904-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:18:18.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:18:18.424" level="INFO">${output} = 44904-rpcbasic</msg>
<status status="PASS" endtime="20210319 11:18:18.424" starttime="20210319 11:18:11.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:18:18.425" level="INFO">44904-rpcbasic</msg>
<status status="PASS" endtime="20210319 11:18:18.425" starttime="20210319 11:18:18.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:18:18.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:18:18.426" starttime="20210319 11:18:18.425"/>
</kw>
<status status="PASS" endtime="20210319 11:18:18.426" starttime="20210319 11:18:11.070"/>
</kw>
<msg timestamp="20210319 11:18:18.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:18:18.427" starttime="20210319 11:18:11.070"/>
</kw>
<msg timestamp="20210319 11:18:18.427" level="INFO">${result} = 44904-rpcbasic</msg>
<status status="PASS" endtime="20210319 11:18:18.427" starttime="20210319 11:18:11.068"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:18:18.428" starttime="20210319 11:18:18.427"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:18:18.435" level="INFO">Running command 'ozone sh key put /44904-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:21:31.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:21:31.216" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:21:31.216" starttime="20210319 11:18:18.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:21:31.217" level="INFO"/>
<status status="PASS" endtime="20210319 11:21:31.217" starttime="20210319 11:21:31.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:21:31.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:21:31.218" starttime="20210319 11:21:31.217"/>
</kw>
<status status="PASS" endtime="20210319 11:21:31.218" starttime="20210319 11:18:18.430"/>
</kw>
<msg timestamp="20210319 11:21:31.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:21:31.219" starttime="20210319 11:18:18.430"/>
</kw>
<status status="PASS" endtime="20210319 11:21:31.219" starttime="20210319 11:18:18.429"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:21:31.224" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:21:31.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:21:31.229" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:21:31.229" starttime="20210319 11:21:31.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:21:31.230" level="INFO"/>
<status status="PASS" endtime="20210319 11:21:31.231" starttime="20210319 11:21:31.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:21:31.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:21:31.232" starttime="20210319 11:21:31.231"/>
</kw>
<status status="PASS" endtime="20210319 11:21:31.233" starttime="20210319 11:21:31.220"/>
</kw>
<msg timestamp="20210319 11:21:31.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:21:31.233" starttime="20210319 11:21:31.220"/>
</kw>
<status status="PASS" endtime="20210319 11:21:31.233" starttime="20210319 11:21:31.219"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:21:31.240" level="INFO">Running command 'ozone sh key get /44904-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:21:35.642" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210319 11:21:35.643" starttime="20210319 11:21:31.236"/>
</kw>
<status status="FAIL" endtime="20210319 11:21:35.643" starttime="20210319 11:21:31.235"/>
</kw>
<msg timestamp="20210319 11:21:35.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210319 11:21:35.644" starttime="20210319 11:21:31.235"/>
</kw>
<status status="FAIL" endtime="20210319 11:21:35.644" starttime="20210319 11:21:31.233"/>
</kw>
<status status="FAIL" endtime="20210319 11:21:35.644" starttime="20210319 11:18:18.428"/>
</kw>
<status status="FAIL" endtime="20210319 11:21:35.644" starttime="20210319 11:18:18.428"/>
</kw>
<status status="FAIL" endtime="20210319 11:21:35.645" starttime="20210319 11:16:35.642"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210319 11:21:35.645" starttime="20210319 11:16:35.640">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210319 11:21:35.651" starttime="20210319 11:16:35.605"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210319 11:21:35.740" level="INFO">${random} = 48007</msg>
<status status="PASS" endtime="20210319 11:21:35.741" starttime="20210319 11:21:35.740"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:21:35.751" level="INFO">${prefix} = 48007</msg>
<status status="PASS" endtime="20210319 11:21:35.751" starttime="20210319 11:21:35.741"/>
</kw>
<status status="PASS" endtime="20210319 11:21:35.751" starttime="20210319 11:21:35.739"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:21:35.851" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:21:35.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:21:35.868" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:21:35.868" starttime="20210319 11:21:35.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:21:35.871" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:21:35.872" starttime="20210319 11:21:35.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:21:35.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:21:35.874" starttime="20210319 11:21:35.872"/>
</kw>
<status status="PASS" endtime="20210319 11:21:35.874" starttime="20210319 11:21:35.767"/>
</kw>
<msg timestamp="20210319 11:21:35.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:21:35.874" starttime="20210319 11:21:35.766"/>
</kw>
<msg timestamp="20210319 11:21:35.880" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:21:35.880" starttime="20210319 11:21:35.766"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:21:35.889" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:21:35.889" starttime="20210319 11:21:35.881"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:21:35.917" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:21:36.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:21:36.205" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:21:36.205" starttime="20210319 11:21:35.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:21:36.208" level="INFO"/>
<status status="PASS" endtime="20210319 11:21:36.208" starttime="20210319 11:21:36.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:21:36.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:21:36.209" starttime="20210319 11:21:36.208"/>
</kw>
<status status="PASS" endtime="20210319 11:21:36.210" starttime="20210319 11:21:35.898"/>
</kw>
<msg timestamp="20210319 11:21:36.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:21:36.210" starttime="20210319 11:21:35.897"/>
</kw>
<status status="PASS" endtime="20210319 11:21:36.210" starttime="20210319 11:21:35.890"/>
</kw>
<status status="PASS" endtime="20210319 11:21:36.210" starttime="20210319 11:21:35.889"/>
</kw>
<status status="PASS" endtime="20210319 11:21:36.211" starttime="20210319 11:21:35.755"/>
</kw>
<status status="PASS" endtime="20210319 11:21:36.211" starttime="20210319 11:21:35.755"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:21:36.235" level="INFO">Running command 'ozone sh volume info o3://om:9862/48007-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:21:51.533" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:21:51.533" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48007-rpcwoport is not found</msg>
<status status="PASS" endtime="20210319 11:21:51.533" starttime="20210319 11:21:36.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:21:51.535" level="INFO">VOLUME_NOT_FOUND Volume 48007-rpcwoport is not found</msg>
<status status="PASS" endtime="20210319 11:21:51.535" starttime="20210319 11:21:51.534"/>
</kw>
<msg timestamp="20210319 11:21:51.536" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48007-rpcwoport is not found</msg>
<status status="PASS" endtime="20210319 11:21:51.536" starttime="20210319 11:21:36.215"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:21:51.537" starttime="20210319 11:21:51.536"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:21:51.543" level="INFO">Running command 'ozone sh volume create o3://om:9862/48007-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:21:59.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:21:59.339" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:21:59.339" starttime="20210319 11:21:51.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:21:59.340" level="INFO"/>
<status status="PASS" endtime="20210319 11:21:59.341" starttime="20210319 11:21:59.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:21:59.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:21:59.342" starttime="20210319 11:21:59.341"/>
</kw>
<status status="PASS" endtime="20210319 11:21:59.343" starttime="20210319 11:21:51.538"/>
</kw>
<msg timestamp="20210319 11:21:59.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:21:59.343" starttime="20210319 11:21:51.538"/>
</kw>
<msg timestamp="20210319 11:21:59.344" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210319 11:21:59.344" starttime="20210319 11:21:51.537"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:21:59.345" starttime="20210319 11:21:59.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:21:59.356" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="48007-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:22:05.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:22:05.447" level="INFO">${output} = {
  "metadata": {},
  "name": "48007-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210319 11:22:05.448" starttime="20210319 11:21:59.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:22:05.449" level="INFO">{
  "metadata": {},
  "name": "48007-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-19T11:21:59.185Z",
  "modificationTime": "2021-03-19T11:21:59.185Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210319 11:22:05.449" starttime="20210319 11:22:05.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:22:05.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:22:05.450" starttime="20210319 11:22:05.449"/>
</kw>
<status status="PASS" endtime="20210319 11:22:05.450" starttime="20210319 11:21:59.349"/>
</kw>
<msg timestamp="20210319 11:22:05.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:22:05.451" starttime="20210319 11:21:59.348"/>
</kw>
<msg timestamp="20210319 11:22:05.451" level="INFO">${result} = {
  "metadata": {},
  "name": "48007-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210319 11:22:05.451" starttime="20210319 11:21:59.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:22:05.452" starttime="20210319 11:22:05.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:22:05.457" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48007-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:22:13.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:22:13.209" level="INFO">${output} = {
  "metadata": {},
  "name": "48007-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210319 11:22:13.209" starttime="20210319 11:22:05.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:22:13.212" level="INFO">{
  "metadata": {},
  "name": "48007-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-19T11:21:59.185Z",
  "modificationTime": "2021-03-19T11:21:59.185Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210319 11:22:13.213" starttime="20210319 11:22:13.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:22:13.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:22:13.215" starttime="20210319 11:22:13.213"/>
</kw>
<status status="PASS" endtime="20210319 11:22:13.216" starttime="20210319 11:22:05.453"/>
</kw>
<msg timestamp="20210319 11:22:13.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:22:13.216" starttime="20210319 11:22:05.453"/>
</kw>
<msg timestamp="20210319 11:22:13.217" level="INFO">${result} = {
  "metadata": {},
  "name": "48007-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210319 11:22:13.217" starttime="20210319 11:22:05.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:22:13.218" starttime="20210319 11:22:13.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:22:13.227" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/48007-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:22:20.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:22:20.816" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:22:20.816" starttime="20210319 11:22:13.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:22:20.818" level="INFO"/>
<status status="PASS" endtime="20210319 11:22:20.818" starttime="20210319 11:22:20.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:22:20.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:22:20.819" starttime="20210319 11:22:20.818"/>
</kw>
<status status="PASS" endtime="20210319 11:22:20.820" starttime="20210319 11:22:13.221"/>
</kw>
<msg timestamp="20210319 11:22:20.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:22:20.820" starttime="20210319 11:22:13.220"/>
</kw>
<status status="PASS" endtime="20210319 11:22:20.820" starttime="20210319 11:22:13.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:22:20.826" level="INFO">Running command 'ozone sh volume info o3://om:9862/48007-rpcwoport | jq -r '. | select(.name=="48007-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:22:28.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:22:28.447" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:22:28.447" starttime="20210319 11:22:20.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:22:28.449" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210319 11:22:28.449" starttime="20210319 11:22:28.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:22:28.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:22:28.450" starttime="20210319 11:22:28.449"/>
</kw>
<status status="PASS" endtime="20210319 11:22:28.450" starttime="20210319 11:22:20.823"/>
</kw>
<msg timestamp="20210319 11:22:28.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:22:28.451" starttime="20210319 11:22:20.822"/>
</kw>
<msg timestamp="20210319 11:22:28.451" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:22:28.451" starttime="20210319 11:22:20.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:22:28.452" starttime="20210319 11:22:28.451"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:22:28.459" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48007-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:22:36.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:22:36.007" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:22:36.007" starttime="20210319 11:22:28.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:22:36.009" level="INFO"/>
<status status="PASS" endtime="20210319 11:22:36.009" starttime="20210319 11:22:36.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:22:36.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:22:36.010" starttime="20210319 11:22:36.010"/>
</kw>
<status status="PASS" endtime="20210319 11:22:36.011" starttime="20210319 11:22:28.454"/>
</kw>
<msg timestamp="20210319 11:22:36.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:22:36.011" starttime="20210319 11:22:28.454"/>
</kw>
<status status="PASS" endtime="20210319 11:22:36.012" starttime="20210319 11:22:28.452"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:22:36.017" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48007-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:22:42.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:22:42.398" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210319 11:22:42.398" starttime="20210319 11:22:36.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:22:42.400" level="INFO">DISK</msg>
<status status="PASS" endtime="20210319 11:22:42.400" starttime="20210319 11:22:42.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:22:42.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:22:42.401" starttime="20210319 11:22:42.400"/>
</kw>
<status status="PASS" endtime="20210319 11:22:42.401" starttime="20210319 11:22:36.013"/>
</kw>
<msg timestamp="20210319 11:22:42.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:22:42.402" starttime="20210319 11:22:36.013"/>
</kw>
<msg timestamp="20210319 11:22:42.402" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210319 11:22:42.402" starttime="20210319 11:22:36.012"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:22:42.403" starttime="20210319 11:22:42.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:22:42.408" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48007-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:22:50.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:22:50.664" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:22:50.664" starttime="20210319 11:22:42.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:22:50.666" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210319 11:22:50.666" starttime="20210319 11:22:50.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:22:50.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:22:50.667" starttime="20210319 11:22:50.666"/>
</kw>
<status status="PASS" endtime="20210319 11:22:50.667" starttime="20210319 11:22:42.405"/>
</kw>
<msg timestamp="20210319 11:22:50.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:22:50.667" starttime="20210319 11:22:42.405"/>
</kw>
<msg timestamp="20210319 11:22:50.668" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:22:50.668" starttime="20210319 11:22:42.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:22:50.669" starttime="20210319 11:22:50.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:22:50.677" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48007-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:22:58.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:22:58.741" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210319 11:22:58.741" starttime="20210319 11:22:50.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:22:58.742" level="INFO">100</msg>
<status status="PASS" endtime="20210319 11:22:58.743" starttime="20210319 11:22:58.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:22:58.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:22:58.743" starttime="20210319 11:22:58.743"/>
</kw>
<status status="PASS" endtime="20210319 11:22:58.744" starttime="20210319 11:22:50.671"/>
</kw>
<msg timestamp="20210319 11:22:58.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:22:58.745" starttime="20210319 11:22:50.671"/>
</kw>
<msg timestamp="20210319 11:22:58.745" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210319 11:22:58.745" starttime="20210319 11:22:50.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:22:58.746" starttime="20210319 11:22:58.745"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:22:58.752" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/48007-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:23:05.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:23:05.185" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:23:05.185" starttime="20210319 11:22:58.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:23:05.187" level="INFO"/>
<status status="PASS" endtime="20210319 11:23:05.187" starttime="20210319 11:23:05.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:23:05.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:23:05.188" starttime="20210319 11:23:05.187"/>
</kw>
<status status="PASS" endtime="20210319 11:23:05.188" starttime="20210319 11:22:58.747"/>
</kw>
<msg timestamp="20210319 11:23:05.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:23:05.188" starttime="20210319 11:22:58.747"/>
</kw>
<status status="PASS" endtime="20210319 11:23:05.189" starttime="20210319 11:22:58.746"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:23:05.194" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48007-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:23:11.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:23:11.021" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210319 11:23:11.021" starttime="20210319 11:23:05.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:23:11.023" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210319 11:23:11.023" starttime="20210319 11:23:11.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:23:11.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:23:11.024" starttime="20210319 11:23:11.023"/>
</kw>
<status status="PASS" endtime="20210319 11:23:11.024" starttime="20210319 11:23:05.190"/>
</kw>
<msg timestamp="20210319 11:23:11.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:23:11.025" starttime="20210319 11:23:05.190"/>
</kw>
<msg timestamp="20210319 11:23:11.025" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210319 11:23:11.025" starttime="20210319 11:23:05.189"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:23:11.026" starttime="20210319 11:23:11.025"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:23:11.030" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48007-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:23:17.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:23:17.215" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210319 11:23:17.215" starttime="20210319 11:23:11.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:23:17.217" level="INFO">1000</msg>
<status status="PASS" endtime="20210319 11:23:17.217" starttime="20210319 11:23:17.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:23:17.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:23:17.218" starttime="20210319 11:23:17.217"/>
</kw>
<status status="PASS" endtime="20210319 11:23:17.219" starttime="20210319 11:23:11.028"/>
</kw>
<msg timestamp="20210319 11:23:17.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:23:17.219" starttime="20210319 11:23:11.027"/>
</kw>
<msg timestamp="20210319 11:23:17.219" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210319 11:23:17.220" starttime="20210319 11:23:11.026"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:23:17.221" starttime="20210319 11:23:17.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:23:17.229" level="INFO">Running command 'ozone sh bucket list o3://om:9862/48007-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:23:25.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:23:25.215" level="INFO">${output} = 48007-rpcwoport</msg>
<status status="PASS" endtime="20210319 11:23:25.215" starttime="20210319 11:23:17.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:23:25.218" level="INFO">48007-rpcwoport</msg>
<status status="PASS" endtime="20210319 11:23:25.218" starttime="20210319 11:23:25.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:23:25.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:23:25.220" starttime="20210319 11:23:25.219"/>
</kw>
<status status="PASS" endtime="20210319 11:23:25.221" starttime="20210319 11:23:17.224"/>
</kw>
<msg timestamp="20210319 11:23:25.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:23:25.222" starttime="20210319 11:23:17.223"/>
</kw>
<msg timestamp="20210319 11:23:25.223" level="INFO">${result} = 48007-rpcwoport</msg>
<status status="PASS" endtime="20210319 11:23:25.223" starttime="20210319 11:23:17.222"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:23:25.224" starttime="20210319 11:23:25.223"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:23:25.233" level="INFO">Running command 'ozone sh key put o3://om:9862/48007-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:26:35.754" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210319 11:26:35.754" starttime="20210319 11:23:25.229"/>
</kw>
<status status="FAIL" endtime="20210319 11:26:35.755" starttime="20210319 11:23:25.227"/>
</kw>
<msg timestamp="20210319 11:26:35.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210319 11:26:35.755" starttime="20210319 11:23:25.226"/>
</kw>
<status status="FAIL" endtime="20210319 11:26:35.755" starttime="20210319 11:23:25.225"/>
</kw>
<status status="FAIL" endtime="20210319 11:26:35.755" starttime="20210319 11:23:25.224"/>
</kw>
<status status="FAIL" endtime="20210319 11:26:35.756" starttime="20210319 11:23:25.224"/>
</kw>
<status status="FAIL" endtime="20210319 11:26:35.756" starttime="20210319 11:21:36.212"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210319 11:26:35.756" starttime="20210319 11:21:35.752">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:26:35.765" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:26:35.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:26:35.769" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:26:35.770" starttime="20210319 11:26:35.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:26:35.772" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:26:35.772" starttime="20210319 11:26:35.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:26:35.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:26:35.774" starttime="20210319 11:26:35.773"/>
</kw>
<status status="PASS" endtime="20210319 11:26:35.775" starttime="20210319 11:26:35.762"/>
</kw>
<msg timestamp="20210319 11:26:35.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:26:35.775" starttime="20210319 11:26:35.762"/>
</kw>
<msg timestamp="20210319 11:26:35.776" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:26:35.776" starttime="20210319 11:26:35.761"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:26:35.777" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:26:35.778" starttime="20210319 11:26:35.776"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:26:35.785" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:26:35.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:26:35.825" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:26:35.825" starttime="20210319 11:26:35.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:26:35.827" level="INFO"/>
<status status="PASS" endtime="20210319 11:26:35.827" starttime="20210319 11:26:35.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:26:35.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:26:35.828" starttime="20210319 11:26:35.827"/>
</kw>
<status status="PASS" endtime="20210319 11:26:35.828" starttime="20210319 11:26:35.781"/>
</kw>
<msg timestamp="20210319 11:26:35.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:26:35.829" starttime="20210319 11:26:35.781"/>
</kw>
<status status="PASS" endtime="20210319 11:26:35.829" starttime="20210319 11:26:35.779"/>
</kw>
<status status="PASS" endtime="20210319 11:26:35.829" starttime="20210319 11:26:35.778"/>
</kw>
<status status="PASS" endtime="20210319 11:26:35.829" starttime="20210319 11:26:35.760"/>
</kw>
<status status="PASS" endtime="20210319 11:26:35.829" starttime="20210319 11:26:35.759"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:26:35.838" level="INFO">Running command 'ozone sh volume create o3://om:9862/48007-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:26:43.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:26:43.643" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:26:43.643" starttime="20210319 11:26:35.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:26:43.645" level="INFO"/>
<status status="PASS" endtime="20210319 11:26:43.645" starttime="20210319 11:26:43.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:26:43.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:26:43.646" starttime="20210319 11:26:43.645"/>
</kw>
<status status="PASS" endtime="20210319 11:26:43.646" starttime="20210319 11:26:35.834"/>
</kw>
<msg timestamp="20210319 11:26:43.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:26:43.647" starttime="20210319 11:26:35.833"/>
</kw>
<status status="PASS" endtime="20210319 11:26:43.647" starttime="20210319 11:26:35.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:26:43.655" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48007-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:26:51.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:26:51.161" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:26:51.161" starttime="20210319 11:26:43.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:26:51.163" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:26:51.163" starttime="20210319 11:26:51.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:26:51.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:26:51.164" starttime="20210319 11:26:51.163"/>
</kw>
<status status="PASS" endtime="20210319 11:26:51.165" starttime="20210319 11:26:43.650"/>
</kw>
<msg timestamp="20210319 11:26:51.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:26:51.165" starttime="20210319 11:26:43.649"/>
</kw>
<msg timestamp="20210319 11:26:51.166" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:26:51.166" starttime="20210319 11:26:43.647"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:26:51.167" starttime="20210319 11:26:51.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:26:51.173" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/48007-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:26:58.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:26:58.479" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210319 11:26:58.480" starttime="20210319 11:26:51.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:26:58.481" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210319 11:26:58.482" starttime="20210319 11:26:58.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:26:58.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:26:58.482" starttime="20210319 11:26:58.482"/>
</kw>
<status status="PASS" endtime="20210319 11:26:58.483" starttime="20210319 11:26:51.169"/>
</kw>
<msg timestamp="20210319 11:26:58.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:26:58.483" starttime="20210319 11:26:51.168"/>
</kw>
<msg timestamp="20210319 11:26:58.483" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210319 11:26:58.483" starttime="20210319 11:26:51.167"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:26:58.491" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48007-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:27:06.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:27:06.123" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:27:06.123" starttime="20210319 11:26:58.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:27:06.126" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:27:06.126" starttime="20210319 11:27:06.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:27:06.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:27:06.128" starttime="20210319 11:27:06.127"/>
</kw>
<status status="PASS" endtime="20210319 11:27:06.128" starttime="20210319 11:26:58.485"/>
</kw>
<msg timestamp="20210319 11:27:06.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:27:06.129" starttime="20210319 11:26:58.485"/>
</kw>
<msg timestamp="20210319 11:27:06.130" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:27:06.130" starttime="20210319 11:26:58.484"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:27:06.131" starttime="20210319 11:27:06.130"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:27:06.138" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/48007-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:27:12.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:27:12.582" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210319 11:27:12.582" starttime="20210319 11:27:06.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:27:12.583" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210319 11:27:12.584" starttime="20210319 11:27:12.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:27:12.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:27:12.585" starttime="20210319 11:27:12.584"/>
</kw>
<status status="PASS" endtime="20210319 11:27:12.585" starttime="20210319 11:27:06.134"/>
</kw>
<msg timestamp="20210319 11:27:12.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:27:12.586" starttime="20210319 11:27:06.134"/>
</kw>
<msg timestamp="20210319 11:27:12.586" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210319 11:27:12.586" starttime="20210319 11:27:06.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:27:12.591" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48007-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:27:18.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:27:18.437" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:27:18.437" starttime="20210319 11:27:12.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:27:18.440" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:27:18.440" starttime="20210319 11:27:18.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:27:18.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:27:18.442" starttime="20210319 11:27:18.440"/>
</kw>
<status status="PASS" endtime="20210319 11:27:18.442" starttime="20210319 11:27:12.588"/>
</kw>
<msg timestamp="20210319 11:27:18.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:27:18.442" starttime="20210319 11:27:12.587"/>
</kw>
<msg timestamp="20210319 11:27:18.443" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:27:18.444" starttime="20210319 11:27:12.586"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:27:18.446" starttime="20210319 11:27:18.444"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:27:18.452" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/48007-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:27:25.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:27:25.306" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:27:25.306" starttime="20210319 11:27:18.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:27:25.307" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:27:25.307" starttime="20210319 11:27:25.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:27:25.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:27:25.308" starttime="20210319 11:27:25.307"/>
</kw>
<status status="PASS" endtime="20210319 11:27:25.309" starttime="20210319 11:27:18.448"/>
</kw>
<msg timestamp="20210319 11:27:25.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:27:25.309" starttime="20210319 11:27:18.448"/>
</kw>
<msg timestamp="20210319 11:27:25.309" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:27:25.309" starttime="20210319 11:27:18.446"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:27:25.314" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48007-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:27:31.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:27:31.528" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210319 11:27:31.528" starttime="20210319 11:27:25.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:27:31.531" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:27:31.531" starttime="20210319 11:27:31.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:27:31.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:27:31.532" starttime="20210319 11:27:31.531"/>
</kw>
<status status="PASS" endtime="20210319 11:27:31.535" starttime="20210319 11:27:25.311"/>
</kw>
<msg timestamp="20210319 11:27:31.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:27:31.535" starttime="20210319 11:27:25.310"/>
</kw>
<msg timestamp="20210319 11:27:31.536" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210319 11:27:31.536" starttime="20210319 11:27:25.310"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:27:31.537" starttime="20210319 11:27:31.536"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:27:31.538" starttime="20210319 11:27:31.537"/>
</kw>
<status status="PASS" endtime="20210319 11:27:31.538" starttime="20210319 11:26:35.830"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210319 11:27:31.539" starttime="20210319 11:26:35.758"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:27:31.551" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:27:31.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:27:31.555" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:27:31.555" starttime="20210319 11:27:31.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:27:31.557" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:27:31.557" starttime="20210319 11:27:31.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:27:31.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:27:31.559" starttime="20210319 11:27:31.558"/>
</kw>
<status status="PASS" endtime="20210319 11:27:31.560" starttime="20210319 11:27:31.547"/>
</kw>
<msg timestamp="20210319 11:27:31.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:27:31.560" starttime="20210319 11:27:31.546"/>
</kw>
<msg timestamp="20210319 11:27:31.560" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:27:31.560" starttime="20210319 11:27:31.545"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:27:31.562" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:27:31.562" starttime="20210319 11:27:31.561"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:27:31.571" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:27:31.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:27:31.703" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:27:31.703" starttime="20210319 11:27:31.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:27:31.704" level="INFO"/>
<status status="PASS" endtime="20210319 11:27:31.704" starttime="20210319 11:27:31.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:27:31.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:27:31.705" starttime="20210319 11:27:31.704"/>
</kw>
<status status="PASS" endtime="20210319 11:27:31.705" starttime="20210319 11:27:31.566"/>
</kw>
<msg timestamp="20210319 11:27:31.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:27:31.705" starttime="20210319 11:27:31.565"/>
</kw>
<status status="PASS" endtime="20210319 11:27:31.706" starttime="20210319 11:27:31.564"/>
</kw>
<status status="PASS" endtime="20210319 11:27:31.706" starttime="20210319 11:27:31.563"/>
</kw>
<status status="PASS" endtime="20210319 11:27:31.706" starttime="20210319 11:27:31.543"/>
</kw>
<status status="PASS" endtime="20210319 11:27:31.706" starttime="20210319 11:27:31.542"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:27:31.712" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48007-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:27:40.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:27:40.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:27:40.444" starttime="20210319 11:27:31.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:27:40.447" level="INFO"/>
<status status="PASS" endtime="20210319 11:27:40.447" starttime="20210319 11:27:40.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:27:40.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:27:40.449" starttime="20210319 11:27:40.447"/>
</kw>
<status status="PASS" endtime="20210319 11:27:40.450" starttime="20210319 11:27:31.709"/>
</kw>
<msg timestamp="20210319 11:27:40.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:27:40.450" starttime="20210319 11:27:31.709"/>
</kw>
<status status="PASS" endtime="20210319 11:27:40.451" starttime="20210319 11:27:31.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:27:40.459" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48007-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:27:48.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:27:48.397" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:27:48.397" starttime="20210319 11:27:40.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:27:48.399" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:27:48.399" starttime="20210319 11:27:48.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:27:48.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:27:48.401" starttime="20210319 11:27:48.400"/>
</kw>
<status status="PASS" endtime="20210319 11:27:48.401" starttime="20210319 11:27:40.454"/>
</kw>
<msg timestamp="20210319 11:27:48.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:27:48.401" starttime="20210319 11:27:40.452"/>
</kw>
<msg timestamp="20210319 11:27:48.402" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:27:48.402" starttime="20210319 11:27:40.451"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:27:48.403" starttime="20210319 11:27:48.403"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:27:48.409" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/48007-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:27:56.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:27:56.099" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210319 11:27:56.099" starttime="20210319 11:27:48.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:27:56.100" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210319 11:27:56.101" starttime="20210319 11:27:56.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:27:56.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:27:56.102" starttime="20210319 11:27:56.101"/>
</kw>
<status status="PASS" endtime="20210319 11:27:56.102" starttime="20210319 11:27:48.405"/>
</kw>
<msg timestamp="20210319 11:27:56.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:27:56.103" starttime="20210319 11:27:48.404"/>
</kw>
<msg timestamp="20210319 11:27:56.104" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210319 11:27:56.104" starttime="20210319 11:27:48.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:27:56.110" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48007-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:28:04.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:28:04.231" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:28:04.231" starttime="20210319 11:27:56.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:28:04.233" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:28:04.233" starttime="20210319 11:28:04.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:28:04.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:28:04.234" starttime="20210319 11:28:04.233"/>
</kw>
<status status="PASS" endtime="20210319 11:28:04.234" starttime="20210319 11:27:56.106"/>
</kw>
<msg timestamp="20210319 11:28:04.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:28:04.234" starttime="20210319 11:27:56.105"/>
</kw>
<msg timestamp="20210319 11:28:04.235" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:28:04.235" starttime="20210319 11:27:56.104"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:28:04.243" starttime="20210319 11:28:04.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:28:04.251" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/48007-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:28:12.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:28:12.504" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210319 11:28:12.504" starttime="20210319 11:28:04.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:28:12.506" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210319 11:28:12.506" starttime="20210319 11:28:12.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:28:12.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:28:12.507" starttime="20210319 11:28:12.506"/>
</kw>
<status status="PASS" endtime="20210319 11:28:12.508" starttime="20210319 11:28:04.245"/>
</kw>
<msg timestamp="20210319 11:28:12.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:28:12.508" starttime="20210319 11:28:04.245"/>
</kw>
<msg timestamp="20210319 11:28:12.509" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210319 11:28:12.509" starttime="20210319 11:28:04.243"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:28:12.515" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48007-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:28:20.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:28:20.573" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:28:20.573" starttime="20210319 11:28:12.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:28:20.575" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:28:20.575" starttime="20210319 11:28:20.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:28:20.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:28:20.576" starttime="20210319 11:28:20.575"/>
</kw>
<status status="PASS" endtime="20210319 11:28:20.576" starttime="20210319 11:28:12.512"/>
</kw>
<msg timestamp="20210319 11:28:20.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:28:20.577" starttime="20210319 11:28:12.512"/>
</kw>
<msg timestamp="20210319 11:28:20.577" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:28:20.577" starttime="20210319 11:28:12.509"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:28:20.578" starttime="20210319 11:28:20.577"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:28:20.585" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/48007-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:28:27.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:28:27.709" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:28:27.710" starttime="20210319 11:28:20.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:28:27.712" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:28:27.712" starttime="20210319 11:28:27.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:28:27.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:28:27.714" starttime="20210319 11:28:27.713"/>
</kw>
<status status="PASS" endtime="20210319 11:28:27.714" starttime="20210319 11:28:20.580"/>
</kw>
<msg timestamp="20210319 11:28:27.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:28:27.715" starttime="20210319 11:28:20.580"/>
</kw>
<msg timestamp="20210319 11:28:27.715" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:28:27.716" starttime="20210319 11:28:20.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:28:27.723" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48007-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:28:36.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:28:36.419" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210319 11:28:36.419" starttime="20210319 11:28:27.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:28:36.421" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:28:36.421" starttime="20210319 11:28:36.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:28:36.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:28:36.422" starttime="20210319 11:28:36.421"/>
</kw>
<status status="PASS" endtime="20210319 11:28:36.423" starttime="20210319 11:28:27.718"/>
</kw>
<msg timestamp="20210319 11:28:36.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:28:36.423" starttime="20210319 11:28:27.718"/>
</kw>
<msg timestamp="20210319 11:28:36.425" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210319 11:28:36.425" starttime="20210319 11:28:27.716"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:28:36.425" starttime="20210319 11:28:36.425"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:28:36.426" starttime="20210319 11:28:36.426"/>
</kw>
<status status="PASS" endtime="20210319 11:28:36.426" starttime="20210319 11:27:31.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210319 11:28:36.427" starttime="20210319 11:27:31.541"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:28:36.436" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:28:36.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:28:36.440" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:28:36.440" starttime="20210319 11:28:36.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:28:36.443" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:28:36.443" starttime="20210319 11:28:36.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:28:36.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:28:36.444" starttime="20210319 11:28:36.443"/>
</kw>
<status status="PASS" endtime="20210319 11:28:36.444" starttime="20210319 11:28:36.432"/>
</kw>
<msg timestamp="20210319 11:28:36.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:28:36.444" starttime="20210319 11:28:36.431"/>
</kw>
<msg timestamp="20210319 11:28:36.445" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:28:36.445" starttime="20210319 11:28:36.429"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:28:36.446" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:28:36.446" starttime="20210319 11:28:36.445"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:28:36.453" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:28:36.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:28:36.462" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:28:36.462" starttime="20210319 11:28:36.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:28:36.464" level="INFO"/>
<status status="PASS" endtime="20210319 11:28:36.464" starttime="20210319 11:28:36.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:28:36.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:28:36.465" starttime="20210319 11:28:36.464"/>
</kw>
<status status="PASS" endtime="20210319 11:28:36.465" starttime="20210319 11:28:36.450"/>
</kw>
<msg timestamp="20210319 11:28:36.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:28:36.466" starttime="20210319 11:28:36.449"/>
</kw>
<status status="PASS" endtime="20210319 11:28:36.466" starttime="20210319 11:28:36.447"/>
</kw>
<status status="PASS" endtime="20210319 11:28:36.466" starttime="20210319 11:28:36.447"/>
</kw>
<status status="PASS" endtime="20210319 11:28:36.466" starttime="20210319 11:28:36.429"/>
</kw>
<status status="PASS" endtime="20210319 11:28:36.466" starttime="20210319 11:28:36.428"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:28:36.472" level="INFO">Running command 'ozone sh key put o3://om:9862/48007-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:31:50.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:31:50.138" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:31:50.138" starttime="20210319 11:28:36.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:31:50.140" level="INFO"/>
<status status="PASS" endtime="20210319 11:31:50.141" starttime="20210319 11:31:50.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:31:50.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:31:50.143" starttime="20210319 11:31:50.141"/>
</kw>
<status status="PASS" endtime="20210319 11:31:50.143" starttime="20210319 11:28:36.469"/>
</kw>
<msg timestamp="20210319 11:31:50.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:31:50.144" starttime="20210319 11:28:36.468"/>
</kw>
<status status="PASS" endtime="20210319 11:31:50.144" starttime="20210319 11:28:36.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:31:50.153" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48007-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:31:57.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:31:57.666" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:31:57.666" starttime="20210319 11:31:50.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:31:57.668" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:31:57.668" starttime="20210319 11:31:57.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:31:57.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:31:57.670" starttime="20210319 11:31:57.669"/>
</kw>
<status status="PASS" endtime="20210319 11:31:57.670" starttime="20210319 11:31:50.146"/>
</kw>
<msg timestamp="20210319 11:31:57.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:31:57.670" starttime="20210319 11:31:50.146"/>
</kw>
<msg timestamp="20210319 11:31:57.671" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:31:57.671" starttime="20210319 11:31:50.145"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:31:57.672" starttime="20210319 11:31:57.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:31:57.683" level="INFO">Running command 'ozone sh key addacl o3://om:9862/48007-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:32:05.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:32:05.001" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:32:05.001" starttime="20210319 11:31:57.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:32:05.003" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:32:05.003" starttime="20210319 11:32:05.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:32:05.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:32:05.004" starttime="20210319 11:32:05.003"/>
</kw>
<status status="PASS" endtime="20210319 11:32:05.004" starttime="20210319 11:31:57.676"/>
</kw>
<msg timestamp="20210319 11:32:05.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:32:05.005" starttime="20210319 11:31:57.675"/>
</kw>
<msg timestamp="20210319 11:32:05.005" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210319 11:32:05.005" starttime="20210319 11:31:57.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:32:05.011" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48007-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:32:13.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:32:13.316" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:32:13.316" starttime="20210319 11:32:05.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:32:13.318" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:32:13.318" starttime="20210319 11:32:13.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:32:13.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:32:13.321" starttime="20210319 11:32:13.319"/>
</kw>
<status status="PASS" endtime="20210319 11:32:13.322" starttime="20210319 11:32:05.007"/>
</kw>
<msg timestamp="20210319 11:32:13.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:32:13.323" starttime="20210319 11:32:05.006"/>
</kw>
<msg timestamp="20210319 11:32:13.323" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:32:13.323" starttime="20210319 11:32:05.005"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:32:13.326" starttime="20210319 11:32:13.324"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:32:13.333" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/48007-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:32:20.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:32:20.939" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210319 11:32:20.939" starttime="20210319 11:32:13.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:32:20.941" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210319 11:32:20.942" starttime="20210319 11:32:20.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:32:20.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:32:20.943" starttime="20210319 11:32:20.942"/>
</kw>
<status status="PASS" endtime="20210319 11:32:20.944" starttime="20210319 11:32:13.328"/>
</kw>
<msg timestamp="20210319 11:32:20.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:32:20.944" starttime="20210319 11:32:13.327"/>
</kw>
<msg timestamp="20210319 11:32:20.945" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210319 11:32:20.945" starttime="20210319 11:32:13.326"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:32:20.952" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48007-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:32:28.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:32:28.129" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:32:28.129" starttime="20210319 11:32:20.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:32:28.131" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:32:28.131" starttime="20210319 11:32:28.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:32:28.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:32:28.132" starttime="20210319 11:32:28.131"/>
</kw>
<status status="PASS" endtime="20210319 11:32:28.132" starttime="20210319 11:32:20.947"/>
</kw>
<msg timestamp="20210319 11:32:28.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:32:28.132" starttime="20210319 11:32:20.947"/>
</kw>
<msg timestamp="20210319 11:32:28.132" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:32:28.132" starttime="20210319 11:32:20.945"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:32:28.133" starttime="20210319 11:32:28.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:32:28.137" level="INFO">Running command 'ozone sh key setacl o3://om:9862/48007-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:32:34.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:32:34.887" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:32:34.888" starttime="20210319 11:32:28.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:32:34.889" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:32:34.889" starttime="20210319 11:32:34.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:32:34.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:32:34.890" starttime="20210319 11:32:34.889"/>
</kw>
<status status="PASS" endtime="20210319 11:32:34.890" starttime="20210319 11:32:28.134"/>
</kw>
<msg timestamp="20210319 11:32:34.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:32:34.891" starttime="20210319 11:32:28.134"/>
</kw>
<msg timestamp="20210319 11:32:34.891" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:32:34.891" starttime="20210319 11:32:28.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:32:34.899" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48007-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:32:42.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:32:42.793" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210319 11:32:42.793" starttime="20210319 11:32:34.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:32:42.795" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:32:42.795" starttime="20210319 11:32:42.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:32:42.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:32:42.796" starttime="20210319 11:32:42.795"/>
</kw>
<status status="PASS" endtime="20210319 11:32:42.797" starttime="20210319 11:32:34.895"/>
</kw>
<msg timestamp="20210319 11:32:42.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:32:42.797" starttime="20210319 11:32:34.894"/>
</kw>
<msg timestamp="20210319 11:32:42.799" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210319 11:32:42.799" starttime="20210319 11:32:34.891"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:32:42.801" starttime="20210319 11:32:42.799"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:32:42.803" starttime="20210319 11:32:42.801"/>
</kw>
<status status="PASS" endtime="20210319 11:32:42.804" starttime="20210319 11:28:36.467"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210319 11:32:42.804" starttime="20210319 11:28:36.427"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:32:42.814" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:32:42.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:32:42.819" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:32:42.819" starttime="20210319 11:32:42.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:32:42.821" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:32:42.821" starttime="20210319 11:32:42.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:32:42.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:32:42.822" starttime="20210319 11:32:42.821"/>
</kw>
<status status="PASS" endtime="20210319 11:32:42.822" starttime="20210319 11:32:42.810"/>
</kw>
<msg timestamp="20210319 11:32:42.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:32:42.822" starttime="20210319 11:32:42.810"/>
</kw>
<msg timestamp="20210319 11:32:42.822" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:32:42.823" starttime="20210319 11:32:42.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:32:42.823" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:32:42.823" starttime="20210319 11:32:42.823"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:32:42.829" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:32:43.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:32:43.036" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:32:43.036" starttime="20210319 11:32:42.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:32:43.038" level="INFO"/>
<status status="PASS" endtime="20210319 11:32:43.039" starttime="20210319 11:32:43.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:32:43.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:32:43.039" starttime="20210319 11:32:43.039"/>
</kw>
<status status="PASS" endtime="20210319 11:32:43.040" starttime="20210319 11:32:42.825"/>
</kw>
<msg timestamp="20210319 11:32:43.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:32:43.040" starttime="20210319 11:32:42.825"/>
</kw>
<status status="PASS" endtime="20210319 11:32:43.041" starttime="20210319 11:32:42.824"/>
</kw>
<status status="PASS" endtime="20210319 11:32:43.041" starttime="20210319 11:32:42.824"/>
</kw>
<status status="PASS" endtime="20210319 11:32:43.041" starttime="20210319 11:32:42.809"/>
</kw>
<status status="PASS" endtime="20210319 11:32:43.041" starttime="20210319 11:32:42.808"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:32:43.048" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/48007-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:32:50.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:32:50.354" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210319 11:32:50.354" starttime="20210319 11:32:43.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:32:50.356" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210319 11:32:50.356" starttime="20210319 11:32:50.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:32:50.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:32:50.357" starttime="20210319 11:32:50.356"/>
</kw>
<status status="PASS" endtime="20210319 11:32:50.358" starttime="20210319 11:32:43.044"/>
</kw>
<msg timestamp="20210319 11:32:50.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:32:50.359" starttime="20210319 11:32:43.043"/>
</kw>
<status status="PASS" endtime="20210319 11:32:50.359" starttime="20210319 11:32:43.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:32:50.367" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/48007-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:32:58.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:32:58.643" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:32:58.643" starttime="20210319 11:32:50.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:32:58.645" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:32:58.645" starttime="20210319 11:32:58.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:32:58.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:32:58.647" starttime="20210319 11:32:58.646"/>
</kw>
<status status="PASS" endtime="20210319 11:32:58.648" starttime="20210319 11:32:50.362"/>
</kw>
<msg timestamp="20210319 11:32:58.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:32:58.648" starttime="20210319 11:32:50.361"/>
</kw>
<msg timestamp="20210319 11:32:58.649" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:32:58.649" starttime="20210319 11:32:50.359"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:32:58.651" starttime="20210319 11:32:58.649"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:32:58.659" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/48007-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:33:06.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:33:06.477" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210319 11:33:06.478" starttime="20210319 11:32:58.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:33:06.479" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210319 11:33:06.479" starttime="20210319 11:33:06.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:33:06.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:33:06.481" starttime="20210319 11:33:06.480"/>
</kw>
<status status="PASS" endtime="20210319 11:33:06.481" starttime="20210319 11:32:58.655"/>
</kw>
<msg timestamp="20210319 11:33:06.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:33:06.482" starttime="20210319 11:32:58.653"/>
</kw>
<msg timestamp="20210319 11:33:06.482" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210319 11:33:06.482" starttime="20210319 11:32:58.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:33:06.489" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/48007-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:33:14.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:33:14.708" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:33:14.708" starttime="20210319 11:33:06.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:33:14.710" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:33:14.710" starttime="20210319 11:33:14.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:33:14.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:33:14.711" starttime="20210319 11:33:14.710"/>
</kw>
<status status="PASS" endtime="20210319 11:33:14.711" starttime="20210319 11:33:06.484"/>
</kw>
<msg timestamp="20210319 11:33:14.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:33:14.711" starttime="20210319 11:33:06.484"/>
</kw>
<msg timestamp="20210319 11:33:14.711" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:33:14.711" starttime="20210319 11:33:06.483"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:33:14.713" starttime="20210319 11:33:14.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:33:14.718" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/48007-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:33:22.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:33:22.037" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:33:22.037" starttime="20210319 11:33:14.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:33:22.038" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:33:22.038" starttime="20210319 11:33:22.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:33:22.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:33:22.039" starttime="20210319 11:33:22.039"/>
</kw>
<status status="PASS" endtime="20210319 11:33:22.040" starttime="20210319 11:33:14.714"/>
</kw>
<msg timestamp="20210319 11:33:22.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:33:22.040" starttime="20210319 11:33:14.713"/>
</kw>
<msg timestamp="20210319 11:33:22.041" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210319 11:33:22.041" starttime="20210319 11:33:14.713"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:33:22.050" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/48007-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:33:29.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:33:29.984" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" endtime="20210319 11:33:29.985" starttime="20210319 11:33:22.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:33:29.988" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:33:29.988" starttime="20210319 11:33:29.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:33:29.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:33:29.990" starttime="20210319 11:33:29.988"/>
</kw>
<status status="PASS" endtime="20210319 11:33:29.990" starttime="20210319 11:33:22.044"/>
</kw>
<msg timestamp="20210319 11:33:29.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:33:29.991" starttime="20210319 11:33:22.043"/>
</kw>
<msg timestamp="20210319 11:33:29.992" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" endtime="20210319 11:33:29.992" starttime="20210319 11:33:22.041"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:33:29.993" starttime="20210319 11:33:29.992"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:33:29.994" starttime="20210319 11:33:29.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:33:30.002" level="INFO">Running command 'ozone sh key put o3://om:9862/48007-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:36:43.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:36:43.063" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:36:43.063" starttime="20210319 11:33:29.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:36:43.064" level="INFO"/>
<status status="PASS" endtime="20210319 11:36:43.064" starttime="20210319 11:36:43.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:36:43.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:36:43.066" starttime="20210319 11:36:43.065"/>
</kw>
<status status="PASS" endtime="20210319 11:36:43.067" starttime="20210319 11:33:29.998"/>
</kw>
<msg timestamp="20210319 11:36:43.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:36:43.067" starttime="20210319 11:33:29.996"/>
</kw>
<status status="PASS" endtime="20210319 11:36:43.068" starttime="20210319 11:33:29.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:36:43.074" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48007-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:36:51.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:36:51.032" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:36:51.032" starttime="20210319 11:36:43.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:36:51.034" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210319 11:36:51.034" starttime="20210319 11:36:51.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:36:51.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:36:51.035" starttime="20210319 11:36:51.034"/>
</kw>
<status status="PASS" endtime="20210319 11:36:51.035" starttime="20210319 11:36:43.070"/>
</kw>
<msg timestamp="20210319 11:36:51.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:36:51.035" starttime="20210319 11:36:43.069"/>
</kw>
<msg timestamp="20210319 11:36:51.036" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210319 11:36:51.036" starttime="20210319 11:36:43.068"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:36:51.037" starttime="20210319 11:36:51.036"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210319 11:36:51.038" starttime="20210319 11:36:51.037"/>
</kw>
<status status="PASS" endtime="20210319 11:36:51.038" starttime="20210319 11:32:43.041"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210319 11:36:51.038" starttime="20210319 11:32:42.806"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:36:51.049" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:36:51.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:36:51.052" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:36:51.052" starttime="20210319 11:36:51.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:36:51.054" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:36:51.054" starttime="20210319 11:36:51.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:36:51.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:36:51.055" starttime="20210319 11:36:51.054"/>
</kw>
<status status="PASS" endtime="20210319 11:36:51.055" starttime="20210319 11:36:51.045"/>
</kw>
<msg timestamp="20210319 11:36:51.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:36:51.055" starttime="20210319 11:36:51.045"/>
</kw>
<msg timestamp="20210319 11:36:51.055" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:36:51.056" starttime="20210319 11:36:51.044"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:36:51.057" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:36:51.057" starttime="20210319 11:36:51.056"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:36:51.063" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:36:51.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:36:51.072" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:36:51.072" starttime="20210319 11:36:51.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:36:51.073" level="INFO"/>
<status status="PASS" endtime="20210319 11:36:51.074" starttime="20210319 11:36:51.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:36:51.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:36:51.075" starttime="20210319 11:36:51.074"/>
</kw>
<status status="PASS" endtime="20210319 11:36:51.075" starttime="20210319 11:36:51.060"/>
</kw>
<msg timestamp="20210319 11:36:51.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:36:51.076" starttime="20210319 11:36:51.059"/>
</kw>
<status status="PASS" endtime="20210319 11:36:51.076" starttime="20210319 11:36:51.058"/>
</kw>
<status status="PASS" endtime="20210319 11:36:51.076" starttime="20210319 11:36:51.057"/>
</kw>
<status status="PASS" endtime="20210319 11:36:51.077" starttime="20210319 11:36:51.043"/>
</kw>
<status status="PASS" endtime="20210319 11:36:51.077" starttime="20210319 11:36:51.043"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:36:51.082" level="INFO">Running command 'ozone sh volume info o3:///48007-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:36:58.773" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:36:58.773" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48007-rpcwport is not found</msg>
<status status="PASS" endtime="20210319 11:36:58.774" starttime="20210319 11:36:51.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:36:58.776" level="INFO">VOLUME_NOT_FOUND Volume 48007-rpcwport is not found</msg>
<status status="PASS" endtime="20210319 11:36:58.776" starttime="20210319 11:36:58.775"/>
</kw>
<msg timestamp="20210319 11:36:58.777" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48007-rpcwport is not found</msg>
<status status="PASS" endtime="20210319 11:36:58.777" starttime="20210319 11:36:51.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:36:58.778" starttime="20210319 11:36:58.777"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:36:58.787" level="INFO">Running command 'ozone sh volume create o3:///48007-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:37:06.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:37:06.510" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:37:06.510" starttime="20210319 11:36:58.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:37:06.512" level="INFO"/>
<status status="PASS" endtime="20210319 11:37:06.512" starttime="20210319 11:37:06.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:37:06.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:37:06.514" starttime="20210319 11:37:06.513"/>
</kw>
<status status="PASS" endtime="20210319 11:37:06.514" starttime="20210319 11:36:58.781"/>
</kw>
<msg timestamp="20210319 11:37:06.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:37:06.515" starttime="20210319 11:36:58.780"/>
</kw>
<msg timestamp="20210319 11:37:06.515" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210319 11:37:06.516" starttime="20210319 11:36:58.778"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:37:06.517" starttime="20210319 11:37:06.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:37:06.527" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="48007-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:37:13.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:37:13.492" level="INFO">${output} = {
  "metadata": {},
  "name": "48007-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210319 11:37:13.492" starttime="20210319 11:37:06.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:37:13.494" level="INFO">{
  "metadata": {},
  "name": "48007-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-19T11:37:06.233Z",
  "modificationTime": "2021-03-19T11:37:06.233Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210319 11:37:13.494" starttime="20210319 11:37:13.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:37:13.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:37:13.495" starttime="20210319 11:37:13.494"/>
</kw>
<status status="PASS" endtime="20210319 11:37:13.495" starttime="20210319 11:37:06.520"/>
</kw>
<msg timestamp="20210319 11:37:13.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:37:13.495" starttime="20210319 11:37:06.520"/>
</kw>
<msg timestamp="20210319 11:37:13.496" level="INFO">${result} = {
  "metadata": {},
  "name": "48007-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210319 11:37:13.496" starttime="20210319 11:37:06.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:37:13.496" starttime="20210319 11:37:13.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:37:13.501" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48007-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:37:19.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:37:19.228" level="INFO">${output} = {
  "metadata": {},
  "name": "48007-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210319 11:37:19.228" starttime="20210319 11:37:13.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:37:19.230" level="INFO">{
  "metadata": {},
  "name": "48007-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-19T11:37:06.233Z",
  "modificationTime": "2021-03-19T11:37:06.233Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210319 11:37:19.230" starttime="20210319 11:37:19.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:37:19.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:37:19.231" starttime="20210319 11:37:19.230"/>
</kw>
<status status="PASS" endtime="20210319 11:37:19.231" starttime="20210319 11:37:13.498"/>
</kw>
<msg timestamp="20210319 11:37:19.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:37:19.232" starttime="20210319 11:37:13.497"/>
</kw>
<msg timestamp="20210319 11:37:19.232" level="INFO">${result} = {
  "metadata": {},
  "name": "48007-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210319 11:37:19.232" starttime="20210319 11:37:13.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:37:19.233" starttime="20210319 11:37:19.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:37:19.240" level="INFO">Running command 'ozone sh volume setquota o3:///48007-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:37:26.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:37:26.512" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:37:26.512" starttime="20210319 11:37:19.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:37:26.513" level="INFO"/>
<status status="PASS" endtime="20210319 11:37:26.513" starttime="20210319 11:37:26.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:37:26.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:37:26.514" starttime="20210319 11:37:26.513"/>
</kw>
<status status="PASS" endtime="20210319 11:37:26.514" starttime="20210319 11:37:19.234"/>
</kw>
<msg timestamp="20210319 11:37:26.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:37:26.514" starttime="20210319 11:37:19.234"/>
</kw>
<status status="PASS" endtime="20210319 11:37:26.515" starttime="20210319 11:37:19.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:37:26.535" level="INFO">Running command 'ozone sh volume info o3:///48007-rpcwport | jq -r '. | select(.name=="48007-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:37:32.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:37:32.469" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:37:32.470" starttime="20210319 11:37:26.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:37:32.472" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210319 11:37:32.473" starttime="20210319 11:37:32.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:37:32.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:37:32.475" starttime="20210319 11:37:32.473"/>
</kw>
<status status="PASS" endtime="20210319 11:37:32.475" starttime="20210319 11:37:26.527"/>
</kw>
<msg timestamp="20210319 11:37:32.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:37:32.476" starttime="20210319 11:37:26.526"/>
</kw>
<msg timestamp="20210319 11:37:32.477" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:37:32.477" starttime="20210319 11:37:26.515"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:37:32.479" starttime="20210319 11:37:32.478"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:37:32.495" level="INFO">Running command 'ozone sh bucket create o3:///48007-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:37:40.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:37:40.471" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:37:40.471" starttime="20210319 11:37:32.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:37:40.472" level="INFO"/>
<status status="PASS" endtime="20210319 11:37:40.473" starttime="20210319 11:37:40.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:37:40.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:37:40.474" starttime="20210319 11:37:40.473"/>
</kw>
<status status="PASS" endtime="20210319 11:37:40.474" starttime="20210319 11:37:32.481"/>
</kw>
<msg timestamp="20210319 11:37:40.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:37:40.474" starttime="20210319 11:37:32.481"/>
</kw>
<status status="PASS" endtime="20210319 11:37:40.475" starttime="20210319 11:37:32.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:37:40.481" level="INFO">Running command 'ozone sh bucket info o3:///48007-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:37:49.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:37:49.324" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210319 11:37:49.324" starttime="20210319 11:37:40.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:37:49.325" level="INFO">DISK</msg>
<status status="PASS" endtime="20210319 11:37:49.325" starttime="20210319 11:37:49.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:37:49.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:37:49.326" starttime="20210319 11:37:49.326"/>
</kw>
<status status="PASS" endtime="20210319 11:37:49.327" starttime="20210319 11:37:40.476"/>
</kw>
<msg timestamp="20210319 11:37:49.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:37:49.327" starttime="20210319 11:37:40.476"/>
</kw>
<msg timestamp="20210319 11:37:49.327" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210319 11:37:49.327" starttime="20210319 11:37:40.475"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:37:49.329" starttime="20210319 11:37:49.328"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:37:49.337" level="INFO">Running command 'ozone sh bucket info o3:///48007-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:37:55.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:37:55.524" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:37:55.524" starttime="20210319 11:37:49.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:37:55.526" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210319 11:37:55.526" starttime="20210319 11:37:55.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:37:55.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:37:55.528" starttime="20210319 11:37:55.527"/>
</kw>
<status status="PASS" endtime="20210319 11:37:55.528" starttime="20210319 11:37:49.332"/>
</kw>
<msg timestamp="20210319 11:37:55.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:37:55.529" starttime="20210319 11:37:49.332"/>
</kw>
<msg timestamp="20210319 11:37:55.530" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:37:55.530" starttime="20210319 11:37:49.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:37:55.531" starttime="20210319 11:37:55.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:37:55.539" level="INFO">Running command 'ozone sh bucket info o3:///48007-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:38:04.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:38:04.374" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210319 11:38:04.374" starttime="20210319 11:37:55.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:38:04.376" level="INFO">100</msg>
<status status="PASS" endtime="20210319 11:38:04.376" starttime="20210319 11:38:04.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:38:04.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:38:04.377" starttime="20210319 11:38:04.376"/>
</kw>
<status status="PASS" endtime="20210319 11:38:04.378" starttime="20210319 11:37:55.535"/>
</kw>
<msg timestamp="20210319 11:38:04.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:38:04.378" starttime="20210319 11:37:55.534"/>
</kw>
<msg timestamp="20210319 11:38:04.378" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210319 11:38:04.378" starttime="20210319 11:37:55.532"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:38:04.379" starttime="20210319 11:38:04.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:38:04.386" level="INFO">Running command 'ozone sh bucket setquota o3:///48007-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:38:12.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:38:12.283" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:38:12.283" starttime="20210319 11:38:04.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:38:12.285" level="INFO"/>
<status status="PASS" endtime="20210319 11:38:12.286" starttime="20210319 11:38:12.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:38:12.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:38:12.288" starttime="20210319 11:38:12.286"/>
</kw>
<status status="PASS" endtime="20210319 11:38:12.288" starttime="20210319 11:38:04.381"/>
</kw>
<msg timestamp="20210319 11:38:12.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:38:12.289" starttime="20210319 11:38:04.381"/>
</kw>
<status status="PASS" endtime="20210319 11:38:12.290" starttime="20210319 11:38:04.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:38:12.299" level="INFO">Running command 'ozone sh bucket info o3:///48007-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:38:18.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:38:18.830" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210319 11:38:18.831" starttime="20210319 11:38:12.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:38:18.832" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210319 11:38:18.833" starttime="20210319 11:38:18.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:38:18.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:38:18.833" starttime="20210319 11:38:18.833"/>
</kw>
<status status="PASS" endtime="20210319 11:38:18.834" starttime="20210319 11:38:12.293"/>
</kw>
<msg timestamp="20210319 11:38:18.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:38:18.834" starttime="20210319 11:38:12.292"/>
</kw>
<msg timestamp="20210319 11:38:18.835" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210319 11:38:18.835" starttime="20210319 11:38:12.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:38:18.836" starttime="20210319 11:38:18.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:38:18.842" level="INFO">Running command 'ozone sh bucket info o3:///48007-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:38:26.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:38:26.671" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210319 11:38:26.671" starttime="20210319 11:38:18.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:38:26.673" level="INFO">1000</msg>
<status status="PASS" endtime="20210319 11:38:26.674" starttime="20210319 11:38:26.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:38:26.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:38:26.676" starttime="20210319 11:38:26.674"/>
</kw>
<status status="PASS" endtime="20210319 11:38:26.677" starttime="20210319 11:38:18.838"/>
</kw>
<msg timestamp="20210319 11:38:26.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:38:26.677" starttime="20210319 11:38:18.838"/>
</kw>
<msg timestamp="20210319 11:38:26.679" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210319 11:38:26.679" starttime="20210319 11:38:18.837"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:38:26.681" starttime="20210319 11:38:26.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:38:26.690" level="INFO">Running command 'ozone sh bucket list o3:///48007-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:38:32.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:38:32.885" level="INFO">${output} = 48007-rpcwport</msg>
<status status="PASS" endtime="20210319 11:38:32.885" starttime="20210319 11:38:26.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:38:32.887" level="INFO">48007-rpcwport</msg>
<status status="PASS" endtime="20210319 11:38:32.887" starttime="20210319 11:38:32.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:38:32.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:38:32.888" starttime="20210319 11:38:32.887"/>
</kw>
<status status="PASS" endtime="20210319 11:38:32.888" starttime="20210319 11:38:26.684"/>
</kw>
<msg timestamp="20210319 11:38:32.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:38:32.889" starttime="20210319 11:38:26.683"/>
</kw>
<msg timestamp="20210319 11:38:32.889" level="INFO">${result} = 48007-rpcwport</msg>
<status status="PASS" endtime="20210319 11:38:32.889" starttime="20210319 11:38:26.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:38:32.890" starttime="20210319 11:38:32.889"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:38:32.898" level="INFO">Running command 'ozone sh key put o3:///48007-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:41:45.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:41:45.489" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:41:45.489" starttime="20210319 11:38:32.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:41:45.490" level="INFO"/>
<status status="PASS" endtime="20210319 11:41:45.490" starttime="20210319 11:41:45.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:41:45.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:41:45.491" starttime="20210319 11:41:45.490"/>
</kw>
<status status="PASS" endtime="20210319 11:41:45.491" starttime="20210319 11:38:32.893"/>
</kw>
<msg timestamp="20210319 11:41:45.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:41:45.492" starttime="20210319 11:38:32.892"/>
</kw>
<status status="PASS" endtime="20210319 11:41:45.492" starttime="20210319 11:38:32.892"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:41:45.498" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:41:45.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:41:45.503" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:41:45.503" starttime="20210319 11:41:45.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:41:45.505" level="INFO"/>
<status status="PASS" endtime="20210319 11:41:45.505" starttime="20210319 11:41:45.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:41:45.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:41:45.507" starttime="20210319 11:41:45.505"/>
</kw>
<status status="PASS" endtime="20210319 11:41:45.507" starttime="20210319 11:41:45.494"/>
</kw>
<msg timestamp="20210319 11:41:45.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:41:45.508" starttime="20210319 11:41:45.493"/>
</kw>
<status status="PASS" endtime="20210319 11:41:45.508" starttime="20210319 11:41:45.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:41:45.516" level="INFO">Running command 'ozone sh key get o3:///48007-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:41:51.042" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210319 11:41:51.042" starttime="20210319 11:41:45.513"/>
</kw>
<status status="FAIL" endtime="20210319 11:41:51.042" starttime="20210319 11:41:45.511"/>
</kw>
<msg timestamp="20210319 11:41:51.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210319 11:41:51.043" starttime="20210319 11:41:45.510"/>
</kw>
<status status="FAIL" endtime="20210319 11:41:51.043" starttime="20210319 11:41:45.509"/>
</kw>
<status status="FAIL" endtime="20210319 11:41:51.043" starttime="20210319 11:38:32.890"/>
</kw>
<status status="FAIL" endtime="20210319 11:41:51.043" starttime="20210319 11:38:32.890"/>
</kw>
<status status="FAIL" endtime="20210319 11:41:51.043" starttime="20210319 11:36:51.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210319 11:41:51.044" starttime="20210319 11:36:51.041">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:41:51.061" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:41:51.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:41:51.075" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 11:41:51.075" starttime="20210319 11:41:51.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:41:51.076" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 11:41:51.077" starttime="20210319 11:41:51.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:41:51.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:41:51.078" starttime="20210319 11:41:51.077"/>
</kw>
<status status="PASS" endtime="20210319 11:41:51.078" starttime="20210319 11:41:51.049"/>
</kw>
<msg timestamp="20210319 11:41:51.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:41:51.078" starttime="20210319 11:41:51.048"/>
</kw>
<msg timestamp="20210319 11:41:51.078" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 11:41:51.078" starttime="20210319 11:41:51.047"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 11:41:51.079" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 11:41:51.079" starttime="20210319 11:41:51.079"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:41:51.103" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:41:51.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:41:51.320" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:41:51.320" starttime="20210319 11:41:51.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:41:51.321" level="INFO"/>
<status status="PASS" endtime="20210319 11:41:51.321" starttime="20210319 11:41:51.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:41:51.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:41:51.322" starttime="20210319 11:41:51.321"/>
</kw>
<status status="PASS" endtime="20210319 11:41:51.322" starttime="20210319 11:41:51.081"/>
</kw>
<msg timestamp="20210319 11:41:51.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:41:51.323" starttime="20210319 11:41:51.081"/>
</kw>
<status status="PASS" endtime="20210319 11:41:51.323" starttime="20210319 11:41:51.080"/>
</kw>
<status status="PASS" endtime="20210319 11:41:51.323" starttime="20210319 11:41:51.080"/>
</kw>
<status status="PASS" endtime="20210319 11:41:51.323" starttime="20210319 11:41:51.047"/>
</kw>
<status status="PASS" endtime="20210319 11:41:51.323" starttime="20210319 11:41:51.046"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:41:51.343" level="INFO">Running command 'ozone sh volume info /48007-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:42:01.018" level="INFO">${rc} = 255</msg>
<msg timestamp="20210319 11:42:01.018" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48007-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210319 11:42:01.018" starttime="20210319 11:41:51.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:42:01.019" level="INFO">VOLUME_NOT_FOUND Volume 48007-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210319 11:42:01.019" starttime="20210319 11:42:01.018"/>
</kw>
<msg timestamp="20210319 11:42:01.020" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48007-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210319 11:42:01.020" starttime="20210319 11:41:51.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:42:01.021" starttime="20210319 11:42:01.020"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:42:01.027" level="INFO">Running command 'ozone sh volume create /48007-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:42:07.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:42:07.985" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:42:07.985" starttime="20210319 11:42:01.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:42:07.986" level="INFO"/>
<status status="PASS" endtime="20210319 11:42:07.986" starttime="20210319 11:42:07.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:42:07.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:42:07.987" starttime="20210319 11:42:07.986"/>
</kw>
<status status="PASS" endtime="20210319 11:42:07.987" starttime="20210319 11:42:01.023"/>
</kw>
<msg timestamp="20210319 11:42:07.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:42:07.987" starttime="20210319 11:42:01.022"/>
</kw>
<msg timestamp="20210319 11:42:07.988" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210319 11:42:07.988" starttime="20210319 11:42:01.021"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:42:07.988" starttime="20210319 11:42:07.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:42:07.994" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="48007-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:42:15.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:42:15.123" level="INFO">${output} = {
  "metadata": {},
  "name": "48007-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210319 11:42:15.123" starttime="20210319 11:42:07.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:42:15.124" level="INFO">{
  "metadata": {},
  "name": "48007-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-19T11:42:07.698Z",
  "modificationTime": "2021-03-19T11:42:07.698Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210319 11:42:15.124" starttime="20210319 11:42:15.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:42:15.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:42:15.125" starttime="20210319 11:42:15.125"/>
</kw>
<status status="PASS" endtime="20210319 11:42:15.126" starttime="20210319 11:42:07.990"/>
</kw>
<msg timestamp="20210319 11:42:15.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:42:15.126" starttime="20210319 11:42:07.990"/>
</kw>
<msg timestamp="20210319 11:42:15.126" level="INFO">${result} = {
  "metadata": {},
  "name": "48007-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210319 11:42:15.126" starttime="20210319 11:42:07.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:42:15.127" starttime="20210319 11:42:15.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:42:15.132" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48007-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:42:21.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:42:21.961" level="INFO">${output} = {
  "metadata": {},
  "name": "48007-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210319 11:42:21.961" starttime="20210319 11:42:15.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:42:21.964" level="INFO">{
  "metadata": {},
  "name": "48007-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-19T11:42:07.698Z",
  "modificationTime": "2021-03-19T11:42:07.698Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210319 11:42:21.964" starttime="20210319 11:42:21.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:42:21.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:42:21.965" starttime="20210319 11:42:21.964"/>
</kw>
<status status="PASS" endtime="20210319 11:42:21.966" starttime="20210319 11:42:15.128"/>
</kw>
<msg timestamp="20210319 11:42:21.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:42:21.967" starttime="20210319 11:42:15.128"/>
</kw>
<msg timestamp="20210319 11:42:21.968" level="INFO">${result} = {
  "metadata": {},
  "name": "48007-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210319 11:42:21.968" starttime="20210319 11:42:15.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210319 11:42:21.970" starttime="20210319 11:42:21.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:42:21.978" level="INFO">Running command 'ozone sh volume setquota /48007-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:42:29.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:42:29.800" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:42:29.800" starttime="20210319 11:42:21.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:42:29.801" level="INFO"/>
<status status="PASS" endtime="20210319 11:42:29.801" starttime="20210319 11:42:29.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:42:29.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:42:29.802" starttime="20210319 11:42:29.802"/>
</kw>
<status status="PASS" endtime="20210319 11:42:29.803" starttime="20210319 11:42:21.974"/>
</kw>
<msg timestamp="20210319 11:42:29.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:42:29.803" starttime="20210319 11:42:21.973"/>
</kw>
<status status="PASS" endtime="20210319 11:42:29.803" starttime="20210319 11:42:21.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:42:29.809" level="INFO">Running command 'ozone sh volume info /48007-rpcwoscheme | jq -r '. | select(.name=="48007-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:42:37.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:42:37.664" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:42:37.664" starttime="20210319 11:42:29.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:42:37.665" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210319 11:42:37.665" starttime="20210319 11:42:37.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:42:37.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:42:37.666" starttime="20210319 11:42:37.666"/>
</kw>
<status status="PASS" endtime="20210319 11:42:37.666" starttime="20210319 11:42:29.805"/>
</kw>
<msg timestamp="20210319 11:42:37.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:42:37.667" starttime="20210319 11:42:29.804"/>
</kw>
<msg timestamp="20210319 11:42:37.667" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:42:37.667" starttime="20210319 11:42:29.803"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:42:37.668" starttime="20210319 11:42:37.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:42:37.674" level="INFO">Running command 'ozone sh bucket create /48007-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:42:43.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:42:43.578" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:42:43.578" starttime="20210319 11:42:37.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:42:43.579" level="INFO"/>
<status status="PASS" endtime="20210319 11:42:43.580" starttime="20210319 11:42:43.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:42:43.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:42:43.580" starttime="20210319 11:42:43.580"/>
</kw>
<status status="PASS" endtime="20210319 11:42:43.581" starttime="20210319 11:42:37.671"/>
</kw>
<msg timestamp="20210319 11:42:43.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:42:43.581" starttime="20210319 11:42:37.669"/>
</kw>
<status status="PASS" endtime="20210319 11:42:43.581" starttime="20210319 11:42:37.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:42:43.586" level="INFO">Running command 'ozone sh bucket info /48007-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:42:50.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:42:50.417" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210319 11:42:50.417" starttime="20210319 11:42:43.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:42:50.419" level="INFO">DISK</msg>
<status status="PASS" endtime="20210319 11:42:50.419" starttime="20210319 11:42:50.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:42:50.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:42:50.420" starttime="20210319 11:42:50.419"/>
</kw>
<status status="PASS" endtime="20210319 11:42:50.420" starttime="20210319 11:42:43.583"/>
</kw>
<msg timestamp="20210319 11:42:50.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:42:50.421" starttime="20210319 11:42:43.583"/>
</kw>
<msg timestamp="20210319 11:42:50.421" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210319 11:42:50.421" starttime="20210319 11:42:43.582"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:42:50.422" starttime="20210319 11:42:50.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:42:50.429" level="INFO">Running command 'ozone sh bucket info /48007-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:42:56.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:42:56.518" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:42:56.518" starttime="20210319 11:42:50.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:42:56.520" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210319 11:42:56.521" starttime="20210319 11:42:56.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:42:56.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:42:56.523" starttime="20210319 11:42:56.521"/>
</kw>
<status status="PASS" endtime="20210319 11:42:56.524" starttime="20210319 11:42:50.424"/>
</kw>
<msg timestamp="20210319 11:42:56.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:42:56.524" starttime="20210319 11:42:50.424"/>
</kw>
<msg timestamp="20210319 11:42:56.526" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210319 11:42:56.526" starttime="20210319 11:42:50.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:42:56.528" starttime="20210319 11:42:56.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:42:56.535" level="INFO">Running command 'ozone sh bucket info /48007-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:43:04.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:43:04.399" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210319 11:43:04.400" starttime="20210319 11:42:56.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:43:04.401" level="INFO">100</msg>
<status status="PASS" endtime="20210319 11:43:04.402" starttime="20210319 11:43:04.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:43:04.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:43:04.404" starttime="20210319 11:43:04.402"/>
</kw>
<status status="PASS" endtime="20210319 11:43:04.405" starttime="20210319 11:42:56.530"/>
</kw>
<msg timestamp="20210319 11:43:04.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:43:04.405" starttime="20210319 11:42:56.530"/>
</kw>
<msg timestamp="20210319 11:43:04.405" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210319 11:43:04.406" starttime="20210319 11:42:56.528"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:43:04.407" starttime="20210319 11:43:04.406"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:43:04.414" level="INFO">Running command 'ozone sh bucket setquota /48007-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:43:12.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:43:12.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:43:12.050" starttime="20210319 11:43:04.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:43:12.052" level="INFO"/>
<status status="PASS" endtime="20210319 11:43:12.053" starttime="20210319 11:43:12.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:43:12.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:43:12.054" starttime="20210319 11:43:12.053"/>
</kw>
<status status="PASS" endtime="20210319 11:43:12.054" starttime="20210319 11:43:04.410"/>
</kw>
<msg timestamp="20210319 11:43:12.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:43:12.055" starttime="20210319 11:43:04.409"/>
</kw>
<status status="PASS" endtime="20210319 11:43:12.055" starttime="20210319 11:43:04.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:43:12.061" level="INFO">Running command 'ozone sh bucket info /48007-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:43:20.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:43:20.203" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210319 11:43:20.203" starttime="20210319 11:43:12.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:43:20.206" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210319 11:43:20.206" starttime="20210319 11:43:20.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:43:20.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:43:20.207" starttime="20210319 11:43:20.206"/>
</kw>
<status status="PASS" endtime="20210319 11:43:20.208" starttime="20210319 11:43:12.057"/>
</kw>
<msg timestamp="20210319 11:43:20.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:43:20.209" starttime="20210319 11:43:12.057"/>
</kw>
<msg timestamp="20210319 11:43:20.209" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210319 11:43:20.209" starttime="20210319 11:43:12.056"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:43:20.211" starttime="20210319 11:43:20.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:43:20.219" level="INFO">Running command 'ozone sh bucket info /48007-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:43:27.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:43:27.737" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210319 11:43:27.738" starttime="20210319 11:43:20.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:43:27.739" level="INFO">1000</msg>
<status status="PASS" endtime="20210319 11:43:27.740" starttime="20210319 11:43:27.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:43:27.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:43:27.741" starttime="20210319 11:43:27.740"/>
</kw>
<status status="PASS" endtime="20210319 11:43:27.742" starttime="20210319 11:43:20.214"/>
</kw>
<msg timestamp="20210319 11:43:27.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:43:27.742" starttime="20210319 11:43:20.213"/>
</kw>
<msg timestamp="20210319 11:43:27.742" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210319 11:43:27.742" starttime="20210319 11:43:20.211"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:43:27.744" starttime="20210319 11:43:27.743"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:43:27.749" level="INFO">Running command 'ozone sh bucket list /48007-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:43:35.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:43:35.165" level="INFO">${output} = 48007-rpcwoscheme</msg>
<status status="PASS" endtime="20210319 11:43:35.165" starttime="20210319 11:43:27.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:43:35.167" level="INFO">48007-rpcwoscheme</msg>
<status status="PASS" endtime="20210319 11:43:35.167" starttime="20210319 11:43:35.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:43:35.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:43:35.169" starttime="20210319 11:43:35.168"/>
</kw>
<status status="PASS" endtime="20210319 11:43:35.170" starttime="20210319 11:43:27.745"/>
</kw>
<msg timestamp="20210319 11:43:35.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:43:35.170" starttime="20210319 11:43:27.745"/>
</kw>
<msg timestamp="20210319 11:43:35.171" level="INFO">${result} = 48007-rpcwoscheme</msg>
<status status="PASS" endtime="20210319 11:43:35.171" starttime="20210319 11:43:27.744"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210319 11:43:35.172" starttime="20210319 11:43:35.171"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:43:35.178" level="INFO">Running command 'ozone sh key put /48007-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:46:46.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:46:46.100" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:46:46.100" starttime="20210319 11:43:35.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:46:46.102" level="INFO"/>
<status status="PASS" endtime="20210319 11:46:46.102" starttime="20210319 11:46:46.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:46:46.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:46:46.104" starttime="20210319 11:46:46.103"/>
</kw>
<status status="PASS" endtime="20210319 11:46:46.105" starttime="20210319 11:43:35.174"/>
</kw>
<msg timestamp="20210319 11:46:46.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:46:46.105" starttime="20210319 11:43:35.174"/>
</kw>
<status status="PASS" endtime="20210319 11:46:46.106" starttime="20210319 11:43:35.173"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:46:46.113" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:46:46.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 11:46:46.116" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 11:46:46.117" starttime="20210319 11:46:46.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 11:46:46.119" level="INFO"/>
<status status="PASS" endtime="20210319 11:46:46.119" starttime="20210319 11:46:46.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 11:46:46.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 11:46:46.120" starttime="20210319 11:46:46.119"/>
</kw>
<status status="PASS" endtime="20210319 11:46:46.121" starttime="20210319 11:46:46.110"/>
</kw>
<msg timestamp="20210319 11:46:46.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 11:46:46.121" starttime="20210319 11:46:46.107"/>
</kw>
<status status="PASS" endtime="20210319 11:46:46.122" starttime="20210319 11:46:46.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 11:46:46.128" level="INFO">Running command 'ozone sh key get /48007-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 11:46:51.047" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210319 11:46:51.047" starttime="20210319 11:46:46.125"/>
</kw>
<status status="FAIL" endtime="20210319 11:46:51.048" starttime="20210319 11:46:46.124"/>
</kw>
<msg timestamp="20210319 11:46:51.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210319 11:46:51.048" starttime="20210319 11:46:46.124"/>
</kw>
<status status="FAIL" endtime="20210319 11:46:51.048" starttime="20210319 11:46:46.122"/>
</kw>
<status status="FAIL" endtime="20210319 11:46:51.049" starttime="20210319 11:43:35.172"/>
</kw>
<status status="FAIL" endtime="20210319 11:46:51.049" starttime="20210319 11:43:35.172"/>
</kw>
<status status="FAIL" endtime="20210319 11:46:51.049" starttime="20210319 11:41:51.324"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210319 11:46:51.050" starttime="20210319 11:41:51.045">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210319 11:46:51.055" starttime="20210319 11:21:35.662"/>
</suite>
<status status="FAIL" endtime="20210319 11:46:51.090" starttime="20210319 10:56:57.342"/>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 10:56:51.542" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 10:56:51.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 10:56:51.545" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210319 10:56:51.545" starttime="20210319 10:56:51.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 10:56:51.547" level="INFO">scm</msg>
<status status="PASS" endtime="20210319 10:56:51.547" starttime="20210319 10:56:51.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 10:56:51.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 10:56:51.548" starttime="20210319 10:56:51.547"/>
</kw>
<status status="PASS" endtime="20210319 10:56:51.548" starttime="20210319 10:56:51.537"/>
</kw>
<msg timestamp="20210319 10:56:51.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 10:56:51.548" starttime="20210319 10:56:51.537"/>
</kw>
<msg timestamp="20210319 10:56:51.549" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210319 10:56:51.549" starttime="20210319 10:56:51.536"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210319 10:56:51.550" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210319 10:56:51.550" starttime="20210319 10:56:51.549"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210319 10:56:51.554" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210319 10:56:51.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210319 10:56:51.564" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210319 10:56:51.564" starttime="20210319 10:56:51.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210319 10:56:51.565" level="INFO"/>
<status status="PASS" endtime="20210319 10:56:51.566" starttime="20210319 10:56:51.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210319 10:56:51.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210319 10:56:51.567" starttime="20210319 10:56:51.566"/>
</kw>
<status status="PASS" endtime="20210319 10:56:51.567" starttime="20210319 10:56:51.552"/>
</kw>
<msg timestamp="20210319 10:56:51.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210319 10:56:51.567" starttime="20210319 10:56:51.551"/>
</kw>
<status status="PASS" endtime="20210319 10:56:51.568" starttime="20210319 10:56:51.550"/>
</kw>
<status status="PASS" endtime="20210319 10:56:51.568" starttime="20210319 10:56:51.550"/>
</kw>
<status status="PASS" endtime="20210319 10:56:51.568" starttime="20210319 10:56:51.535"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210319 10:56:51.568" starttime="20210319 10:56:51.535"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210319 10:56:51.570" starttime="20210319 10:56:51.474"/>
</suite>
<status status="FAIL" elapsedtime="2993844" endtime="N/A" starttime="N/A"/>
</suite>
<statistics>
<total>
<stat fail="10" skip="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="10" skip="0" id="s1" name="ozonesecure" pass="20">ozonesecure</stat>
<stat fail="10" skip="0" id="s1-s1" name="Basic" pass="19">ozonesecure.Basic</stat>
<stat fail="1" skip="0" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="0" skip="0" id="s1-s1-s2" name="Getconf" pass="4">ozonesecure.Basic.Getconf</stat>
<stat fail="5" skip="0" id="s1-s1-s3" name="Links" pass="10">ozonesecure.Basic.Links</stat>
<stat fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell" pass="4">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" skip="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
