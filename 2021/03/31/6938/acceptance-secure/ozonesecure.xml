<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210331 13:01:43.078" schemaversion="2" generator="Rebot 4.0 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:13:17.051" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:13:17.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:13:17.054" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:13:17.054" starttime="20210331 12:13:17.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:13:17.055" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:13:17.055" starttime="20210331 12:13:17.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:13:17.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:13:17.056" starttime="20210331 12:13:17.055"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.056" starttime="20210331 12:13:17.047"/>
</kw>
<msg timestamp="20210331 12:13:17.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:13:17.056" starttime="20210331 12:13:17.047"/>
</kw>
<msg timestamp="20210331 12:13:17.056" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:13:17.056" starttime="20210331 12:13:17.046"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:13:17.060" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:13:17.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:13:17.067" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:13:17.067" starttime="20210331 12:13:17.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:13:17.068" level="INFO"/>
<status status="PASS" endtime="20210331 12:13:17.068" starttime="20210331 12:13:17.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:13:17.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:13:17.069" starttime="20210331 12:13:17.068"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.069" starttime="20210331 12:13:17.058"/>
</kw>
<msg timestamp="20210331 12:13:17.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:13:17.069" starttime="20210331 12:13:17.058"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.069" starttime="20210331 12:13:17.057"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.069" starttime="20210331 12:13:17.057"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.070" starttime="20210331 12:13:17.046"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.070" starttime="20210331 12:13:17.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:13:17.073" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:13:17.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:13:17.189" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210331 12:13:17.189" starttime="20210331 12:13:17.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:13:17.190" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Wed, 31 Mar 2021 12:13:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCg+Y/A1tHMneotZc+US1sKyh0y+oSOCmPGiLwhaFBd6ig2d0FUwFzYSscQ9v7uiBf568YoeWx969e3wW5Ku5GHbUR
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1617228797179&amp;s=/bGSt49rAyLBJq3a3KY5CPDsT32cc9A5i34LdTEz8Nk="; Path=/; HttpOnly
Last-Modified: Wed, 31 Mar 2021 09:21:26 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210331 12:13:17.190" starttime="20210331 12:13:17.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:13:17.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:13:17.191" starttime="20210331 12:13:17.190"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.191" starttime="20210331 12:13:17.071"/>
</kw>
<msg timestamp="20210331 12:13:17.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:13:17.191" starttime="20210331 12:13:17.070"/>
</kw>
<msg timestamp="20210331 12:13:17.192" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210331 12:13:17.192" starttime="20210331 12:13:17.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:13:17.192" starttime="20210331 12:13:17.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210331 12:13:17.193" starttime="20210331 12:13:17.044"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:13:17.202" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:13:17.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:13:17.204" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:13:17.204" starttime="20210331 12:13:17.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:13:17.205" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:13:17.205" starttime="20210331 12:13:17.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:13:17.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:13:17.206" starttime="20210331 12:13:17.205"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.206" starttime="20210331 12:13:17.198"/>
</kw>
<msg timestamp="20210331 12:13:17.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:13:17.207" starttime="20210331 12:13:17.198"/>
</kw>
<msg timestamp="20210331 12:13:17.207" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:13:17.207" starttime="20210331 12:13:17.198"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:13:17.209" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:13:17.209" starttime="20210331 12:13:17.207"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:13:17.213" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:13:17.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:13:17.219" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:13:17.219" starttime="20210331 12:13:17.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:13:17.220" level="INFO"/>
<status status="PASS" endtime="20210331 12:13:17.220" starttime="20210331 12:13:17.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:13:17.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:13:17.220" starttime="20210331 12:13:17.220"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.221" starttime="20210331 12:13:17.210"/>
</kw>
<msg timestamp="20210331 12:13:17.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:13:17.221" starttime="20210331 12:13:17.210"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.221" starttime="20210331 12:13:17.209"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.221" starttime="20210331 12:13:17.209"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.221" starttime="20210331 12:13:17.197"/>
</kw>
<status status="PASS" endtime="20210331 12:13:17.221" starttime="20210331 12:13:17.196"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:13:17.225" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:17.194" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210331 12:18:17.194" starttime="20210331 12:13:17.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210331 12:18:17.195" starttime="20210331 12:18:17.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210331 12:18:17.195" starttime="20210331 12:18:17.195"/>
</kw>
<status status="FAIL" endtime="20210331 12:18:17.196" starttime="20210331 12:13:17.222"/>
</kw>
<msg timestamp="20210331 12:18:17.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210331 12:18:17.196" starttime="20210331 12:13:17.222"/>
</kw>
<status status="FAIL" endtime="20210331 12:18:17.196" starttime="20210331 12:13:17.222"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" endtime="20210331 12:18:17.197" starttime="20210331 12:18:17.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:18:17.197" starttime="20210331 12:18:17.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210331 12:18:17.197" starttime="20210331 12:13:17.193">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20210331 12:18:17.199" starttime="20210331 12:13:17.018"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:17.212" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:19.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:18:19.965" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210331 12:18:19.965" starttime="20210331 12:18:17.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:19.967" level="INFO">om</msg>
<status status="PASS" endtime="20210331 12:18:19.967" starttime="20210331 12:18:19.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:19.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:19.969" starttime="20210331 12:18:19.968"/>
</kw>
<status status="PASS" endtime="20210331 12:18:19.970" starttime="20210331 12:18:17.209"/>
</kw>
<msg timestamp="20210331 12:18:19.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:18:19.970" starttime="20210331 12:18:17.208"/>
</kw>
<msg timestamp="20210331 12:18:19.971" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210331 12:18:19.971" starttime="20210331 12:18:17.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:18:19.972" starttime="20210331 12:18:19.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:19.976" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:22.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:18:22.487" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210331 12:18:22.487" starttime="20210331 12:18:19.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:22.488" level="INFO">om</msg>
<status status="PASS" endtime="20210331 12:18:22.489" starttime="20210331 12:18:22.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:22.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:22.489" starttime="20210331 12:18:22.489"/>
</kw>
<status status="PASS" endtime="20210331 12:18:22.490" starttime="20210331 12:18:19.973"/>
</kw>
<msg timestamp="20210331 12:18:22.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:18:22.490" starttime="20210331 12:18:19.973"/>
</kw>
<msg timestamp="20210331 12:18:22.490" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210331 12:18:22.490" starttime="20210331 12:18:19.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:18:22.491" starttime="20210331 12:18:22.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210331 12:18:22.491" starttime="20210331 12:18:17.207"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:22.498" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:25.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:18:25.096" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:18:25.096" starttime="20210331 12:18:22.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:25.097" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:18:25.097" starttime="20210331 12:18:25.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:25.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:25.098" starttime="20210331 12:18:25.097"/>
</kw>
<status status="PASS" endtime="20210331 12:18:25.098" starttime="20210331 12:18:22.494"/>
</kw>
<msg timestamp="20210331 12:18:25.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:18:25.098" starttime="20210331 12:18:22.494"/>
</kw>
<msg timestamp="20210331 12:18:25.099" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210331 12:18:25.099" starttime="20210331 12:18:22.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:18:25.099" starttime="20210331 12:18:25.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:25.105" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:27.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:18:27.671" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:18:27.671" starttime="20210331 12:18:25.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:27.672" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:18:27.672" starttime="20210331 12:18:27.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:27.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:27.673" starttime="20210331 12:18:27.673"/>
</kw>
<status status="PASS" endtime="20210331 12:18:27.673" starttime="20210331 12:18:25.100"/>
</kw>
<msg timestamp="20210331 12:18:27.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:18:27.674" starttime="20210331 12:18:25.100"/>
</kw>
<msg timestamp="20210331 12:18:27.674" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210331 12:18:27.674" starttime="20210331 12:18:25.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:18:27.674" starttime="20210331 12:18:27.674"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210331 12:18:27.675" starttime="20210331 12:18:22.492"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:27.680" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:29.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:18:29.850" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210331 12:18:29.850" starttime="20210331 12:18:27.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:29.851" level="INFO">om</msg>
<status status="PASS" endtime="20210331 12:18:29.852" starttime="20210331 12:18:29.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:29.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:29.852" starttime="20210331 12:18:29.852"/>
</kw>
<status status="PASS" endtime="20210331 12:18:29.853" starttime="20210331 12:18:27.677"/>
</kw>
<msg timestamp="20210331 12:18:29.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:18:29.853" starttime="20210331 12:18:27.677"/>
</kw>
<msg timestamp="20210331 12:18:29.853" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210331 12:18:29.853" starttime="20210331 12:18:27.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:18:29.854" starttime="20210331 12:18:29.853"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:18:29.854" starttime="20210331 12:18:29.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:29.858" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:32.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:18:32.240" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210331 12:18:32.240" starttime="20210331 12:18:29.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:32.241" level="INFO">om</msg>
<status status="PASS" endtime="20210331 12:18:32.241" starttime="20210331 12:18:32.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:32.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:32.242" starttime="20210331 12:18:32.241"/>
</kw>
<status status="PASS" endtime="20210331 12:18:32.242" starttime="20210331 12:18:29.855"/>
</kw>
<msg timestamp="20210331 12:18:32.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:18:32.243" starttime="20210331 12:18:29.855"/>
</kw>
<msg timestamp="20210331 12:18:32.243" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210331 12:18:32.243" starttime="20210331 12:18:29.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:18:32.244" starttime="20210331 12:18:32.243"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:18:32.244" starttime="20210331 12:18:32.244"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210331 12:18:32.244" starttime="20210331 12:18:27.675"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:32.251" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:34.672" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:18:34.672" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210331 12:18:34.673" starttime="20210331 12:18:32.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:34.674" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210331 12:18:34.674" starttime="20210331 12:18:34.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:34.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:34.675" starttime="20210331 12:18:34.674"/>
</kw>
<msg timestamp="20210331 12:18:34.675" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210331 12:18:34.675" starttime="20210331 12:18:32.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:18:34.676" starttime="20210331 12:18:34.675"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:34.678" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:36.740" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:18:36.740" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210331 12:18:36.740" starttime="20210331 12:18:34.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:36.741" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210331 12:18:36.741" starttime="20210331 12:18:36.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:36.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:36.742" starttime="20210331 12:18:36.741"/>
</kw>
<msg timestamp="20210331 12:18:36.742" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210331 12:18:36.742" starttime="20210331 12:18:34.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:18:36.743" starttime="20210331 12:18:36.742"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210331 12:18:36.743" starttime="20210331 12:18:32.246"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210331 12:18:36.746" starttime="20210331 12:18:17.202"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="SETUP" name="Create volumes">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210331 12:18:36.768" level="INFO">${random} = 43662</msg>
<status status="PASS" endtime="20210331 12:18:36.768" starttime="20210331 12:18:36.768"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:18:36.771" level="INFO">${source} = 43662-source</msg>
<status status="PASS" endtime="20210331 12:18:36.771" starttime="20210331 12:18:36.769"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:18:36.774" level="INFO">${target} = 43662-target</msg>
<status status="PASS" endtime="20210331 12:18:36.774" starttime="20210331 12:18:36.772"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:36.778" level="INFO">Running command 'ozone sh volume create 43662-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:43.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:18:43.480" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:18:43.481" starttime="20210331 12:18:36.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:43.482" level="INFO"/>
<status status="PASS" endtime="20210331 12:18:43.482" starttime="20210331 12:18:43.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:43.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:43.483" starttime="20210331 12:18:43.482"/>
</kw>
<status status="PASS" endtime="20210331 12:18:43.484" starttime="20210331 12:18:36.775"/>
</kw>
<msg timestamp="20210331 12:18:43.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:18:43.484" starttime="20210331 12:18:36.775"/>
</kw>
<status status="PASS" endtime="20210331 12:18:43.484" starttime="20210331 12:18:36.774"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:43.491" level="INFO">Running command 'ozone sh volume create 43662-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:50.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:18:50.294" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:18:50.294" starttime="20210331 12:18:43.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:50.296" level="INFO"/>
<status status="PASS" endtime="20210331 12:18:50.296" starttime="20210331 12:18:50.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:50.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:50.297" starttime="20210331 12:18:50.296"/>
</kw>
<status status="PASS" endtime="20210331 12:18:50.297" starttime="20210331 12:18:43.487"/>
</kw>
<msg timestamp="20210331 12:18:50.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:18:50.297" starttime="20210331 12:18:43.485"/>
</kw>
<status status="PASS" endtime="20210331 12:18:50.297" starttime="20210331 12:18:43.485"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:50.303" level="INFO">Running command 'ozone sh bucket create 43662-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:18:56.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:18:56.856" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:18:56.856" starttime="20210331 12:18:50.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:18:56.857" level="INFO"/>
<status status="PASS" endtime="20210331 12:18:56.857" starttime="20210331 12:18:56.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:18:56.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:18:56.858" starttime="20210331 12:18:56.857"/>
</kw>
<status status="PASS" endtime="20210331 12:18:56.858" starttime="20210331 12:18:50.300"/>
</kw>
<msg timestamp="20210331 12:18:56.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:18:56.858" starttime="20210331 12:18:50.299"/>
</kw>
<status status="PASS" endtime="20210331 12:18:56.858" starttime="20210331 12:18:50.298"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:18:56.862" level="INFO">Running command 'ozone sh key put 43662-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:22:05.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:22:05.944" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:22:05.944" starttime="20210331 12:18:56.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:22:05.945" level="INFO"/>
<status status="PASS" endtime="20210331 12:22:05.945" starttime="20210331 12:22:05.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:22:05.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:22:05.946" starttime="20210331 12:22:05.945"/>
</kw>
<status status="PASS" endtime="20210331 12:22:05.946" starttime="20210331 12:18:56.859"/>
</kw>
<msg timestamp="20210331 12:22:05.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:22:05.946" starttime="20210331 12:18:56.859"/>
</kw>
<status status="PASS" endtime="20210331 12:22:05.946" starttime="20210331 12:18:56.859"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:22:05.950" level="INFO">Running command 'ozone sh bucket create 43662-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:22:12.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:22:12.110" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:22:12.111" starttime="20210331 12:22:05.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:22:12.112" level="INFO"/>
<status status="PASS" endtime="20210331 12:22:12.112" starttime="20210331 12:22:12.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:22:12.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:22:12.115" starttime="20210331 12:22:12.114"/>
</kw>
<status status="PASS" endtime="20210331 12:22:12.116" starttime="20210331 12:22:05.948"/>
</kw>
<msg timestamp="20210331 12:22:12.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:22:12.116" starttime="20210331 12:22:05.947"/>
</kw>
<status status="PASS" endtime="20210331 12:22:12.116" starttime="20210331 12:22:05.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:22:12.120" level="INFO">Running command 'ozone sh bucket link 43662-source/readable-bucket 43662-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:22:19.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:22:19.858" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:22:19.858" starttime="20210331 12:22:12.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:22:19.861" level="INFO"/>
<status status="PASS" endtime="20210331 12:22:19.861" starttime="20210331 12:22:19.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:22:19.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:22:19.863" starttime="20210331 12:22:19.861"/>
</kw>
<status status="PASS" endtime="20210331 12:22:19.864" starttime="20210331 12:22:12.117"/>
</kw>
<msg timestamp="20210331 12:22:19.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:22:19.864" starttime="20210331 12:22:12.117"/>
</kw>
<status status="PASS" endtime="20210331 12:22:19.865" starttime="20210331 12:22:12.116"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:22:19.872" level="INFO">Running command 'ozone sh bucket link 43662-source/readable-bucket 43662-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:22:25.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:22:25.928" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:22:25.928" starttime="20210331 12:22:19.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:22:25.929" level="INFO"/>
<status status="PASS" endtime="20210331 12:22:25.929" starttime="20210331 12:22:25.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:22:25.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:22:25.930" starttime="20210331 12:22:25.929"/>
</kw>
<status status="PASS" endtime="20210331 12:22:25.930" starttime="20210331 12:22:19.869"/>
</kw>
<msg timestamp="20210331 12:22:25.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:22:25.930" starttime="20210331 12:22:19.868"/>
</kw>
<status status="PASS" endtime="20210331 12:22:25.930" starttime="20210331 12:22:19.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:22:25.934" level="INFO">Running command 'ozone sh bucket link 43662-source/unreadable-bucket 43662-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:22:31.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:22:31.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:22:31.005" starttime="20210331 12:22:25.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:22:31.006" level="INFO"/>
<status status="PASS" endtime="20210331 12:22:31.006" starttime="20210331 12:22:31.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:22:31.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:22:31.007" starttime="20210331 12:22:31.006"/>
</kw>
<status status="PASS" endtime="20210331 12:22:31.007" starttime="20210331 12:22:25.932"/>
</kw>
<msg timestamp="20210331 12:22:31.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:22:31.008" starttime="20210331 12:22:25.931"/>
</kw>
<status status="PASS" endtime="20210331 12:22:31.008" starttime="20210331 12:22:25.931"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:22:31.012" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 43662-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:22:37.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:22:37.224" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:22:37.224" starttime="20210331 12:22:31.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:22:37.225" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:22:37.225" starttime="20210331 12:22:37.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:22:37.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:22:37.226" starttime="20210331 12:22:37.226"/>
</kw>
<status status="PASS" endtime="20210331 12:22:37.226" starttime="20210331 12:22:31.009"/>
</kw>
<msg timestamp="20210331 12:22:37.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:22:37.227" starttime="20210331 12:22:31.009"/>
</kw>
<status status="PASS" endtime="20210331 12:22:37.227" starttime="20210331 12:22:31.008"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:22:37.231" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 43662-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:22:43.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:22:43.454" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:22:43.454" starttime="20210331 12:22:37.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:22:43.456" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:22:43.456" starttime="20210331 12:22:43.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:22:43.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:22:43.456" starttime="20210331 12:22:43.456"/>
</kw>
<status status="PASS" endtime="20210331 12:22:43.457" starttime="20210331 12:22:37.228"/>
</kw>
<msg timestamp="20210331 12:22:43.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:22:43.457" starttime="20210331 12:22:37.228"/>
</kw>
<status status="PASS" endtime="20210331 12:22:43.457" starttime="20210331 12:22:37.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:22:43.461" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 43662-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:22:49.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:22:49.887" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:22:49.888" starttime="20210331 12:22:43.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:22:49.889" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:22:49.890" starttime="20210331 12:22:49.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:22:49.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:22:49.891" starttime="20210331 12:22:49.890"/>
</kw>
<status status="PASS" endtime="20210331 12:22:49.892" starttime="20210331 12:22:43.458"/>
</kw>
<msg timestamp="20210331 12:22:49.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:22:49.892" starttime="20210331 12:22:43.458"/>
</kw>
<status status="PASS" endtime="20210331 12:22:49.892" starttime="20210331 12:22:43.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:22:49.900" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 43662-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:22:56.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:22:56.674" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:22:56.675" starttime="20210331 12:22:49.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:22:56.676" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:22:56.676" starttime="20210331 12:22:56.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:22:56.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:22:56.677" starttime="20210331 12:22:56.676"/>
</kw>
<status status="PASS" endtime="20210331 12:22:56.677" starttime="20210331 12:22:49.894"/>
</kw>
<msg timestamp="20210331 12:22:56.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:22:56.677" starttime="20210331 12:22:49.894"/>
</kw>
<status status="PASS" endtime="20210331 12:22:56.677" starttime="20210331 12:22:49.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:22:56.682" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 43662-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:23:02.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:23:02.895" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:23:02.895" starttime="20210331 12:22:56.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:23:02.896" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:23:02.897" starttime="20210331 12:23:02.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:23:02.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:23:02.897" starttime="20210331 12:23:02.897"/>
</kw>
<status status="PASS" endtime="20210331 12:23:02.897" starttime="20210331 12:22:56.678"/>
</kw>
<msg timestamp="20210331 12:23:02.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:23:02.898" starttime="20210331 12:22:56.678"/>
</kw>
<status status="PASS" endtime="20210331 12:23:02.898" starttime="20210331 12:22:56.678"/>
</kw>
<status status="PASS" endtime="20210331 12:23:02.899" starttime="20210331 12:18:50.298"/>
</kw>
<status status="PASS" endtime="20210331 12:23:02.899" starttime="20210331 12:18:50.298"/>
</kw>
<status status="PASS" endtime="20210331 12:23:02.899" starttime="20210331 12:18:36.767"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:23:02.911" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:23:02.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:23:02.914" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:23:02.914" starttime="20210331 12:23:02.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:23:02.915" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:23:02.915" starttime="20210331 12:23:02.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:23:02.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:23:02.916" starttime="20210331 12:23:02.915"/>
</kw>
<status status="PASS" endtime="20210331 12:23:02.917" starttime="20210331 12:23:02.908"/>
</kw>
<msg timestamp="20210331 12:23:02.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:23:02.917" starttime="20210331 12:23:02.907"/>
</kw>
<msg timestamp="20210331 12:23:02.917" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:23:02.917" starttime="20210331 12:23:02.907"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:23:02.919" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:23:02.919" starttime="20210331 12:23:02.917"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:23:02.924" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:23:03.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:23:03.044" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:23:03.044" starttime="20210331 12:23:02.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:23:03.045" level="INFO"/>
<status status="PASS" endtime="20210331 12:23:03.045" starttime="20210331 12:23:03.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:23:03.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:23:03.046" starttime="20210331 12:23:03.046"/>
</kw>
<status status="PASS" endtime="20210331 12:23:03.047" starttime="20210331 12:23:02.921"/>
</kw>
<msg timestamp="20210331 12:23:03.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:23:03.047" starttime="20210331 12:23:02.920"/>
</kw>
<status status="PASS" endtime="20210331 12:23:03.047" starttime="20210331 12:23:02.920"/>
</kw>
<status status="PASS" endtime="20210331 12:23:03.047" starttime="20210331 12:23:02.919"/>
</kw>
<status status="PASS" endtime="20210331 12:23:03.047" starttime="20210331 12:23:02.906"/>
</kw>
<status status="PASS" endtime="20210331 12:23:03.047" starttime="20210331 12:23:02.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:23:03.052" level="INFO">Running command 'ozone sh bucket link 43662-source/no-such-bucket 43662-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:23:09.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:23:09.057" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:23:09.057" starttime="20210331 12:23:03.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:23:09.058" level="INFO"/>
<status status="PASS" endtime="20210331 12:23:09.059" starttime="20210331 12:23:09.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:23:09.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:23:09.061" starttime="20210331 12:23:09.059"/>
</kw>
<status status="PASS" endtime="20210331 12:23:09.062" starttime="20210331 12:23:03.049"/>
</kw>
<msg timestamp="20210331 12:23:09.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:23:09.062" starttime="20210331 12:23:03.048"/>
</kw>
<status status="PASS" endtime="20210331 12:23:09.063" starttime="20210331 12:23:03.048"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:23:09.067" level="INFO">Running command 'ozone sh key list 43662-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:23:15.368" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:23:15.368" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210331 12:23:15.369" starttime="20210331 12:23:09.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:23:15.371" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210331 12:23:15.371" starttime="20210331 12:23:15.370"/>
</kw>
<msg timestamp="20210331 12:23:15.372" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210331 12:23:15.372" starttime="20210331 12:23:09.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:23:15.373" starttime="20210331 12:23:15.372"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:23:15.374" starttime="20210331 12:23:02.900"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:23:15.385" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:23:15.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:23:15.389" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:23:15.389" starttime="20210331 12:23:15.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:23:15.393" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:23:15.394" starttime="20210331 12:23:15.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:23:15.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:23:15.394" starttime="20210331 12:23:15.394"/>
</kw>
<status status="PASS" endtime="20210331 12:23:15.395" starttime="20210331 12:23:15.380"/>
</kw>
<msg timestamp="20210331 12:23:15.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:23:15.395" starttime="20210331 12:23:15.380"/>
</kw>
<msg timestamp="20210331 12:23:15.395" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:23:15.395" starttime="20210331 12:23:15.379"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:23:15.396" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:23:15.396" starttime="20210331 12:23:15.395"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:23:15.402" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:23:15.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:23:15.412" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:23:15.412" starttime="20210331 12:23:15.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:23:15.413" level="INFO"/>
<status status="PASS" endtime="20210331 12:23:15.413" starttime="20210331 12:23:15.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:23:15.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:23:15.417" starttime="20210331 12:23:15.416"/>
</kw>
<status status="PASS" endtime="20210331 12:23:15.417" starttime="20210331 12:23:15.397"/>
</kw>
<msg timestamp="20210331 12:23:15.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:23:15.418" starttime="20210331 12:23:15.397"/>
</kw>
<status status="PASS" endtime="20210331 12:23:15.418" starttime="20210331 12:23:15.396"/>
</kw>
<status status="PASS" endtime="20210331 12:23:15.418" starttime="20210331 12:23:15.396"/>
</kw>
<status status="PASS" endtime="20210331 12:23:15.418" starttime="20210331 12:23:15.378"/>
</kw>
<status status="PASS" endtime="20210331 12:23:15.418" starttime="20210331 12:23:15.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:23:15.427" level="INFO">Running command 'ozone sh bucket link 43662-source/bucket1 43662-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:23:22.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:23:22.024" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:23:22.025" starttime="20210331 12:23:15.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:23:22.026" level="INFO"/>
<status status="PASS" endtime="20210331 12:23:22.026" starttime="20210331 12:23:22.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:23:22.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:23:22.027" starttime="20210331 12:23:22.026"/>
</kw>
<status status="PASS" endtime="20210331 12:23:22.027" starttime="20210331 12:23:15.419"/>
</kw>
<msg timestamp="20210331 12:23:22.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:23:22.028" starttime="20210331 12:23:15.419"/>
</kw>
<status status="PASS" endtime="20210331 12:23:22.028" starttime="20210331 12:23:15.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:23:22.033" level="INFO">Running command 'ozone sh bucket create 43662-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:23:28.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:23:28.808" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:23:28.808" starttime="20210331 12:23:22.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:23:28.810" level="INFO"/>
<status status="PASS" endtime="20210331 12:23:28.810" starttime="20210331 12:23:28.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:23:28.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:23:28.811" starttime="20210331 12:23:28.810"/>
</kw>
<status status="PASS" endtime="20210331 12:23:28.811" starttime="20210331 12:23:22.029"/>
</kw>
<msg timestamp="20210331 12:23:28.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:23:28.811" starttime="20210331 12:23:22.029"/>
</kw>
<status status="PASS" endtime="20210331 12:23:28.812" starttime="20210331 12:23:22.028"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:23:28.816" level="INFO">Running command 'ozone sh key put 43662-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:25:15.377" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210331 12:25:15.377" starttime="20210331 12:23:28.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210331 12:25:15.379" starttime="20210331 12:25:15.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210331 12:25:15.379" starttime="20210331 12:25:15.379"/>
</kw>
<status status="FAIL" endtime="20210331 12:25:15.380" starttime="20210331 12:23:28.813"/>
</kw>
<msg timestamp="20210331 12:25:15.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210331 12:25:15.380" starttime="20210331 12:23:28.813"/>
</kw>
<status status="FAIL" endtime="20210331 12:25:15.380" starttime="20210331 12:23:28.812"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" endtime="20210331 12:25:15.380" starttime="20210331 12:25:15.380"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210331 12:25:15.381" starttime="20210331 12:23:15.375">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:25:15.387" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:25:15.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:25:15.390" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:25:15.390" starttime="20210331 12:25:15.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:25:15.391" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:25:15.391" starttime="20210331 12:25:15.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:25:15.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:25:15.392" starttime="20210331 12:25:15.391"/>
</kw>
<status status="PASS" endtime="20210331 12:25:15.392" starttime="20210331 12:25:15.384"/>
</kw>
<msg timestamp="20210331 12:25:15.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:25:15.392" starttime="20210331 12:25:15.384"/>
</kw>
<msg timestamp="20210331 12:25:15.393" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:25:15.393" starttime="20210331 12:25:15.384"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:25:15.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:25:15.393" starttime="20210331 12:25:15.393"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:25:15.398" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:25:15.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:25:15.443" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:25:15.443" starttime="20210331 12:25:15.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:25:15.445" level="INFO"/>
<status status="PASS" endtime="20210331 12:25:15.445" starttime="20210331 12:25:15.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:25:15.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:25:15.446" starttime="20210331 12:25:15.445"/>
</kw>
<status status="PASS" endtime="20210331 12:25:15.446" starttime="20210331 12:25:15.395"/>
</kw>
<msg timestamp="20210331 12:25:15.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:25:15.446" starttime="20210331 12:25:15.395"/>
</kw>
<status status="PASS" endtime="20210331 12:25:15.446" starttime="20210331 12:25:15.394"/>
</kw>
<status status="PASS" endtime="20210331 12:25:15.446" starttime="20210331 12:25:15.394"/>
</kw>
<status status="PASS" endtime="20210331 12:25:15.447" starttime="20210331 12:25:15.383"/>
</kw>
<status status="PASS" endtime="20210331 12:25:15.447" starttime="20210331 12:25:15.383"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:25:15.451" level="INFO">Running command 'ozone sh key put 43662-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:15.383" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210331 12:27:15.383" starttime="20210331 12:25:15.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210331 12:27:15.384" starttime="20210331 12:27:15.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210331 12:27:15.384" starttime="20210331 12:27:15.384"/>
</kw>
<status status="FAIL" endtime="20210331 12:27:15.385" starttime="20210331 12:25:15.448"/>
</kw>
<msg timestamp="20210331 12:27:15.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210331 12:27:15.385" starttime="20210331 12:25:15.448"/>
</kw>
<status status="FAIL" endtime="20210331 12:27:15.385" starttime="20210331 12:25:15.447"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" endtime="20210331 12:27:15.385" starttime="20210331 12:27:15.385"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210331 12:27:15.386" starttime="20210331 12:25:15.381">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:15.392" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:15.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:15.395" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:27:15.395" starttime="20210331 12:27:15.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:15.396" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:27:15.396" starttime="20210331 12:27:15.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:15.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:15.397" starttime="20210331 12:27:15.396"/>
</kw>
<status status="PASS" endtime="20210331 12:27:15.397" starttime="20210331 12:27:15.389"/>
</kw>
<msg timestamp="20210331 12:27:15.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:15.397" starttime="20210331 12:27:15.389"/>
</kw>
<msg timestamp="20210331 12:27:15.397" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:27:15.397" starttime="20210331 12:27:15.389"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:27:15.398" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:27:15.398" starttime="20210331 12:27:15.398"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:15.403" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:15.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:15.410" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:27:15.410" starttime="20210331 12:27:15.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:15.411" level="INFO"/>
<status status="PASS" endtime="20210331 12:27:15.411" starttime="20210331 12:27:15.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:15.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:15.412" starttime="20210331 12:27:15.411"/>
</kw>
<status status="PASS" endtime="20210331 12:27:15.412" starttime="20210331 12:27:15.400"/>
</kw>
<msg timestamp="20210331 12:27:15.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:15.413" starttime="20210331 12:27:15.400"/>
</kw>
<status status="PASS" endtime="20210331 12:27:15.413" starttime="20210331 12:27:15.399"/>
</kw>
<status status="PASS" endtime="20210331 12:27:15.413" starttime="20210331 12:27:15.398"/>
</kw>
<status status="PASS" endtime="20210331 12:27:15.413" starttime="20210331 12:27:15.388"/>
</kw>
<status status="PASS" endtime="20210331 12:27:15.413" starttime="20210331 12:27:15.388"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:15.417" level="INFO">Running command 'ozone sh key list 43662-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:21.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:21.666" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210331 12:27:21.666" starttime="20210331 12:27:15.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:21.668" level="INFO">key1</msg>
<status status="PASS" endtime="20210331 12:27:21.668" starttime="20210331 12:27:21.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:21.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:21.669" starttime="20210331 12:27:21.668"/>
</kw>
<status status="PASS" endtime="20210331 12:27:21.669" starttime="20210331 12:27:15.414"/>
</kw>
<msg timestamp="20210331 12:27:21.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:21.670" starttime="20210331 12:27:15.414"/>
</kw>
<msg timestamp="20210331 12:27:21.670" level="INFO">${target_list} = key1</msg>
<status status="PASS" endtime="20210331 12:27:21.670" starttime="20210331 12:27:15.413"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:21.674" level="INFO">Running command 'ozone sh key list 43662-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:28.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:28.757" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210331 12:27:28.757" starttime="20210331 12:27:21.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:28.762" level="INFO">key1</msg>
<status status="PASS" endtime="20210331 12:27:28.762" starttime="20210331 12:27:28.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:28.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:28.763" starttime="20210331 12:27:28.762"/>
</kw>
<status status="PASS" endtime="20210331 12:27:28.765" starttime="20210331 12:27:21.671"/>
</kw>
<msg timestamp="20210331 12:27:28.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:28.765" starttime="20210331 12:27:21.671"/>
</kw>
<msg timestamp="20210331 12:27:28.765" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210331 12:27:28.765" starttime="20210331 12:27:21.670"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:27:28.766" starttime="20210331 12:27:28.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:27:28.767" starttime="20210331 12:27:28.766"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210331 12:27:28.768" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" endtime="20210331 12:27:28.768" starttime="20210331 12:27:28.767"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210331 12:27:28.768" starttime="20210331 12:27:15.387">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:28.775" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:28.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:28.778" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:27:28.778" starttime="20210331 12:27:28.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:28.780" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:27:28.780" starttime="20210331 12:27:28.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:28.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:28.782" starttime="20210331 12:27:28.780"/>
</kw>
<status status="PASS" endtime="20210331 12:27:28.783" starttime="20210331 12:27:28.771"/>
</kw>
<msg timestamp="20210331 12:27:28.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:28.783" starttime="20210331 12:27:28.771"/>
</kw>
<msg timestamp="20210331 12:27:28.783" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:27:28.783" starttime="20210331 12:27:28.771"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:27:28.784" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:27:28.784" starttime="20210331 12:27:28.783"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:28.789" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:28.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:28.798" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:27:28.798" starttime="20210331 12:27:28.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:28.800" level="INFO"/>
<status status="PASS" endtime="20210331 12:27:28.800" starttime="20210331 12:27:28.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:28.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:28.802" starttime="20210331 12:27:28.800"/>
</kw>
<status status="PASS" endtime="20210331 12:27:28.802" starttime="20210331 12:27:28.785"/>
</kw>
<msg timestamp="20210331 12:27:28.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:28.803" starttime="20210331 12:27:28.785"/>
</kw>
<status status="PASS" endtime="20210331 12:27:28.803" starttime="20210331 12:27:28.785"/>
</kw>
<status status="PASS" endtime="20210331 12:27:28.803" starttime="20210331 12:27:28.784"/>
</kw>
<status status="PASS" endtime="20210331 12:27:28.803" starttime="20210331 12:27:28.770"/>
</kw>
<status status="PASS" endtime="20210331 12:27:28.803" starttime="20210331 12:27:28.770"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:28.807" level="INFO">Running command 'ozone sh key delete 43662-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:35.380" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:27:35.380" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210331 12:27:35.380" starttime="20210331 12:27:28.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:35.381" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210331 12:27:35.381" starttime="20210331 12:27:35.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:35.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210331 12:27:35.384" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210331 12:27:35.384" starttime="20210331 12:27:35.382"/>
</kw>
<status status="FAIL" endtime="20210331 12:27:35.384" starttime="20210331 12:27:28.804"/>
</kw>
<msg timestamp="20210331 12:27:35.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210331 12:27:35.384" starttime="20210331 12:27:28.804"/>
</kw>
<status status="FAIL" endtime="20210331 12:27:35.384" starttime="20210331 12:27:28.804"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" endtime="20210331 12:27:35.385" starttime="20210331 12:27:35.385"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:27:35.385" starttime="20210331 12:27:35.385"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210331 12:27:35.385" starttime="20210331 12:27:28.769">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:35.393" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:35.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:35.398" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:27:35.398" starttime="20210331 12:27:35.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:35.400" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:27:35.400" starttime="20210331 12:27:35.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:35.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:35.402" starttime="20210331 12:27:35.400"/>
</kw>
<status status="PASS" endtime="20210331 12:27:35.402" starttime="20210331 12:27:35.390"/>
</kw>
<msg timestamp="20210331 12:27:35.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:35.402" starttime="20210331 12:27:35.389"/>
</kw>
<msg timestamp="20210331 12:27:35.403" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:27:35.403" starttime="20210331 12:27:35.389"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:27:35.404" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:27:35.404" starttime="20210331 12:27:35.403"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:35.411" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:35.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:35.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:27:35.420" starttime="20210331 12:27:35.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:35.421" level="INFO"/>
<status status="PASS" endtime="20210331 12:27:35.421" starttime="20210331 12:27:35.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:35.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:35.422" starttime="20210331 12:27:35.421"/>
</kw>
<status status="PASS" endtime="20210331 12:27:35.423" starttime="20210331 12:27:35.406"/>
</kw>
<msg timestamp="20210331 12:27:35.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:35.423" starttime="20210331 12:27:35.405"/>
</kw>
<status status="PASS" endtime="20210331 12:27:35.423" starttime="20210331 12:27:35.404"/>
</kw>
<status status="PASS" endtime="20210331 12:27:35.423" starttime="20210331 12:27:35.404"/>
</kw>
<status status="PASS" endtime="20210331 12:27:35.424" starttime="20210331 12:27:35.388"/>
</kw>
<status status="PASS" endtime="20210331 12:27:35.424" starttime="20210331 12:27:35.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:35.428" level="INFO">Running command 'ozone sh bucket list 43662-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:42.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:42.427" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210331 12:27:42.427" starttime="20210331 12:27:35.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:42.429" level="INFO">{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:23:08.725Z",
  "modificationTime" : "2021-03-31T12:23:08.725Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:22:30.934Z",
  "modificationTime" : "2021-03-31T12:23:02.815Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:23:21.835Z",
  "modificationTime" : "2021-03-31T12:23:21.835Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:22:19.665Z",
  "modificationTime" : "2021-03-31T12:22:56.527Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:22:25.857Z",
  "modificationTime" : "2021-03-31T12:22:25.857Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210331 12:27:42.429" starttime="20210331 12:27:42.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:42.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:42.431" starttime="20210331 12:27:42.429"/>
</kw>
<status status="PASS" endtime="20210331 12:27:42.431" starttime="20210331 12:27:35.425"/>
</kw>
<msg timestamp="20210331 12:27:42.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:42.431" starttime="20210331 12:27:35.425"/>
</kw>
<msg timestamp="20210331 12:27:42.432" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210331 12:27:42.432" starttime="20210331 12:27:35.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:27:42.433" starttime="20210331 12:27:42.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:27:42.434" starttime="20210331 12:27:42.433"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:27:42.435" starttime="20210331 12:27:35.387"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:42.444" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:42.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:42.450" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:27:42.450" starttime="20210331 12:27:42.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:42.452" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:27:42.452" starttime="20210331 12:27:42.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:42.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:42.453" starttime="20210331 12:27:42.453"/>
</kw>
<status status="PASS" endtime="20210331 12:27:42.454" starttime="20210331 12:27:42.439"/>
</kw>
<msg timestamp="20210331 12:27:42.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:42.456" starttime="20210331 12:27:42.439"/>
</kw>
<msg timestamp="20210331 12:27:42.456" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:27:42.456" starttime="20210331 12:27:42.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:27:42.458" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:27:42.458" starttime="20210331 12:27:42.457"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:42.465" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:42.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:42.475" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:27:42.475" starttime="20210331 12:27:42.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:42.477" level="INFO"/>
<status status="PASS" endtime="20210331 12:27:42.477" starttime="20210331 12:27:42.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:42.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:42.478" starttime="20210331 12:27:42.477"/>
</kw>
<status status="PASS" endtime="20210331 12:27:42.478" starttime="20210331 12:27:42.460"/>
</kw>
<msg timestamp="20210331 12:27:42.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:42.479" starttime="20210331 12:27:42.460"/>
</kw>
<status status="PASS" endtime="20210331 12:27:42.479" starttime="20210331 12:27:42.459"/>
</kw>
<status status="PASS" endtime="20210331 12:27:42.479" starttime="20210331 12:27:42.458"/>
</kw>
<status status="PASS" endtime="20210331 12:27:42.479" starttime="20210331 12:27:42.437"/>
</kw>
<status status="PASS" endtime="20210331 12:27:42.480" starttime="20210331 12:27:42.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:42.486" level="INFO">Running command 'ozone sh bucket info 43662-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:49.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:49.110" level="INFO">${output} = 43662-source bucket1</msg>
<status status="PASS" endtime="20210331 12:27:49.110" starttime="20210331 12:27:42.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:49.111" level="INFO">43662-source bucket1</msg>
<status status="PASS" endtime="20210331 12:27:49.112" starttime="20210331 12:27:49.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:49.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:49.114" starttime="20210331 12:27:49.112"/>
</kw>
<status status="PASS" endtime="20210331 12:27:49.114" starttime="20210331 12:27:42.483"/>
</kw>
<msg timestamp="20210331 12:27:49.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:49.115" starttime="20210331 12:27:42.482"/>
</kw>
<msg timestamp="20210331 12:27:49.116" level="INFO">${result} = 43662-source bucket1</msg>
<status status="PASS" endtime="20210331 12:27:49.116" starttime="20210331 12:27:42.480"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:27:49.117" starttime="20210331 12:27:49.116"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:27:49.118" starttime="20210331 12:27:42.435"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:49.127" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:49.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:49.130" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:27:49.130" starttime="20210331 12:27:49.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:49.132" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:27:49.132" starttime="20210331 12:27:49.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:49.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:49.134" starttime="20210331 12:27:49.132"/>
</kw>
<status status="PASS" endtime="20210331 12:27:49.134" starttime="20210331 12:27:49.122"/>
</kw>
<msg timestamp="20210331 12:27:49.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:49.135" starttime="20210331 12:27:49.122"/>
</kw>
<msg timestamp="20210331 12:27:49.135" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:27:49.135" starttime="20210331 12:27:49.121"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:27:49.137" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:27:49.137" starttime="20210331 12:27:49.136"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:49.145" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:49.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:49.156" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:27:49.156" starttime="20210331 12:27:49.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:49.158" level="INFO"/>
<status status="PASS" endtime="20210331 12:27:49.158" starttime="20210331 12:27:49.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:49.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:49.159" starttime="20210331 12:27:49.158"/>
</kw>
<status status="PASS" endtime="20210331 12:27:49.160" starttime="20210331 12:27:49.140"/>
</kw>
<msg timestamp="20210331 12:27:49.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:49.160" starttime="20210331 12:27:49.139"/>
</kw>
<status status="PASS" endtime="20210331 12:27:49.160" starttime="20210331 12:27:49.138"/>
</kw>
<status status="PASS" endtime="20210331 12:27:49.160" starttime="20210331 12:27:49.137"/>
</kw>
<status status="PASS" endtime="20210331 12:27:49.161" starttime="20210331 12:27:49.120"/>
</kw>
<status status="PASS" endtime="20210331 12:27:49.161" starttime="20210331 12:27:49.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:49.166" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 43662-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:27:55.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:27:55.249" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:27:55.249" starttime="20210331 12:27:49.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:27:55.250" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:27:55.250" starttime="20210331 12:27:55.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:27:55.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:27:55.251" starttime="20210331 12:27:55.250"/>
</kw>
<status status="PASS" endtime="20210331 12:27:55.251" starttime="20210331 12:27:49.163"/>
</kw>
<msg timestamp="20210331 12:27:55.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:27:55.251" starttime="20210331 12:27:49.162"/>
</kw>
<status status="PASS" endtime="20210331 12:27:55.252" starttime="20210331 12:27:49.161"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:27:55.258" level="INFO">Running command 'ozone sh bucket getacl 43662-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:02.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:02.346" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210331 12:28:02.346" starttime="20210331 12:27:55.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:02.348" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210331 12:28:02.348" starttime="20210331 12:28:02.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:02.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:02.349" starttime="20210331 12:28:02.348"/>
</kw>
<status status="PASS" endtime="20210331 12:28:02.349" starttime="20210331 12:27:55.254"/>
</kw>
<msg timestamp="20210331 12:28:02.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:02.350" starttime="20210331 12:27:55.254"/>
</kw>
<msg timestamp="20210331 12:28:02.350" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210331 12:28:02.350" starttime="20210331 12:27:55.253"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:28:02.351" starttime="20210331 12:28:02.350"/>
</kw>
<status status="PASS" endtime="20210331 12:28:02.351" starttime="20210331 12:27:55.252"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:02.357" level="INFO">Running command 'ozone sh bucket getacl 43662-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:08.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:08.905" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:08.906" starttime="20210331 12:28:02.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:08.907" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:08.907" starttime="20210331 12:28:08.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:08.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:08.908" starttime="20210331 12:28:08.907"/>
</kw>
<status status="PASS" endtime="20210331 12:28:08.908" starttime="20210331 12:28:02.353"/>
</kw>
<msg timestamp="20210331 12:28:08.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:08.909" starttime="20210331 12:28:02.353"/>
</kw>
<msg timestamp="20210331 12:28:08.909" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210331 12:28:08.909" starttime="20210331 12:28:02.352"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:28:08.909" starttime="20210331 12:28:08.909"/>
</kw>
<status status="PASS" endtime="20210331 12:28:08.910" starttime="20210331 12:28:02.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:08.916" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 43662-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:14.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:14.430" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:28:14.431" starttime="20210331 12:28:08.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:14.432" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:28:14.432" starttime="20210331 12:28:14.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:14.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:14.433" starttime="20210331 12:28:14.432"/>
</kw>
<status status="PASS" endtime="20210331 12:28:14.433" starttime="20210331 12:28:08.911"/>
</kw>
<msg timestamp="20210331 12:28:14.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:14.433" starttime="20210331 12:28:08.910"/>
</kw>
<status status="PASS" endtime="20210331 12:28:14.433" starttime="20210331 12:28:08.910"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:14.439" level="INFO">Running command 'ozone sh bucket getacl 43662-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:20.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:20.448" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:20.448" starttime="20210331 12:28:14.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:20.451" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:20.451" starttime="20210331 12:28:20.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:20.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:20.453" starttime="20210331 12:28:20.451"/>
</kw>
<status status="PASS" endtime="20210331 12:28:20.454" starttime="20210331 12:28:14.436"/>
</kw>
<msg timestamp="20210331 12:28:20.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:20.454" starttime="20210331 12:28:14.436"/>
</kw>
<msg timestamp="20210331 12:28:20.455" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210331 12:28:20.455" starttime="20210331 12:28:14.435"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:28:20.456" starttime="20210331 12:28:20.455"/>
</kw>
<status status="PASS" endtime="20210331 12:28:20.457" starttime="20210331 12:28:14.433"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:20.465" level="INFO">Running command 'ozone sh bucket getacl 43662-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:27.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:27.240" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210331 12:28:27.240" starttime="20210331 12:28:20.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:27.241" level="INFO">READ</msg>
<status status="PASS" endtime="20210331 12:28:27.241" starttime="20210331 12:28:27.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:27.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:27.242" starttime="20210331 12:28:27.241"/>
</kw>
<status status="PASS" endtime="20210331 12:28:27.242" starttime="20210331 12:28:20.461"/>
</kw>
<msg timestamp="20210331 12:28:27.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:27.243" starttime="20210331 12:28:20.460"/>
</kw>
<msg timestamp="20210331 12:28:27.243" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210331 12:28:27.243" starttime="20210331 12:28:20.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:28:27.243" starttime="20210331 12:28:27.243"/>
</kw>
<status status="PASS" endtime="20210331 12:28:27.244" starttime="20210331 12:28:20.457"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:28:27.244" starttime="20210331 12:27:49.119"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:27.250" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:27.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:27.253" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:28:27.253" starttime="20210331 12:28:27.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:27.254" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:28:27.254" starttime="20210331 12:28:27.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:27.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:27.255" starttime="20210331 12:28:27.254"/>
</kw>
<status status="PASS" endtime="20210331 12:28:27.255" starttime="20210331 12:28:27.247"/>
</kw>
<msg timestamp="20210331 12:28:27.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:27.255" starttime="20210331 12:28:27.247"/>
</kw>
<msg timestamp="20210331 12:28:27.256" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:28:27.256" starttime="20210331 12:28:27.247"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:28:27.256" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:28:27.256" starttime="20210331 12:28:27.256"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:27.260" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:27.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:27.460" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:27.461" starttime="20210331 12:28:27.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:27.462" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:27.462" starttime="20210331 12:28:27.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:27.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:27.463" starttime="20210331 12:28:27.462"/>
</kw>
<status status="PASS" endtime="20210331 12:28:27.463" starttime="20210331 12:28:27.258"/>
</kw>
<msg timestamp="20210331 12:28:27.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:27.464" starttime="20210331 12:28:27.258"/>
</kw>
<status status="PASS" endtime="20210331 12:28:27.464" starttime="20210331 12:28:27.257"/>
</kw>
<status status="PASS" endtime="20210331 12:28:27.464" starttime="20210331 12:28:27.257"/>
</kw>
<status status="PASS" endtime="20210331 12:28:27.464" starttime="20210331 12:28:27.246"/>
</kw>
<status status="PASS" endtime="20210331 12:28:27.464" starttime="20210331 12:28:27.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:27.468" level="INFO">Running command 'ozone sh bucket link 43662-source/bucket2 43662-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:32.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:32.506" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:32.506" starttime="20210331 12:28:27.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:32.507" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:32.507" starttime="20210331 12:28:32.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:32.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:32.508" starttime="20210331 12:28:32.507"/>
</kw>
<status status="PASS" endtime="20210331 12:28:32.509" starttime="20210331 12:28:27.466"/>
</kw>
<msg timestamp="20210331 12:28:32.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:32.509" starttime="20210331 12:28:27.465"/>
</kw>
<status status="PASS" endtime="20210331 12:28:32.509" starttime="20210331 12:28:27.465"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:32.513" level="INFO">Running command 'ozone sh bucket create 43662-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:39.206" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:28:39.206" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210331 12:28:39.206" starttime="20210331 12:28:32.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:39.207" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210331 12:28:39.208" starttime="20210331 12:28:39.207"/>
</kw>
<msg timestamp="20210331 12:28:39.208" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210331 12:28:39.208" starttime="20210331 12:28:32.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:28:39.209" starttime="20210331 12:28:39.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:39.214" level="INFO">Running command 'ozone sh bucket create 43662-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:45.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:45.380" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:45.380" starttime="20210331 12:28:39.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:45.381" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:45.381" starttime="20210331 12:28:45.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:45.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:45.382" starttime="20210331 12:28:45.381"/>
</kw>
<status status="PASS" endtime="20210331 12:28:45.382" starttime="20210331 12:28:39.210"/>
</kw>
<msg timestamp="20210331 12:28:45.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:45.382" starttime="20210331 12:28:39.209"/>
</kw>
<status status="PASS" endtime="20210331 12:28:45.383" starttime="20210331 12:28:39.209"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:45.387" level="INFO">Running command 'ozone sh bucket link 43662-source/bucket1 43662-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:51.349" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:28:51.349" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210331 12:28:51.350" starttime="20210331 12:28:45.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:51.352" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210331 12:28:51.352" starttime="20210331 12:28:51.350"/>
</kw>
<msg timestamp="20210331 12:28:51.352" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210331 12:28:51.352" starttime="20210331 12:28:45.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:28:51.354" starttime="20210331 12:28:51.353"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:28:51.354" starttime="20210331 12:28:27.245"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:51.363" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:51.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:51.366" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:28:51.367" starttime="20210331 12:28:51.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:51.368" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:28:51.369" starttime="20210331 12:28:51.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:51.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:51.370" starttime="20210331 12:28:51.369"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.370" starttime="20210331 12:28:51.360"/>
</kw>
<msg timestamp="20210331 12:28:51.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:51.371" starttime="20210331 12:28:51.359"/>
</kw>
<msg timestamp="20210331 12:28:51.371" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:28:51.371" starttime="20210331 12:28:51.358"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:28:51.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:28:51.372" starttime="20210331 12:28:51.371"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:51.378" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:51.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:51.386" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:51.386" starttime="20210331 12:28:51.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:51.387" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:51.395" starttime="20210331 12:28:51.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:51.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:51.397" starttime="20210331 12:28:51.396"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.397" starttime="20210331 12:28:51.375"/>
</kw>
<msg timestamp="20210331 12:28:51.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:51.398" starttime="20210331 12:28:51.374"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.398" starttime="20210331 12:28:51.373"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.398" starttime="20210331 12:28:51.373"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.398" starttime="20210331 12:28:51.357"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.399" starttime="20210331 12:28:51.356"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:51.406" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:51.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:51.410" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:51.410" starttime="20210331 12:28:51.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:51.411" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:51.411" starttime="20210331 12:28:51.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:51.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:51.412" starttime="20210331 12:28:51.411"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.412" starttime="20210331 12:28:51.402"/>
</kw>
<msg timestamp="20210331 12:28:51.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:51.413" starttime="20210331 12:28:51.402"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.413" starttime="20210331 12:28:51.401"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:51.418" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:51.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:51.422" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:28:51.422" starttime="20210331 12:28:51.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:51.423" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:28:51.423" starttime="20210331 12:28:51.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:51.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:51.424" starttime="20210331 12:28:51.424"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.424" starttime="20210331 12:28:51.414"/>
</kw>
<msg timestamp="20210331 12:28:51.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:51.425" starttime="20210331 12:28:51.414"/>
</kw>
<msg timestamp="20210331 12:28:51.425" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:28:51.425" starttime="20210331 12:28:51.414"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:28:51.428" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:28:51.428" starttime="20210331 12:28:51.425"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:51.433" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:51.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:51.442" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:51.442" starttime="20210331 12:28:51.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:51.444" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:51.444" starttime="20210331 12:28:51.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:51.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:51.445" starttime="20210331 12:28:51.444"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.445" starttime="20210331 12:28:51.430"/>
</kw>
<msg timestamp="20210331 12:28:51.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:51.445" starttime="20210331 12:28:51.430"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.446" starttime="20210331 12:28:51.429"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.446" starttime="20210331 12:28:51.428"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.446" starttime="20210331 12:28:51.413"/>
</kw>
<status status="PASS" endtime="20210331 12:28:51.446" starttime="20210331 12:28:51.413"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:51.449" level="INFO">Running command 'ozone sh key list 43662-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:58.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:58.055" level="INFO">${output} = {
  "volumeName" : "43662-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-31T12:19:02.013Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210331 12:28:58.055" starttime="20210331 12:28:51.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:58.056" level="INFO">{
  "volumeName" : "43662-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-31T12:19:02.013Z",
  "modificationTime" : "2021-03-31T12:22:05.330Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210331 12:28:58.057" starttime="20210331 12:28:58.056"/>
</kw>
<msg timestamp="20210331 12:28:58.057" level="INFO">${result} = {
  "volumeName" : "43662-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-31T12:19:02.013Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210331 12:28:58.057" starttime="20210331 12:28:51.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:28:58.058" starttime="20210331 12:28:58.057"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.058" starttime="20210331 12:28:51.400"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.058" starttime="20210331 12:28:51.399"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:28:58.059" starttime="20210331 12:28:51.355"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:58.067" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:58.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:58.071" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:28:58.071" starttime="20210331 12:28:58.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:58.073" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:28:58.073" starttime="20210331 12:28:58.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:58.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:58.074" starttime="20210331 12:28:58.073"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.074" starttime="20210331 12:28:58.064"/>
</kw>
<msg timestamp="20210331 12:28:58.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:58.075" starttime="20210331 12:28:58.064"/>
</kw>
<msg timestamp="20210331 12:28:58.075" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:28:58.075" starttime="20210331 12:28:58.063"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:28:58.076" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:28:58.076" starttime="20210331 12:28:58.075"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:58.081" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:58.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:58.090" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:58.090" starttime="20210331 12:28:58.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:58.092" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:58.093" starttime="20210331 12:28:58.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:58.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:58.094" starttime="20210331 12:28:58.093"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.094" starttime="20210331 12:28:58.078"/>
</kw>
<msg timestamp="20210331 12:28:58.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:58.094" starttime="20210331 12:28:58.078"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.094" starttime="20210331 12:28:58.077"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.095" starttime="20210331 12:28:58.077"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.095" starttime="20210331 12:28:58.062"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.095" starttime="20210331 12:28:58.062"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:58.100" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:58.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:58.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:58.106" starttime="20210331 12:28:58.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:58.108" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:58.108" starttime="20210331 12:28:58.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:58.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:58.109" starttime="20210331 12:28:58.109"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.110" starttime="20210331 12:28:58.098"/>
</kw>
<msg timestamp="20210331 12:28:58.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:58.110" starttime="20210331 12:28:58.097"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.110" starttime="20210331 12:28:58.096"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:58.116" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:58.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:58.120" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:28:58.120" starttime="20210331 12:28:58.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:58.121" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:28:58.122" starttime="20210331 12:28:58.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:58.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:58.123" starttime="20210331 12:28:58.122"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.123" starttime="20210331 12:28:58.113"/>
</kw>
<msg timestamp="20210331 12:28:58.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:58.123" starttime="20210331 12:28:58.113"/>
</kw>
<msg timestamp="20210331 12:28:58.124" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:28:58.124" starttime="20210331 12:28:58.112"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:28:58.125" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:28:58.125" starttime="20210331 12:28:58.124"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:58.129" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:28:58.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:28:58.137" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:28:58.137" starttime="20210331 12:28:58.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:28:58.139" level="INFO"/>
<status status="PASS" endtime="20210331 12:28:58.139" starttime="20210331 12:28:58.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:28:58.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:28:58.140" starttime="20210331 12:28:58.139"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.141" starttime="20210331 12:28:58.127"/>
</kw>
<msg timestamp="20210331 12:28:58.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:28:58.141" starttime="20210331 12:28:58.126"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.141" starttime="20210331 12:28:58.125"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.141" starttime="20210331 12:28:58.125"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.141" starttime="20210331 12:28:58.111"/>
</kw>
<status status="PASS" endtime="20210331 12:28:58.142" starttime="20210331 12:28:58.110"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:28:58.145" level="INFO">Running command 'ozone sh key list 43662-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:04.171" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:29:04.171" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 43662-target unreadable-link null</msg>
<status status="PASS" endtime="20210331 12:29:04.171" starttime="20210331 12:28:58.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:04.172" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 43662-target unreadable-link null</msg>
<status status="PASS" endtime="20210331 12:29:04.172" starttime="20210331 12:29:04.171"/>
</kw>
<msg timestamp="20210331 12:29:04.173" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 43662-target unreadable-link null</msg>
<status status="PASS" endtime="20210331 12:29:04.173" starttime="20210331 12:28:58.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:29:04.175" starttime="20210331 12:29:04.173"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.175" starttime="20210331 12:28:58.096"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.175" starttime="20210331 12:28:58.095"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:29:04.176" starttime="20210331 12:28:58.060"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:04.187" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:04.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:04.191" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:29:04.192" starttime="20210331 12:29:04.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:04.194" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:29:04.194" starttime="20210331 12:29:04.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:04.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:04.196" starttime="20210331 12:29:04.194"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.196" starttime="20210331 12:29:04.182"/>
</kw>
<msg timestamp="20210331 12:29:04.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:04.197" starttime="20210331 12:29:04.182"/>
</kw>
<msg timestamp="20210331 12:29:04.198" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:29:04.198" starttime="20210331 12:29:04.181"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:29:04.199" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:29:04.199" starttime="20210331 12:29:04.198"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:04.206" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:04.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:04.214" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:29:04.215" starttime="20210331 12:29:04.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:04.217" level="INFO"/>
<status status="PASS" endtime="20210331 12:29:04.217" starttime="20210331 12:29:04.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:04.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:04.219" starttime="20210331 12:29:04.218"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.221" starttime="20210331 12:29:04.202"/>
</kw>
<msg timestamp="20210331 12:29:04.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:04.222" starttime="20210331 12:29:04.202"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.222" starttime="20210331 12:29:04.200"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.222" starttime="20210331 12:29:04.199"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.222" starttime="20210331 12:29:04.180"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.222" starttime="20210331 12:29:04.179"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:04.228" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:04.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:04.233" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:29:04.233" starttime="20210331 12:29:04.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:04.236" level="INFO"/>
<status status="PASS" endtime="20210331 12:29:04.236" starttime="20210331 12:29:04.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:04.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:04.237" starttime="20210331 12:29:04.236"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.238" starttime="20210331 12:29:04.225"/>
</kw>
<msg timestamp="20210331 12:29:04.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:04.238" starttime="20210331 12:29:04.224"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.239" starttime="20210331 12:29:04.223"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:04.245" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:04.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:04.249" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:29:04.250" starttime="20210331 12:29:04.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:04.252" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:29:04.252" starttime="20210331 12:29:04.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:04.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:04.253" starttime="20210331 12:29:04.252"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.254" starttime="20210331 12:29:04.242"/>
</kw>
<msg timestamp="20210331 12:29:04.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:04.255" starttime="20210331 12:29:04.242"/>
</kw>
<msg timestamp="20210331 12:29:04.255" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:29:04.255" starttime="20210331 12:29:04.241"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:29:04.256" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:29:04.256" starttime="20210331 12:29:04.256"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:04.262" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:04.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:04.271" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:29:04.271" starttime="20210331 12:29:04.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:04.274" level="INFO"/>
<status status="PASS" endtime="20210331 12:29:04.274" starttime="20210331 12:29:04.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:04.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:04.275" starttime="20210331 12:29:04.274"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.276" starttime="20210331 12:29:04.259"/>
</kw>
<msg timestamp="20210331 12:29:04.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:04.276" starttime="20210331 12:29:04.258"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.276" starttime="20210331 12:29:04.257"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.276" starttime="20210331 12:29:04.257"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.276" starttime="20210331 12:29:04.240"/>
</kw>
<status status="PASS" endtime="20210331 12:29:04.276" starttime="20210331 12:29:04.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:04.281" level="INFO">Running command 'ozone sh bucket info 43662-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:08.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:08.808" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210331 12:29:08.808" starttime="20210331 12:29:04.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:08.809" level="INFO">{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:22:30.934Z",
  "modificationTime" : "2021-03-31T12:23:02.815Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210331 12:29:08.809" starttime="20210331 12:29:08.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:08.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:08.810" starttime="20210331 12:29:08.809"/>
</kw>
<status status="PASS" endtime="20210331 12:29:08.810" starttime="20210331 12:29:04.278"/>
</kw>
<msg timestamp="20210331 12:29:08.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:08.810" starttime="20210331 12:29:04.277"/>
</kw>
<msg timestamp="20210331 12:29:08.811" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210331 12:29:08.811" starttime="20210331 12:29:04.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:29:08.811" starttime="20210331 12:29:08.811"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:29:08.812" starttime="20210331 12:29:08.811"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:08.814" level="INFO">Running command 'ozone sh key list 43662-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:14.548" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:29:14.548" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 43662-source unreadable-bucket </msg>
<status status="PASS" endtime="20210331 12:29:14.548" starttime="20210331 12:29:08.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:14.550" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 43662-source unreadable-bucket </msg>
<status status="PASS" endtime="20210331 12:29:14.550" starttime="20210331 12:29:14.549"/>
</kw>
<msg timestamp="20210331 12:29:14.550" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 43662-source unreadable-bucket </msg>
<status status="PASS" endtime="20210331 12:29:14.550" starttime="20210331 12:29:08.812"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:29:14.551" starttime="20210331 12:29:14.551"/>
</kw>
<status status="PASS" endtime="20210331 12:29:14.551" starttime="20210331 12:29:04.223"/>
</kw>
<status status="PASS" endtime="20210331 12:29:14.552" starttime="20210331 12:29:04.222"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:29:14.552" starttime="20210331 12:29:04.177"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:14.562" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:14.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:14.565" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:29:14.565" starttime="20210331 12:29:14.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:14.566" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:29:14.567" starttime="20210331 12:29:14.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:14.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:14.567" starttime="20210331 12:29:14.567"/>
</kw>
<status status="PASS" endtime="20210331 12:29:14.568" starttime="20210331 12:29:14.558"/>
</kw>
<msg timestamp="20210331 12:29:14.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:14.568" starttime="20210331 12:29:14.558"/>
</kw>
<msg timestamp="20210331 12:29:14.568" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:29:14.568" starttime="20210331 12:29:14.557"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:29:14.569" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:29:14.569" starttime="20210331 12:29:14.568"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:14.575" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:14.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:14.584" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:29:14.584" starttime="20210331 12:29:14.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:14.585" level="INFO"/>
<status status="PASS" endtime="20210331 12:29:14.585" starttime="20210331 12:29:14.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:14.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:14.586" starttime="20210331 12:29:14.586"/>
</kw>
<status status="PASS" endtime="20210331 12:29:14.587" starttime="20210331 12:29:14.571"/>
</kw>
<msg timestamp="20210331 12:29:14.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:14.587" starttime="20210331 12:29:14.570"/>
</kw>
<status status="PASS" endtime="20210331 12:29:14.587" starttime="20210331 12:29:14.570"/>
</kw>
<status status="PASS" endtime="20210331 12:29:14.587" starttime="20210331 12:29:14.569"/>
</kw>
<status status="PASS" endtime="20210331 12:29:14.588" starttime="20210331 12:29:14.556"/>
</kw>
<status status="PASS" endtime="20210331 12:29:14.588" starttime="20210331 12:29:14.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:14.592" level="INFO">Running command 'ozone sh bucket link 43662-target/loop1 43662-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:21.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:21.124" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:29:21.124" starttime="20210331 12:29:14.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:21.125" level="INFO"/>
<status status="PASS" endtime="20210331 12:29:21.126" starttime="20210331 12:29:21.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:21.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:21.126" starttime="20210331 12:29:21.126"/>
</kw>
<status status="PASS" endtime="20210331 12:29:21.127" starttime="20210331 12:29:14.589"/>
</kw>
<msg timestamp="20210331 12:29:21.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:21.127" starttime="20210331 12:29:14.589"/>
</kw>
<status status="PASS" endtime="20210331 12:29:21.127" starttime="20210331 12:29:14.588"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:21.132" level="INFO">Running command 'ozone sh bucket link 43662-target/loop2 43662-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:27.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:27.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:29:27.826" starttime="20210331 12:29:21.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:27.827" level="INFO"/>
<status status="PASS" endtime="20210331 12:29:27.827" starttime="20210331 12:29:27.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:27.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:27.828" starttime="20210331 12:29:27.827"/>
</kw>
<status status="PASS" endtime="20210331 12:29:27.828" starttime="20210331 12:29:21.128"/>
</kw>
<msg timestamp="20210331 12:29:27.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:27.828" starttime="20210331 12:29:21.128"/>
</kw>
<status status="PASS" endtime="20210331 12:29:27.829" starttime="20210331 12:29:21.127"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:27.833" level="INFO">Running command 'ozone sh bucket link 43662-target/loop3 43662-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:33.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:33.594" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:29:33.594" starttime="20210331 12:29:27.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:33.595" level="INFO"/>
<status status="PASS" endtime="20210331 12:29:33.595" starttime="20210331 12:29:33.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:33.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:33.596" starttime="20210331 12:29:33.596"/>
</kw>
<status status="PASS" endtime="20210331 12:29:33.596" starttime="20210331 12:29:27.830"/>
</kw>
<msg timestamp="20210331 12:29:33.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:33.597" starttime="20210331 12:29:27.829"/>
</kw>
<status status="PASS" endtime="20210331 12:29:33.597" starttime="20210331 12:29:27.829"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:33.600" level="INFO">Running command 'ozone sh key list 43662-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:39.863" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:29:39.863" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210331 12:29:39.863" starttime="20210331 12:29:33.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:39.864" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210331 12:29:39.864" starttime="20210331 12:29:39.864"/>
</kw>
<msg timestamp="20210331 12:29:39.865" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210331 12:29:39.865" starttime="20210331 12:29:33.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:29:39.865" starttime="20210331 12:29:39.865"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:29:39.866" starttime="20210331 12:29:14.553"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:39.874" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:39.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:39.877" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:29:39.877" starttime="20210331 12:29:39.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:39.878" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:29:39.878" starttime="20210331 12:29:39.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:39.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:39.879" starttime="20210331 12:29:39.879"/>
</kw>
<status status="PASS" endtime="20210331 12:29:39.880" starttime="20210331 12:29:39.870"/>
</kw>
<msg timestamp="20210331 12:29:39.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:39.880" starttime="20210331 12:29:39.870"/>
</kw>
<msg timestamp="20210331 12:29:39.880" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:29:39.880" starttime="20210331 12:29:39.869"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:29:39.881" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:29:39.881" starttime="20210331 12:29:39.881"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:39.887" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:39.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:39.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:29:39.895" starttime="20210331 12:29:39.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:39.897" level="INFO"/>
<status status="PASS" endtime="20210331 12:29:39.897" starttime="20210331 12:29:39.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:39.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:39.898" starttime="20210331 12:29:39.897"/>
</kw>
<status status="PASS" endtime="20210331 12:29:39.898" starttime="20210331 12:29:39.883"/>
</kw>
<msg timestamp="20210331 12:29:39.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:39.899" starttime="20210331 12:29:39.883"/>
</kw>
<status status="PASS" endtime="20210331 12:29:39.899" starttime="20210331 12:29:39.882"/>
</kw>
<status status="PASS" endtime="20210331 12:29:39.899" starttime="20210331 12:29:39.882"/>
</kw>
<status status="PASS" endtime="20210331 12:29:39.899" starttime="20210331 12:29:39.868"/>
</kw>
<status status="PASS" endtime="20210331 12:29:39.899" starttime="20210331 12:29:39.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:39.904" level="INFO">Running command 'ozone sh bucket link 43662-source/bucket1 43662-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:29:45.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:29:45.883" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:29:45.884" starttime="20210331 12:29:39.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:29:45.886" level="INFO"/>
<status status="PASS" endtime="20210331 12:29:45.886" starttime="20210331 12:29:45.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:29:45.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:29:45.888" starttime="20210331 12:29:45.887"/>
</kw>
<status status="PASS" endtime="20210331 12:29:45.889" starttime="20210331 12:29:39.901"/>
</kw>
<msg timestamp="20210331 12:29:45.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:29:45.889" starttime="20210331 12:29:39.900"/>
</kw>
<status status="PASS" endtime="20210331 12:29:45.890" starttime="20210331 12:29:39.900"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:29:45.897" level="INFO">Running command 'ozone sh key put 43662-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:31:39.868" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210331 12:31:39.869" starttime="20210331 12:29:45.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210331 12:31:39.869" starttime="20210331 12:31:39.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210331 12:31:39.869" starttime="20210331 12:31:39.869"/>
</kw>
<status status="FAIL" endtime="20210331 12:31:39.870" starttime="20210331 12:29:45.892"/>
</kw>
<msg timestamp="20210331 12:31:39.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210331 12:31:39.870" starttime="20210331 12:29:45.892"/>
</kw>
<status status="FAIL" endtime="20210331 12:31:39.870" starttime="20210331 12:29:45.890"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" endtime="20210331 12:31:39.871" starttime="20210331 12:31:39.870"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210331 12:31:39.871" starttime="20210331 12:29:39.867">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:31:39.879" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:31:39.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:31:39.881" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:31:39.881" starttime="20210331 12:31:39.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:31:39.882" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:31:39.882" starttime="20210331 12:31:39.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:31:39.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:31:39.883" starttime="20210331 12:31:39.882"/>
</kw>
<status status="PASS" endtime="20210331 12:31:39.883" starttime="20210331 12:31:39.875"/>
</kw>
<msg timestamp="20210331 12:31:39.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:31:39.883" starttime="20210331 12:31:39.875"/>
</kw>
<msg timestamp="20210331 12:31:39.883" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:31:39.883" starttime="20210331 12:31:39.874"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:31:39.884" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:31:39.884" starttime="20210331 12:31:39.884"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:31:39.888" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:31:39.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:31:39.898" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:31:39.898" starttime="20210331 12:31:39.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:31:39.903" level="INFO"/>
<status status="PASS" endtime="20210331 12:31:39.903" starttime="20210331 12:31:39.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:31:39.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:31:39.904" starttime="20210331 12:31:39.903"/>
</kw>
<status status="PASS" endtime="20210331 12:31:39.904" starttime="20210331 12:31:39.886"/>
</kw>
<msg timestamp="20210331 12:31:39.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:31:39.905" starttime="20210331 12:31:39.885"/>
</kw>
<status status="PASS" endtime="20210331 12:31:39.905" starttime="20210331 12:31:39.885"/>
</kw>
<status status="PASS" endtime="20210331 12:31:39.905" starttime="20210331 12:31:39.884"/>
</kw>
<status status="PASS" endtime="20210331 12:31:39.905" starttime="20210331 12:31:39.874"/>
</kw>
<status status="PASS" endtime="20210331 12:31:39.905" starttime="20210331 12:31:39.873"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:31:39.912" level="INFO">Running command 'ozone sh bucket delete 43662-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:31:46.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:31:46.007" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:31:46.007" starttime="20210331 12:31:39.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:31:46.010" level="INFO"/>
<status status="PASS" endtime="20210331 12:31:46.010" starttime="20210331 12:31:46.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:31:46.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:31:46.012" starttime="20210331 12:31:46.011"/>
</kw>
<status status="PASS" endtime="20210331 12:31:46.012" starttime="20210331 12:31:39.906"/>
</kw>
<msg timestamp="20210331 12:31:46.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:31:46.012" starttime="20210331 12:31:39.906"/>
</kw>
<status status="PASS" endtime="20210331 12:31:46.013" starttime="20210331 12:31:39.905"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:31:46.019" level="INFO">Running command 'ozone sh bucket list 43662-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:31:52.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:31:52.552" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T...</msg>
<status status="PASS" endtime="20210331 12:31:52.552" starttime="20210331 12:31:46.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:31:52.555" level="INFO">{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:28:45.288Z",
  "modificationTime" : "2021-03-31T12:28:45.288Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:23:08.725Z",
  "modificationTime" : "2021-03-31T12:23:08.725Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:22:30.934Z",
  "modificationTime" : "2021-03-31T12:23:02.815Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:28:32.312Z",
  "modificationTime" : "2021-03-31T12:28:32.312Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:29:45.764Z",
  "modificationTime" : "2021-03-31T12:29:45.764Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:29:33.341Z",
  "modificationTime" : "2021-03-31T12:29:33.341Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:29:20.912Z",
  "modificationTime" : "2021-03-31T12:29:20.912Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:29:27.602Z",
  "modificationTime" : "2021-03-31T12:29:27.602Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:22:19.665Z",
  "modificationTime" : "2021-03-31T12:22:56.527Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T12:22:25.857Z",
  "modificationTime" : "2021-03-31T12:22:25.857Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "43662-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210331 12:31:52.555" starttime="20210331 12:31:52.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:31:52.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:31:52.556" starttime="20210331 12:31:52.555"/>
</kw>
<status status="PASS" endtime="20210331 12:31:52.557" starttime="20210331 12:31:46.015"/>
</kw>
<msg timestamp="20210331 12:31:52.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:31:52.557" starttime="20210331 12:31:46.014"/>
</kw>
<msg timestamp="20210331 12:31:52.558" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "43662-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-31T...</msg>
<status status="PASS" endtime="20210331 12:31:52.559" starttime="20210331 12:31:46.013"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:31:52.560" starttime="20210331 12:31:52.559"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:31:52.568" level="INFO">Running command 'ozone sh key list 43662-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:32:00.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:32:00.191" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210331 12:32:00.191" starttime="20210331 12:31:52.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:32:00.193" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210331 12:32:00.193" starttime="20210331 12:32:00.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:32:00.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:32:00.195" starttime="20210331 12:32:00.193"/>
</kw>
<status status="PASS" endtime="20210331 12:32:00.195" starttime="20210331 12:31:52.563"/>
</kw>
<msg timestamp="20210331 12:32:00.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:32:00.196" starttime="20210331 12:31:52.562"/>
</kw>
<msg timestamp="20210331 12:32:00.196" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210331 12:32:00.196" starttime="20210331 12:31:52.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:32:00.198" starttime="20210331 12:32:00.197"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:32:00.198" starttime="20210331 12:31:39.872"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20210331 12:32:00.202" starttime="20210331 12:18:36.749"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210331 12:32:00.237" level="INFO">${random} = 32620</msg>
<status status="PASS" endtime="20210331 12:32:00.238" starttime="20210331 12:32:00.237"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:32:00.238" level="INFO">${prefix} = 32620</msg>
<status status="PASS" endtime="20210331 12:32:00.238" starttime="20210331 12:32:00.238"/>
</kw>
<status status="PASS" endtime="20210331 12:32:00.238" starttime="20210331 12:32:00.237"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:32:00.245" level="INFO">Running command 'ozone sh volume info /32620-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:32:06.535" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:32:06.535" level="INFO">${output} = VOLUME_NOT_FOUND Volume 32620-rpcbasic is not found</msg>
<status status="PASS" endtime="20210331 12:32:06.535" starttime="20210331 12:32:00.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:32:06.536" level="INFO">VOLUME_NOT_FOUND Volume 32620-rpcbasic is not found</msg>
<status status="PASS" endtime="20210331 12:32:06.536" starttime="20210331 12:32:06.535"/>
</kw>
<msg timestamp="20210331 12:32:06.537" level="INFO">${result} = VOLUME_NOT_FOUND Volume 32620-rpcbasic is not found</msg>
<status status="PASS" endtime="20210331 12:32:06.537" starttime="20210331 12:32:00.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:32:06.537" starttime="20210331 12:32:06.537"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:32:06.542" level="INFO">Running command 'ozone sh volume create /32620-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:32:12.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:32:12.771" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:32:12.771" starttime="20210331 12:32:06.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:32:12.773" level="INFO"/>
<status status="PASS" endtime="20210331 12:32:12.774" starttime="20210331 12:32:12.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:32:12.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:32:12.775" starttime="20210331 12:32:12.774"/>
</kw>
<status status="PASS" endtime="20210331 12:32:12.776" starttime="20210331 12:32:06.538"/>
</kw>
<msg timestamp="20210331 12:32:12.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:32:12.776" starttime="20210331 12:32:06.538"/>
</kw>
<msg timestamp="20210331 12:32:12.777" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210331 12:32:12.777" starttime="20210331 12:32:06.537"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:32:12.778" starttime="20210331 12:32:12.777"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:32:12.785" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="32620-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:32:19.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:32:19.493" level="INFO">${output} = {
  "metadata": {},
  "name": "32620-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210331 12:32:19.493" starttime="20210331 12:32:12.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:32:19.494" level="INFO">{
  "metadata": {},
  "name": "32620-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-31T12:32:12.697Z",
  "modificationTime": "2021-03-31T12:32:12.697Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210331 12:32:19.494" starttime="20210331 12:32:19.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:32:19.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:32:19.495" starttime="20210331 12:32:19.494"/>
</kw>
<status status="PASS" endtime="20210331 12:32:19.496" starttime="20210331 12:32:12.781"/>
</kw>
<msg timestamp="20210331 12:32:19.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:32:19.496" starttime="20210331 12:32:12.780"/>
</kw>
<msg timestamp="20210331 12:32:19.496" level="INFO">${result} = {
  "metadata": {},
  "name": "32620-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210331 12:32:19.496" starttime="20210331 12:32:12.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:32:19.497" starttime="20210331 12:32:19.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:32:19.503" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="32620-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:32:26.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:32:26.224" level="INFO">${output} = {
  "metadata": {},
  "name": "32620-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210331 12:32:26.225" starttime="20210331 12:32:19.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:32:26.227" level="INFO">{
  "metadata": {},
  "name": "32620-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-31T12:32:12.697Z",
  "modificationTime": "2021-03-31T12:32:12.697Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210331 12:32:26.227" starttime="20210331 12:32:26.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:32:26.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:32:26.228" starttime="20210331 12:32:26.227"/>
</kw>
<status status="PASS" endtime="20210331 12:32:26.229" starttime="20210331 12:32:19.499"/>
</kw>
<msg timestamp="20210331 12:32:26.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:32:26.229" starttime="20210331 12:32:19.499"/>
</kw>
<msg timestamp="20210331 12:32:26.230" level="INFO">${result} = {
  "metadata": {},
  "name": "32620-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210331 12:32:26.230" starttime="20210331 12:32:19.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:32:26.231" starttime="20210331 12:32:26.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:32:26.237" level="INFO">Running command 'ozone sh volume setquota /32620-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:32:32.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:32:32.636" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:32:32.636" starttime="20210331 12:32:26.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:32:32.638" level="INFO"/>
<status status="PASS" endtime="20210331 12:32:32.638" starttime="20210331 12:32:32.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:32:32.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:32:32.639" starttime="20210331 12:32:32.638"/>
</kw>
<status status="PASS" endtime="20210331 12:32:32.640" starttime="20210331 12:32:26.233"/>
</kw>
<msg timestamp="20210331 12:32:32.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:32:32.641" starttime="20210331 12:32:26.233"/>
</kw>
<status status="PASS" endtime="20210331 12:32:32.642" starttime="20210331 12:32:26.231"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:32:32.653" level="INFO">Running command 'ozone sh volume info /32620-rpcbasic | jq -r '. | select(.name=="32620-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:32:39.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:32:39.640" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:32:39.641" starttime="20210331 12:32:32.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:32:39.642" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210331 12:32:39.642" starttime="20210331 12:32:39.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:32:39.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:32:39.643" starttime="20210331 12:32:39.642"/>
</kw>
<status status="PASS" endtime="20210331 12:32:39.643" starttime="20210331 12:32:32.646"/>
</kw>
<msg timestamp="20210331 12:32:39.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:32:39.644" starttime="20210331 12:32:32.645"/>
</kw>
<msg timestamp="20210331 12:32:39.644" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:32:39.644" starttime="20210331 12:32:32.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:32:39.645" starttime="20210331 12:32:39.644"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:32:39.650" level="INFO">Running command 'ozone sh bucket create /32620-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:32:46.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:32:46.656" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:32:46.656" starttime="20210331 12:32:39.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:32:46.657" level="INFO"/>
<status status="PASS" endtime="20210331 12:32:46.657" starttime="20210331 12:32:46.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:32:46.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:32:46.658" starttime="20210331 12:32:46.658"/>
</kw>
<status status="PASS" endtime="20210331 12:32:46.659" starttime="20210331 12:32:39.646"/>
</kw>
<msg timestamp="20210331 12:32:46.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:32:46.660" starttime="20210331 12:32:39.646"/>
</kw>
<status status="PASS" endtime="20210331 12:32:46.660" starttime="20210331 12:32:39.645"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:32:46.666" level="INFO">Running command 'ozone sh bucket info /32620-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:32:53.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:32:53.224" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210331 12:32:53.224" starttime="20210331 12:32:46.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:32:53.226" level="INFO">DISK</msg>
<status status="PASS" endtime="20210331 12:32:53.226" starttime="20210331 12:32:53.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:32:53.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:32:53.227" starttime="20210331 12:32:53.226"/>
</kw>
<status status="PASS" endtime="20210331 12:32:53.227" starttime="20210331 12:32:46.663"/>
</kw>
<msg timestamp="20210331 12:32:53.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:32:53.227" starttime="20210331 12:32:46.663"/>
</kw>
<msg timestamp="20210331 12:32:53.228" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210331 12:32:53.228" starttime="20210331 12:32:46.661"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:32:53.228" starttime="20210331 12:32:53.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:32:53.233" level="INFO">Running command 'ozone sh bucket info /32620-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:33:00.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:33:00.269" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:33:00.269" starttime="20210331 12:32:53.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:33:00.270" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210331 12:33:00.270" starttime="20210331 12:33:00.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:33:00.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:33:00.271" starttime="20210331 12:33:00.271"/>
</kw>
<status status="PASS" endtime="20210331 12:33:00.272" starttime="20210331 12:32:53.230"/>
</kw>
<msg timestamp="20210331 12:33:00.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:33:00.272" starttime="20210331 12:32:53.229"/>
</kw>
<msg timestamp="20210331 12:33:00.272" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:33:00.272" starttime="20210331 12:32:53.228"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:33:00.273" starttime="20210331 12:33:00.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:33:00.277" level="INFO">Running command 'ozone sh bucket info /32620-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:33:06.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:33:06.813" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210331 12:33:06.813" starttime="20210331 12:33:00.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:33:06.815" level="INFO">100</msg>
<status status="PASS" endtime="20210331 12:33:06.815" starttime="20210331 12:33:06.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:33:06.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:33:06.816" starttime="20210331 12:33:06.816"/>
</kw>
<status status="PASS" endtime="20210331 12:33:06.819" starttime="20210331 12:33:00.274"/>
</kw>
<msg timestamp="20210331 12:33:06.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:33:06.819" starttime="20210331 12:33:00.274"/>
</kw>
<msg timestamp="20210331 12:33:06.820" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210331 12:33:06.820" starttime="20210331 12:33:00.273"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:33:06.820" starttime="20210331 12:33:06.820"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:33:06.825" level="INFO">Running command 'ozone sh bucket setquota /32620-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:33:13.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:33:13.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:33:13.452" starttime="20210331 12:33:06.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:33:13.453" level="INFO"/>
<status status="PASS" endtime="20210331 12:33:13.454" starttime="20210331 12:33:13.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:33:13.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:33:13.454" starttime="20210331 12:33:13.454"/>
</kw>
<status status="PASS" endtime="20210331 12:33:13.455" starttime="20210331 12:33:06.821"/>
</kw>
<msg timestamp="20210331 12:33:13.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:33:13.455" starttime="20210331 12:33:06.821"/>
</kw>
<status status="PASS" endtime="20210331 12:33:13.455" starttime="20210331 12:33:06.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:33:13.461" level="INFO">Running command 'ozone sh bucket info /32620-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:33:19.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:33:19.607" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210331 12:33:19.607" starttime="20210331 12:33:13.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:33:19.609" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210331 12:33:19.609" starttime="20210331 12:33:19.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:33:19.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:33:19.609" starttime="20210331 12:33:19.609"/>
</kw>
<status status="PASS" endtime="20210331 12:33:19.610" starttime="20210331 12:33:13.457"/>
</kw>
<msg timestamp="20210331 12:33:19.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:33:19.610" starttime="20210331 12:33:13.457"/>
</kw>
<msg timestamp="20210331 12:33:19.610" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210331 12:33:19.610" starttime="20210331 12:33:13.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:33:19.611" starttime="20210331 12:33:19.610"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:33:19.616" level="INFO">Running command 'ozone sh bucket info /32620-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:33:24.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:33:24.388" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210331 12:33:24.388" starttime="20210331 12:33:19.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:33:24.389" level="INFO">1000</msg>
<status status="PASS" endtime="20210331 12:33:24.390" starttime="20210331 12:33:24.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:33:24.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:33:24.390" starttime="20210331 12:33:24.390"/>
</kw>
<status status="PASS" endtime="20210331 12:33:24.391" starttime="20210331 12:33:19.612"/>
</kw>
<msg timestamp="20210331 12:33:24.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:33:24.391" starttime="20210331 12:33:19.612"/>
</kw>
<msg timestamp="20210331 12:33:24.391" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210331 12:33:24.391" starttime="20210331 12:33:19.611"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:33:24.392" starttime="20210331 12:33:24.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:33:24.398" level="INFO">Running command 'ozone sh bucket list /32620-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:33:29.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:33:29.792" level="INFO">${output} = 32620-rpcbasic</msg>
<status status="PASS" endtime="20210331 12:33:29.792" starttime="20210331 12:33:24.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:33:29.794" level="INFO">32620-rpcbasic</msg>
<status status="PASS" endtime="20210331 12:33:29.794" starttime="20210331 12:33:29.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:33:29.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:33:29.795" starttime="20210331 12:33:29.794"/>
</kw>
<status status="PASS" endtime="20210331 12:33:29.796" starttime="20210331 12:33:24.394"/>
</kw>
<msg timestamp="20210331 12:33:29.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:33:29.796" starttime="20210331 12:33:24.393"/>
</kw>
<msg timestamp="20210331 12:33:29.797" level="INFO">${result} = 32620-rpcbasic</msg>
<status status="PASS" endtime="20210331 12:33:29.797" starttime="20210331 12:33:24.392"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:33:29.798" starttime="20210331 12:33:29.797"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:33:29.807" level="INFO">Running command 'ozone sh key put /32620-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:36:38.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:36:38.162" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:36:38.162" starttime="20210331 12:33:29.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:36:38.164" level="INFO"/>
<status status="PASS" endtime="20210331 12:36:38.164" starttime="20210331 12:36:38.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:36:38.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:36:38.165" starttime="20210331 12:36:38.164"/>
</kw>
<status status="PASS" endtime="20210331 12:36:38.165" starttime="20210331 12:33:29.803"/>
</kw>
<msg timestamp="20210331 12:36:38.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:36:38.165" starttime="20210331 12:33:29.802"/>
</kw>
<status status="PASS" endtime="20210331 12:36:38.166" starttime="20210331 12:33:29.801"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:36:38.169" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:36:38.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:36:38.173" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:36:38.173" starttime="20210331 12:36:38.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:36:38.174" level="INFO"/>
<status status="PASS" endtime="20210331 12:36:38.174" starttime="20210331 12:36:38.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:36:38.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:36:38.175" starttime="20210331 12:36:38.174"/>
</kw>
<status status="PASS" endtime="20210331 12:36:38.175" starttime="20210331 12:36:38.167"/>
</kw>
<msg timestamp="20210331 12:36:38.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:36:38.176" starttime="20210331 12:36:38.166"/>
</kw>
<status status="PASS" endtime="20210331 12:36:38.176" starttime="20210331 12:36:38.166"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:36:38.181" level="INFO">Running command 'ozone sh key get /32620-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:36:48.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:36:48.036" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:36:48.036" starttime="20210331 12:36:38.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:36:48.037" level="INFO"/>
<status status="PASS" endtime="20210331 12:36:48.037" starttime="20210331 12:36:48.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:36:48.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:36:48.038" starttime="20210331 12:36:48.037"/>
</kw>
<status status="PASS" endtime="20210331 12:36:48.038" starttime="20210331 12:36:38.178"/>
</kw>
<msg timestamp="20210331 12:36:48.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:36:48.038" starttime="20210331 12:36:38.177"/>
</kw>
<status status="PASS" endtime="20210331 12:36:48.038" starttime="20210331 12:36:38.176"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:36:48.042" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:36:48.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:36:48.045" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:36:48.045" starttime="20210331 12:36:48.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:36:48.046" level="INFO"/>
<status status="PASS" endtime="20210331 12:36:48.047" starttime="20210331 12:36:48.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:36:48.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:36:48.048" starttime="20210331 12:36:48.047"/>
</kw>
<status status="PASS" endtime="20210331 12:36:48.048" starttime="20210331 12:36:48.040"/>
</kw>
<msg timestamp="20210331 12:36:48.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:36:48.048" starttime="20210331 12:36:48.039"/>
</kw>
<status status="PASS" endtime="20210331 12:36:48.048" starttime="20210331 12:36:48.039"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:36:48.053" level="INFO">Running command 'ozone sh key put -t RATIS /32620-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:00.239" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210331 12:37:00.240" starttime="20210331 12:36:48.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.241" starttime="20210331 12:37:00.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.241" starttime="20210331 12:37:00.241"/>
</kw>
<status status="FAIL" endtime="20210331 12:37:00.242" starttime="20210331 12:36:48.050"/>
</kw>
<msg timestamp="20210331 12:37:00.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210331 12:37:00.242" starttime="20210331 12:36:48.049"/>
</kw>
<status status="FAIL" endtime="20210331 12:37:00.242" starttime="20210331 12:36:48.048"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.243" starttime="20210331 12:37:00.242"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.243" starttime="20210331 12:37:00.243"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.244" starttime="20210331 12:37:00.243"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.244" starttime="20210331 12:37:00.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.244" starttime="20210331 12:37:00.244"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.245" starttime="20210331 12:37:00.245"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.245" starttime="20210331 12:37:00.245"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.246" starttime="20210331 12:37:00.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.246" starttime="20210331 12:37:00.246"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.246" starttime="20210331 12:37:00.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.247" starttime="20210331 12:37:00.247"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.247" starttime="20210331 12:37:00.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.248" starttime="20210331 12:37:00.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.248" starttime="20210331 12:37:00.248"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.249" starttime="20210331 12:37:00.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.249" starttime="20210331 12:37:00.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.250" starttime="20210331 12:37:00.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.250" starttime="20210331 12:37:00.250"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.251" starttime="20210331 12:37:00.250"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.251" starttime="20210331 12:37:00.251"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.251" starttime="20210331 12:37:00.251"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.252" starttime="20210331 12:37:00.252"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.252" starttime="20210331 12:37:00.252"/>
</kw>
<status status="FAIL" endtime="20210331 12:37:00.253" starttime="20210331 12:33:29.799"/>
</kw>
<status status="FAIL" endtime="20210331 12:37:00.253" starttime="20210331 12:33:29.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.253" starttime="20210331 12:37:00.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.254" starttime="20210331 12:37:00.254"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.254" starttime="20210331 12:37:00.254"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.254" starttime="20210331 12:37:00.254"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.255" starttime="20210331 12:37:00.255"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.255" starttime="20210331 12:37:00.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.256" starttime="20210331 12:37:00.256"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.256" starttime="20210331 12:37:00.256"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.257" starttime="20210331 12:37:00.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.257" starttime="20210331 12:37:00.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.258" starttime="20210331 12:37:00.258"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.258" starttime="20210331 12:37:00.258"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.259" starttime="20210331 12:37:00.259"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.259" starttime="20210331 12:37:00.259"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.260" starttime="20210331 12:37:00.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.260" starttime="20210331 12:37:00.260"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.260" starttime="20210331 12:37:00.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.261" starttime="20210331 12:37:00.261"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.261" starttime="20210331 12:37:00.261"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.262" starttime="20210331 12:37:00.262"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.262" starttime="20210331 12:37:00.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.263" starttime="20210331 12:37:00.262"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.263" starttime="20210331 12:37:00.263"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:37:00.263" starttime="20210331 12:37:00.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.264" starttime="20210331 12:37:00.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:37:00.264" starttime="20210331 12:37:00.264"/>
</kw>
<status status="FAIL" endtime="20210331 12:37:00.265" starttime="20210331 12:32:00.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210331 12:37:00.265" starttime="20210331 12:32:00.238">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210331 12:37:00.268" starttime="20210331 12:32:00.208"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210331 12:37:00.284" level="INFO">${random} = 10639</msg>
<status status="PASS" endtime="20210331 12:37:00.284" starttime="20210331 12:37:00.284"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:37:00.285" level="INFO">${prefix} = 10639</msg>
<status status="PASS" endtime="20210331 12:37:00.285" starttime="20210331 12:37:00.284"/>
</kw>
<status status="PASS" endtime="20210331 12:37:00.285" starttime="20210331 12:37:00.283"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:00.292" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:00.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:37:00.294" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:37:00.294" starttime="20210331 12:37:00.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:37:00.295" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:37:00.295" starttime="20210331 12:37:00.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:37:00.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:37:00.296" starttime="20210331 12:37:00.295"/>
</kw>
<status status="PASS" endtime="20210331 12:37:00.296" starttime="20210331 12:37:00.288"/>
</kw>
<msg timestamp="20210331 12:37:00.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:37:00.296" starttime="20210331 12:37:00.288"/>
</kw>
<msg timestamp="20210331 12:37:00.297" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:37:00.297" starttime="20210331 12:37:00.287"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:37:00.299" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:37:00.299" starttime="20210331 12:37:00.297"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:00.303" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:00.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:37:00.604" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:37:00.604" starttime="20210331 12:37:00.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:37:00.605" level="INFO"/>
<status status="PASS" endtime="20210331 12:37:00.605" starttime="20210331 12:37:00.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:37:00.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:37:00.607" starttime="20210331 12:37:00.606"/>
</kw>
<status status="PASS" endtime="20210331 12:37:00.608" starttime="20210331 12:37:00.300"/>
</kw>
<msg timestamp="20210331 12:37:00.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:37:00.609" starttime="20210331 12:37:00.300"/>
</kw>
<status status="PASS" endtime="20210331 12:37:00.609" starttime="20210331 12:37:00.299"/>
</kw>
<status status="PASS" endtime="20210331 12:37:00.609" starttime="20210331 12:37:00.299"/>
</kw>
<status status="PASS" endtime="20210331 12:37:00.610" starttime="20210331 12:37:00.287"/>
</kw>
<status status="PASS" endtime="20210331 12:37:00.610" starttime="20210331 12:37:00.286"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:00.614" level="INFO">Running command 'ozone sh volume info o3://om:9862/10639-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:07.831" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:37:07.832" level="INFO">${output} = VOLUME_NOT_FOUND Volume 10639-rpcwoport is not found</msg>
<status status="PASS" endtime="20210331 12:37:07.832" starttime="20210331 12:37:00.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:37:07.833" level="INFO">VOLUME_NOT_FOUND Volume 10639-rpcwoport is not found</msg>
<status status="PASS" endtime="20210331 12:37:07.833" starttime="20210331 12:37:07.832"/>
</kw>
<msg timestamp="20210331 12:37:07.833" level="INFO">${result} = VOLUME_NOT_FOUND Volume 10639-rpcwoport is not found</msg>
<status status="PASS" endtime="20210331 12:37:07.833" starttime="20210331 12:37:00.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:37:07.834" starttime="20210331 12:37:07.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:07.841" level="INFO">Running command 'ozone sh volume create o3://om:9862/10639-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:14.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:37:14.034" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:37:14.036" starttime="20210331 12:37:07.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:37:14.037" level="INFO"/>
<status status="PASS" endtime="20210331 12:37:14.038" starttime="20210331 12:37:14.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:37:14.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:37:14.038" starttime="20210331 12:37:14.038"/>
</kw>
<status status="PASS" endtime="20210331 12:37:14.039" starttime="20210331 12:37:07.836"/>
</kw>
<msg timestamp="20210331 12:37:14.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:37:14.039" starttime="20210331 12:37:07.836"/>
</kw>
<msg timestamp="20210331 12:37:14.040" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210331 12:37:14.040" starttime="20210331 12:37:07.834"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:37:14.040" starttime="20210331 12:37:14.040"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:14.044" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="10639-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:20.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:37:20.767" level="INFO">${output} = {
  "metadata": {},
  "name": "10639-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210331 12:37:20.767" starttime="20210331 12:37:14.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:37:20.770" level="INFO">{
  "metadata": {},
  "name": "10639-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-31T12:37:13.870Z",
  "modificationTime": "2021-03-31T12:37:13.870Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210331 12:37:20.770" starttime="20210331 12:37:20.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:37:20.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:37:20.772" starttime="20210331 12:37:20.771"/>
</kw>
<status status="PASS" endtime="20210331 12:37:20.772" starttime="20210331 12:37:14.041"/>
</kw>
<msg timestamp="20210331 12:37:20.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:37:20.773" starttime="20210331 12:37:14.041"/>
</kw>
<msg timestamp="20210331 12:37:20.773" level="INFO">${result} = {
  "metadata": {},
  "name": "10639-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210331 12:37:20.773" starttime="20210331 12:37:14.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:37:20.775" starttime="20210331 12:37:20.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:20.781" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="10639-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:27.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:37:27.390" level="INFO">${output} = {
  "metadata": {},
  "name": "10639-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210331 12:37:27.390" starttime="20210331 12:37:20.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:37:27.391" level="INFO">{
  "metadata": {},
  "name": "10639-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-31T12:37:13.870Z",
  "modificationTime": "2021-03-31T12:37:13.870Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210331 12:37:27.391" starttime="20210331 12:37:27.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:37:27.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:37:27.393" starttime="20210331 12:37:27.392"/>
</kw>
<status status="PASS" endtime="20210331 12:37:27.393" starttime="20210331 12:37:20.777"/>
</kw>
<msg timestamp="20210331 12:37:27.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:37:27.393" starttime="20210331 12:37:20.776"/>
</kw>
<msg timestamp="20210331 12:37:27.393" level="INFO">${result} = {
  "metadata": {},
  "name": "10639-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210331 12:37:27.394" starttime="20210331 12:37:20.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:37:27.394" starttime="20210331 12:37:27.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:27.400" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/10639-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:33.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:37:33.490" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:37:33.490" starttime="20210331 12:37:27.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:37:33.492" level="INFO"/>
<status status="PASS" endtime="20210331 12:37:33.493" starttime="20210331 12:37:33.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:37:33.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:37:33.494" starttime="20210331 12:37:33.493"/>
</kw>
<status status="PASS" endtime="20210331 12:37:33.495" starttime="20210331 12:37:27.395"/>
</kw>
<msg timestamp="20210331 12:37:33.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:37:33.495" starttime="20210331 12:37:27.395"/>
</kw>
<status status="PASS" endtime="20210331 12:37:33.496" starttime="20210331 12:37:27.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:33.503" level="INFO">Running command 'ozone sh volume info o3://om:9862/10639-rpcwoport | jq -r '. | select(.name=="10639-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:40.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:37:40.316" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:37:40.316" starttime="20210331 12:37:33.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:37:40.318" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210331 12:37:40.318" starttime="20210331 12:37:40.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:37:40.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:37:40.320" starttime="20210331 12:37:40.318"/>
</kw>
<status status="PASS" endtime="20210331 12:37:40.320" starttime="20210331 12:37:33.499"/>
</kw>
<msg timestamp="20210331 12:37:40.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:37:40.321" starttime="20210331 12:37:33.498"/>
</kw>
<msg timestamp="20210331 12:37:40.322" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:37:40.322" starttime="20210331 12:37:33.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:37:40.323" starttime="20210331 12:37:40.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:40.330" level="INFO">Running command 'ozone sh bucket create o3://om:9862/10639-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:46.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:37:46.549" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:37:46.549" starttime="20210331 12:37:40.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:37:46.550" level="INFO"/>
<status status="PASS" endtime="20210331 12:37:46.550" starttime="20210331 12:37:46.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:37:46.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:37:46.551" starttime="20210331 12:37:46.551"/>
</kw>
<status status="PASS" endtime="20210331 12:37:46.551" starttime="20210331 12:37:40.326"/>
</kw>
<msg timestamp="20210331 12:37:46.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:37:46.552" starttime="20210331 12:37:40.325"/>
</kw>
<status status="PASS" endtime="20210331 12:37:46.552" starttime="20210331 12:37:40.324"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:46.557" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10639-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:37:53.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:37:53.385" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210331 12:37:53.385" starttime="20210331 12:37:46.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:37:53.387" level="INFO">DISK</msg>
<status status="PASS" endtime="20210331 12:37:53.387" starttime="20210331 12:37:53.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:37:53.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:37:53.388" starttime="20210331 12:37:53.387"/>
</kw>
<status status="PASS" endtime="20210331 12:37:53.388" starttime="20210331 12:37:46.553"/>
</kw>
<msg timestamp="20210331 12:37:53.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:37:53.389" starttime="20210331 12:37:46.553"/>
</kw>
<msg timestamp="20210331 12:37:53.389" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210331 12:37:53.389" starttime="20210331 12:37:46.552"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:37:53.389" starttime="20210331 12:37:53.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:37:53.394" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10639-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:38:00.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:38:00.818" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:38:00.818" starttime="20210331 12:37:53.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:38:00.819" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210331 12:38:00.819" starttime="20210331 12:38:00.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:38:00.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:38:00.820" starttime="20210331 12:38:00.819"/>
</kw>
<status status="PASS" endtime="20210331 12:38:00.820" starttime="20210331 12:37:53.391"/>
</kw>
<msg timestamp="20210331 12:38:00.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:38:00.820" starttime="20210331 12:37:53.391"/>
</kw>
<msg timestamp="20210331 12:38:00.821" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:38:00.821" starttime="20210331 12:37:53.390"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:38:00.821" starttime="20210331 12:38:00.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:38:00.825" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10639-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:38:07.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:38:07.221" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210331 12:38:07.221" starttime="20210331 12:38:00.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:38:07.222" level="INFO">100</msg>
<status status="PASS" endtime="20210331 12:38:07.222" starttime="20210331 12:38:07.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:38:07.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:38:07.223" starttime="20210331 12:38:07.222"/>
</kw>
<status status="PASS" endtime="20210331 12:38:07.223" starttime="20210331 12:38:00.823"/>
</kw>
<msg timestamp="20210331 12:38:07.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:38:07.224" starttime="20210331 12:38:00.822"/>
</kw>
<msg timestamp="20210331 12:38:07.224" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210331 12:38:07.224" starttime="20210331 12:38:00.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:38:07.224" starttime="20210331 12:38:07.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:38:07.229" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/10639-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:38:12.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:38:12.317" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:38:12.317" starttime="20210331 12:38:07.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:38:12.318" level="INFO"/>
<status status="PASS" endtime="20210331 12:38:12.318" starttime="20210331 12:38:12.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:38:12.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:38:12.319" starttime="20210331 12:38:12.319"/>
</kw>
<status status="PASS" endtime="20210331 12:38:12.320" starttime="20210331 12:38:07.226"/>
</kw>
<msg timestamp="20210331 12:38:12.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:38:12.320" starttime="20210331 12:38:07.225"/>
</kw>
<status status="PASS" endtime="20210331 12:38:12.320" starttime="20210331 12:38:07.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:38:12.324" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10639-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:38:18.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:38:18.408" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210331 12:38:18.408" starttime="20210331 12:38:12.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:38:18.410" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210331 12:38:18.410" starttime="20210331 12:38:18.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:38:18.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:38:18.411" starttime="20210331 12:38:18.411"/>
</kw>
<status status="PASS" endtime="20210331 12:38:18.412" starttime="20210331 12:38:12.321"/>
</kw>
<msg timestamp="20210331 12:38:18.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:38:18.412" starttime="20210331 12:38:12.321"/>
</kw>
<msg timestamp="20210331 12:38:18.412" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210331 12:38:18.412" starttime="20210331 12:38:12.320"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:38:18.413" starttime="20210331 12:38:18.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:38:18.417" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10639-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:38:24.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:38:24.674" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210331 12:38:24.674" starttime="20210331 12:38:18.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:38:24.676" level="INFO">1000</msg>
<status status="PASS" endtime="20210331 12:38:24.677" starttime="20210331 12:38:24.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:38:24.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:38:24.677" starttime="20210331 12:38:24.677"/>
</kw>
<status status="PASS" endtime="20210331 12:38:24.678" starttime="20210331 12:38:18.414"/>
</kw>
<msg timestamp="20210331 12:38:24.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:38:24.678" starttime="20210331 12:38:18.414"/>
</kw>
<msg timestamp="20210331 12:38:24.678" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210331 12:38:24.679" starttime="20210331 12:38:18.413"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:38:24.679" starttime="20210331 12:38:24.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:38:24.684" level="INFO">Running command 'ozone sh bucket list o3://om:9862/10639-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:38:31.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:38:31.354" level="INFO">${output} = 10639-rpcwoport</msg>
<status status="PASS" endtime="20210331 12:38:31.354" starttime="20210331 12:38:24.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:38:31.356" level="INFO">10639-rpcwoport</msg>
<status status="PASS" endtime="20210331 12:38:31.356" starttime="20210331 12:38:31.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:38:31.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:38:31.357" starttime="20210331 12:38:31.356"/>
</kw>
<status status="PASS" endtime="20210331 12:38:31.357" starttime="20210331 12:38:24.681"/>
</kw>
<msg timestamp="20210331 12:38:31.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:38:31.357" starttime="20210331 12:38:24.680"/>
</kw>
<msg timestamp="20210331 12:38:31.357" level="INFO">${result} = 10639-rpcwoport</msg>
<status status="PASS" endtime="20210331 12:38:31.357" starttime="20210331 12:38:24.679"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:38:31.358" starttime="20210331 12:38:31.358"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:38:31.389" level="INFO">Running command 'ozone sh key put o3://om:9862/10639-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:41:41.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:41:41.986" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:41:41.986" starttime="20210331 12:38:31.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:41:41.987" level="INFO"/>
<status status="PASS" endtime="20210331 12:41:41.987" starttime="20210331 12:41:41.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:41:41.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:41:41.988" starttime="20210331 12:41:41.987"/>
</kw>
<status status="PASS" endtime="20210331 12:41:41.988" starttime="20210331 12:38:31.361"/>
</kw>
<msg timestamp="20210331 12:41:41.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:41:41.988" starttime="20210331 12:38:31.360"/>
</kw>
<status status="PASS" endtime="20210331 12:41:41.989" starttime="20210331 12:38:31.360"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:41:41.999" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:41:42.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:41:42.002" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:41:42.002" starttime="20210331 12:41:41.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:41:42.003" level="INFO"/>
<status status="PASS" endtime="20210331 12:41:42.003" starttime="20210331 12:41:42.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:41:42.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:41:42.004" starttime="20210331 12:41:42.003"/>
</kw>
<status status="PASS" endtime="20210331 12:41:42.004" starttime="20210331 12:41:41.991"/>
</kw>
<msg timestamp="20210331 12:41:42.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:41:42.004" starttime="20210331 12:41:41.991"/>
</kw>
<status status="PASS" endtime="20210331 12:41:42.004" starttime="20210331 12:41:41.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:41:42.015" level="INFO">Running command 'ozone sh key get o3://om:9862/10639-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:41:52.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:41:52.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:41:52.348" starttime="20210331 12:41:42.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:41:52.349" level="INFO"/>
<status status="PASS" endtime="20210331 12:41:52.349" starttime="20210331 12:41:52.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:41:52.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:41:52.350" starttime="20210331 12:41:52.349"/>
</kw>
<status status="PASS" endtime="20210331 12:41:52.350" starttime="20210331 12:41:42.012"/>
</kw>
<msg timestamp="20210331 12:41:52.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:41:52.350" starttime="20210331 12:41:42.011"/>
</kw>
<status status="PASS" endtime="20210331 12:41:52.351" starttime="20210331 12:41:42.005"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:41:52.355" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:41:52.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:41:52.358" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:41:52.358" starttime="20210331 12:41:52.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:41:52.360" level="INFO"/>
<status status="PASS" endtime="20210331 12:41:52.360" starttime="20210331 12:41:52.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:41:52.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:41:52.361" starttime="20210331 12:41:52.360"/>
</kw>
<status status="PASS" endtime="20210331 12:41:52.361" starttime="20210331 12:41:52.352"/>
</kw>
<msg timestamp="20210331 12:41:52.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:41:52.361" starttime="20210331 12:41:52.351"/>
</kw>
<status status="PASS" endtime="20210331 12:41:52.361" starttime="20210331 12:41:52.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:41:52.365" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/10639-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:00.286" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210331 12:42:00.287" starttime="20210331 12:41:52.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.288" starttime="20210331 12:42:00.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.288" starttime="20210331 12:42:00.288"/>
</kw>
<status status="FAIL" endtime="20210331 12:42:00.288" starttime="20210331 12:41:52.362"/>
</kw>
<msg timestamp="20210331 12:42:00.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210331 12:42:00.289" starttime="20210331 12:41:52.362"/>
</kw>
<status status="FAIL" endtime="20210331 12:42:00.289" starttime="20210331 12:41:52.361"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.290" starttime="20210331 12:42:00.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.290" starttime="20210331 12:42:00.290"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.290" starttime="20210331 12:42:00.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.290" starttime="20210331 12:42:00.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.291" starttime="20210331 12:42:00.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.291" starttime="20210331 12:42:00.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.291" starttime="20210331 12:42:00.291"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.292" starttime="20210331 12:42:00.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.292" starttime="20210331 12:42:00.292"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.292" starttime="20210331 12:42:00.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.293" starttime="20210331 12:42:00.293"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.293" starttime="20210331 12:42:00.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.295" starttime="20210331 12:42:00.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.296" starttime="20210331 12:42:00.295"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.297" starttime="20210331 12:42:00.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.298" starttime="20210331 12:42:00.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.299" starttime="20210331 12:42:00.299"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.301" starttime="20210331 12:42:00.301"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.303" starttime="20210331 12:42:00.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.303" starttime="20210331 12:42:00.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.304" starttime="20210331 12:42:00.304"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.305" starttime="20210331 12:42:00.305"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.306" starttime="20210331 12:42:00.306"/>
</kw>
<status status="FAIL" endtime="20210331 12:42:00.308" starttime="20210331 12:38:31.358"/>
</kw>
<status status="FAIL" endtime="20210331 12:42:00.308" starttime="20210331 12:38:31.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.310" starttime="20210331 12:42:00.310"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.311" starttime="20210331 12:42:00.311"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.313" starttime="20210331 12:42:00.311"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.315" starttime="20210331 12:42:00.315"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.317" starttime="20210331 12:42:00.316"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.324" starttime="20210331 12:42:00.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.325" starttime="20210331 12:42:00.325"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.327" starttime="20210331 12:42:00.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.327" starttime="20210331 12:42:00.327"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.328" starttime="20210331 12:42:00.328"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.330" starttime="20210331 12:42:00.330"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.331" starttime="20210331 12:42:00.330"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.332" starttime="20210331 12:42:00.331"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.333" starttime="20210331 12:42:00.332"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.335" starttime="20210331 12:42:00.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.335" starttime="20210331 12:42:00.335"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.337" starttime="20210331 12:42:00.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.338" starttime="20210331 12:42:00.337"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.338" starttime="20210331 12:42:00.338"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.339" starttime="20210331 12:42:00.339"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.341" starttime="20210331 12:42:00.340"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.342" starttime="20210331 12:42:00.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.343" starttime="20210331 12:42:00.343"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:42:00.345" starttime="20210331 12:42:00.344"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.346" starttime="20210331 12:42:00.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:42:00.347" starttime="20210331 12:42:00.346"/>
</kw>
<status status="FAIL" endtime="20210331 12:42:00.348" starttime="20210331 12:37:00.610"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210331 12:42:00.350" starttime="20210331 12:37:00.285">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:00.379" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:00.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:00.386" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:42:00.386" starttime="20210331 12:42:00.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:00.391" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:42:00.392" starttime="20210331 12:42:00.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:00.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:00.395" starttime="20210331 12:42:00.392"/>
</kw>
<status status="PASS" endtime="20210331 12:42:00.396" starttime="20210331 12:42:00.366"/>
</kw>
<msg timestamp="20210331 12:42:00.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:00.397" starttime="20210331 12:42:00.364"/>
</kw>
<msg timestamp="20210331 12:42:00.398" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:42:00.398" starttime="20210331 12:42:00.362"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:42:00.402" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:42:00.403" starttime="20210331 12:42:00.399"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:00.421" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:00.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:00.498" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:42:00.499" starttime="20210331 12:42:00.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:00.502" level="INFO"/>
<status status="PASS" endtime="20210331 12:42:00.502" starttime="20210331 12:42:00.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:00.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:00.505" starttime="20210331 12:42:00.504"/>
</kw>
<status status="PASS" endtime="20210331 12:42:00.506" starttime="20210331 12:42:00.410"/>
</kw>
<msg timestamp="20210331 12:42:00.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:00.506" starttime="20210331 12:42:00.409"/>
</kw>
<status status="PASS" endtime="20210331 12:42:00.506" starttime="20210331 12:42:00.406"/>
</kw>
<status status="PASS" endtime="20210331 12:42:00.506" starttime="20210331 12:42:00.403"/>
</kw>
<status status="PASS" endtime="20210331 12:42:00.506" starttime="20210331 12:42:00.360"/>
</kw>
<status status="PASS" endtime="20210331 12:42:00.507" starttime="20210331 12:42:00.357"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:00.536" level="INFO">Running command 'ozone sh volume create o3://om:9862/10639-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:08.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:08.780" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:42:08.781" starttime="20210331 12:42:00.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:08.782" level="INFO"/>
<status status="PASS" endtime="20210331 12:42:08.783" starttime="20210331 12:42:08.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:08.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:08.784" starttime="20210331 12:42:08.783"/>
</kw>
<status status="PASS" endtime="20210331 12:42:08.784" starttime="20210331 12:42:00.514"/>
</kw>
<msg timestamp="20210331 12:42:08.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:08.785" starttime="20210331 12:42:00.508"/>
</kw>
<status status="PASS" endtime="20210331 12:42:08.785" starttime="20210331 12:42:00.507"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:08.789" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10639-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:15.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:15.133" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:42:15.133" starttime="20210331 12:42:08.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:15.136" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:42:15.136" starttime="20210331 12:42:15.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:15.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:15.137" starttime="20210331 12:42:15.137"/>
</kw>
<status status="PASS" endtime="20210331 12:42:15.138" starttime="20210331 12:42:08.786"/>
</kw>
<msg timestamp="20210331 12:42:15.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:15.138" starttime="20210331 12:42:08.786"/>
</kw>
<msg timestamp="20210331 12:42:15.138" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:42:15.138" starttime="20210331 12:42:08.785"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:42:15.140" starttime="20210331 12:42:15.138"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:15.144" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/10639-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:21.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:21.560" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210331 12:42:21.560" starttime="20210331 12:42:15.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:21.562" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210331 12:42:21.563" starttime="20210331 12:42:21.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:21.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:21.564" starttime="20210331 12:42:21.563"/>
</kw>
<status status="PASS" endtime="20210331 12:42:21.565" starttime="20210331 12:42:15.141"/>
</kw>
<msg timestamp="20210331 12:42:21.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:21.565" starttime="20210331 12:42:15.141"/>
</kw>
<msg timestamp="20210331 12:42:21.566" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210331 12:42:21.566" starttime="20210331 12:42:15.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:21.572" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10639-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:28.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:28.577" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:42:28.577" starttime="20210331 12:42:21.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:28.578" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:42:28.578" starttime="20210331 12:42:28.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:28.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:28.580" starttime="20210331 12:42:28.579"/>
</kw>
<status status="PASS" endtime="20210331 12:42:28.581" starttime="20210331 12:42:21.568"/>
</kw>
<msg timestamp="20210331 12:42:28.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:28.581" starttime="20210331 12:42:21.567"/>
</kw>
<msg timestamp="20210331 12:42:28.581" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:42:28.582" starttime="20210331 12:42:21.566"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:42:28.583" starttime="20210331 12:42:28.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:28.590" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/10639-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:34.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:34.764" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210331 12:42:34.764" starttime="20210331 12:42:28.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:34.766" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210331 12:42:34.766" starttime="20210331 12:42:34.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:34.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:34.768" starttime="20210331 12:42:34.766"/>
</kw>
<status status="PASS" endtime="20210331 12:42:34.769" starttime="20210331 12:42:28.586"/>
</kw>
<msg timestamp="20210331 12:42:34.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:34.769" starttime="20210331 12:42:28.585"/>
</kw>
<msg timestamp="20210331 12:42:34.770" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210331 12:42:34.770" starttime="20210331 12:42:28.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:34.777" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10639-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:42.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:42.314" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:42:42.314" starttime="20210331 12:42:34.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:42.316" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:42:42.316" starttime="20210331 12:42:42.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:42.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:42.317" starttime="20210331 12:42:42.316"/>
</kw>
<status status="PASS" endtime="20210331 12:42:42.318" starttime="20210331 12:42:34.772"/>
</kw>
<msg timestamp="20210331 12:42:42.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:42.318" starttime="20210331 12:42:34.771"/>
</kw>
<msg timestamp="20210331 12:42:42.318" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:42:42.318" starttime="20210331 12:42:34.770"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:42:42.320" starttime="20210331 12:42:42.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:42.326" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/10639-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:48.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:48.478" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:42:48.478" starttime="20210331 12:42:42.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:48.480" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:42:48.480" starttime="20210331 12:42:48.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:48.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:48.482" starttime="20210331 12:42:48.481"/>
</kw>
<status status="PASS" endtime="20210331 12:42:48.483" starttime="20210331 12:42:42.322"/>
</kw>
<msg timestamp="20210331 12:42:48.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:48.483" starttime="20210331 12:42:42.322"/>
</kw>
<msg timestamp="20210331 12:42:48.483" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:42:48.483" starttime="20210331 12:42:42.320"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:48.492" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10639-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:54.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:54.784" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210331 12:42:54.784" starttime="20210331 12:42:48.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:54.785" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:42:54.785" starttime="20210331 12:42:54.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:54.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:54.786" starttime="20210331 12:42:54.786"/>
</kw>
<status status="PASS" endtime="20210331 12:42:54.786" starttime="20210331 12:42:48.485"/>
</kw>
<msg timestamp="20210331 12:42:54.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:54.787" starttime="20210331 12:42:48.484"/>
</kw>
<msg timestamp="20210331 12:42:54.787" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210331 12:42:54.787" starttime="20210331 12:42:48.484"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:42:54.788" starttime="20210331 12:42:54.787"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:42:54.789" starttime="20210331 12:42:54.788"/>
</kw>
<status status="PASS" endtime="20210331 12:42:54.789" starttime="20210331 12:42:00.507"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210331 12:42:54.789" starttime="20210331 12:42:00.352"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:54.798" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:54.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:54.802" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:42:54.802" starttime="20210331 12:42:54.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:54.803" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:42:54.804" starttime="20210331 12:42:54.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:54.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:54.804" starttime="20210331 12:42:54.804"/>
</kw>
<status status="PASS" endtime="20210331 12:42:54.805" starttime="20210331 12:42:54.795"/>
</kw>
<msg timestamp="20210331 12:42:54.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:54.805" starttime="20210331 12:42:54.794"/>
</kw>
<msg timestamp="20210331 12:42:54.805" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:42:54.805" starttime="20210331 12:42:54.793"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:42:54.806" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:42:54.806" starttime="20210331 12:42:54.805"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:54.811" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:42:54.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:42:54.950" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:42:54.950" starttime="20210331 12:42:54.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:42:54.951" level="INFO"/>
<status status="PASS" endtime="20210331 12:42:54.951" starttime="20210331 12:42:54.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:42:54.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:42:54.952" starttime="20210331 12:42:54.952"/>
</kw>
<status status="PASS" endtime="20210331 12:42:54.953" starttime="20210331 12:42:54.807"/>
</kw>
<msg timestamp="20210331 12:42:54.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:42:54.953" starttime="20210331 12:42:54.807"/>
</kw>
<status status="PASS" endtime="20210331 12:42:54.953" starttime="20210331 12:42:54.806"/>
</kw>
<status status="PASS" endtime="20210331 12:42:54.953" starttime="20210331 12:42:54.806"/>
</kw>
<status status="PASS" endtime="20210331 12:42:54.953" starttime="20210331 12:42:54.793"/>
</kw>
<status status="PASS" endtime="20210331 12:42:54.953" starttime="20210331 12:42:54.792"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:42:54.958" level="INFO">Running command 'ozone sh bucket create o3://om:9862/10639-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:43:01.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:43:01.522" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:43:01.522" starttime="20210331 12:42:54.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:43:01.523" level="INFO"/>
<status status="PASS" endtime="20210331 12:43:01.523" starttime="20210331 12:43:01.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:43:01.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:43:01.524" starttime="20210331 12:43:01.523"/>
</kw>
<status status="PASS" endtime="20210331 12:43:01.524" starttime="20210331 12:42:54.955"/>
</kw>
<msg timestamp="20210331 12:43:01.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:43:01.525" starttime="20210331 12:42:54.955"/>
</kw>
<status status="PASS" endtime="20210331 12:43:01.525" starttime="20210331 12:42:54.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:43:01.530" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10639-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:43:07.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:43:07.739" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:43:07.739" starttime="20210331 12:43:01.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:43:07.740" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:43:07.740" starttime="20210331 12:43:07.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:43:07.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:43:07.741" starttime="20210331 12:43:07.741"/>
</kw>
<status status="PASS" endtime="20210331 12:43:07.741" starttime="20210331 12:43:01.526"/>
</kw>
<msg timestamp="20210331 12:43:07.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:43:07.742" starttime="20210331 12:43:01.526"/>
</kw>
<msg timestamp="20210331 12:43:07.742" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:43:07.742" starttime="20210331 12:43:01.525"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:43:07.743" starttime="20210331 12:43:07.742"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:43:07.747" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/10639-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:43:13.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:43:13.643" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210331 12:43:13.643" starttime="20210331 12:43:07.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:43:13.644" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210331 12:43:13.644" starttime="20210331 12:43:13.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:43:13.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:43:13.645" starttime="20210331 12:43:13.645"/>
</kw>
<status status="PASS" endtime="20210331 12:43:13.645" starttime="20210331 12:43:07.744"/>
</kw>
<msg timestamp="20210331 12:43:13.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:43:13.646" starttime="20210331 12:43:07.743"/>
</kw>
<msg timestamp="20210331 12:43:13.646" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210331 12:43:13.646" starttime="20210331 12:43:07.743"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:43:13.651" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10639-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:43:17.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:43:17.976" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:43:17.976" starttime="20210331 12:43:13.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:43:17.979" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:43:17.979" starttime="20210331 12:43:17.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:43:17.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:43:17.981" starttime="20210331 12:43:17.980"/>
</kw>
<status status="PASS" endtime="20210331 12:43:17.982" starttime="20210331 12:43:13.647"/>
</kw>
<msg timestamp="20210331 12:43:17.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:43:17.983" starttime="20210331 12:43:13.647"/>
</kw>
<msg timestamp="20210331 12:43:17.984" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:43:17.984" starttime="20210331 12:43:13.646"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:43:17.987" starttime="20210331 12:43:17.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:43:17.995" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/10639-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:43:23.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:43:23.859" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210331 12:43:23.859" starttime="20210331 12:43:17.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:43:23.862" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210331 12:43:23.862" starttime="20210331 12:43:23.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:43:23.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:43:23.863" starttime="20210331 12:43:23.862"/>
</kw>
<status status="PASS" endtime="20210331 12:43:23.864" starttime="20210331 12:43:17.990"/>
</kw>
<msg timestamp="20210331 12:43:23.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:43:23.865" starttime="20210331 12:43:17.989"/>
</kw>
<msg timestamp="20210331 12:43:23.865" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210331 12:43:23.865" starttime="20210331 12:43:17.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:43:23.872" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10639-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:43:30.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:43:30.299" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:43:30.299" starttime="20210331 12:43:23.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:43:30.301" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:43:30.301" starttime="20210331 12:43:30.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:43:30.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:43:30.301" starttime="20210331 12:43:30.301"/>
</kw>
<status status="PASS" endtime="20210331 12:43:30.302" starttime="20210331 12:43:23.868"/>
</kw>
<msg timestamp="20210331 12:43:30.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:43:30.302" starttime="20210331 12:43:23.867"/>
</kw>
<msg timestamp="20210331 12:43:30.302" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:43:30.302" starttime="20210331 12:43:23.865"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:43:30.304" starttime="20210331 12:43:30.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:43:30.311" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/10639-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:43:36.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:43:36.378" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:43:36.378" starttime="20210331 12:43:30.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:43:36.381" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:43:36.381" starttime="20210331 12:43:36.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:43:36.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:43:36.382" starttime="20210331 12:43:36.381"/>
</kw>
<status status="PASS" endtime="20210331 12:43:36.383" starttime="20210331 12:43:30.306"/>
</kw>
<msg timestamp="20210331 12:43:36.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:43:36.383" starttime="20210331 12:43:30.306"/>
</kw>
<msg timestamp="20210331 12:43:36.384" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:43:36.384" starttime="20210331 12:43:30.304"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:43:36.391" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10639-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:43:42.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:43:42.978" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210331 12:43:42.978" starttime="20210331 12:43:36.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:43:42.982" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:43:42.983" starttime="20210331 12:43:42.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:43:42.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:43:42.985" starttime="20210331 12:43:42.984"/>
</kw>
<status status="PASS" endtime="20210331 12:43:42.986" starttime="20210331 12:43:36.387"/>
</kw>
<msg timestamp="20210331 12:43:42.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:43:42.988" starttime="20210331 12:43:36.386"/>
</kw>
<msg timestamp="20210331 12:43:42.989" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210331 12:43:42.989" starttime="20210331 12:43:36.385"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:43:42.991" starttime="20210331 12:43:42.990"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:43:42.993" starttime="20210331 12:43:42.991"/>
</kw>
<status status="PASS" endtime="20210331 12:43:42.993" starttime="20210331 12:42:54.954"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210331 12:43:42.994" starttime="20210331 12:42:54.790"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:43:43.007" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:43:43.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:43:43.013" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:43:43.013" starttime="20210331 12:43:43.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:43:43.020" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:43:43.020" starttime="20210331 12:43:43.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:43:43.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:43:43.024" starttime="20210331 12:43:43.020"/>
</kw>
<status status="PASS" endtime="20210331 12:43:43.026" starttime="20210331 12:43:43.003"/>
</kw>
<msg timestamp="20210331 12:43:43.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:43:43.027" starttime="20210331 12:43:43.002"/>
</kw>
<msg timestamp="20210331 12:43:43.029" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:43:43.029" starttime="20210331 12:43:43.001"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:43:43.032" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:43:43.032" starttime="20210331 12:43:43.030"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:43:43.044" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:43:43.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:43:43.058" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:43:43.059" starttime="20210331 12:43:43.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:43:43.061" level="INFO"/>
<status status="PASS" endtime="20210331 12:43:43.061" starttime="20210331 12:43:43.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:43:43.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:43:43.062" starttime="20210331 12:43:43.061"/>
</kw>
<status status="PASS" endtime="20210331 12:43:43.062" starttime="20210331 12:43:43.039"/>
</kw>
<msg timestamp="20210331 12:43:43.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:43:43.063" starttime="20210331 12:43:43.038"/>
</kw>
<status status="PASS" endtime="20210331 12:43:43.063" starttime="20210331 12:43:43.035"/>
</kw>
<status status="PASS" endtime="20210331 12:43:43.063" starttime="20210331 12:43:43.033"/>
</kw>
<status status="PASS" endtime="20210331 12:43:43.063" starttime="20210331 12:43:42.999"/>
</kw>
<status status="PASS" endtime="20210331 12:43:43.063" starttime="20210331 12:43:42.998"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:43:43.073" level="INFO">Running command 'ozone sh key put o3://om:9862/10639-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:46:53.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:46:53.125" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:46:53.125" starttime="20210331 12:43:43.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:46:53.127" level="INFO"/>
<status status="PASS" endtime="20210331 12:46:53.127" starttime="20210331 12:46:53.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:46:53.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:46:53.129" starttime="20210331 12:46:53.128"/>
</kw>
<status status="PASS" endtime="20210331 12:46:53.130" starttime="20210331 12:43:43.065"/>
</kw>
<msg timestamp="20210331 12:46:53.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:46:53.130" starttime="20210331 12:43:43.064"/>
</kw>
<status status="PASS" endtime="20210331 12:46:53.131" starttime="20210331 12:43:43.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:46:53.137" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10639-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:00.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:00.639" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:47:00.639" starttime="20210331 12:46:53.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:00.642" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:47:00.642" starttime="20210331 12:47:00.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:00.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:00.645" starttime="20210331 12:47:00.643"/>
</kw>
<status status="PASS" endtime="20210331 12:47:00.646" starttime="20210331 12:46:53.133"/>
</kw>
<msg timestamp="20210331 12:47:00.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:00.646" starttime="20210331 12:46:53.132"/>
</kw>
<msg timestamp="20210331 12:47:00.647" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:47:00.647" starttime="20210331 12:46:53.131"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:47:00.648" starttime="20210331 12:47:00.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:00.656" level="INFO">Running command 'ozone sh key addacl o3://om:9862/10639-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:07.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:07.292" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:47:07.292" starttime="20210331 12:47:00.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:07.293" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:47:07.293" starttime="20210331 12:47:07.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:07.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:07.294" starttime="20210331 12:47:07.293"/>
</kw>
<status status="PASS" endtime="20210331 12:47:07.294" starttime="20210331 12:47:00.651"/>
</kw>
<msg timestamp="20210331 12:47:07.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:07.295" starttime="20210331 12:47:00.650"/>
</kw>
<msg timestamp="20210331 12:47:07.295" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210331 12:47:07.295" starttime="20210331 12:47:00.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:07.299" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10639-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:13.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:13.408" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:47:13.408" starttime="20210331 12:47:07.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:13.410" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:47:13.410" starttime="20210331 12:47:13.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:13.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:13.412" starttime="20210331 12:47:13.411"/>
</kw>
<status status="PASS" endtime="20210331 12:47:13.412" starttime="20210331 12:47:07.296"/>
</kw>
<msg timestamp="20210331 12:47:13.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:13.413" starttime="20210331 12:47:07.296"/>
</kw>
<msg timestamp="20210331 12:47:13.413" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:47:13.413" starttime="20210331 12:47:07.295"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:47:13.415" starttime="20210331 12:47:13.414"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:13.419" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/10639-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:19.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:19.780" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210331 12:47:19.780" starttime="20210331 12:47:13.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:19.783" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210331 12:47:19.783" starttime="20210331 12:47:19.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:19.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:19.784" starttime="20210331 12:47:19.783"/>
</kw>
<status status="PASS" endtime="20210331 12:47:19.785" starttime="20210331 12:47:13.416"/>
</kw>
<msg timestamp="20210331 12:47:19.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:19.785" starttime="20210331 12:47:13.416"/>
</kw>
<msg timestamp="20210331 12:47:19.786" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210331 12:47:19.786" starttime="20210331 12:47:13.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:19.793" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10639-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:26.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:26.164" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:47:26.164" starttime="20210331 12:47:19.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:26.165" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:47:26.166" starttime="20210331 12:47:26.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:26.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:26.167" starttime="20210331 12:47:26.166"/>
</kw>
<status status="PASS" endtime="20210331 12:47:26.167" starttime="20210331 12:47:19.789"/>
</kw>
<msg timestamp="20210331 12:47:26.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:26.167" starttime="20210331 12:47:19.788"/>
</kw>
<msg timestamp="20210331 12:47:26.167" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:47:26.168" starttime="20210331 12:47:19.786"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:47:26.168" starttime="20210331 12:47:26.168"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:26.172" level="INFO">Running command 'ozone sh key setacl o3://om:9862/10639-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:32.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:32.515" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:47:32.515" starttime="20210331 12:47:26.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:32.517" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:47:32.517" starttime="20210331 12:47:32.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:32.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:32.518" starttime="20210331 12:47:32.517"/>
</kw>
<status status="PASS" endtime="20210331 12:47:32.518" starttime="20210331 12:47:26.169"/>
</kw>
<msg timestamp="20210331 12:47:32.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:32.518" starttime="20210331 12:47:26.169"/>
</kw>
<msg timestamp="20210331 12:47:32.518" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:47:32.518" starttime="20210331 12:47:26.168"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:32.524" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10639-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:38.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:38.741" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210331 12:47:38.742" starttime="20210331 12:47:32.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:38.743" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:47:38.743" starttime="20210331 12:47:38.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:38.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:38.744" starttime="20210331 12:47:38.744"/>
</kw>
<status status="PASS" endtime="20210331 12:47:38.745" starttime="20210331 12:47:32.520"/>
</kw>
<msg timestamp="20210331 12:47:38.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:38.745" starttime="20210331 12:47:32.520"/>
</kw>
<msg timestamp="20210331 12:47:38.745" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210331 12:47:38.745" starttime="20210331 12:47:32.518"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:47:38.746" starttime="20210331 12:47:38.745"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:47:38.747" starttime="20210331 12:47:38.746"/>
</kw>
<status status="PASS" endtime="20210331 12:47:38.747" starttime="20210331 12:43:43.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210331 12:47:38.747" starttime="20210331 12:43:42.996"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:38.755" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:38.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:38.757" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:47:38.757" starttime="20210331 12:47:38.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:38.759" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:47:38.759" starttime="20210331 12:47:38.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:38.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:38.760" starttime="20210331 12:47:38.759"/>
</kw>
<status status="PASS" endtime="20210331 12:47:38.760" starttime="20210331 12:47:38.751"/>
</kw>
<msg timestamp="20210331 12:47:38.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:38.761" starttime="20210331 12:47:38.751"/>
</kw>
<msg timestamp="20210331 12:47:38.761" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:47:38.761" starttime="20210331 12:47:38.750"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:47:38.762" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:47:38.763" starttime="20210331 12:47:38.761"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:38.768" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:38.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:38.852" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:47:38.852" starttime="20210331 12:47:38.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:38.853" level="INFO"/>
<status status="PASS" endtime="20210331 12:47:38.854" starttime="20210331 12:47:38.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:38.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:38.854" starttime="20210331 12:47:38.854"/>
</kw>
<status status="PASS" endtime="20210331 12:47:38.855" starttime="20210331 12:47:38.765"/>
</kw>
<msg timestamp="20210331 12:47:38.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:38.855" starttime="20210331 12:47:38.765"/>
</kw>
<status status="PASS" endtime="20210331 12:47:38.855" starttime="20210331 12:47:38.764"/>
</kw>
<status status="PASS" endtime="20210331 12:47:38.856" starttime="20210331 12:47:38.763"/>
</kw>
<status status="PASS" endtime="20210331 12:47:38.856" starttime="20210331 12:47:38.750"/>
</kw>
<status status="PASS" endtime="20210331 12:47:38.856" starttime="20210331 12:47:38.749"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:38.863" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/10639-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:43.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:43.053" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210331 12:47:43.053" starttime="20210331 12:47:38.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:43.054" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210331 12:47:43.055" starttime="20210331 12:47:43.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:43.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:43.055" starttime="20210331 12:47:43.055"/>
</kw>
<status status="PASS" endtime="20210331 12:47:43.056" starttime="20210331 12:47:38.859"/>
</kw>
<msg timestamp="20210331 12:47:43.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:43.056" starttime="20210331 12:47:38.859"/>
</kw>
<status status="PASS" endtime="20210331 12:47:43.056" starttime="20210331 12:47:38.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:43.060" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/10639-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:49.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:49.581" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:47:49.581" starttime="20210331 12:47:43.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:49.583" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:47:49.583" starttime="20210331 12:47:49.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:49.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:49.584" starttime="20210331 12:47:49.583"/>
</kw>
<status status="PASS" endtime="20210331 12:47:49.584" starttime="20210331 12:47:43.057"/>
</kw>
<msg timestamp="20210331 12:47:49.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:49.584" starttime="20210331 12:47:43.057"/>
</kw>
<msg timestamp="20210331 12:47:49.584" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:47:49.584" starttime="20210331 12:47:43.056"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:47:49.586" starttime="20210331 12:47:49.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:49.591" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/10639-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:47:56.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:47:56.061" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210331 12:47:56.061" starttime="20210331 12:47:49.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:47:56.063" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210331 12:47:56.064" starttime="20210331 12:47:56.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:47:56.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:47:56.065" starttime="20210331 12:47:56.064"/>
</kw>
<status status="PASS" endtime="20210331 12:47:56.066" starttime="20210331 12:47:49.587"/>
</kw>
<msg timestamp="20210331 12:47:56.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:47:56.066" starttime="20210331 12:47:49.586"/>
</kw>
<msg timestamp="20210331 12:47:56.067" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210331 12:47:56.067" starttime="20210331 12:47:49.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:47:56.073" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/10639-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:48:02.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:48:02.912" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:48:02.912" starttime="20210331 12:47:56.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:48:02.914" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:48:02.914" starttime="20210331 12:48:02.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:48:02.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:48:02.916" starttime="20210331 12:48:02.914"/>
</kw>
<status status="PASS" endtime="20210331 12:48:02.917" starttime="20210331 12:47:56.069"/>
</kw>
<msg timestamp="20210331 12:48:02.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:48:02.917" starttime="20210331 12:47:56.068"/>
</kw>
<msg timestamp="20210331 12:48:02.918" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:48:02.918" starttime="20210331 12:47:56.067"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:48:02.922" starttime="20210331 12:48:02.919"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:48:02.926" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/10639-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:48:08.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:48:08.958" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:48:08.958" starttime="20210331 12:48:02.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:48:08.961" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:48:08.961" starttime="20210331 12:48:08.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:48:08.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:48:08.962" starttime="20210331 12:48:08.961"/>
</kw>
<status status="PASS" endtime="20210331 12:48:08.962" starttime="20210331 12:48:02.923"/>
</kw>
<msg timestamp="20210331 12:48:08.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:48:08.962" starttime="20210331 12:48:02.923"/>
</kw>
<msg timestamp="20210331 12:48:08.962" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210331 12:48:08.962" starttime="20210331 12:48:02.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:48:08.967" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/10639-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:48:14.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:48:14.923" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" endtime="20210331 12:48:14.923" starttime="20210331 12:48:08.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:48:14.925" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:48:14.926" starttime="20210331 12:48:14.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:48:14.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:48:14.927" starttime="20210331 12:48:14.926"/>
</kw>
<status status="PASS" endtime="20210331 12:48:14.928" starttime="20210331 12:48:08.964"/>
</kw>
<msg timestamp="20210331 12:48:14.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:48:14.928" starttime="20210331 12:48:08.963"/>
</kw>
<msg timestamp="20210331 12:48:14.929" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" endtime="20210331 12:48:14.929" starttime="20210331 12:48:08.962"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:48:14.930" starttime="20210331 12:48:14.929"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:48:14.931" starttime="20210331 12:48:14.930"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:48:14.937" level="INFO">Running command 'ozone sh key put o3://om:9862/10639-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:51:25.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:51:25.070" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:51:25.070" starttime="20210331 12:48:14.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:51:25.071" level="INFO"/>
<status status="PASS" endtime="20210331 12:51:25.071" starttime="20210331 12:51:25.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:51:25.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:51:25.073" starttime="20210331 12:51:25.071"/>
</kw>
<status status="PASS" endtime="20210331 12:51:25.073" starttime="20210331 12:48:14.933"/>
</kw>
<msg timestamp="20210331 12:51:25.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:51:25.074" starttime="20210331 12:48:14.933"/>
</kw>
<status status="PASS" endtime="20210331 12:51:25.074" starttime="20210331 12:48:14.932"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:51:25.079" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10639-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:51:31.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:51:31.241" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:51:31.241" starttime="20210331 12:51:25.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:51:31.244" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210331 12:51:31.244" starttime="20210331 12:51:31.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:51:31.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:51:31.246" starttime="20210331 12:51:31.245"/>
</kw>
<status status="PASS" endtime="20210331 12:51:31.247" starttime="20210331 12:51:25.076"/>
</kw>
<msg timestamp="20210331 12:51:31.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:51:31.247" starttime="20210331 12:51:25.075"/>
</kw>
<msg timestamp="20210331 12:51:31.248" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210331 12:51:31.248" starttime="20210331 12:51:25.074"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:51:31.249" starttime="20210331 12:51:31.248"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210331 12:51:31.250" starttime="20210331 12:51:31.249"/>
</kw>
<status status="PASS" endtime="20210331 12:51:31.251" starttime="20210331 12:47:38.856"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210331 12:51:31.251" starttime="20210331 12:47:38.748"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:51:31.261" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:51:31.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:51:31.264" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:51:31.264" starttime="20210331 12:51:31.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:51:31.266" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:51:31.266" starttime="20210331 12:51:31.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:51:31.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:51:31.268" starttime="20210331 12:51:31.267"/>
</kw>
<status status="PASS" endtime="20210331 12:51:31.268" starttime="20210331 12:51:31.256"/>
</kw>
<msg timestamp="20210331 12:51:31.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:51:31.268" starttime="20210331 12:51:31.256"/>
</kw>
<msg timestamp="20210331 12:51:31.269" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:51:31.269" starttime="20210331 12:51:31.255"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:51:31.270" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:51:31.270" starttime="20210331 12:51:31.269"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:51:31.276" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:51:31.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:51:31.418" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:51:31.418" starttime="20210331 12:51:31.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:51:31.420" level="INFO"/>
<status status="PASS" endtime="20210331 12:51:31.420" starttime="20210331 12:51:31.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:51:31.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:51:31.420" starttime="20210331 12:51:31.420"/>
</kw>
<status status="PASS" endtime="20210331 12:51:31.421" starttime="20210331 12:51:31.273"/>
</kw>
<msg timestamp="20210331 12:51:31.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:51:31.421" starttime="20210331 12:51:31.272"/>
</kw>
<status status="PASS" endtime="20210331 12:51:31.421" starttime="20210331 12:51:31.271"/>
</kw>
<status status="PASS" endtime="20210331 12:51:31.421" starttime="20210331 12:51:31.270"/>
</kw>
<status status="PASS" endtime="20210331 12:51:31.421" starttime="20210331 12:51:31.254"/>
</kw>
<status status="PASS" endtime="20210331 12:51:31.422" starttime="20210331 12:51:31.253"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:51:31.426" level="INFO">Running command 'ozone sh volume info o3:///10639-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:51:37.046" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:51:37.046" level="INFO">${output} = VOLUME_NOT_FOUND Volume 10639-rpcwport is not found</msg>
<status status="PASS" endtime="20210331 12:51:37.046" starttime="20210331 12:51:31.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:51:37.049" level="INFO">VOLUME_NOT_FOUND Volume 10639-rpcwport is not found</msg>
<status status="PASS" endtime="20210331 12:51:37.049" starttime="20210331 12:51:37.047"/>
</kw>
<msg timestamp="20210331 12:51:37.050" level="INFO">${result} = VOLUME_NOT_FOUND Volume 10639-rpcwport is not found</msg>
<status status="PASS" endtime="20210331 12:51:37.050" starttime="20210331 12:51:31.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:51:37.052" starttime="20210331 12:51:37.051"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:51:37.058" level="INFO">Running command 'ozone sh volume create o3:///10639-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:51:43.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:51:43.586" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:51:43.586" starttime="20210331 12:51:37.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:51:43.589" level="INFO"/>
<status status="PASS" endtime="20210331 12:51:43.589" starttime="20210331 12:51:43.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:51:43.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:51:43.591" starttime="20210331 12:51:43.590"/>
</kw>
<status status="PASS" endtime="20210331 12:51:43.591" starttime="20210331 12:51:37.054"/>
</kw>
<msg timestamp="20210331 12:51:43.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:51:43.592" starttime="20210331 12:51:37.053"/>
</kw>
<msg timestamp="20210331 12:51:43.593" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210331 12:51:43.593" starttime="20210331 12:51:37.052"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:51:43.594" starttime="20210331 12:51:43.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:51:43.601" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="10639-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:51:49.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:51:49.824" level="INFO">${output} = {
  "metadata": {},
  "name": "10639-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210331 12:51:49.825" starttime="20210331 12:51:43.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:51:49.828" level="INFO">{
  "metadata": {},
  "name": "10639-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-31T12:51:43.288Z",
  "modificationTime": "2021-03-31T12:51:43.288Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210331 12:51:49.828" starttime="20210331 12:51:49.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:51:49.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:51:49.830" starttime="20210331 12:51:49.828"/>
</kw>
<status status="PASS" endtime="20210331 12:51:49.830" starttime="20210331 12:51:43.596"/>
</kw>
<msg timestamp="20210331 12:51:49.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:51:49.831" starttime="20210331 12:51:43.596"/>
</kw>
<msg timestamp="20210331 12:51:49.831" level="INFO">${result} = {
  "metadata": {},
  "name": "10639-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210331 12:51:49.831" starttime="20210331 12:51:43.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:51:49.833" starttime="20210331 12:51:49.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:51:49.840" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="10639-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:51:56.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:51:56.701" level="INFO">${output} = {
  "metadata": {},
  "name": "10639-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210331 12:51:56.701" starttime="20210331 12:51:49.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:51:56.702" level="INFO">{
  "metadata": {},
  "name": "10639-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-31T12:51:43.288Z",
  "modificationTime": "2021-03-31T12:51:43.288Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210331 12:51:56.703" starttime="20210331 12:51:56.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:51:56.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:51:56.704" starttime="20210331 12:51:56.703"/>
</kw>
<status status="PASS" endtime="20210331 12:51:56.704" starttime="20210331 12:51:49.835"/>
</kw>
<msg timestamp="20210331 12:51:56.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:51:56.705" starttime="20210331 12:51:49.834"/>
</kw>
<msg timestamp="20210331 12:51:56.705" level="INFO">${result} = {
  "metadata": {},
  "name": "10639-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210331 12:51:56.705" starttime="20210331 12:51:49.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:51:56.705" starttime="20210331 12:51:56.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:51:56.712" level="INFO">Running command 'ozone sh volume setquota o3:///10639-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:52:02.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:52:02.545" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:52:02.545" starttime="20210331 12:51:56.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:52:02.546" level="INFO"/>
<status status="PASS" endtime="20210331 12:52:02.546" starttime="20210331 12:52:02.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:52:02.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:52:02.547" starttime="20210331 12:52:02.546"/>
</kw>
<status status="PASS" endtime="20210331 12:52:02.547" starttime="20210331 12:51:56.707"/>
</kw>
<msg timestamp="20210331 12:52:02.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:52:02.548" starttime="20210331 12:51:56.707"/>
</kw>
<status status="PASS" endtime="20210331 12:52:02.548" starttime="20210331 12:51:56.706"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:52:02.552" level="INFO">Running command 'ozone sh volume info o3:///10639-rpcwport | jq -r '. | select(.name=="10639-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:52:07.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:52:07.538" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:52:07.538" starttime="20210331 12:52:02.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:52:07.540" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210331 12:52:07.540" starttime="20210331 12:52:07.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:52:07.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:52:07.541" starttime="20210331 12:52:07.541"/>
</kw>
<status status="PASS" endtime="20210331 12:52:07.542" starttime="20210331 12:52:02.549"/>
</kw>
<msg timestamp="20210331 12:52:07.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:52:07.542" starttime="20210331 12:52:02.549"/>
</kw>
<msg timestamp="20210331 12:52:07.542" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:52:07.542" starttime="20210331 12:52:02.548"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:52:07.543" starttime="20210331 12:52:07.543"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:52:07.548" level="INFO">Running command 'ozone sh bucket create o3:///10639-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:52:11.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:52:11.610" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:52:11.610" starttime="20210331 12:52:07.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:52:11.611" level="INFO"/>
<status status="PASS" endtime="20210331 12:52:11.611" starttime="20210331 12:52:11.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:52:11.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:52:11.612" starttime="20210331 12:52:11.612"/>
</kw>
<status status="PASS" endtime="20210331 12:52:11.612" starttime="20210331 12:52:07.545"/>
</kw>
<msg timestamp="20210331 12:52:11.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:52:11.613" starttime="20210331 12:52:07.544"/>
</kw>
<status status="PASS" endtime="20210331 12:52:11.613" starttime="20210331 12:52:07.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:52:11.619" level="INFO">Running command 'ozone sh bucket info o3:///10639-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:52:18.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:52:18.041" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210331 12:52:18.041" starttime="20210331 12:52:11.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:52:18.043" level="INFO">DISK</msg>
<status status="PASS" endtime="20210331 12:52:18.043" starttime="20210331 12:52:18.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:52:18.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:52:18.044" starttime="20210331 12:52:18.043"/>
</kw>
<status status="PASS" endtime="20210331 12:52:18.045" starttime="20210331 12:52:11.616"/>
</kw>
<msg timestamp="20210331 12:52:18.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:52:18.045" starttime="20210331 12:52:11.615"/>
</kw>
<msg timestamp="20210331 12:52:18.045" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210331 12:52:18.045" starttime="20210331 12:52:11.613"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:52:18.046" starttime="20210331 12:52:18.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:52:18.050" level="INFO">Running command 'ozone sh bucket info o3:///10639-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:52:24.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:52:24.071" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:52:24.072" starttime="20210331 12:52:18.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:52:24.075" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210331 12:52:24.075" starttime="20210331 12:52:24.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:52:24.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:52:24.077" starttime="20210331 12:52:24.075"/>
</kw>
<status status="PASS" endtime="20210331 12:52:24.078" starttime="20210331 12:52:18.047"/>
</kw>
<msg timestamp="20210331 12:52:24.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:52:24.078" starttime="20210331 12:52:18.047"/>
</kw>
<msg timestamp="20210331 12:52:24.079" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:52:24.079" starttime="20210331 12:52:18.046"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:52:24.079" starttime="20210331 12:52:24.079"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:52:24.084" level="INFO">Running command 'ozone sh bucket info o3:///10639-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:52:30.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:52:30.927" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210331 12:52:30.927" starttime="20210331 12:52:24.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:52:30.928" level="INFO">100</msg>
<status status="PASS" endtime="20210331 12:52:30.928" starttime="20210331 12:52:30.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:52:30.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:52:30.929" starttime="20210331 12:52:30.929"/>
</kw>
<status status="PASS" endtime="20210331 12:52:30.929" starttime="20210331 12:52:24.081"/>
</kw>
<msg timestamp="20210331 12:52:30.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:52:30.930" starttime="20210331 12:52:24.080"/>
</kw>
<msg timestamp="20210331 12:52:30.930" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210331 12:52:30.930" starttime="20210331 12:52:24.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:52:30.931" starttime="20210331 12:52:30.930"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:52:30.936" level="INFO">Running command 'ozone sh bucket setquota o3:///10639-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:52:36.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:52:36.874" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:52:36.875" starttime="20210331 12:52:30.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:52:36.876" level="INFO"/>
<status status="PASS" endtime="20210331 12:52:36.876" starttime="20210331 12:52:36.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:52:36.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:52:36.877" starttime="20210331 12:52:36.876"/>
</kw>
<status status="PASS" endtime="20210331 12:52:36.877" starttime="20210331 12:52:30.932"/>
</kw>
<msg timestamp="20210331 12:52:36.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:52:36.877" starttime="20210331 12:52:30.932"/>
</kw>
<status status="PASS" endtime="20210331 12:52:36.878" starttime="20210331 12:52:30.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:52:36.886" level="INFO">Running command 'ozone sh bucket info o3:///10639-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:52:43.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:52:43.659" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210331 12:52:43.660" starttime="20210331 12:52:36.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:52:43.663" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210331 12:52:43.663" starttime="20210331 12:52:43.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:52:43.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:52:43.665" starttime="20210331 12:52:43.664"/>
</kw>
<status status="PASS" endtime="20210331 12:52:43.666" starttime="20210331 12:52:36.879"/>
</kw>
<msg timestamp="20210331 12:52:43.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:52:43.666" starttime="20210331 12:52:36.879"/>
</kw>
<msg timestamp="20210331 12:52:43.667" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210331 12:52:43.667" starttime="20210331 12:52:36.878"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:52:43.669" starttime="20210331 12:52:43.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:52:43.678" level="INFO">Running command 'ozone sh bucket info o3:///10639-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:52:49.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:52:49.901" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210331 12:52:49.901" starttime="20210331 12:52:43.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:52:49.903" level="INFO">1000</msg>
<status status="PASS" endtime="20210331 12:52:49.903" starttime="20210331 12:52:49.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:52:49.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:52:49.903" starttime="20210331 12:52:49.903"/>
</kw>
<status status="PASS" endtime="20210331 12:52:49.904" starttime="20210331 12:52:43.673"/>
</kw>
<msg timestamp="20210331 12:52:49.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:52:49.904" starttime="20210331 12:52:43.672"/>
</kw>
<msg timestamp="20210331 12:52:49.904" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210331 12:52:49.904" starttime="20210331 12:52:43.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:52:49.905" starttime="20210331 12:52:49.904"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:52:49.909" level="INFO">Running command 'ozone sh bucket list o3:///10639-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:52:55.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:52:55.428" level="INFO">${output} = 10639-rpcwport</msg>
<status status="PASS" endtime="20210331 12:52:55.428" starttime="20210331 12:52:49.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:52:55.431" level="INFO">10639-rpcwport</msg>
<status status="PASS" endtime="20210331 12:52:55.431" starttime="20210331 12:52:55.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:52:55.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:52:55.434" starttime="20210331 12:52:55.432"/>
</kw>
<status status="PASS" endtime="20210331 12:52:55.434" starttime="20210331 12:52:49.906"/>
</kw>
<msg timestamp="20210331 12:52:55.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:52:55.435" starttime="20210331 12:52:49.906"/>
</kw>
<msg timestamp="20210331 12:52:55.435" level="INFO">${result} = 10639-rpcwport</msg>
<status status="PASS" endtime="20210331 12:52:55.435" starttime="20210331 12:52:49.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:52:55.436" starttime="20210331 12:52:55.435"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:52:55.442" level="INFO">Running command 'ozone sh key put o3:///10639-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:05.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:56:05.971" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:56:05.971" starttime="20210331 12:52:55.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:05.972" level="INFO"/>
<status status="PASS" endtime="20210331 12:56:05.972" starttime="20210331 12:56:05.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:56:05.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:56:05.973" starttime="20210331 12:56:05.972"/>
</kw>
<status status="PASS" endtime="20210331 12:56:05.973" starttime="20210331 12:52:55.438"/>
</kw>
<msg timestamp="20210331 12:56:05.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:56:05.973" starttime="20210331 12:52:55.437"/>
</kw>
<status status="PASS" endtime="20210331 12:56:05.974" starttime="20210331 12:52:55.437"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:05.978" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:05.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:56:05.982" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:56:05.982" starttime="20210331 12:56:05.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:05.984" level="INFO"/>
<status status="PASS" endtime="20210331 12:56:05.985" starttime="20210331 12:56:05.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:56:05.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:56:05.986" starttime="20210331 12:56:05.985"/>
</kw>
<status status="PASS" endtime="20210331 12:56:05.987" starttime="20210331 12:56:05.975"/>
</kw>
<msg timestamp="20210331 12:56:05.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:56:05.987" starttime="20210331 12:56:05.974"/>
</kw>
<status status="PASS" endtime="20210331 12:56:05.988" starttime="20210331 12:56:05.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:05.994" level="INFO">Running command 'ozone sh key get o3:///10639-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:13.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:56:13.974" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:56:13.974" starttime="20210331 12:56:05.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:13.976" level="INFO"/>
<status status="PASS" endtime="20210331 12:56:13.976" starttime="20210331 12:56:13.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:56:13.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:56:13.977" starttime="20210331 12:56:13.976"/>
</kw>
<status status="PASS" endtime="20210331 12:56:13.977" starttime="20210331 12:56:05.990"/>
</kw>
<msg timestamp="20210331 12:56:13.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:56:13.977" starttime="20210331 12:56:05.989"/>
</kw>
<status status="PASS" endtime="20210331 12:56:13.977" starttime="20210331 12:56:05.988"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:13.982" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:13.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:56:13.986" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:56:13.986" starttime="20210331 12:56:13.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:13.988" level="INFO"/>
<status status="PASS" endtime="20210331 12:56:13.988" starttime="20210331 12:56:13.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:56:13.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:56:13.989" starttime="20210331 12:56:13.988"/>
</kw>
<status status="PASS" endtime="20210331 12:56:13.989" starttime="20210331 12:56:13.978"/>
</kw>
<msg timestamp="20210331 12:56:13.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:56:13.990" starttime="20210331 12:56:13.978"/>
</kw>
<status status="PASS" endtime="20210331 12:56:13.990" starttime="20210331 12:56:13.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:13.999" level="INFO">Running command 'ozone sh key put -t RATIS o3:///10639-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:31.253" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210331 12:56:31.253" starttime="20210331 12:56:13.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.253" starttime="20210331 12:56:31.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.254" starttime="20210331 12:56:31.254"/>
</kw>
<status status="FAIL" endtime="20210331 12:56:31.254" starttime="20210331 12:56:13.994"/>
</kw>
<msg timestamp="20210331 12:56:31.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210331 12:56:31.254" starttime="20210331 12:56:13.994"/>
</kw>
<status status="FAIL" endtime="20210331 12:56:31.255" starttime="20210331 12:56:13.990"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.255" starttime="20210331 12:56:31.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.255" starttime="20210331 12:56:31.255"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.255" starttime="20210331 12:56:31.255"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.256" starttime="20210331 12:56:31.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.256" starttime="20210331 12:56:31.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.256" starttime="20210331 12:56:31.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.257" starttime="20210331 12:56:31.256"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.257" starttime="20210331 12:56:31.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.257" starttime="20210331 12:56:31.257"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.257" starttime="20210331 12:56:31.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.258" starttime="20210331 12:56:31.258"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.258" starttime="20210331 12:56:31.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.258" starttime="20210331 12:56:31.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.258" starttime="20210331 12:56:31.258"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.258" starttime="20210331 12:56:31.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.259" starttime="20210331 12:56:31.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.259" starttime="20210331 12:56:31.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.259" starttime="20210331 12:56:31.259"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.259" starttime="20210331 12:56:31.259"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.259" starttime="20210331 12:56:31.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.259" starttime="20210331 12:56:31.259"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.260" starttime="20210331 12:56:31.260"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.260" starttime="20210331 12:56:31.260"/>
</kw>
<status status="FAIL" endtime="20210331 12:56:31.260" starttime="20210331 12:52:55.436"/>
</kw>
<status status="FAIL" endtime="20210331 12:56:31.260" starttime="20210331 12:52:55.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.260" starttime="20210331 12:56:31.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.260" starttime="20210331 12:56:31.260"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.261" starttime="20210331 12:56:31.261"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.261" starttime="20210331 12:56:31.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.261" starttime="20210331 12:56:31.261"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.261" starttime="20210331 12:56:31.261"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.262" starttime="20210331 12:56:31.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.262" starttime="20210331 12:56:31.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.262" starttime="20210331 12:56:31.262"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.262" starttime="20210331 12:56:31.262"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.262" starttime="20210331 12:56:31.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.263" starttime="20210331 12:56:31.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.263" starttime="20210331 12:56:31.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.263" starttime="20210331 12:56:31.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.264" starttime="20210331 12:56:31.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.264" starttime="20210331 12:56:31.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.264" starttime="20210331 12:56:31.264"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.264" starttime="20210331 12:56:31.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.265" starttime="20210331 12:56:31.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.265" starttime="20210331 12:56:31.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.265" starttime="20210331 12:56:31.265"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.265" starttime="20210331 12:56:31.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.265" starttime="20210331 12:56:31.265"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 12:56:31.265" starttime="20210331 12:56:31.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.266" starttime="20210331 12:56:31.266"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 12:56:31.266" starttime="20210331 12:56:31.266"/>
</kw>
<status status="FAIL" endtime="20210331 12:56:31.266" starttime="20210331 12:51:31.422"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210331 12:56:31.266" starttime="20210331 12:51:31.252">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:31.279" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:31.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:56:31.286" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:56:31.287" starttime="20210331 12:56:31.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:31.288" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:56:31.288" starttime="20210331 12:56:31.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:56:31.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:56:31.289" starttime="20210331 12:56:31.289"/>
</kw>
<status status="PASS" endtime="20210331 12:56:31.290" starttime="20210331 12:56:31.270"/>
</kw>
<msg timestamp="20210331 12:56:31.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:56:31.290" starttime="20210331 12:56:31.270"/>
</kw>
<msg timestamp="20210331 12:56:31.290" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:56:31.290" starttime="20210331 12:56:31.270"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:56:31.291" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:56:31.291" starttime="20210331 12:56:31.290"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:31.296" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:31.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:56:31.499" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:56:31.499" starttime="20210331 12:56:31.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:31.501" level="INFO"/>
<status status="PASS" endtime="20210331 12:56:31.501" starttime="20210331 12:56:31.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:56:31.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:56:31.501" starttime="20210331 12:56:31.501"/>
</kw>
<status status="PASS" endtime="20210331 12:56:31.502" starttime="20210331 12:56:31.293"/>
</kw>
<msg timestamp="20210331 12:56:31.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:56:31.502" starttime="20210331 12:56:31.292"/>
</kw>
<status status="PASS" endtime="20210331 12:56:31.502" starttime="20210331 12:56:31.292"/>
</kw>
<status status="PASS" endtime="20210331 12:56:31.502" starttime="20210331 12:56:31.291"/>
</kw>
<status status="PASS" endtime="20210331 12:56:31.503" starttime="20210331 12:56:31.269"/>
</kw>
<status status="PASS" endtime="20210331 12:56:31.503" starttime="20210331 12:56:31.269"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:31.508" level="INFO">Running command 'ozone sh volume info /10639-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:36.443" level="INFO">${rc} = 255</msg>
<msg timestamp="20210331 12:56:36.443" level="INFO">${output} = VOLUME_NOT_FOUND Volume 10639-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210331 12:56:36.443" starttime="20210331 12:56:31.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:36.445" level="INFO">VOLUME_NOT_FOUND Volume 10639-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210331 12:56:36.445" starttime="20210331 12:56:36.444"/>
</kw>
<msg timestamp="20210331 12:56:36.446" level="INFO">${result} = VOLUME_NOT_FOUND Volume 10639-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210331 12:56:36.446" starttime="20210331 12:56:31.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:56:36.446" starttime="20210331 12:56:36.446"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:36.450" level="INFO">Running command 'ozone sh volume create /10639-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:41.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:56:41.874" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:56:41.874" starttime="20210331 12:56:36.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:41.876" level="INFO"/>
<status status="PASS" endtime="20210331 12:56:41.876" starttime="20210331 12:56:41.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:56:41.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:56:41.877" starttime="20210331 12:56:41.876"/>
</kw>
<status status="PASS" endtime="20210331 12:56:41.877" starttime="20210331 12:56:36.447"/>
</kw>
<msg timestamp="20210331 12:56:41.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:56:41.877" starttime="20210331 12:56:36.447"/>
</kw>
<msg timestamp="20210331 12:56:41.877" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210331 12:56:41.877" starttime="20210331 12:56:36.446"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:56:41.878" starttime="20210331 12:56:41.878"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:41.883" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="10639-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:48.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:56:48.494" level="INFO">${output} = {
  "metadata": {},
  "name": "10639-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210331 12:56:48.495" starttime="20210331 12:56:41.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:48.496" level="INFO">{
  "metadata": {},
  "name": "10639-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-31T12:56:41.641Z",
  "modificationTime": "2021-03-31T12:56:41.641Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210331 12:56:48.496" starttime="20210331 12:56:48.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:56:48.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:56:48.496" starttime="20210331 12:56:48.496"/>
</kw>
<status status="PASS" endtime="20210331 12:56:48.497" starttime="20210331 12:56:41.879"/>
</kw>
<msg timestamp="20210331 12:56:48.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:56:48.497" starttime="20210331 12:56:41.879"/>
</kw>
<msg timestamp="20210331 12:56:48.497" level="INFO">${result} = {
  "metadata": {},
  "name": "10639-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210331 12:56:48.497" starttime="20210331 12:56:41.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:56:48.498" starttime="20210331 12:56:48.498"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:48.503" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="10639-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:54.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:56:54.748" level="INFO">${output} = {
  "metadata": {},
  "name": "10639-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210331 12:56:54.748" starttime="20210331 12:56:48.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:54.749" level="INFO">{
  "metadata": {},
  "name": "10639-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-31T12:56:41.641Z",
  "modificationTime": "2021-03-31T12:56:41.641Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210331 12:56:54.749" starttime="20210331 12:56:54.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:56:54.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:56:54.750" starttime="20210331 12:56:54.750"/>
</kw>
<status status="PASS" endtime="20210331 12:56:54.750" starttime="20210331 12:56:48.499"/>
</kw>
<msg timestamp="20210331 12:56:54.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:56:54.751" starttime="20210331 12:56:48.499"/>
</kw>
<msg timestamp="20210331 12:56:54.751" level="INFO">${result} = {
  "metadata": {},
  "name": "10639-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210331 12:56:54.751" starttime="20210331 12:56:48.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210331 12:56:54.752" starttime="20210331 12:56:54.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:54.756" level="INFO">Running command 'ozone sh volume setquota /10639-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:56:59.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:56:59.645" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:56:59.645" starttime="20210331 12:56:54.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:56:59.647" level="INFO"/>
<status status="PASS" endtime="20210331 12:56:59.648" starttime="20210331 12:56:59.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:56:59.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:56:59.648" starttime="20210331 12:56:59.648"/>
</kw>
<status status="PASS" endtime="20210331 12:56:59.649" starttime="20210331 12:56:54.753"/>
</kw>
<msg timestamp="20210331 12:56:59.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:56:59.649" starttime="20210331 12:56:54.752"/>
</kw>
<status status="PASS" endtime="20210331 12:56:59.649" starttime="20210331 12:56:54.752"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:56:59.655" level="INFO">Running command 'ozone sh volume info /10639-rpcwoscheme | jq -r '. | select(.name=="10639-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:57:06.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:57:06.888" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:57:06.888" starttime="20210331 12:56:59.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:57:06.890" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210331 12:57:06.890" starttime="20210331 12:57:06.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:57:06.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:57:06.891" starttime="20210331 12:57:06.890"/>
</kw>
<status status="PASS" endtime="20210331 12:57:06.892" starttime="20210331 12:56:59.651"/>
</kw>
<msg timestamp="20210331 12:57:06.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:57:06.892" starttime="20210331 12:56:59.650"/>
</kw>
<msg timestamp="20210331 12:57:06.893" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:57:06.893" starttime="20210331 12:56:59.649"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:57:06.894" starttime="20210331 12:57:06.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:57:06.900" level="INFO">Running command 'ozone sh bucket create /10639-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:57:12.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:57:12.966" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:57:12.967" starttime="20210331 12:57:06.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:57:12.968" level="INFO"/>
<status status="PASS" endtime="20210331 12:57:12.968" starttime="20210331 12:57:12.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:57:12.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:57:12.968" starttime="20210331 12:57:12.968"/>
</kw>
<status status="PASS" endtime="20210331 12:57:12.969" starttime="20210331 12:57:06.896"/>
</kw>
<msg timestamp="20210331 12:57:12.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:57:12.969" starttime="20210331 12:57:06.895"/>
</kw>
<status status="PASS" endtime="20210331 12:57:12.969" starttime="20210331 12:57:06.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:57:12.975" level="INFO">Running command 'ozone sh bucket info /10639-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:57:17.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:57:17.829" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210331 12:57:17.830" starttime="20210331 12:57:12.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:57:17.831" level="INFO">DISK</msg>
<status status="PASS" endtime="20210331 12:57:17.831" starttime="20210331 12:57:17.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:57:17.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:57:17.832" starttime="20210331 12:57:17.831"/>
</kw>
<status status="PASS" endtime="20210331 12:57:17.832" starttime="20210331 12:57:12.971"/>
</kw>
<msg timestamp="20210331 12:57:17.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:57:17.833" starttime="20210331 12:57:12.970"/>
</kw>
<msg timestamp="20210331 12:57:17.833" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210331 12:57:17.833" starttime="20210331 12:57:12.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:57:17.834" starttime="20210331 12:57:17.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:57:17.840" level="INFO">Running command 'ozone sh bucket info /10639-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:57:24.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:57:24.613" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:57:24.613" starttime="20210331 12:57:17.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:57:24.614" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210331 12:57:24.614" starttime="20210331 12:57:24.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:57:24.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:57:24.615" starttime="20210331 12:57:24.614"/>
</kw>
<status status="PASS" endtime="20210331 12:57:24.615" starttime="20210331 12:57:17.836"/>
</kw>
<msg timestamp="20210331 12:57:24.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:57:24.615" starttime="20210331 12:57:17.836"/>
</kw>
<msg timestamp="20210331 12:57:24.615" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210331 12:57:24.616" starttime="20210331 12:57:17.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:57:24.616" starttime="20210331 12:57:24.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:57:24.623" level="INFO">Running command 'ozone sh bucket info /10639-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:57:31.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:57:31.765" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210331 12:57:31.765" starttime="20210331 12:57:24.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:57:31.766" level="INFO">100</msg>
<status status="PASS" endtime="20210331 12:57:31.766" starttime="20210331 12:57:31.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:57:31.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:57:31.767" starttime="20210331 12:57:31.767"/>
</kw>
<status status="PASS" endtime="20210331 12:57:31.768" starttime="20210331 12:57:24.619"/>
</kw>
<msg timestamp="20210331 12:57:31.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:57:31.768" starttime="20210331 12:57:24.619"/>
</kw>
<msg timestamp="20210331 12:57:31.768" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210331 12:57:31.768" starttime="20210331 12:57:24.617"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:57:31.769" starttime="20210331 12:57:31.768"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:57:31.776" level="INFO">Running command 'ozone sh bucket setquota /10639-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:57:35.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:57:35.716" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:57:35.716" starttime="20210331 12:57:31.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:57:35.719" level="INFO"/>
<status status="PASS" endtime="20210331 12:57:35.720" starttime="20210331 12:57:35.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:57:35.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:57:35.723" starttime="20210331 12:57:35.721"/>
</kw>
<status status="PASS" endtime="20210331 12:57:35.724" starttime="20210331 12:57:31.773"/>
</kw>
<msg timestamp="20210331 12:57:35.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:57:35.724" starttime="20210331 12:57:31.772"/>
</kw>
<status status="PASS" endtime="20210331 12:57:35.725" starttime="20210331 12:57:31.769"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:57:35.732" level="INFO">Running command 'ozone sh bucket info /10639-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:57:41.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:57:41.621" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210331 12:57:41.621" starttime="20210331 12:57:35.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:57:41.623" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210331 12:57:41.623" starttime="20210331 12:57:41.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:57:41.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:57:41.624" starttime="20210331 12:57:41.624"/>
</kw>
<status status="PASS" endtime="20210331 12:57:41.625" starttime="20210331 12:57:35.728"/>
</kw>
<msg timestamp="20210331 12:57:41.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:57:41.625" starttime="20210331 12:57:35.728"/>
</kw>
<msg timestamp="20210331 12:57:41.626" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210331 12:57:41.626" starttime="20210331 12:57:35.725"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:57:41.627" starttime="20210331 12:57:41.626"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:57:41.633" level="INFO">Running command 'ozone sh bucket info /10639-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:57:48.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:57:48.184" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210331 12:57:48.184" starttime="20210331 12:57:41.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:57:48.185" level="INFO">1000</msg>
<status status="PASS" endtime="20210331 12:57:48.185" starttime="20210331 12:57:48.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:57:48.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:57:48.186" starttime="20210331 12:57:48.185"/>
</kw>
<status status="PASS" endtime="20210331 12:57:48.186" starttime="20210331 12:57:41.629"/>
</kw>
<msg timestamp="20210331 12:57:48.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:57:48.187" starttime="20210331 12:57:41.628"/>
</kw>
<msg timestamp="20210331 12:57:48.187" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210331 12:57:48.187" starttime="20210331 12:57:41.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:57:48.188" starttime="20210331 12:57:48.187"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:57:48.193" level="INFO">Running command 'ozone sh bucket list /10639-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:57:54.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:57:54.599" level="INFO">${output} = 10639-rpcwoscheme</msg>
<status status="PASS" endtime="20210331 12:57:54.599" starttime="20210331 12:57:48.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:57:54.600" level="INFO">10639-rpcwoscheme</msg>
<status status="PASS" endtime="20210331 12:57:54.600" starttime="20210331 12:57:54.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:57:54.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:57:54.607" starttime="20210331 12:57:54.600"/>
</kw>
<status status="PASS" endtime="20210331 12:57:54.608" starttime="20210331 12:57:48.189"/>
</kw>
<msg timestamp="20210331 12:57:54.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:57:54.608" starttime="20210331 12:57:48.189"/>
</kw>
<msg timestamp="20210331 12:57:54.608" level="INFO">${result} = 10639-rpcwoscheme</msg>
<status status="PASS" endtime="20210331 12:57:54.608" starttime="20210331 12:57:48.188"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210331 12:57:54.609" starttime="20210331 12:57:54.608"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:57:54.619" level="INFO">Running command 'ozone sh key put /10639-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 13:01:04.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 13:01:04.968" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 13:01:04.968" starttime="20210331 12:57:54.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 13:01:04.970" level="INFO"/>
<status status="PASS" endtime="20210331 13:01:04.970" starttime="20210331 13:01:04.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 13:01:04.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 13:01:04.972" starttime="20210331 13:01:04.970"/>
</kw>
<status status="PASS" endtime="20210331 13:01:04.972" starttime="20210331 12:57:54.611"/>
</kw>
<msg timestamp="20210331 13:01:04.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 13:01:04.973" starttime="20210331 12:57:54.610"/>
</kw>
<status status="PASS" endtime="20210331 13:01:04.973" starttime="20210331 12:57:54.610"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 13:01:04.980" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 13:01:04.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 13:01:04.984" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 13:01:04.984" starttime="20210331 13:01:04.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 13:01:04.986" level="INFO"/>
<status status="PASS" endtime="20210331 13:01:04.986" starttime="20210331 13:01:04.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 13:01:04.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 13:01:04.987" starttime="20210331 13:01:04.986"/>
</kw>
<status status="PASS" endtime="20210331 13:01:04.988" starttime="20210331 13:01:04.975"/>
</kw>
<msg timestamp="20210331 13:01:04.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 13:01:04.988" starttime="20210331 13:01:04.974"/>
</kw>
<status status="PASS" endtime="20210331 13:01:04.989" starttime="20210331 13:01:04.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 13:01:04.994" level="INFO">Running command 'ozone sh key get /10639-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 13:01:14.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 13:01:14.105" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 13:01:14.105" starttime="20210331 13:01:04.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 13:01:14.106" level="INFO"/>
<status status="PASS" endtime="20210331 13:01:14.106" starttime="20210331 13:01:14.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 13:01:14.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 13:01:14.107" starttime="20210331 13:01:14.106"/>
</kw>
<status status="PASS" endtime="20210331 13:01:14.108" starttime="20210331 13:01:04.990"/>
</kw>
<msg timestamp="20210331 13:01:14.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 13:01:14.108" starttime="20210331 13:01:04.990"/>
</kw>
<status status="PASS" endtime="20210331 13:01:14.108" starttime="20210331 13:01:04.989"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 13:01:14.113" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 13:01:14.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 13:01:14.117" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 13:01:14.117" starttime="20210331 13:01:14.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 13:01:14.118" level="INFO"/>
<status status="PASS" endtime="20210331 13:01:14.118" starttime="20210331 13:01:14.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 13:01:14.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 13:01:14.119" starttime="20210331 13:01:14.118"/>
</kw>
<status status="PASS" endtime="20210331 13:01:14.119" starttime="20210331 13:01:14.110"/>
</kw>
<msg timestamp="20210331 13:01:14.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 13:01:14.119" starttime="20210331 13:01:14.109"/>
</kw>
<status status="PASS" endtime="20210331 13:01:14.120" starttime="20210331 13:01:14.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 13:01:14.124" level="INFO">Running command 'ozone sh key put -t RATIS /10639-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 13:01:31.269" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210331 13:01:31.269" starttime="20210331 13:01:14.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.269" starttime="20210331 13:01:31.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.270" starttime="20210331 13:01:31.270"/>
</kw>
<status status="FAIL" endtime="20210331 13:01:31.270" starttime="20210331 13:01:14.121"/>
</kw>
<msg timestamp="20210331 13:01:31.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210331 13:01:31.270" starttime="20210331 13:01:14.121"/>
</kw>
<status status="FAIL" endtime="20210331 13:01:31.271" starttime="20210331 13:01:14.120"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.271" starttime="20210331 13:01:31.271"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.272" starttime="20210331 13:01:31.272"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.272" starttime="20210331 13:01:31.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.273" starttime="20210331 13:01:31.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.273" starttime="20210331 13:01:31.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.273" starttime="20210331 13:01:31.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.274" starttime="20210331 13:01:31.274"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.274" starttime="20210331 13:01:31.274"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.275" starttime="20210331 13:01:31.274"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.275" starttime="20210331 13:01:31.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.275" starttime="20210331 13:01:31.275"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.275" starttime="20210331 13:01:31.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.276" starttime="20210331 13:01:31.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.276" starttime="20210331 13:01:31.276"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.276" starttime="20210331 13:01:31.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.276" starttime="20210331 13:01:31.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.276" starttime="20210331 13:01:31.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.277" starttime="20210331 13:01:31.277"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.277" starttime="20210331 13:01:31.277"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.277" starttime="20210331 13:01:31.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.277" starttime="20210331 13:01:31.277"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.277" starttime="20210331 13:01:31.277"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.277" starttime="20210331 13:01:31.277"/>
</kw>
<status status="FAIL" endtime="20210331 13:01:31.278" starttime="20210331 12:57:54.609"/>
</kw>
<status status="FAIL" endtime="20210331 13:01:31.278" starttime="20210331 12:57:54.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.278" starttime="20210331 13:01:31.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.278" starttime="20210331 13:01:31.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.278" starttime="20210331 13:01:31.278"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.279" starttime="20210331 13:01:31.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.279" starttime="20210331 13:01:31.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.279" starttime="20210331 13:01:31.279"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.279" starttime="20210331 13:01:31.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.279" starttime="20210331 13:01:31.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.279" starttime="20210331 13:01:31.279"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.280" starttime="20210331 13:01:31.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.280" starttime="20210331 13:01:31.280"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.280" starttime="20210331 13:01:31.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.280" starttime="20210331 13:01:31.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.280" starttime="20210331 13:01:31.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.280" starttime="20210331 13:01:31.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.281" starttime="20210331 13:01:31.280"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.281" starttime="20210331 13:01:31.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.281" starttime="20210331 13:01:31.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.281" starttime="20210331 13:01:31.281"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.281" starttime="20210331 13:01:31.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.281" starttime="20210331 13:01:31.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.282" starttime="20210331 13:01:31.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.282" starttime="20210331 13:01:31.282"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210331 13:01:31.282" starttime="20210331 13:01:31.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.282" starttime="20210331 13:01:31.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210331 13:01:31.282" starttime="20210331 13:01:31.282"/>
</kw>
<status status="FAIL" endtime="20210331 13:01:31.283" starttime="20210331 12:56:31.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210331 13:01:31.283" starttime="20210331 12:56:31.268">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210331 13:01:31.286" starttime="20210331 12:37:00.272"/>
</suite>
<status status="FAIL" endtime="20210331 13:01:31.292" starttime="20210331 12:13:16.991"/>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:13:12.043" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:13:12.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:13:12.047" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210331 12:13:12.047" starttime="20210331 12:13:12.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:13:12.048" level="INFO">scm</msg>
<status status="PASS" endtime="20210331 12:13:12.048" starttime="20210331 12:13:12.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:13:12.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:13:12.049" starttime="20210331 12:13:12.048"/>
</kw>
<status status="PASS" endtime="20210331 12:13:12.049" starttime="20210331 12:13:12.039"/>
</kw>
<msg timestamp="20210331 12:13:12.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:13:12.049" starttime="20210331 12:13:12.038"/>
</kw>
<msg timestamp="20210331 12:13:12.049" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210331 12:13:12.049" starttime="20210331 12:13:12.038"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210331 12:13:12.050" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210331 12:13:12.050" starttime="20210331 12:13:12.049"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210331 12:13:12.055" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210331 12:13:12.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210331 12:13:12.061" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210331 12:13:12.062" starttime="20210331 12:13:12.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210331 12:13:12.062" level="INFO"/>
<status status="PASS" endtime="20210331 12:13:12.063" starttime="20210331 12:13:12.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210331 12:13:12.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210331 12:13:12.064" starttime="20210331 12:13:12.063"/>
</kw>
<status status="PASS" endtime="20210331 12:13:12.064" starttime="20210331 12:13:12.052"/>
</kw>
<msg timestamp="20210331 12:13:12.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210331 12:13:12.064" starttime="20210331 12:13:12.051"/>
</kw>
<status status="PASS" endtime="20210331 12:13:12.064" starttime="20210331 12:13:12.051"/>
</kw>
<status status="PASS" endtime="20210331 12:13:12.064" starttime="20210331 12:13:12.050"/>
</kw>
<status status="PASS" endtime="20210331 12:13:12.065" starttime="20210331 12:13:12.037"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210331 12:13:12.065" starttime="20210331 12:13:12.036"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210331 12:13:12.066" starttime="20210331 12:13:11.987"/>
</suite>
<status status="FAIL" elapsedtime="2894380" endtime="N/A" starttime="N/A"/>
</suite>
<statistics>
<total>
<stat fail="10" skip="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="10" skip="0" id="s1" name="ozonesecure" pass="20">ozonesecure</stat>
<stat fail="10" skip="0" id="s1-s1" name="Basic" pass="19">ozonesecure.Basic</stat>
<stat fail="1" skip="0" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="0" skip="0" id="s1-s1-s2" name="Getconf" pass="4">ozonesecure.Basic.Getconf</stat>
<stat fail="5" skip="0" id="s1-s1-s3" name="Links" pass="10">ozonesecure.Basic.Links</stat>
<stat fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell" pass="4">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" skip="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
