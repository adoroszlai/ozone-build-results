<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210314 02:36:29.067" schemaversion="2" generator="Rebot 4.0 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:32:08.740" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:32:22.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:32:22.288" level="INFO">${output} = 2021-03-14 02:32:10,381 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:10,538 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210314 02:32:22.288" starttime="20210314 02:32:08.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:32:22.289" level="INFO">2021-03-14 02:32:10,381 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:10,538 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-14 02:32:10,542 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-14 02:32:10,744 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-03-14 02:32:10,768 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:11,780 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:12,781 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:12,952 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-03-14 02:32:13,496 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-03-14 02:32:13,782 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:14,787 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:15,791 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:16,791 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:17,169 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-03-14 02:32:17,425 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-03-14 02:32:17,426 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-4494F93422DD-&gt;b33e6b3b-d2d9-41c3-9bf1-d00fd2db3b49
2021-03-14 02:32:17,428 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-03-14 02:32:17,792 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:18,792 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:19,793 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:20,796 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:21,797 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-14 02:32:21,860 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=7117.665603, max=7117.665603, mean=7117.665603, stddev=0.0, median=7117.665603, p75=7117.665603, p95=7117.665603, p98=7117.665603, p99=7117.665603, p999=7117.665603, mean_rate=0.12407265299760357, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-14 02:32:21,898 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2021-03-14 02:32:21,900 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-14 02:32:21,900 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210314 02:32:22.289" starttime="20210314 02:32:22.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:32:22.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:32:22.290" starttime="20210314 02:32:22.289"/>
</kw>
<status status="PASS" endtime="20210314 02:32:22.290" starttime="20210314 02:32:08.735"/>
</kw>
<msg timestamp="20210314 02:32:22.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:32:22.291" starttime="20210314 02:32:08.735"/>
</kw>
<msg timestamp="20210314 02:32:22.291" level="INFO">${result} = 2021-03-14 02:32:10,381 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:10,538 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210314 02:32:22.291" starttime="20210314 02:32:08.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:32:22.291" starttime="20210314 02:32:22.291"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210314 02:32:22.292" starttime="20210314 02:32:08.733"/>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:32:22.298" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:32:27.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:32:27.365" level="INFO">${output} = 2021-03-14 02:32:24,205 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:24,380 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210314 02:32:27.365" starttime="20210314 02:32:22.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:32:27.367" level="INFO">2021-03-14 02:32:24,205 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:24,380 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-14 02:32:24,380 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-14 02:32:24,576 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-03-14 02:32:24,600 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:25,613 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:26,618 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-14 02:32:27,277 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=325.262499, max=325.262499, mean=325.262499, stddev=0.0, median=325.262499, p75=325.262499, p95=325.262499, p98=325.262499, p99=325.262499, p999=325.262499, mean_rate=0.9761038141380503, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-14 02:32:27,280 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-03-14 02:32:27,281 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-14 02:32:27,281 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210314 02:32:27.367" starttime="20210314 02:32:27.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:32:27.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:32:27.368" starttime="20210314 02:32:27.367"/>
</kw>
<status status="PASS" endtime="20210314 02:32:27.368" starttime="20210314 02:32:22.295"/>
</kw>
<msg timestamp="20210314 02:32:27.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:32:27.368" starttime="20210314 02:32:22.294"/>
</kw>
<msg timestamp="20210314 02:32:27.369" level="INFO">${result} = 2021-03-14 02:32:24,205 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:24,380 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210314 02:32:27.369" starttime="20210314 02:32:22.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:32:27.369" starttime="20210314 02:32:27.369"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210314 02:32:27.370" starttime="20210314 02:32:22.292"/>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:32:27.376" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:32:32.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:32:32.457" level="INFO">${output} = 2021-03-14 02:32:29,326 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:29,476 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210314 02:32:32.457" starttime="20210314 02:32:27.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:32:32.458" level="INFO">2021-03-14 02:32:29,326 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:29,476 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-14 02:32:29,476 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-14 02:32:29,689 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-03-14 02:32:29,716 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:30,721 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:31,722 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-14 02:32:32,426 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=106.633834, max=106.633834, mean=106.633834, stddev=0.0, median=106.633834, p75=106.633834, p95=106.633834, p98=106.633834, p99=106.633834, p999=106.633834, mean_rate=0.9519914265022997, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-14 02:32:32,427 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-03-14 02:32:32,429 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-14 02:32:32,429 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210314 02:32:32.458" starttime="20210314 02:32:32.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:32:32.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:32:32.459" starttime="20210314 02:32:32.459"/>
</kw>
<status status="PASS" endtime="20210314 02:32:32.460" starttime="20210314 02:32:27.373"/>
</kw>
<msg timestamp="20210314 02:32:32.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:32:32.460" starttime="20210314 02:32:27.373"/>
</kw>
<msg timestamp="20210314 02:32:32.460" level="INFO">${result} = 2021-03-14 02:32:29,326 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:29,476 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210314 02:32:32.460" starttime="20210314 02:32:27.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:32:32.461" starttime="20210314 02:32:32.460"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210314 02:32:32.461" starttime="20210314 02:32:27.371"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210314 02:32:32.463" starttime="20210314 02:32:08.714"/>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:32:32.475" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:32:39.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:32:39.817" level="INFO">${output} = 2021-03-14 02:32:34,478 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:34,581 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210314 02:32:39.817" starttime="20210314 02:32:32.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:32:39.819" level="INFO">2021-03-14 02:32:34,478 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:34,581 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-03-14 02:32:34,581 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-03-14 02:32:34,716 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-03-14 02:32:34,725 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:35,732 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:36,733 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:37,361 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-03-14 02:32:37,733 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-03-14 02:32:38,734 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-03-14 02:32:39,453 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=75.715506, max=75.715506, mean=75.715506, stddev=0.0, median=75.715506, p75=75.715506, p95=75.715506, p98=75.715506, p99=75.715506, p999=75.715506, mean_rate=0.9830924390328072, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-03-14 02:32:39,453 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-03-14 02:32:39,454 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-03-14 02:32:39,454 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210314 02:32:39.819" starttime="20210314 02:32:39.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:32:39.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:32:39.819" starttime="20210314 02:32:39.819"/>
</kw>
<status status="PASS" endtime="20210314 02:32:39.820" starttime="20210314 02:32:32.472"/>
</kw>
<msg timestamp="20210314 02:32:39.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:32:39.820" starttime="20210314 02:32:32.471"/>
</kw>
<msg timestamp="20210314 02:32:39.820" level="INFO">${result} = 2021-03-14 02:32:34,478 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-03-14 02:32:34,581 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210314 02:32:39.820" starttime="20210314 02:32:32.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:32:39.821" starttime="20210314 02:32:39.820"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210314 02:32:39.821" starttime="20210314 02:32:32.470"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210314 02:32:39.822" starttime="20210314 02:32:32.465"/>
</suite>
<status status="PASS" endtime="20210314 02:32:39.825" starttime="20210314 02:32:08.681"/>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:32:02.886" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:32:02.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:32:02.889" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:32:02.890" starttime="20210314 02:32:02.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:32:02.891" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:32:02.891" starttime="20210314 02:32:02.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:32:02.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:32:02.891" starttime="20210314 02:32:02.891"/>
</kw>
<status status="PASS" endtime="20210314 02:32:02.892" starttime="20210314 02:32:02.881"/>
</kw>
<msg timestamp="20210314 02:32:02.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:32:02.892" starttime="20210314 02:32:02.881"/>
</kw>
<msg timestamp="20210314 02:32:02.892" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:32:02.892" starttime="20210314 02:32:02.881"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:32:02.893" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:32:02.893" starttime="20210314 02:32:02.892"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:32:02.898" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:32:02.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:32:02.905" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:32:02.905" starttime="20210314 02:32:02.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:32:02.906" level="INFO"/>
<status status="PASS" endtime="20210314 02:32:02.906" starttime="20210314 02:32:02.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:32:02.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:32:02.907" starttime="20210314 02:32:02.907"/>
</kw>
<status status="PASS" endtime="20210314 02:32:02.907" starttime="20210314 02:32:02.894"/>
</kw>
<msg timestamp="20210314 02:32:02.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:32:02.908" starttime="20210314 02:32:02.894"/>
</kw>
<status status="PASS" endtime="20210314 02:32:02.908" starttime="20210314 02:32:02.893"/>
</kw>
<status status="PASS" endtime="20210314 02:32:02.908" starttime="20210314 02:32:02.893"/>
</kw>
<status status="PASS" endtime="20210314 02:32:02.908" starttime="20210314 02:32:02.880"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:32:02.908" starttime="20210314 02:32:02.879"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210314 02:32:02.909" starttime="20210314 02:32:02.824"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="SETUP" name="Create volumes">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210314 02:32:45.444" level="INFO">${random} = 83205</msg>
<status status="PASS" endtime="20210314 02:32:45.444" starttime="20210314 02:32:45.444"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:32:45.446" level="INFO">${source} = 83205-source</msg>
<status status="PASS" endtime="20210314 02:32:45.446" starttime="20210314 02:32:45.444"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:32:45.447" level="INFO">${target} = 83205-target</msg>
<status status="PASS" endtime="20210314 02:32:45.447" starttime="20210314 02:32:45.446"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:32:45.454" level="INFO">Running command 'ozone sh volume create 83205-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:32:49.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:32:49.316" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:32:49.316" starttime="20210314 02:32:45.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:32:49.317" level="INFO"/>
<status status="PASS" endtime="20210314 02:32:49.318" starttime="20210314 02:32:49.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:32:49.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:32:49.318" starttime="20210314 02:32:49.318"/>
</kw>
<status status="PASS" endtime="20210314 02:32:49.319" starttime="20210314 02:32:45.449"/>
</kw>
<msg timestamp="20210314 02:32:49.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:32:49.320" starttime="20210314 02:32:45.448"/>
</kw>
<status status="PASS" endtime="20210314 02:32:49.320" starttime="20210314 02:32:45.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:32:49.324" level="INFO">Running command 'ozone sh volume create 83205-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:32:53.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:32:53.233" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:32:53.233" starttime="20210314 02:32:49.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:32:53.234" level="INFO"/>
<status status="PASS" endtime="20210314 02:32:53.235" starttime="20210314 02:32:53.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:32:53.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:32:53.235" starttime="20210314 02:32:53.235"/>
</kw>
<status status="PASS" endtime="20210314 02:32:53.235" starttime="20210314 02:32:49.321"/>
</kw>
<msg timestamp="20210314 02:32:53.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:32:53.236" starttime="20210314 02:32:49.321"/>
</kw>
<status status="PASS" endtime="20210314 02:32:53.236" starttime="20210314 02:32:49.320"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:32:53.240" level="INFO">Running command 'ozone sh bucket create 83205-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:32:56.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:32:56.893" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:32:56.893" starttime="20210314 02:32:53.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:32:56.894" level="INFO"/>
<status status="PASS" endtime="20210314 02:32:56.895" starttime="20210314 02:32:56.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:32:56.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:32:56.895" starttime="20210314 02:32:56.895"/>
</kw>
<status status="PASS" endtime="20210314 02:32:56.895" starttime="20210314 02:32:53.238"/>
</kw>
<msg timestamp="20210314 02:32:56.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:32:56.896" starttime="20210314 02:32:53.237"/>
</kw>
<status status="PASS" endtime="20210314 02:32:56.896" starttime="20210314 02:32:53.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:32:56.900" level="INFO">Running command 'ozone sh key put 83205-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:03.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:03.409" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:03.409" starttime="20210314 02:32:56.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:03.410" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:03.410" starttime="20210314 02:33:03.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:03.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:03.411" starttime="20210314 02:33:03.410"/>
</kw>
<status status="PASS" endtime="20210314 02:33:03.411" starttime="20210314 02:32:56.897"/>
</kw>
<msg timestamp="20210314 02:33:03.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:03.411" starttime="20210314 02:32:56.897"/>
</kw>
<status status="PASS" endtime="20210314 02:33:03.412" starttime="20210314 02:32:56.896"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:03.415" level="INFO">Running command 'ozone sh bucket create 83205-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:07.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:07.158" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:07.158" starttime="20210314 02:33:03.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:07.159" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:07.159" starttime="20210314 02:33:07.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:07.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:07.160" starttime="20210314 02:33:07.159"/>
</kw>
<status status="PASS" endtime="20210314 02:33:07.160" starttime="20210314 02:33:03.413"/>
</kw>
<msg timestamp="20210314 02:33:07.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:07.160" starttime="20210314 02:33:03.412"/>
</kw>
<status status="PASS" endtime="20210314 02:33:07.161" starttime="20210314 02:33:03.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:07.164" level="INFO">Running command 'ozone sh bucket link 83205-source/readable-bucket 83205-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:11.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:11.056" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:11.056" starttime="20210314 02:33:07.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:11.057" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:11.057" starttime="20210314 02:33:11.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:11.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:11.058" starttime="20210314 02:33:11.057"/>
</kw>
<status status="PASS" endtime="20210314 02:33:11.058" starttime="20210314 02:33:07.161"/>
</kw>
<msg timestamp="20210314 02:33:11.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:11.058" starttime="20210314 02:33:07.161"/>
</kw>
<status status="PASS" endtime="20210314 02:33:11.058" starttime="20210314 02:33:07.161"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:11.062" level="INFO">Running command 'ozone sh bucket link 83205-source/readable-bucket 83205-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:14.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:14.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:14.751" starttime="20210314 02:33:11.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:14.752" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:14.752" starttime="20210314 02:33:14.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:14.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:14.753" starttime="20210314 02:33:14.752"/>
</kw>
<status status="PASS" endtime="20210314 02:33:14.753" starttime="20210314 02:33:11.059"/>
</kw>
<msg timestamp="20210314 02:33:14.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:14.753" starttime="20210314 02:33:11.059"/>
</kw>
<status status="PASS" endtime="20210314 02:33:14.753" starttime="20210314 02:33:11.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:14.757" level="INFO">Running command 'ozone sh bucket link 83205-source/unreadable-bucket 83205-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:19.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:19.000" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:19.001" starttime="20210314 02:33:14.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:19.002" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:19.002" starttime="20210314 02:33:19.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:19.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:19.002" starttime="20210314 02:33:19.002"/>
</kw>
<status status="PASS" endtime="20210314 02:33:19.003" starttime="20210314 02:33:14.754"/>
</kw>
<msg timestamp="20210314 02:33:19.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:19.003" starttime="20210314 02:33:14.754"/>
</kw>
<status status="PASS" endtime="20210314 02:33:19.003" starttime="20210314 02:33:14.754"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:19.006" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83205-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:22.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:22.989" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:33:22.989" starttime="20210314 02:33:19.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:22.990" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:33:22.991" starttime="20210314 02:33:22.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:22.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:22.991" starttime="20210314 02:33:22.991"/>
</kw>
<status status="PASS" endtime="20210314 02:33:22.991" starttime="20210314 02:33:19.004"/>
</kw>
<msg timestamp="20210314 02:33:22.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:22.992" starttime="20210314 02:33:19.004"/>
</kw>
<status status="PASS" endtime="20210314 02:33:22.992" starttime="20210314 02:33:19.003"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:23.002" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 83205-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:26.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:26.940" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:33:26.940" starttime="20210314 02:33:22.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:26.941" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:33:26.941" starttime="20210314 02:33:26.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:26.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:26.942" starttime="20210314 02:33:26.942"/>
</kw>
<status status="PASS" endtime="20210314 02:33:26.942" starttime="20210314 02:33:22.993"/>
</kw>
<msg timestamp="20210314 02:33:26.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:26.943" starttime="20210314 02:33:22.993"/>
</kw>
<status status="PASS" endtime="20210314 02:33:26.943" starttime="20210314 02:33:22.992"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:26.947" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 83205-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:30.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:30.615" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:33:30.615" starttime="20210314 02:33:26.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:30.616" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:33:30.616" starttime="20210314 02:33:30.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:30.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:30.617" starttime="20210314 02:33:30.617"/>
</kw>
<status status="PASS" endtime="20210314 02:33:30.618" starttime="20210314 02:33:26.944"/>
</kw>
<msg timestamp="20210314 02:33:30.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:30.618" starttime="20210314 02:33:26.944"/>
</kw>
<status status="PASS" endtime="20210314 02:33:30.618" starttime="20210314 02:33:26.943"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:30.622" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83205-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:34.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:34.217" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:33:34.217" starttime="20210314 02:33:30.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:34.218" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:33:34.219" starttime="20210314 02:33:34.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:34.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:34.219" starttime="20210314 02:33:34.219"/>
</kw>
<status status="PASS" endtime="20210314 02:33:34.219" starttime="20210314 02:33:30.619"/>
</kw>
<msg timestamp="20210314 02:33:34.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:34.220" starttime="20210314 02:33:30.619"/>
</kw>
<status status="PASS" endtime="20210314 02:33:34.220" starttime="20210314 02:33:30.618"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:34.224" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 83205-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:37.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:37.584" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:33:37.584" starttime="20210314 02:33:34.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:37.585" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:33:37.585" starttime="20210314 02:33:37.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:37.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:37.586" starttime="20210314 02:33:37.586"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.586" starttime="20210314 02:33:34.221"/>
</kw>
<msg timestamp="20210314 02:33:37.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:37.587" starttime="20210314 02:33:34.221"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.587" starttime="20210314 02:33:34.220"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.587" starttime="20210314 02:32:53.236"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.587" starttime="20210314 02:32:53.236"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.587" starttime="20210314 02:32:45.443"/>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:37.594" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:37.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:37.597" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:33:37.597" starttime="20210314 02:33:37.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:37.598" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:33:37.598" starttime="20210314 02:33:37.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:37.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:37.599" starttime="20210314 02:33:37.598"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.599" starttime="20210314 02:33:37.591"/>
</kw>
<msg timestamp="20210314 02:33:37.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:37.599" starttime="20210314 02:33:37.591"/>
</kw>
<msg timestamp="20210314 02:33:37.599" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:33:37.599" starttime="20210314 02:33:37.590"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:33:37.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:33:37.601" starttime="20210314 02:33:37.600"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:37.605" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:37.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:37.617" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:37.617" starttime="20210314 02:33:37.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:37.618" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:37.618" starttime="20210314 02:33:37.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:37.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:37.619" starttime="20210314 02:33:37.618"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.619" starttime="20210314 02:33:37.602"/>
</kw>
<msg timestamp="20210314 02:33:37.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:37.620" starttime="20210314 02:33:37.602"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.620" starttime="20210314 02:33:37.602"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.620" starttime="20210314 02:33:37.601"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.620" starttime="20210314 02:33:37.589"/>
</kw>
<status status="PASS" endtime="20210314 02:33:37.620" starttime="20210314 02:33:37.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:37.624" level="INFO">Running command 'ozone sh bucket link 83205-source/no-such-bucket 83205-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:41.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:41.275" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:41.275" starttime="20210314 02:33:37.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:41.277" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:41.277" starttime="20210314 02:33:41.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:41.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:41.278" starttime="20210314 02:33:41.277"/>
</kw>
<status status="PASS" endtime="20210314 02:33:41.278" starttime="20210314 02:33:37.621"/>
</kw>
<msg timestamp="20210314 02:33:41.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:41.278" starttime="20210314 02:33:37.621"/>
</kw>
<status status="PASS" endtime="20210314 02:33:41.278" starttime="20210314 02:33:37.620"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:41.281" level="INFO">Running command 'ozone sh key list 83205-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:44.964" level="INFO">${rc} = 255</msg>
<msg timestamp="20210314 02:33:44.964" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210314 02:33:44.964" starttime="20210314 02:33:41.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:44.965" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210314 02:33:44.966" starttime="20210314 02:33:44.965"/>
</kw>
<msg timestamp="20210314 02:33:44.966" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210314 02:33:44.966" starttime="20210314 02:33:41.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:33:44.967" starttime="20210314 02:33:44.966"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:33:44.967" starttime="20210314 02:33:37.588"/>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:44.973" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:44.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:44.977" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:33:44.977" starttime="20210314 02:33:44.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:44.978" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:33:44.978" starttime="20210314 02:33:44.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:44.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:44.978" starttime="20210314 02:33:44.978"/>
</kw>
<status status="PASS" endtime="20210314 02:33:44.979" starttime="20210314 02:33:44.970"/>
</kw>
<msg timestamp="20210314 02:33:44.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:44.979" starttime="20210314 02:33:44.970"/>
</kw>
<msg timestamp="20210314 02:33:44.979" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:33:44.979" starttime="20210314 02:33:44.970"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:33:44.980" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:33:44.980" starttime="20210314 02:33:44.979"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:44.984" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:44.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:44.992" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:44.992" starttime="20210314 02:33:44.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:44.993" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:44.993" starttime="20210314 02:33:44.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:44.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:44.994" starttime="20210314 02:33:44.993"/>
</kw>
<status status="PASS" endtime="20210314 02:33:44.994" starttime="20210314 02:33:44.981"/>
</kw>
<msg timestamp="20210314 02:33:44.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:44.994" starttime="20210314 02:33:44.981"/>
</kw>
<status status="PASS" endtime="20210314 02:33:44.995" starttime="20210314 02:33:44.981"/>
</kw>
<status status="PASS" endtime="20210314 02:33:44.995" starttime="20210314 02:33:44.980"/>
</kw>
<status status="PASS" endtime="20210314 02:33:44.995" starttime="20210314 02:33:44.969"/>
</kw>
<status status="PASS" endtime="20210314 02:33:44.995" starttime="20210314 02:33:44.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:44.999" level="INFO">Running command 'ozone sh bucket link 83205-source/bucket1 83205-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:48.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:48.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:48.750" starttime="20210314 02:33:44.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:48.752" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:48.752" starttime="20210314 02:33:48.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:48.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:48.753" starttime="20210314 02:33:48.752"/>
</kw>
<status status="PASS" endtime="20210314 02:33:48.753" starttime="20210314 02:33:44.996"/>
</kw>
<msg timestamp="20210314 02:33:48.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:48.753" starttime="20210314 02:33:44.996"/>
</kw>
<status status="PASS" endtime="20210314 02:33:48.754" starttime="20210314 02:33:44.995"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:48.757" level="INFO">Running command 'ozone sh bucket create 83205-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:52.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:52.896" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:52.896" starttime="20210314 02:33:48.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:52.897" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:52.897" starttime="20210314 02:33:52.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:52.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:52.898" starttime="20210314 02:33:52.897"/>
</kw>
<status status="PASS" endtime="20210314 02:33:52.898" starttime="20210314 02:33:48.755"/>
</kw>
<msg timestamp="20210314 02:33:52.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:52.898" starttime="20210314 02:33:48.754"/>
</kw>
<status status="PASS" endtime="20210314 02:33:52.898" starttime="20210314 02:33:48.754"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:52.902" level="INFO">Running command 'ozone sh key put 83205-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:33:59.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:33:59.380" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:33:59.380" starttime="20210314 02:33:52.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:33:59.381" level="INFO"/>
<status status="PASS" endtime="20210314 02:33:59.381" starttime="20210314 02:33:59.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:33:59.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:33:59.382" starttime="20210314 02:33:59.381"/>
</kw>
<status status="PASS" endtime="20210314 02:33:59.382" starttime="20210314 02:33:52.899"/>
</kw>
<msg timestamp="20210314 02:33:59.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:33:59.382" starttime="20210314 02:33:52.899"/>
</kw>
<status status="PASS" endtime="20210314 02:33:59.383" starttime="20210314 02:33:52.899"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210314 02:33:59.385" level="INFO">${postfix} = 88335</msg>
<status status="PASS" endtime="20210314 02:33:59.385" starttime="20210314 02:33:59.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210314 02:33:59.385" level="INFO">${tmpfile} = /tmp/tempkey-88335</msg>
<status status="PASS" endtime="20210314 02:33:59.385" starttime="20210314 02:33:59.385"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:33:59.389" level="INFO">Running command 'ozone sh key get 83205-target/link1/key1 /tmp/tempkey-88335 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:05.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:05.378" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:05.378" starttime="20210314 02:33:59.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:05.379" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:05.379" starttime="20210314 02:34:05.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:05.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:05.380" starttime="20210314 02:34:05.379"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.381" starttime="20210314 02:33:59.386"/>
</kw>
<msg timestamp="20210314 02:34:05.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:05.381" starttime="20210314 02:33:59.386"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.381" starttime="20210314 02:33:59.385"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210314 02:34:05.384" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-88335 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:05.387" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210314 02:34:05.387" starttime="20210314 02:34:05.381"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:05.392" level="INFO">Running command 'rm -f /tmp/tempkey-88335 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:05.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:05.395" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:05.395" starttime="20210314 02:34:05.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:05.396" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:05.396" starttime="20210314 02:34:05.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:05.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:05.396" starttime="20210314 02:34:05.396"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.397" starttime="20210314 02:34:05.389"/>
</kw>
<msg timestamp="20210314 02:34:05.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:05.397" starttime="20210314 02:34:05.389"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.397" starttime="20210314 02:34:05.388"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210314 02:34:05.398" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210314 02:34:05.398" starttime="20210314 02:34:05.397"/>
</kw>
<msg timestamp="20210314 02:34:05.398" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210314 02:34:05.398" starttime="20210314 02:33:59.383"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" endtime="20210314 02:34:05.399" starttime="20210314 02:34:05.398"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.399" starttime="20210314 02:33:59.383"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:34:05.399" starttime="20210314 02:33:44.967"/>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:05.405" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:05.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:05.407" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:34:05.407" starttime="20210314 02:34:05.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:05.408" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:34:05.408" starttime="20210314 02:34:05.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:05.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:05.409" starttime="20210314 02:34:05.409"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.409" starttime="20210314 02:34:05.402"/>
</kw>
<msg timestamp="20210314 02:34:05.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:05.410" starttime="20210314 02:34:05.402"/>
</kw>
<msg timestamp="20210314 02:34:05.410" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:34:05.410" starttime="20210314 02:34:05.401"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:34:05.411" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:34:05.411" starttime="20210314 02:34:05.410"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:05.415" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:05.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:05.422" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:05.422" starttime="20210314 02:34:05.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:05.423" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:05.423" starttime="20210314 02:34:05.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:05.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:05.424" starttime="20210314 02:34:05.424"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.424" starttime="20210314 02:34:05.412"/>
</kw>
<msg timestamp="20210314 02:34:05.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:05.425" starttime="20210314 02:34:05.412"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.425" starttime="20210314 02:34:05.411"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.425" starttime="20210314 02:34:05.411"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.425" starttime="20210314 02:34:05.401"/>
</kw>
<status status="PASS" endtime="20210314 02:34:05.425" starttime="20210314 02:34:05.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:05.429" level="INFO">Running command 'ozone sh key put 83205-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:11.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:11.634" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:11.634" starttime="20210314 02:34:05.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:11.636" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:11.636" starttime="20210314 02:34:11.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:11.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:11.636" starttime="20210314 02:34:11.636"/>
</kw>
<status status="PASS" endtime="20210314 02:34:11.637" starttime="20210314 02:34:05.426"/>
</kw>
<msg timestamp="20210314 02:34:11.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:11.637" starttime="20210314 02:34:05.426"/>
</kw>
<status status="PASS" endtime="20210314 02:34:11.637" starttime="20210314 02:34:05.425"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210314 02:34:11.639" level="INFO">${postfix} = 59515</msg>
<status status="PASS" endtime="20210314 02:34:11.639" starttime="20210314 02:34:11.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210314 02:34:11.639" level="INFO">${tmpfile} = /tmp/tempkey-59515</msg>
<status status="PASS" endtime="20210314 02:34:11.639" starttime="20210314 02:34:11.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:11.643" level="INFO">Running command 'ozone sh key get 83205-source/bucket1/key2 /tmp/tempkey-59515 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:17.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:17.692" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:17.693" starttime="20210314 02:34:11.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:17.694" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:17.694" starttime="20210314 02:34:17.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:17.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:17.695" starttime="20210314 02:34:17.694"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.696" starttime="20210314 02:34:11.640"/>
</kw>
<msg timestamp="20210314 02:34:17.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:17.696" starttime="20210314 02:34:11.640"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.696" starttime="20210314 02:34:11.640"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210314 02:34:17.699" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-59515 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:17.702" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210314 02:34:17.702" starttime="20210314 02:34:17.697"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:17.707" level="INFO">Running command 'rm -f /tmp/tempkey-59515 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:17.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:17.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:17.710" starttime="20210314 02:34:17.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:17.711" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:17.711" starttime="20210314 02:34:17.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:17.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:17.712" starttime="20210314 02:34:17.711"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.712" starttime="20210314 02:34:17.704"/>
</kw>
<msg timestamp="20210314 02:34:17.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:17.712" starttime="20210314 02:34:17.704"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.712" starttime="20210314 02:34:17.703"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210314 02:34:17.713" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210314 02:34:17.713" starttime="20210314 02:34:17.713"/>
</kw>
<msg timestamp="20210314 02:34:17.713" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210314 02:34:17.713" starttime="20210314 02:34:11.638"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" endtime="20210314 02:34:17.714" starttime="20210314 02:34:17.714"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.714" starttime="20210314 02:34:11.637"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:34:17.714" starttime="20210314 02:34:05.400"/>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:17.721" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:17.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:17.724" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:34:17.724" starttime="20210314 02:34:17.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:17.725" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:34:17.725" starttime="20210314 02:34:17.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:17.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:17.726" starttime="20210314 02:34:17.725"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.726" starttime="20210314 02:34:17.718"/>
</kw>
<msg timestamp="20210314 02:34:17.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:17.726" starttime="20210314 02:34:17.717"/>
</kw>
<msg timestamp="20210314 02:34:17.726" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:34:17.726" starttime="20210314 02:34:17.717"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:34:17.727" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:34:17.727" starttime="20210314 02:34:17.726"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:17.731" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:17.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:17.739" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:17.739" starttime="20210314 02:34:17.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:17.741" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:17.741" starttime="20210314 02:34:17.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:17.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:17.742" starttime="20210314 02:34:17.741"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.742" starttime="20210314 02:34:17.728"/>
</kw>
<msg timestamp="20210314 02:34:17.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:17.742" starttime="20210314 02:34:17.728"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.742" starttime="20210314 02:34:17.728"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.742" starttime="20210314 02:34:17.727"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.743" starttime="20210314 02:34:17.716"/>
</kw>
<status status="PASS" endtime="20210314 02:34:17.743" starttime="20210314 02:34:17.716"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:17.748" level="INFO">Running command 'ozone sh key list 83205-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:21.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:21.718" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210314 02:34:21.718" starttime="20210314 02:34:17.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:21.719" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210314 02:34:21.720" starttime="20210314 02:34:21.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:21.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:21.720" starttime="20210314 02:34:21.720"/>
</kw>
<status status="PASS" endtime="20210314 02:34:21.721" starttime="20210314 02:34:17.744"/>
</kw>
<msg timestamp="20210314 02:34:21.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:21.721" starttime="20210314 02:34:17.743"/>
</kw>
<msg timestamp="20210314 02:34:21.721" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210314 02:34:21.721" starttime="20210314 02:34:17.743"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:21.725" level="INFO">Running command 'ozone sh key list 83205-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:25.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:25.755" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210314 02:34:25.755" starttime="20210314 02:34:21.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:25.757" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210314 02:34:25.757" starttime="20210314 02:34:25.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:25.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:25.758" starttime="20210314 02:34:25.757"/>
</kw>
<status status="PASS" endtime="20210314 02:34:25.758" starttime="20210314 02:34:21.722"/>
</kw>
<msg timestamp="20210314 02:34:25.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:25.758" starttime="20210314 02:34:21.722"/>
</kw>
<msg timestamp="20210314 02:34:25.758" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210314 02:34:25.758" starttime="20210314 02:34:21.721"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210314 02:34:25.759" starttime="20210314 02:34:25.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:34:25.760" starttime="20210314 02:34:25.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:34:25.760" starttime="20210314 02:34:25.760"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:34:25.760" starttime="20210314 02:34:17.715"/>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:25.768" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:25.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:25.770" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:34:25.771" starttime="20210314 02:34:25.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:25.772" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:34:25.772" starttime="20210314 02:34:25.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:25.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:25.772" starttime="20210314 02:34:25.772"/>
</kw>
<status status="PASS" endtime="20210314 02:34:25.773" starttime="20210314 02:34:25.765"/>
</kw>
<msg timestamp="20210314 02:34:25.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:25.773" starttime="20210314 02:34:25.764"/>
</kw>
<msg timestamp="20210314 02:34:25.773" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:34:25.773" starttime="20210314 02:34:25.764"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:34:25.774" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:34:25.774" starttime="20210314 02:34:25.773"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:25.779" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:25.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:25.786" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:25.786" starttime="20210314 02:34:25.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:25.787" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:25.787" starttime="20210314 02:34:25.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:25.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:25.788" starttime="20210314 02:34:25.787"/>
</kw>
<status status="PASS" endtime="20210314 02:34:25.788" starttime="20210314 02:34:25.775"/>
</kw>
<msg timestamp="20210314 02:34:25.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:25.788" starttime="20210314 02:34:25.775"/>
</kw>
<status status="PASS" endtime="20210314 02:34:25.789" starttime="20210314 02:34:25.774"/>
</kw>
<status status="PASS" endtime="20210314 02:34:25.789" starttime="20210314 02:34:25.774"/>
</kw>
<status status="PASS" endtime="20210314 02:34:25.789" starttime="20210314 02:34:25.763"/>
</kw>
<status status="PASS" endtime="20210314 02:34:25.789" starttime="20210314 02:34:25.763"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:25.793" level="INFO">Running command 'ozone sh key delete 83205-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:29.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:29.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:29.674" starttime="20210314 02:34:25.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:29.675" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:29.675" starttime="20210314 02:34:29.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:29.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:29.676" starttime="20210314 02:34:29.675"/>
</kw>
<status status="PASS" endtime="20210314 02:34:29.676" starttime="20210314 02:34:25.790"/>
</kw>
<msg timestamp="20210314 02:34:29.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:29.676" starttime="20210314 02:34:25.790"/>
</kw>
<status status="PASS" endtime="20210314 02:34:29.677" starttime="20210314 02:34:25.789"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:29.693" level="INFO">Running command 'ozone sh key list 83205-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:33.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:33.990" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210314 02:34:33.990" starttime="20210314 02:34:29.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:33.991" level="INFO">key1</msg>
<status status="PASS" endtime="20210314 02:34:33.991" starttime="20210314 02:34:33.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:33.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:33.992" starttime="20210314 02:34:33.991"/>
</kw>
<status status="PASS" endtime="20210314 02:34:33.992" starttime="20210314 02:34:29.685"/>
</kw>
<msg timestamp="20210314 02:34:33.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:33.992" starttime="20210314 02:34:29.684"/>
</kw>
<msg timestamp="20210314 02:34:33.992" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210314 02:34:33.992" starttime="20210314 02:34:29.677"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:34:33.993" starttime="20210314 02:34:33.992"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:34:33.993" starttime="20210314 02:34:25.762"/>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:34.000" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:34.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:34.002" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:34:34.003" starttime="20210314 02:34:33.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:34.003" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:34:34.004" starttime="20210314 02:34:34.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:34.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:34.005" starttime="20210314 02:34:34.004"/>
</kw>
<status status="PASS" endtime="20210314 02:34:34.005" starttime="20210314 02:34:33.997"/>
</kw>
<msg timestamp="20210314 02:34:34.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:34.005" starttime="20210314 02:34:33.996"/>
</kw>
<msg timestamp="20210314 02:34:34.005" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:34:34.005" starttime="20210314 02:34:33.996"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:34:34.006" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:34:34.006" starttime="20210314 02:34:34.006"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:34.010" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:34.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:34.018" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:34.018" starttime="20210314 02:34:34.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:34.019" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:34.019" starttime="20210314 02:34:34.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:34.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:34.019" starttime="20210314 02:34:34.019"/>
</kw>
<status status="PASS" endtime="20210314 02:34:34.020" starttime="20210314 02:34:34.007"/>
</kw>
<msg timestamp="20210314 02:34:34.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:34.020" starttime="20210314 02:34:34.007"/>
</kw>
<status status="PASS" endtime="20210314 02:34:34.020" starttime="20210314 02:34:34.007"/>
</kw>
<status status="PASS" endtime="20210314 02:34:34.020" starttime="20210314 02:34:34.006"/>
</kw>
<status status="PASS" endtime="20210314 02:34:34.020" starttime="20210314 02:34:33.996"/>
</kw>
<status status="PASS" endtime="20210314 02:34:34.020" starttime="20210314 02:34:33.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:34.024" level="INFO">Running command 'ozone sh bucket list 83205-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:37.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:37.976" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210314 02:34:37.977" starttime="20210314 02:34:34.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:37.978" level="INFO">{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:33:41.177Z",
  "modificationTime" : "2021-03-14T02:33:41.177Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:33:18.881Z",
  "modificationTime" : "2021-03-14T02:33:37.389Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:33:48.607Z",
  "modificationTime" : "2021-03-14T02:33:48.607Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:33:10.835Z",
  "modificationTime" : "2021-03-14T02:33:34.094Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:33:14.537Z",
  "modificationTime" : "2021-03-14T02:33:14.537Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210314 02:34:37.978" starttime="20210314 02:34:37.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:37.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:37.979" starttime="20210314 02:34:37.978"/>
</kw>
<status status="PASS" endtime="20210314 02:34:37.979" starttime="20210314 02:34:34.022"/>
</kw>
<msg timestamp="20210314 02:34:37.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:37.979" starttime="20210314 02:34:34.021"/>
</kw>
<msg timestamp="20210314 02:34:37.979" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210314 02:34:37.979" starttime="20210314 02:34:34.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:34:37.980" starttime="20210314 02:34:37.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:34:37.980" starttime="20210314 02:34:37.980"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:34:37.981" starttime="20210314 02:34:33.994"/>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:37.987" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:37.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:37.990" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:34:37.990" starttime="20210314 02:34:37.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:37.991" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:34:37.991" starttime="20210314 02:34:37.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:37.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:37.992" starttime="20210314 02:34:37.992"/>
</kw>
<status status="PASS" endtime="20210314 02:34:37.992" starttime="20210314 02:34:37.984"/>
</kw>
<msg timestamp="20210314 02:34:37.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:37.992" starttime="20210314 02:34:37.984"/>
</kw>
<msg timestamp="20210314 02:34:37.993" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:34:37.993" starttime="20210314 02:34:37.983"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:34:37.993" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:34:37.994" starttime="20210314 02:34:37.993"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:37.997" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:38.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:38.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:38.005" starttime="20210314 02:34:37.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:38.006" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:38.006" starttime="20210314 02:34:38.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:38.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:38.007" starttime="20210314 02:34:38.006"/>
</kw>
<status status="PASS" endtime="20210314 02:34:38.007" starttime="20210314 02:34:37.995"/>
</kw>
<msg timestamp="20210314 02:34:38.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:38.007" starttime="20210314 02:34:37.995"/>
</kw>
<status status="PASS" endtime="20210314 02:34:38.008" starttime="20210314 02:34:37.994"/>
</kw>
<status status="PASS" endtime="20210314 02:34:38.008" starttime="20210314 02:34:37.994"/>
</kw>
<status status="PASS" endtime="20210314 02:34:38.008" starttime="20210314 02:34:37.983"/>
</kw>
<status status="PASS" endtime="20210314 02:34:38.008" starttime="20210314 02:34:37.982"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:38.012" level="INFO">Running command 'ozone sh bucket info 83205-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:41.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:41.895" level="INFO">${output} = 83205-source bucket1</msg>
<status status="PASS" endtime="20210314 02:34:41.895" starttime="20210314 02:34:38.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:41.897" level="INFO">83205-source bucket1</msg>
<status status="PASS" endtime="20210314 02:34:41.897" starttime="20210314 02:34:41.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:41.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:41.898" starttime="20210314 02:34:41.897"/>
</kw>
<status status="PASS" endtime="20210314 02:34:41.898" starttime="20210314 02:34:38.009"/>
</kw>
<msg timestamp="20210314 02:34:41.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:41.898" starttime="20210314 02:34:38.009"/>
</kw>
<msg timestamp="20210314 02:34:41.899" level="INFO">${result} = 83205-source bucket1</msg>
<status status="PASS" endtime="20210314 02:34:41.899" starttime="20210314 02:34:38.008"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210314 02:34:41.899" starttime="20210314 02:34:41.899"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:34:41.900" starttime="20210314 02:34:37.981"/>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:41.907" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:41.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:41.910" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:34:41.910" starttime="20210314 02:34:41.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:41.911" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:34:41.911" starttime="20210314 02:34:41.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:41.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:41.913" starttime="20210314 02:34:41.912"/>
</kw>
<status status="PASS" endtime="20210314 02:34:41.913" starttime="20210314 02:34:41.904"/>
</kw>
<msg timestamp="20210314 02:34:41.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:41.913" starttime="20210314 02:34:41.904"/>
</kw>
<msg timestamp="20210314 02:34:41.914" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:34:41.914" starttime="20210314 02:34:41.903"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:34:41.914" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:34:41.914" starttime="20210314 02:34:41.914"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:41.918" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:41.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:41.928" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:41.929" starttime="20210314 02:34:41.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:41.930" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:41.930" starttime="20210314 02:34:41.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:41.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:41.931" starttime="20210314 02:34:41.930"/>
</kw>
<status status="PASS" endtime="20210314 02:34:41.931" starttime="20210314 02:34:41.916"/>
</kw>
<msg timestamp="20210314 02:34:41.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:41.931" starttime="20210314 02:34:41.915"/>
</kw>
<status status="PASS" endtime="20210314 02:34:41.932" starttime="20210314 02:34:41.915"/>
</kw>
<status status="PASS" endtime="20210314 02:34:41.932" starttime="20210314 02:34:41.914"/>
</kw>
<status status="PASS" endtime="20210314 02:34:41.932" starttime="20210314 02:34:41.903"/>
</kw>
<status status="PASS" endtime="20210314 02:34:41.932" starttime="20210314 02:34:41.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:41.936" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 83205-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:46.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:46.078" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:34:46.078" starttime="20210314 02:34:41.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:46.079" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:34:46.079" starttime="20210314 02:34:46.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:46.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:46.080" starttime="20210314 02:34:46.080"/>
</kw>
<status status="PASS" endtime="20210314 02:34:46.080" starttime="20210314 02:34:41.933"/>
</kw>
<msg timestamp="20210314 02:34:46.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:46.081" starttime="20210314 02:34:41.933"/>
</kw>
<status status="PASS" endtime="20210314 02:34:46.081" starttime="20210314 02:34:41.932"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:46.086" level="INFO">Running command 'ozone sh bucket getacl 83205-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:50.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:50.123" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210314 02:34:50.123" starttime="20210314 02:34:46.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:50.124" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210314 02:34:50.124" starttime="20210314 02:34:50.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:50.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:50.125" starttime="20210314 02:34:50.125"/>
</kw>
<status status="PASS" endtime="20210314 02:34:50.125" starttime="20210314 02:34:46.083"/>
</kw>
<msg timestamp="20210314 02:34:50.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:50.126" starttime="20210314 02:34:46.083"/>
</kw>
<msg timestamp="20210314 02:34:50.126" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210314 02:34:50.126" starttime="20210314 02:34:46.082"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210314 02:34:50.127" starttime="20210314 02:34:50.126"/>
</kw>
<status status="PASS" endtime="20210314 02:34:50.127" starttime="20210314 02:34:46.081"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:50.132" level="INFO">Running command 'ozone sh bucket getacl 83205-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:53.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:53.952" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:34:53.953" starttime="20210314 02:34:50.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:53.954" level="INFO"/>
<status status="PASS" endtime="20210314 02:34:53.954" starttime="20210314 02:34:53.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:53.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:53.955" starttime="20210314 02:34:53.954"/>
</kw>
<status status="PASS" endtime="20210314 02:34:53.955" starttime="20210314 02:34:50.129"/>
</kw>
<msg timestamp="20210314 02:34:53.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:53.955" starttime="20210314 02:34:50.129"/>
</kw>
<msg timestamp="20210314 02:34:53.955" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210314 02:34:53.955" starttime="20210314 02:34:50.128"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210314 02:34:53.956" starttime="20210314 02:34:53.956"/>
</kw>
<status status="PASS" endtime="20210314 02:34:53.956" starttime="20210314 02:34:50.127"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:53.961" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 83205-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:34:57.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:34:57.503" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:34:57.503" starttime="20210314 02:34:53.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:34:57.504" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210314 02:34:57.504" starttime="20210314 02:34:57.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:34:57.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:34:57.505" starttime="20210314 02:34:57.504"/>
</kw>
<status status="PASS" endtime="20210314 02:34:57.505" starttime="20210314 02:34:53.957"/>
</kw>
<msg timestamp="20210314 02:34:57.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:34:57.506" starttime="20210314 02:34:53.957"/>
</kw>
<status status="PASS" endtime="20210314 02:34:57.506" starttime="20210314 02:34:53.956"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:34:57.510" level="INFO">Running command 'ozone sh bucket getacl 83205-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:01.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:01.688" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:01.688" starttime="20210314 02:34:57.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:01.689" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:01.690" starttime="20210314 02:35:01.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:01.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:01.690" starttime="20210314 02:35:01.690"/>
</kw>
<status status="PASS" endtime="20210314 02:35:01.691" starttime="20210314 02:34:57.508"/>
</kw>
<msg timestamp="20210314 02:35:01.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:01.691" starttime="20210314 02:34:57.507"/>
</kw>
<msg timestamp="20210314 02:35:01.691" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210314 02:35:01.691" starttime="20210314 02:34:57.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210314 02:35:01.692" starttime="20210314 02:35:01.691"/>
</kw>
<status status="PASS" endtime="20210314 02:35:01.692" starttime="20210314 02:34:57.506"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:01.697" level="INFO">Running command 'ozone sh bucket getacl 83205-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:05.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:05.777" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210314 02:35:05.777" starttime="20210314 02:35:01.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:05.778" level="INFO">READ</msg>
<status status="PASS" endtime="20210314 02:35:05.779" starttime="20210314 02:35:05.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:05.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:05.779" starttime="20210314 02:35:05.779"/>
</kw>
<status status="PASS" endtime="20210314 02:35:05.780" starttime="20210314 02:35:01.694"/>
</kw>
<msg timestamp="20210314 02:35:05.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:05.780" starttime="20210314 02:35:01.694"/>
</kw>
<msg timestamp="20210314 02:35:05.780" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210314 02:35:05.780" starttime="20210314 02:35:01.693"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210314 02:35:05.781" starttime="20210314 02:35:05.780"/>
</kw>
<status status="PASS" endtime="20210314 02:35:05.781" starttime="20210314 02:35:01.692"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:35:05.782" starttime="20210314 02:34:41.901"/>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:05.789" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:05.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:05.792" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:35:05.792" starttime="20210314 02:35:05.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:05.793" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:35:05.793" starttime="20210314 02:35:05.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:05.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:05.794" starttime="20210314 02:35:05.793"/>
</kw>
<status status="PASS" endtime="20210314 02:35:05.794" starttime="20210314 02:35:05.786"/>
</kw>
<msg timestamp="20210314 02:35:05.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:05.794" starttime="20210314 02:35:05.786"/>
</kw>
<msg timestamp="20210314 02:35:05.794" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:35:05.795" starttime="20210314 02:35:05.785"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:35:05.795" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:35:05.795" starttime="20210314 02:35:05.795"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:05.801" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:05.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:05.852" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:05.852" starttime="20210314 02:35:05.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:05.854" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:05.854" starttime="20210314 02:35:05.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:05.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:05.854" starttime="20210314 02:35:05.854"/>
</kw>
<status status="PASS" endtime="20210314 02:35:05.855" starttime="20210314 02:35:05.797"/>
</kw>
<msg timestamp="20210314 02:35:05.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:05.855" starttime="20210314 02:35:05.797"/>
</kw>
<status status="PASS" endtime="20210314 02:35:05.855" starttime="20210314 02:35:05.796"/>
</kw>
<status status="PASS" endtime="20210314 02:35:05.855" starttime="20210314 02:35:05.795"/>
</kw>
<status status="PASS" endtime="20210314 02:35:05.855" starttime="20210314 02:35:05.785"/>
</kw>
<status status="PASS" endtime="20210314 02:35:05.855" starttime="20210314 02:35:05.784"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:05.860" level="INFO">Running command 'ozone sh bucket link 83205-source/bucket2 83205-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:09.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:09.776" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:09.776" starttime="20210314 02:35:05.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:09.778" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:09.778" starttime="20210314 02:35:09.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:09.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:09.779" starttime="20210314 02:35:09.778"/>
</kw>
<status status="PASS" endtime="20210314 02:35:09.779" starttime="20210314 02:35:05.857"/>
</kw>
<msg timestamp="20210314 02:35:09.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:09.779" starttime="20210314 02:35:05.856"/>
</kw>
<status status="PASS" endtime="20210314 02:35:09.779" starttime="20210314 02:35:05.856"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:09.782" level="INFO">Running command 'ozone sh bucket create 83205-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:13.481" level="INFO">${rc} = 255</msg>
<msg timestamp="20210314 02:35:13.481" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210314 02:35:13.481" starttime="20210314 02:35:09.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:13.483" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210314 02:35:13.483" starttime="20210314 02:35:13.482"/>
</kw>
<msg timestamp="20210314 02:35:13.483" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210314 02:35:13.483" starttime="20210314 02:35:09.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:35:13.484" starttime="20210314 02:35:13.483"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:13.489" level="INFO">Running command 'ozone sh bucket create 83205-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:16.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:16.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:16.999" starttime="20210314 02:35:13.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:17.001" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:17.001" starttime="20210314 02:35:17.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:17.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:17.002" starttime="20210314 02:35:17.001"/>
</kw>
<status status="PASS" endtime="20210314 02:35:17.002" starttime="20210314 02:35:13.485"/>
</kw>
<msg timestamp="20210314 02:35:17.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:17.003" starttime="20210314 02:35:13.484"/>
</kw>
<status status="PASS" endtime="20210314 02:35:17.003" starttime="20210314 02:35:13.484"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:17.006" level="INFO">Running command 'ozone sh bucket link 83205-source/bucket1 83205-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:20.664" level="INFO">${rc} = 255</msg>
<msg timestamp="20210314 02:35:20.664" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210314 02:35:20.664" starttime="20210314 02:35:17.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:20.665" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210314 02:35:20.665" starttime="20210314 02:35:20.664"/>
</kw>
<msg timestamp="20210314 02:35:20.666" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210314 02:35:20.666" starttime="20210314 02:35:17.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:35:20.666" starttime="20210314 02:35:20.666"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:35:20.667" starttime="20210314 02:35:05.783"/>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:20.674" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:20.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:20.677" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:35:20.677" starttime="20210314 02:35:20.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:20.678" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:35:20.678" starttime="20210314 02:35:20.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:20.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:20.679" starttime="20210314 02:35:20.678"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.679" starttime="20210314 02:35:20.671"/>
</kw>
<msg timestamp="20210314 02:35:20.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:20.680" starttime="20210314 02:35:20.671"/>
</kw>
<msg timestamp="20210314 02:35:20.680" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:35:20.680" starttime="20210314 02:35:20.670"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:35:20.681" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:35:20.681" starttime="20210314 02:35:20.680"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:20.685" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:20.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:20.693" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:20.693" starttime="20210314 02:35:20.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:20.694" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:20.695" starttime="20210314 02:35:20.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:20.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:20.695" starttime="20210314 02:35:20.695"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.695" starttime="20210314 02:35:20.683"/>
</kw>
<msg timestamp="20210314 02:35:20.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:20.696" starttime="20210314 02:35:20.682"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.696" starttime="20210314 02:35:20.681"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.696" starttime="20210314 02:35:20.681"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.696" starttime="20210314 02:35:20.670"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.696" starttime="20210314 02:35:20.669"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:20.701" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:20.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:20.706" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:20.706" starttime="20210314 02:35:20.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:20.707" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:20.707" starttime="20210314 02:35:20.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:20.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:20.707" starttime="20210314 02:35:20.707"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.708" starttime="20210314 02:35:20.698"/>
</kw>
<msg timestamp="20210314 02:35:20.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:20.708" starttime="20210314 02:35:20.698"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.708" starttime="20210314 02:35:20.697"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:20.712" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:20.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:20.715" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:35:20.715" starttime="20210314 02:35:20.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:20.716" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:35:20.717" starttime="20210314 02:35:20.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:20.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:20.717" starttime="20210314 02:35:20.717"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.717" starttime="20210314 02:35:20.710"/>
</kw>
<msg timestamp="20210314 02:35:20.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:20.718" starttime="20210314 02:35:20.709"/>
</kw>
<msg timestamp="20210314 02:35:20.718" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:35:20.718" starttime="20210314 02:35:20.709"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:35:20.719" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:35:20.719" starttime="20210314 02:35:20.718"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:20.722" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:20.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:20.730" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:20.730" starttime="20210314 02:35:20.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:20.731" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:20.731" starttime="20210314 02:35:20.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:20.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:20.731" starttime="20210314 02:35:20.731"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.732" starttime="20210314 02:35:20.720"/>
</kw>
<msg timestamp="20210314 02:35:20.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:20.732" starttime="20210314 02:35:20.720"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.732" starttime="20210314 02:35:20.719"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.732" starttime="20210314 02:35:20.719"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.733" starttime="20210314 02:35:20.709"/>
</kw>
<status status="PASS" endtime="20210314 02:35:20.733" starttime="20210314 02:35:20.708"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:20.735" level="INFO">Running command 'ozone sh key list 83205-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:24.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:24.570" level="INFO">${output} = {
  "volumeName" : "83205-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-14T02:33:00.598Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210314 02:35:24.570" starttime="20210314 02:35:20.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:24.571" level="INFO">{
  "volumeName" : "83205-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-14T02:33:00.598Z",
  "modificationTime" : "2021-03-14T02:33:02.920Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210314 02:35:24.571" starttime="20210314 02:35:24.570"/>
</kw>
<msg timestamp="20210314 02:35:24.571" level="INFO">${result} = {
  "volumeName" : "83205-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-14T02:33:00.598Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210314 02:35:24.571" starttime="20210314 02:35:20.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:35:24.572" starttime="20210314 02:35:24.572"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.572" starttime="20210314 02:35:20.697"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.572" starttime="20210314 02:35:20.697"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:35:24.572" starttime="20210314 02:35:20.668"/>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:24.579" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:24.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:24.581" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:35:24.581" starttime="20210314 02:35:24.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:24.582" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:35:24.583" starttime="20210314 02:35:24.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:24.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:24.583" starttime="20210314 02:35:24.583"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.583" starttime="20210314 02:35:24.576"/>
</kw>
<msg timestamp="20210314 02:35:24.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:24.584" starttime="20210314 02:35:24.576"/>
</kw>
<msg timestamp="20210314 02:35:24.584" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:35:24.584" starttime="20210314 02:35:24.575"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:35:24.585" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:35:24.585" starttime="20210314 02:35:24.584"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:24.589" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:24.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:24.598" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:24.598" starttime="20210314 02:35:24.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:24.599" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:24.599" starttime="20210314 02:35:24.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:24.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:24.600" starttime="20210314 02:35:24.599"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.600" starttime="20210314 02:35:24.587"/>
</kw>
<msg timestamp="20210314 02:35:24.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:24.600" starttime="20210314 02:35:24.586"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.601" starttime="20210314 02:35:24.585"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.601" starttime="20210314 02:35:24.585"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.601" starttime="20210314 02:35:24.575"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.601" starttime="20210314 02:35:24.574"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:24.606" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:24.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:24.610" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:24.610" starttime="20210314 02:35:24.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:24.611" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:24.611" starttime="20210314 02:35:24.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:24.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:24.612" starttime="20210314 02:35:24.611"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.612" starttime="20210314 02:35:24.603"/>
</kw>
<msg timestamp="20210314 02:35:24.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:24.612" starttime="20210314 02:35:24.602"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.612" starttime="20210314 02:35:24.602"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:24.617" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:24.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:24.619" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:35:24.619" starttime="20210314 02:35:24.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:24.620" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:35:24.621" starttime="20210314 02:35:24.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:24.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:24.621" starttime="20210314 02:35:24.621"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.621" starttime="20210314 02:35:24.614"/>
</kw>
<msg timestamp="20210314 02:35:24.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:24.622" starttime="20210314 02:35:24.614"/>
</kw>
<msg timestamp="20210314 02:35:24.622" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:35:24.622" starttime="20210314 02:35:24.613"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:35:24.623" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:35:24.623" starttime="20210314 02:35:24.622"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:24.637" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:24.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:24.645" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:24.645" starttime="20210314 02:35:24.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:24.647" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:24.647" starttime="20210314 02:35:24.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:24.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:24.648" starttime="20210314 02:35:24.647"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.648" starttime="20210314 02:35:24.624"/>
</kw>
<msg timestamp="20210314 02:35:24.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:24.648" starttime="20210314 02:35:24.624"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.648" starttime="20210314 02:35:24.623"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.649" starttime="20210314 02:35:24.623"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.649" starttime="20210314 02:35:24.613"/>
</kw>
<status status="PASS" endtime="20210314 02:35:24.649" starttime="20210314 02:35:24.613"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:24.652" level="INFO">Running command 'ozone sh key list 83205-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:28.214" level="INFO">${rc} = 255</msg>
<msg timestamp="20210314 02:35:28.214" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 83205-target unreadable-link null</msg>
<status status="PASS" endtime="20210314 02:35:28.214" starttime="20210314 02:35:24.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:28.215" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 83205-target unreadable-link null</msg>
<status status="PASS" endtime="20210314 02:35:28.215" starttime="20210314 02:35:28.215"/>
</kw>
<msg timestamp="20210314 02:35:28.216" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 83205-target unreadable-link null</msg>
<status status="PASS" endtime="20210314 02:35:28.216" starttime="20210314 02:35:24.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:35:28.216" starttime="20210314 02:35:28.216"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.217" starttime="20210314 02:35:24.602"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.217" starttime="20210314 02:35:24.601"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:35:28.219" starttime="20210314 02:35:24.573"/>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:28.229" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:28.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:28.231" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:35:28.232" starttime="20210314 02:35:28.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:28.233" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:35:28.233" starttime="20210314 02:35:28.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:28.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:28.233" starttime="20210314 02:35:28.233"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.234" starttime="20210314 02:35:28.226"/>
</kw>
<msg timestamp="20210314 02:35:28.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:28.234" starttime="20210314 02:35:28.224"/>
</kw>
<msg timestamp="20210314 02:35:28.234" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:35:28.234" starttime="20210314 02:35:28.224"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:35:28.235" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:35:28.235" starttime="20210314 02:35:28.234"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:28.240" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:28.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:28.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:28.249" starttime="20210314 02:35:28.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:28.251" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:28.251" starttime="20210314 02:35:28.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:28.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:28.252" starttime="20210314 02:35:28.251"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.252" starttime="20210314 02:35:28.237"/>
</kw>
<msg timestamp="20210314 02:35:28.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:28.253" starttime="20210314 02:35:28.236"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.253" starttime="20210314 02:35:28.235"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.253" starttime="20210314 02:35:28.235"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.253" starttime="20210314 02:35:28.224"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.253" starttime="20210314 02:35:28.223"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:28.258" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:28.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:28.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:28.262" starttime="20210314 02:35:28.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:28.263" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:28.263" starttime="20210314 02:35:28.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:28.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:28.265" starttime="20210314 02:35:28.264"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.265" starttime="20210314 02:35:28.255"/>
</kw>
<msg timestamp="20210314 02:35:28.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:28.265" starttime="20210314 02:35:28.255"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.265" starttime="20210314 02:35:28.254"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:28.270" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:28.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:28.273" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:35:28.273" starttime="20210314 02:35:28.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:28.274" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:35:28.274" starttime="20210314 02:35:28.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:28.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:28.275" starttime="20210314 02:35:28.274"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.275" starttime="20210314 02:35:28.267"/>
</kw>
<msg timestamp="20210314 02:35:28.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:28.276" starttime="20210314 02:35:28.267"/>
</kw>
<msg timestamp="20210314 02:35:28.276" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:35:28.276" starttime="20210314 02:35:28.266"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:35:28.277" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:35:28.277" starttime="20210314 02:35:28.276"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:28.282" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:28.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:28.290" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:28.290" starttime="20210314 02:35:28.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:28.291" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:28.291" starttime="20210314 02:35:28.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:28.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:28.292" starttime="20210314 02:35:28.291"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.292" starttime="20210314 02:35:28.278"/>
</kw>
<msg timestamp="20210314 02:35:28.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:28.292" starttime="20210314 02:35:28.278"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.292" starttime="20210314 02:35:28.277"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.292" starttime="20210314 02:35:28.277"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.293" starttime="20210314 02:35:28.266"/>
</kw>
<status status="PASS" endtime="20210314 02:35:28.293" starttime="20210314 02:35:28.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:28.301" level="INFO">Running command 'ozone sh bucket info 83205-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:32.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:32.430" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210314 02:35:32.430" starttime="20210314 02:35:28.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:32.432" level="INFO">{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:33:18.881Z",
  "modificationTime" : "2021-03-14T02:33:37.389Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210314 02:35:32.432" starttime="20210314 02:35:32.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:32.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:32.432" starttime="20210314 02:35:32.432"/>
</kw>
<status status="PASS" endtime="20210314 02:35:32.433" starttime="20210314 02:35:28.294"/>
</kw>
<msg timestamp="20210314 02:35:32.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:32.433" starttime="20210314 02:35:28.293"/>
</kw>
<msg timestamp="20210314 02:35:32.433" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210314 02:35:32.433" starttime="20210314 02:35:28.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:35:32.434" starttime="20210314 02:35:32.433"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:35:32.434" starttime="20210314 02:35:32.434"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:32.437" level="INFO">Running command 'ozone sh key list 83205-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:36.224" level="INFO">${rc} = 255</msg>
<msg timestamp="20210314 02:35:36.224" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 83205-source unreadable-bucket </msg>
<status status="PASS" endtime="20210314 02:35:36.225" starttime="20210314 02:35:32.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:36.226" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 83205-source unreadable-bucket </msg>
<status status="PASS" endtime="20210314 02:35:36.226" starttime="20210314 02:35:36.225"/>
</kw>
<msg timestamp="20210314 02:35:36.226" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 83205-source unreadable-bucket </msg>
<status status="PASS" endtime="20210314 02:35:36.226" starttime="20210314 02:35:32.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:35:36.227" starttime="20210314 02:35:36.226"/>
</kw>
<status status="PASS" endtime="20210314 02:35:36.227" starttime="20210314 02:35:28.254"/>
</kw>
<status status="PASS" endtime="20210314 02:35:36.227" starttime="20210314 02:35:28.253"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:35:36.227" starttime="20210314 02:35:28.220"/>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:36.234" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:36.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:36.237" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:35:36.237" starttime="20210314 02:35:36.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:36.238" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:35:36.238" starttime="20210314 02:35:36.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:36.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:36.239" starttime="20210314 02:35:36.239"/>
</kw>
<status status="PASS" endtime="20210314 02:35:36.239" starttime="20210314 02:35:36.231"/>
</kw>
<msg timestamp="20210314 02:35:36.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:36.240" starttime="20210314 02:35:36.231"/>
</kw>
<msg timestamp="20210314 02:35:36.240" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:35:36.240" starttime="20210314 02:35:36.230"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:35:36.241" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:35:36.241" starttime="20210314 02:35:36.240"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:36.245" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:36.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:36.253" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:36.253" starttime="20210314 02:35:36.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:36.254" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:36.255" starttime="20210314 02:35:36.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:36.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:36.255" starttime="20210314 02:35:36.255"/>
</kw>
<status status="PASS" endtime="20210314 02:35:36.255" starttime="20210314 02:35:36.243"/>
</kw>
<msg timestamp="20210314 02:35:36.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:36.256" starttime="20210314 02:35:36.242"/>
</kw>
<status status="PASS" endtime="20210314 02:35:36.256" starttime="20210314 02:35:36.241"/>
</kw>
<status status="PASS" endtime="20210314 02:35:36.256" starttime="20210314 02:35:36.241"/>
</kw>
<status status="PASS" endtime="20210314 02:35:36.256" starttime="20210314 02:35:36.230"/>
</kw>
<status status="PASS" endtime="20210314 02:35:36.256" starttime="20210314 02:35:36.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:36.260" level="INFO">Running command 'ozone sh bucket link 83205-target/loop1 83205-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:39.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:39.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:39.970" starttime="20210314 02:35:36.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:39.971" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:39.971" starttime="20210314 02:35:39.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:39.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:39.972" starttime="20210314 02:35:39.971"/>
</kw>
<status status="PASS" endtime="20210314 02:35:39.972" starttime="20210314 02:35:36.257"/>
</kw>
<msg timestamp="20210314 02:35:39.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:39.972" starttime="20210314 02:35:36.257"/>
</kw>
<status status="PASS" endtime="20210314 02:35:39.973" starttime="20210314 02:35:36.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:39.976" level="INFO">Running command 'ozone sh bucket link 83205-target/loop2 83205-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:43.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:43.461" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:43.462" starttime="20210314 02:35:39.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:43.463" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:43.463" starttime="20210314 02:35:43.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:43.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:43.464" starttime="20210314 02:35:43.463"/>
</kw>
<status status="PASS" endtime="20210314 02:35:43.464" starttime="20210314 02:35:39.974"/>
</kw>
<msg timestamp="20210314 02:35:43.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:43.464" starttime="20210314 02:35:39.973"/>
</kw>
<status status="PASS" endtime="20210314 02:35:43.464" starttime="20210314 02:35:39.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:43.468" level="INFO">Running command 'ozone sh bucket link 83205-target/loop3 83205-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:47.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:47.198" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:47.198" starttime="20210314 02:35:43.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:47.199" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:47.199" starttime="20210314 02:35:47.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:47.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:47.200" starttime="20210314 02:35:47.200"/>
</kw>
<status status="PASS" endtime="20210314 02:35:47.201" starttime="20210314 02:35:43.465"/>
</kw>
<msg timestamp="20210314 02:35:47.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:47.201" starttime="20210314 02:35:43.465"/>
</kw>
<status status="PASS" endtime="20210314 02:35:47.201" starttime="20210314 02:35:43.465"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:47.205" level="INFO">Running command 'ozone sh key list 83205-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:50.786" level="INFO">${rc} = 255</msg>
<msg timestamp="20210314 02:35:50.786" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210314 02:35:50.787" starttime="20210314 02:35:47.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:50.789" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210314 02:35:50.789" starttime="20210314 02:35:50.787"/>
</kw>
<msg timestamp="20210314 02:35:50.790" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210314 02:35:50.790" starttime="20210314 02:35:47.201"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:35:50.790" starttime="20210314 02:35:50.790"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:35:50.791" starttime="20210314 02:35:36.228"/>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:50.798" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:50.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:50.801" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:35:50.801" starttime="20210314 02:35:50.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:50.802" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:35:50.802" starttime="20210314 02:35:50.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:50.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:50.803" starttime="20210314 02:35:50.802"/>
</kw>
<status status="PASS" endtime="20210314 02:35:50.803" starttime="20210314 02:35:50.795"/>
</kw>
<msg timestamp="20210314 02:35:50.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:50.804" starttime="20210314 02:35:50.794"/>
</kw>
<msg timestamp="20210314 02:35:50.804" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:35:50.804" starttime="20210314 02:35:50.794"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:35:50.805" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:35:50.805" starttime="20210314 02:35:50.804"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:50.809" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:50.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:50.817" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:50.817" starttime="20210314 02:35:50.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:50.818" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:50.818" starttime="20210314 02:35:50.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:50.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:50.819" starttime="20210314 02:35:50.818"/>
</kw>
<status status="PASS" endtime="20210314 02:35:50.819" starttime="20210314 02:35:50.806"/>
</kw>
<msg timestamp="20210314 02:35:50.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:50.820" starttime="20210314 02:35:50.806"/>
</kw>
<status status="PASS" endtime="20210314 02:35:50.820" starttime="20210314 02:35:50.805"/>
</kw>
<status status="PASS" endtime="20210314 02:35:50.820" starttime="20210314 02:35:50.805"/>
</kw>
<status status="PASS" endtime="20210314 02:35:50.820" starttime="20210314 02:35:50.793"/>
</kw>
<status status="PASS" endtime="20210314 02:35:50.820" starttime="20210314 02:35:50.792"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:50.824" level="INFO">Running command 'ozone sh bucket link 83205-source/bucket1 83205-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:35:54.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:35:54.361" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:35:54.361" starttime="20210314 02:35:50.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:35:54.363" level="INFO"/>
<status status="PASS" endtime="20210314 02:35:54.363" starttime="20210314 02:35:54.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:35:54.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:35:54.364" starttime="20210314 02:35:54.363"/>
</kw>
<status status="PASS" endtime="20210314 02:35:54.364" starttime="20210314 02:35:50.821"/>
</kw>
<msg timestamp="20210314 02:35:54.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:35:54.364" starttime="20210314 02:35:50.821"/>
</kw>
<status status="PASS" endtime="20210314 02:35:54.365" starttime="20210314 02:35:50.820"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:35:54.369" level="INFO">Running command 'ozone sh key put 83205-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:36:00.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:36:00.977" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:36:00.977" starttime="20210314 02:35:54.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:36:00.979" level="INFO"/>
<status status="PASS" endtime="20210314 02:36:00.979" starttime="20210314 02:36:00.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:36:00.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:36:00.979" starttime="20210314 02:36:00.979"/>
</kw>
<status status="PASS" endtime="20210314 02:36:00.980" starttime="20210314 02:35:54.366"/>
</kw>
<msg timestamp="20210314 02:36:00.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:36:00.980" starttime="20210314 02:35:54.365"/>
</kw>
<status status="PASS" endtime="20210314 02:36:00.980" starttime="20210314 02:35:54.365"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210314 02:36:00.982" level="INFO">${postfix} = 75445</msg>
<status status="PASS" endtime="20210314 02:36:00.982" starttime="20210314 02:36:00.981"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210314 02:36:00.983" level="INFO">${tmpfile} = /tmp/tempkey-75445</msg>
<status status="PASS" endtime="20210314 02:36:00.983" starttime="20210314 02:36:00.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:36:00.988" level="INFO">Running command 'ozone sh key get 83205-target/link1/key3 /tmp/tempkey-75445 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:36:07.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:36:07.296" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:36:07.296" starttime="20210314 02:36:00.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:36:07.297" level="INFO"/>
<status status="PASS" endtime="20210314 02:36:07.297" starttime="20210314 02:36:07.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:36:07.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:36:07.298" starttime="20210314 02:36:07.298"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.298" starttime="20210314 02:36:00.984"/>
</kw>
<msg timestamp="20210314 02:36:07.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:36:07.299" starttime="20210314 02:36:00.983"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.299" starttime="20210314 02:36:00.983"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210314 02:36:07.302" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-75445 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:36:07.305" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210314 02:36:07.305" starttime="20210314 02:36:07.299"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:36:07.315" level="INFO">Running command 'rm -f /tmp/tempkey-75445 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:36:07.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:36:07.317" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:36:07.317" starttime="20210314 02:36:07.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:36:07.318" level="INFO"/>
<status status="PASS" endtime="20210314 02:36:07.318" starttime="20210314 02:36:07.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:36:07.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:36:07.320" starttime="20210314 02:36:07.319"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.320" starttime="20210314 02:36:07.308"/>
</kw>
<msg timestamp="20210314 02:36:07.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:36:07.320" starttime="20210314 02:36:07.307"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.320" starttime="20210314 02:36:07.306"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210314 02:36:07.321" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210314 02:36:07.321" starttime="20210314 02:36:07.321"/>
</kw>
<msg timestamp="20210314 02:36:07.321" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210314 02:36:07.321" starttime="20210314 02:36:00.981"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" endtime="20210314 02:36:07.322" starttime="20210314 02:36:07.322"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.322" starttime="20210314 02:36:00.980"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:36:07.322" starttime="20210314 02:35:50.792"/>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:36:07.329" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:36:07.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:36:07.332" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210314 02:36:07.332" starttime="20210314 02:36:07.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:36:07.333" level="INFO">scm</msg>
<status status="PASS" endtime="20210314 02:36:07.333" starttime="20210314 02:36:07.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:36:07.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:36:07.334" starttime="20210314 02:36:07.333"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.334" starttime="20210314 02:36:07.326"/>
</kw>
<msg timestamp="20210314 02:36:07.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:36:07.334" starttime="20210314 02:36:07.326"/>
</kw>
<msg timestamp="20210314 02:36:07.335" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210314 02:36:07.335" starttime="20210314 02:36:07.325"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210314 02:36:07.335" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210314 02:36:07.335" starttime="20210314 02:36:07.335"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:36:07.340" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:36:07.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:36:07.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:36:07.348" starttime="20210314 02:36:07.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:36:07.349" level="INFO"/>
<status status="PASS" endtime="20210314 02:36:07.349" starttime="20210314 02:36:07.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:36:07.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:36:07.350" starttime="20210314 02:36:07.349"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.350" starttime="20210314 02:36:07.337"/>
</kw>
<msg timestamp="20210314 02:36:07.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:36:07.350" starttime="20210314 02:36:07.337"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.350" starttime="20210314 02:36:07.336"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.351" starttime="20210314 02:36:07.336"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.351" starttime="20210314 02:36:07.325"/>
</kw>
<status status="PASS" endtime="20210314 02:36:07.351" starttime="20210314 02:36:07.324"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:36:07.355" level="INFO">Running command 'ozone sh bucket delete 83205-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:36:11.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:36:11.180" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210314 02:36:11.180" starttime="20210314 02:36:07.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:36:11.181" level="INFO"/>
<status status="PASS" endtime="20210314 02:36:11.181" starttime="20210314 02:36:11.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:36:11.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:36:11.182" starttime="20210314 02:36:11.181"/>
</kw>
<status status="PASS" endtime="20210314 02:36:11.183" starttime="20210314 02:36:07.352"/>
</kw>
<msg timestamp="20210314 02:36:11.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:36:11.183" starttime="20210314 02:36:07.352"/>
</kw>
<status status="PASS" endtime="20210314 02:36:11.183" starttime="20210314 02:36:07.351"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:36:11.187" level="INFO">Running command 'ozone sh bucket list 83205-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:36:15.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:36:15.105" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T...</msg>
<status status="PASS" endtime="20210314 02:36:15.105" starttime="20210314 02:36:11.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:36:15.106" level="INFO">{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:35:16.811Z",
  "modificationTime" : "2021-03-14T02:35:16.811Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:33:41.177Z",
  "modificationTime" : "2021-03-14T02:33:41.177Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:33:18.881Z",
  "modificationTime" : "2021-03-14T02:33:37.389Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:35:09.543Z",
  "modificationTime" : "2021-03-14T02:35:09.543Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:35:54.230Z",
  "modificationTime" : "2021-03-14T02:35:54.230Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:35:47.015Z",
  "modificationTime" : "2021-03-14T02:35:47.015Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:35:39.891Z",
  "modificationTime" : "2021-03-14T02:35:39.891Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:35:43.307Z",
  "modificationTime" : "2021-03-14T02:35:43.307Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:33:10.835Z",
  "modificationTime" : "2021-03-14T02:33:34.094Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T02:33:14.537Z",
  "modificationTime" : "2021-03-14T02:33:14.537Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "83205-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210314 02:36:15.107" starttime="20210314 02:36:15.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:36:15.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:36:15.107" starttime="20210314 02:36:15.107"/>
</kw>
<status status="PASS" endtime="20210314 02:36:15.108" starttime="20210314 02:36:11.184"/>
</kw>
<msg timestamp="20210314 02:36:15.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:36:15.108" starttime="20210314 02:36:11.184"/>
</kw>
<msg timestamp="20210314 02:36:15.108" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "83205-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-14T...</msg>
<status status="PASS" endtime="20210314 02:36:15.108" starttime="20210314 02:36:11.183"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:36:15.109" starttime="20210314 02:36:15.108"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210314 02:36:15.113" level="INFO">Running command 'ozone sh key list 83205-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210314 02:36:19.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210314 02:36:19.472" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210314 02:36:19.472" starttime="20210314 02:36:15.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210314 02:36:19.473" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210314 02:36:19.473" starttime="20210314 02:36:19.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210314 02:36:19.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210314 02:36:19.474" starttime="20210314 02:36:19.473"/>
</kw>
<status status="PASS" endtime="20210314 02:36:19.474" starttime="20210314 02:36:15.110"/>
</kw>
<msg timestamp="20210314 02:36:19.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210314 02:36:19.475" starttime="20210314 02:36:15.110"/>
</kw>
<msg timestamp="20210314 02:36:19.475" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210314 02:36:19.475" starttime="20210314 02:36:15.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210314 02:36:19.476" starttime="20210314 02:36:19.475"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210314 02:36:19.476" starttime="20210314 02:36:07.323"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210314 02:36:19.479" starttime="20210314 02:32:45.377"/>
</suite>
<status status="PASS" elapsedtime="245331" endtime="N/A" starttime="N/A"/>
</suite>
<statistics>
<total>
<stat fail="0" skip="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" skip="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" skip="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" skip="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" skip="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" skip="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" skip="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
