<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210325 17:30:06.893" schemaversion="2" generator="Rebot 4.0 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:40:58.886" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:40:58.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:40:58.889" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:40:58.889" starttime="20210325 16:40:58.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:40:58.890" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:40:58.890" starttime="20210325 16:40:58.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:40:58.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:40:58.891" starttime="20210325 16:40:58.890"/>
</kw>
<status status="PASS" endtime="20210325 16:40:58.892" starttime="20210325 16:40:58.882"/>
</kw>
<msg timestamp="20210325 16:40:58.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:40:58.892" starttime="20210325 16:40:58.881"/>
</kw>
<msg timestamp="20210325 16:40:58.892" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:40:58.892" starttime="20210325 16:40:58.881"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:40:58.896" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:40:58.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:40:58.904" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:40:58.904" starttime="20210325 16:40:58.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:40:58.905" level="INFO"/>
<status status="PASS" endtime="20210325 16:40:58.905" starttime="20210325 16:40:58.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:40:58.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:40:58.906" starttime="20210325 16:40:58.906"/>
</kw>
<status status="PASS" endtime="20210325 16:40:58.907" starttime="20210325 16:40:58.894"/>
</kw>
<msg timestamp="20210325 16:40:58.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:40:58.907" starttime="20210325 16:40:58.893"/>
</kw>
<status status="PASS" endtime="20210325 16:40:58.907" starttime="20210325 16:40:58.893"/>
</kw>
<status status="PASS" endtime="20210325 16:40:58.907" starttime="20210325 16:40:58.892"/>
</kw>
<status status="PASS" endtime="20210325 16:40:58.907" starttime="20210325 16:40:58.880"/>
</kw>
<status status="PASS" endtime="20210325 16:40:58.907" starttime="20210325 16:40:58.880"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:40:58.911" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:40:59.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:40:59.054" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210325 16:40:59.054" starttime="20210325 16:40:58.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:40:59.055" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 482

HTTP/1.1 200 OK
Date: Thu, 25 Mar 2021 16:40:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBMqAGB3NoDemZsB+t7Blzdn7SXgYIei0Y6f4WX3yrHsRYL15wpLXDnGPpiC+N7A98mH32wDx2/D/xazUHrWq9KHY=
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1616726459040&amp;s=c54pOLeaiQR0DjwTriaSBHs1ufwF3Y7os+aRn+BU69I="; Path=/; HttpOnly
Last-Modified: Thu, 25 Mar 2021 16:21:30 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210325 16:40:59.055" starttime="20210325 16:40:59.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:40:59.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:40:59.057" starttime="20210325 16:40:59.056"/>
</kw>
<status status="PASS" endtime="20210325 16:40:59.057" starttime="20210325 16:40:58.909"/>
</kw>
<msg timestamp="20210325 16:40:59.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:40:59.057" starttime="20210325 16:40:58.908"/>
</kw>
<msg timestamp="20210325 16:40:59.058" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210325 16:40:59.058" starttime="20210325 16:40:58.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:40:59.058" starttime="20210325 16:40:59.058"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210325 16:40:59.058" starttime="20210325 16:40:58.879"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:40:59.067" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:40:59.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:40:59.071" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:40:59.071" starttime="20210325 16:40:59.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:40:59.072" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:40:59.072" starttime="20210325 16:40:59.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:40:59.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:40:59.073" starttime="20210325 16:40:59.072"/>
</kw>
<status status="PASS" endtime="20210325 16:40:59.073" starttime="20210325 16:40:59.065"/>
</kw>
<msg timestamp="20210325 16:40:59.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:40:59.073" starttime="20210325 16:40:59.064"/>
</kw>
<msg timestamp="20210325 16:40:59.074" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:40:59.074" starttime="20210325 16:40:59.063"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:40:59.075" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:40:59.075" starttime="20210325 16:40:59.074"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:40:59.080" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:40:59.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:40:59.088" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:40:59.088" starttime="20210325 16:40:59.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:40:59.089" level="INFO"/>
<status status="PASS" endtime="20210325 16:40:59.089" starttime="20210325 16:40:59.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:40:59.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:40:59.090" starttime="20210325 16:40:59.090"/>
</kw>
<status status="PASS" endtime="20210325 16:40:59.091" starttime="20210325 16:40:59.077"/>
</kw>
<msg timestamp="20210325 16:40:59.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:40:59.091" starttime="20210325 16:40:59.077"/>
</kw>
<status status="PASS" endtime="20210325 16:40:59.091" starttime="20210325 16:40:59.076"/>
</kw>
<status status="PASS" endtime="20210325 16:40:59.091" starttime="20210325 16:40:59.076"/>
</kw>
<status status="PASS" endtime="20210325 16:40:59.092" starttime="20210325 16:40:59.062"/>
</kw>
<status status="PASS" endtime="20210325 16:40:59.092" starttime="20210325 16:40:59.062"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:40:59.096" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:45:59.062" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210325 16:45:59.062" starttime="20210325 16:40:59.094"/>
</kw>
<status status="FAIL" endtime="20210325 16:45:59.063" starttime="20210325 16:40:59.093"/>
</kw>
<msg timestamp="20210325 16:45:59.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210325 16:45:59.063" starttime="20210325 16:40:59.092"/>
</kw>
<status status="FAIL" endtime="20210325 16:45:59.064" starttime="20210325 16:40:59.092"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210325 16:45:59.064" starttime="20210325 16:40:59.060">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20210325 16:45:59.066" starttime="20210325 16:40:58.846"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:45:59.081" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:02.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:46:02.102" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210325 16:46:02.102" starttime="20210325 16:45:59.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:02.104" level="INFO">om</msg>
<status status="PASS" endtime="20210325 16:46:02.104" starttime="20210325 16:46:02.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:02.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:02.106" starttime="20210325 16:46:02.104"/>
</kw>
<status status="PASS" endtime="20210325 16:46:02.107" starttime="20210325 16:45:59.077"/>
</kw>
<msg timestamp="20210325 16:46:02.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:46:02.107" starttime="20210325 16:45:59.076"/>
</kw>
<msg timestamp="20210325 16:46:02.108" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210325 16:46:02.108" starttime="20210325 16:45:59.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:46:02.109" starttime="20210325 16:46:02.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:02.113" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:05.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:46:05.078" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210325 16:46:05.078" starttime="20210325 16:46:02.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:05.079" level="INFO">om</msg>
<status status="PASS" endtime="20210325 16:46:05.079" starttime="20210325 16:46:05.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:05.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:05.080" starttime="20210325 16:46:05.079"/>
</kw>
<status status="PASS" endtime="20210325 16:46:05.081" starttime="20210325 16:46:02.110"/>
</kw>
<msg timestamp="20210325 16:46:05.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:46:05.081" starttime="20210325 16:46:02.109"/>
</kw>
<msg timestamp="20210325 16:46:05.082" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210325 16:46:05.082" starttime="20210325 16:46:02.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:46:05.085" starttime="20210325 16:46:05.082"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210325 16:46:05.085" starttime="20210325 16:45:59.074"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:05.094" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:06.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:46:06.792" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:46:06.792" starttime="20210325 16:46:05.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:06.793" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:46:06.793" starttime="20210325 16:46:06.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:06.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:06.794" starttime="20210325 16:46:06.793"/>
</kw>
<status status="PASS" endtime="20210325 16:46:06.794" starttime="20210325 16:46:05.089"/>
</kw>
<msg timestamp="20210325 16:46:06.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:46:06.795" starttime="20210325 16:46:05.089"/>
</kw>
<msg timestamp="20210325 16:46:06.795" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210325 16:46:06.795" starttime="20210325 16:46:05.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:46:06.795" starttime="20210325 16:46:06.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:06.799" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:08.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:46:08.964" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:46:08.964" starttime="20210325 16:46:06.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:08.965" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:46:08.966" starttime="20210325 16:46:08.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:08.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:08.966" starttime="20210325 16:46:08.966"/>
</kw>
<status status="PASS" endtime="20210325 16:46:08.967" starttime="20210325 16:46:06.797"/>
</kw>
<msg timestamp="20210325 16:46:08.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:46:08.967" starttime="20210325 16:46:06.796"/>
</kw>
<msg timestamp="20210325 16:46:08.967" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210325 16:46:08.967" starttime="20210325 16:46:06.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:46:08.968" starttime="20210325 16:46:08.967"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210325 16:46:08.968" starttime="20210325 16:46:05.086"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:08.975" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:11.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:46:11.470" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210325 16:46:11.470" starttime="20210325 16:46:08.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:11.471" level="INFO">om</msg>
<status status="PASS" endtime="20210325 16:46:11.471" starttime="20210325 16:46:11.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:11.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:11.472" starttime="20210325 16:46:11.471"/>
</kw>
<status status="PASS" endtime="20210325 16:46:11.472" starttime="20210325 16:46:08.972"/>
</kw>
<msg timestamp="20210325 16:46:11.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:46:11.473" starttime="20210325 16:46:08.971"/>
</kw>
<msg timestamp="20210325 16:46:11.473" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210325 16:46:11.473" starttime="20210325 16:46:08.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:46:11.474" starttime="20210325 16:46:11.473"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:46:11.475" starttime="20210325 16:46:11.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:11.479" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:14.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:46:14.178" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210325 16:46:14.178" starttime="20210325 16:46:11.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:14.179" level="INFO">om</msg>
<status status="PASS" endtime="20210325 16:46:14.179" starttime="20210325 16:46:14.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:14.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:14.180" starttime="20210325 16:46:14.180"/>
</kw>
<status status="PASS" endtime="20210325 16:46:14.181" starttime="20210325 16:46:11.476"/>
</kw>
<msg timestamp="20210325 16:46:14.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:46:14.181" starttime="20210325 16:46:11.475"/>
</kw>
<msg timestamp="20210325 16:46:14.181" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210325 16:46:14.181" starttime="20210325 16:46:11.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:46:14.182" starttime="20210325 16:46:14.181"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:46:14.182" starttime="20210325 16:46:14.182"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210325 16:46:14.183" starttime="20210325 16:46:08.969"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:14.187" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:16.868" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 16:46:16.868" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210325 16:46:16.868" starttime="20210325 16:46:14.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:16.869" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210325 16:46:16.869" starttime="20210325 16:46:16.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:16.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:16.870" starttime="20210325 16:46:16.870"/>
</kw>
<msg timestamp="20210325 16:46:16.871" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210325 16:46:16.871" starttime="20210325 16:46:14.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:46:16.871" starttime="20210325 16:46:16.871"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:16.875" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:19.582" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 16:46:19.582" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210325 16:46:19.582" starttime="20210325 16:46:16.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:19.583" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210325 16:46:19.583" starttime="20210325 16:46:19.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:19.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:19.584" starttime="20210325 16:46:19.583"/>
</kw>
<msg timestamp="20210325 16:46:19.585" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210325 16:46:19.585" starttime="20210325 16:46:16.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:46:19.586" starttime="20210325 16:46:19.585"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210325 16:46:19.586" starttime="20210325 16:46:14.184"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210325 16:46:19.590" starttime="20210325 16:45:59.069"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="SETUP" name="Create volumes">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210325 16:46:19.616" level="INFO">${random} = 11852</msg>
<status status="PASS" endtime="20210325 16:46:19.616" starttime="20210325 16:46:19.615"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:46:19.620" level="INFO">${source} = 11852-source</msg>
<status status="PASS" endtime="20210325 16:46:19.621" starttime="20210325 16:46:19.617"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:46:19.622" level="INFO">${target} = 11852-target</msg>
<status status="PASS" endtime="20210325 16:46:19.622" starttime="20210325 16:46:19.621"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:19.628" level="INFO">Running command 'ozone sh volume create 11852-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:26.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:46:26.569" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:46:26.569" starttime="20210325 16:46:19.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:26.572" level="INFO"/>
<status status="PASS" endtime="20210325 16:46:26.572" starttime="20210325 16:46:26.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:26.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:26.575" starttime="20210325 16:46:26.573"/>
</kw>
<status status="PASS" endtime="20210325 16:46:26.576" starttime="20210325 16:46:19.625"/>
</kw>
<msg timestamp="20210325 16:46:26.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:46:26.576" starttime="20210325 16:46:19.624"/>
</kw>
<status status="PASS" endtime="20210325 16:46:26.577" starttime="20210325 16:46:19.623"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:26.584" level="INFO">Running command 'ozone sh volume create 11852-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:33.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:46:33.439" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:46:33.439" starttime="20210325 16:46:26.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:33.441" level="INFO"/>
<status status="PASS" endtime="20210325 16:46:33.441" starttime="20210325 16:46:33.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:33.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:33.442" starttime="20210325 16:46:33.441"/>
</kw>
<status status="PASS" endtime="20210325 16:46:33.443" starttime="20210325 16:46:26.579"/>
</kw>
<msg timestamp="20210325 16:46:33.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:46:33.443" starttime="20210325 16:46:26.578"/>
</kw>
<status status="PASS" endtime="20210325 16:46:33.443" starttime="20210325 16:46:26.577"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:33.448" level="INFO">Running command 'ozone sh bucket create 11852-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:46:40.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:46:40.878" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:46:40.878" starttime="20210325 16:46:33.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:46:40.880" level="INFO"/>
<status status="PASS" endtime="20210325 16:46:40.880" starttime="20210325 16:46:40.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:46:40.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:46:40.880" starttime="20210325 16:46:40.880"/>
</kw>
<status status="PASS" endtime="20210325 16:46:40.881" starttime="20210325 16:46:33.445"/>
</kw>
<msg timestamp="20210325 16:46:40.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:46:40.881" starttime="20210325 16:46:33.445"/>
</kw>
<status status="PASS" endtime="20210325 16:46:40.881" starttime="20210325 16:46:33.444"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:46:40.885" level="INFO">Running command 'ozone sh key put 11852-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:49:50.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:49:50.811" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:49:50.812" starttime="20210325 16:46:40.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:49:50.813" level="INFO"/>
<status status="PASS" endtime="20210325 16:49:50.814" starttime="20210325 16:49:50.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:49:50.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:49:50.815" starttime="20210325 16:49:50.814"/>
</kw>
<status status="PASS" endtime="20210325 16:49:50.816" starttime="20210325 16:46:40.882"/>
</kw>
<msg timestamp="20210325 16:49:50.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:49:50.816" starttime="20210325 16:46:40.882"/>
</kw>
<status status="PASS" endtime="20210325 16:49:50.817" starttime="20210325 16:46:40.882"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:49:50.823" level="INFO">Running command 'ozone sh bucket create 11852-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:49:57.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:49:57.525" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:49:57.525" starttime="20210325 16:49:50.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:49:57.527" level="INFO"/>
<status status="PASS" endtime="20210325 16:49:57.527" starttime="20210325 16:49:57.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:49:57.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:49:57.529" starttime="20210325 16:49:57.528"/>
</kw>
<status status="PASS" endtime="20210325 16:49:57.530" starttime="20210325 16:49:50.819"/>
</kw>
<msg timestamp="20210325 16:49:57.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:49:57.530" starttime="20210325 16:49:50.818"/>
</kw>
<status status="PASS" endtime="20210325 16:49:57.530" starttime="20210325 16:49:50.817"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:49:57.536" level="INFO">Running command 'ozone sh bucket link 11852-source/readable-bucket 11852-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:02.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:02.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:50:02.362" starttime="20210325 16:49:57.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:02.364" level="INFO"/>
<status status="PASS" endtime="20210325 16:50:02.364" starttime="20210325 16:50:02.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:02.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:02.365" starttime="20210325 16:50:02.364"/>
</kw>
<status status="PASS" endtime="20210325 16:50:02.365" starttime="20210325 16:49:57.532"/>
</kw>
<msg timestamp="20210325 16:50:02.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:02.365" starttime="20210325 16:49:57.532"/>
</kw>
<status status="PASS" endtime="20210325 16:50:02.365" starttime="20210325 16:49:57.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:02.371" level="INFO">Running command 'ozone sh bucket link 11852-source/readable-bucket 11852-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:09.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:09.616" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:50:09.616" starttime="20210325 16:50:02.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:09.618" level="INFO"/>
<status status="PASS" endtime="20210325 16:50:09.618" starttime="20210325 16:50:09.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:09.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:09.618" starttime="20210325 16:50:09.618"/>
</kw>
<status status="PASS" endtime="20210325 16:50:09.619" starttime="20210325 16:50:02.367"/>
</kw>
<msg timestamp="20210325 16:50:09.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:09.619" starttime="20210325 16:50:02.366"/>
</kw>
<status status="PASS" endtime="20210325 16:50:09.619" starttime="20210325 16:50:02.366"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:09.624" level="INFO">Running command 'ozone sh bucket link 11852-source/unreadable-bucket 11852-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:16.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:16.417" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:50:16.417" starttime="20210325 16:50:09.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:16.420" level="INFO"/>
<status status="PASS" endtime="20210325 16:50:16.420" starttime="20210325 16:50:16.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:16.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:16.421" starttime="20210325 16:50:16.421"/>
</kw>
<status status="PASS" endtime="20210325 16:50:16.422" starttime="20210325 16:50:09.621"/>
</kw>
<msg timestamp="20210325 16:50:16.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:16.422" starttime="20210325 16:50:09.620"/>
</kw>
<status status="PASS" endtime="20210325 16:50:16.422" starttime="20210325 16:50:09.619"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:16.427" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 11852-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:23.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:23.638" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:50:23.639" starttime="20210325 16:50:16.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:23.640" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:50:23.640" starttime="20210325 16:50:23.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:23.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:23.641" starttime="20210325 16:50:23.641"/>
</kw>
<status status="PASS" endtime="20210325 16:50:23.641" starttime="20210325 16:50:16.424"/>
</kw>
<msg timestamp="20210325 16:50:23.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:23.642" starttime="20210325 16:50:16.423"/>
</kw>
<status status="PASS" endtime="20210325 16:50:23.642" starttime="20210325 16:50:16.422"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:23.647" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 11852-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:29.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:29.777" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:50:29.777" starttime="20210325 16:50:23.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:29.778" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:50:29.778" starttime="20210325 16:50:29.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:29.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:29.779" starttime="20210325 16:50:29.779"/>
</kw>
<status status="PASS" endtime="20210325 16:50:29.779" starttime="20210325 16:50:23.643"/>
</kw>
<msg timestamp="20210325 16:50:29.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:29.779" starttime="20210325 16:50:23.643"/>
</kw>
<status status="PASS" endtime="20210325 16:50:29.780" starttime="20210325 16:50:23.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:29.784" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 11852-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:35.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:35.775" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:50:35.775" starttime="20210325 16:50:29.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:35.778" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:50:35.778" starttime="20210325 16:50:35.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:35.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:35.780" starttime="20210325 16:50:35.778"/>
</kw>
<status status="PASS" endtime="20210325 16:50:35.780" starttime="20210325 16:50:29.781"/>
</kw>
<msg timestamp="20210325 16:50:35.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:35.781" starttime="20210325 16:50:29.780"/>
</kw>
<status status="PASS" endtime="20210325 16:50:35.782" starttime="20210325 16:50:29.780"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:35.788" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 11852-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:42.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:42.316" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:50:42.316" starttime="20210325 16:50:35.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:42.318" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:50:42.318" starttime="20210325 16:50:42.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:42.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:42.318" starttime="20210325 16:50:42.318"/>
</kw>
<status status="PASS" endtime="20210325 16:50:42.319" starttime="20210325 16:50:35.784"/>
</kw>
<msg timestamp="20210325 16:50:42.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:42.319" starttime="20210325 16:50:35.783"/>
</kw>
<status status="PASS" endtime="20210325 16:50:42.319" starttime="20210325 16:50:35.782"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:42.326" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 11852-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:48.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:48.663" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:50:48.663" starttime="20210325 16:50:42.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:48.664" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:50:48.664" starttime="20210325 16:50:48.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:48.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:48.666" starttime="20210325 16:50:48.664"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.666" starttime="20210325 16:50:42.321"/>
</kw>
<msg timestamp="20210325 16:50:48.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:48.666" starttime="20210325 16:50:42.320"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.667" starttime="20210325 16:50:42.319"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.667" starttime="20210325 16:46:33.444"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.667" starttime="20210325 16:46:33.443"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.667" starttime="20210325 16:46:19.615"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:48.675" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:48.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:48.679" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:50:48.679" starttime="20210325 16:50:48.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:48.681" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:50:48.681" starttime="20210325 16:50:48.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:48.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:48.682" starttime="20210325 16:50:48.681"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.682" starttime="20210325 16:50:48.672"/>
</kw>
<msg timestamp="20210325 16:50:48.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:48.683" starttime="20210325 16:50:48.671"/>
</kw>
<msg timestamp="20210325 16:50:48.683" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:50:48.683" starttime="20210325 16:50:48.670"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:50:48.686" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:50:48.686" starttime="20210325 16:50:48.684"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:48.693" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:48.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:48.730" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:50:48.730" starttime="20210325 16:50:48.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:48.731" level="INFO"/>
<status status="PASS" endtime="20210325 16:50:48.731" starttime="20210325 16:50:48.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:48.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:48.732" starttime="20210325 16:50:48.731"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.732" starttime="20210325 16:50:48.689"/>
</kw>
<msg timestamp="20210325 16:50:48.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:48.732" starttime="20210325 16:50:48.688"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.732" starttime="20210325 16:50:48.687"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.732" starttime="20210325 16:50:48.686"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.733" starttime="20210325 16:50:48.670"/>
</kw>
<status status="PASS" endtime="20210325 16:50:48.733" starttime="20210325 16:50:48.669"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:48.736" level="INFO">Running command 'ozone sh bucket link 11852-source/no-such-bucket 11852-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:50:55.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:50:55.708" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:50:55.708" starttime="20210325 16:50:48.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:50:55.709" level="INFO"/>
<status status="PASS" endtime="20210325 16:50:55.709" starttime="20210325 16:50:55.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:50:55.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:50:55.710" starttime="20210325 16:50:55.709"/>
</kw>
<status status="PASS" endtime="20210325 16:50:55.710" starttime="20210325 16:50:48.734"/>
</kw>
<msg timestamp="20210325 16:50:55.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:50:55.711" starttime="20210325 16:50:48.734"/>
</kw>
<status status="PASS" endtime="20210325 16:50:55.711" starttime="20210325 16:50:48.733"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:50:55.716" level="INFO">Running command 'ozone sh key list 11852-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:51:02.009" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 16:51:02.009" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210325 16:51:02.009" starttime="20210325 16:50:55.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:51:02.011" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210325 16:51:02.011" starttime="20210325 16:51:02.010"/>
</kw>
<msg timestamp="20210325 16:51:02.011" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210325 16:51:02.011" starttime="20210325 16:50:55.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:51:02.012" starttime="20210325 16:51:02.011"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:51:02.012" starttime="20210325 16:50:48.668"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:51:02.023" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:51:02.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:51:02.026" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:51:02.026" starttime="20210325 16:51:02.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:51:02.028" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:51:02.028" starttime="20210325 16:51:02.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:51:02.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:51:02.028" starttime="20210325 16:51:02.028"/>
</kw>
<status status="PASS" endtime="20210325 16:51:02.029" starttime="20210325 16:51:02.019"/>
</kw>
<msg timestamp="20210325 16:51:02.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:51:02.029" starttime="20210325 16:51:02.018"/>
</kw>
<msg timestamp="20210325 16:51:02.029" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:51:02.029" starttime="20210325 16:51:02.017"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:51:02.030" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:51:02.030" starttime="20210325 16:51:02.030"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:51:02.037" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:51:02.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:51:02.043" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:51:02.043" starttime="20210325 16:51:02.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:51:02.045" level="INFO"/>
<status status="PASS" endtime="20210325 16:51:02.045" starttime="20210325 16:51:02.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:51:02.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:51:02.046" starttime="20210325 16:51:02.045"/>
</kw>
<status status="PASS" endtime="20210325 16:51:02.047" starttime="20210325 16:51:02.032"/>
</kw>
<msg timestamp="20210325 16:51:02.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:51:02.048" starttime="20210325 16:51:02.032"/>
</kw>
<status status="PASS" endtime="20210325 16:51:02.048" starttime="20210325 16:51:02.031"/>
</kw>
<status status="PASS" endtime="20210325 16:51:02.048" starttime="20210325 16:51:02.030"/>
</kw>
<status status="PASS" endtime="20210325 16:51:02.048" starttime="20210325 16:51:02.016"/>
</kw>
<status status="PASS" endtime="20210325 16:51:02.048" starttime="20210325 16:51:02.015"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:51:02.055" level="INFO">Running command 'ozone sh bucket link 11852-source/bucket1 11852-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:51:08.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:51:08.406" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:51:08.406" starttime="20210325 16:51:02.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:51:08.407" level="INFO"/>
<status status="PASS" endtime="20210325 16:51:08.407" starttime="20210325 16:51:08.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:51:08.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:51:08.408" starttime="20210325 16:51:08.407"/>
</kw>
<status status="PASS" endtime="20210325 16:51:08.408" starttime="20210325 16:51:02.050"/>
</kw>
<msg timestamp="20210325 16:51:08.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:51:08.408" starttime="20210325 16:51:02.049"/>
</kw>
<status status="PASS" endtime="20210325 16:51:08.408" starttime="20210325 16:51:02.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:51:08.414" level="INFO">Running command 'ozone sh bucket create 11852-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:51:15.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:51:15.042" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:51:15.042" starttime="20210325 16:51:08.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:51:15.043" level="INFO"/>
<status status="PASS" endtime="20210325 16:51:15.043" starttime="20210325 16:51:15.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:51:15.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:51:15.044" starttime="20210325 16:51:15.043"/>
</kw>
<status status="PASS" endtime="20210325 16:51:15.044" starttime="20210325 16:51:08.410"/>
</kw>
<msg timestamp="20210325 16:51:15.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:51:15.045" starttime="20210325 16:51:08.409"/>
</kw>
<status status="PASS" endtime="20210325 16:51:15.045" starttime="20210325 16:51:08.408"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:51:15.050" level="INFO">Running command 'ozone sh key put 11852-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:53:02.015" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210325 16:53:02.015" starttime="20210325 16:51:15.047"/>
</kw>
<status status="FAIL" endtime="20210325 16:53:02.016" starttime="20210325 16:51:15.046"/>
</kw>
<msg timestamp="20210325 16:53:02.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210325 16:53:02.016" starttime="20210325 16:51:15.046"/>
</kw>
<status status="FAIL" endtime="20210325 16:53:02.016" starttime="20210325 16:51:15.045"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210325 16:53:02.017" starttime="20210325 16:51:02.014">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:53:02.024" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:53:02.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:53:02.028" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:53:02.028" starttime="20210325 16:53:02.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:53:02.030" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:53:02.030" starttime="20210325 16:53:02.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:53:02.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:53:02.031" starttime="20210325 16:53:02.030"/>
</kw>
<status status="PASS" endtime="20210325 16:53:02.031" starttime="20210325 16:53:02.022"/>
</kw>
<msg timestamp="20210325 16:53:02.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:53:02.031" starttime="20210325 16:53:02.021"/>
</kw>
<msg timestamp="20210325 16:53:02.031" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:53:02.031" starttime="20210325 16:53:02.021"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:53:02.032" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:53:02.032" starttime="20210325 16:53:02.032"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:53:02.037" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:53:02.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:53:02.048" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:53:02.048" starttime="20210325 16:53:02.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:53:02.050" level="INFO"/>
<status status="PASS" endtime="20210325 16:53:02.051" starttime="20210325 16:53:02.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:53:02.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:53:02.052" starttime="20210325 16:53:02.051"/>
</kw>
<status status="PASS" endtime="20210325 16:53:02.052" starttime="20210325 16:53:02.034"/>
</kw>
<msg timestamp="20210325 16:53:02.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:53:02.053" starttime="20210325 16:53:02.034"/>
</kw>
<status status="PASS" endtime="20210325 16:53:02.054" starttime="20210325 16:53:02.033"/>
</kw>
<status status="PASS" endtime="20210325 16:53:02.054" starttime="20210325 16:53:02.032"/>
</kw>
<status status="PASS" endtime="20210325 16:53:02.054" starttime="20210325 16:53:02.020"/>
</kw>
<status status="PASS" endtime="20210325 16:53:02.054" starttime="20210325 16:53:02.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:53:02.065" level="INFO">Running command 'ozone sh key put 11852-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:02.019" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210325 16:55:02.019" starttime="20210325 16:53:02.058"/>
</kw>
<status status="FAIL" endtime="20210325 16:55:02.019" starttime="20210325 16:53:02.057"/>
</kw>
<msg timestamp="20210325 16:55:02.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210325 16:55:02.020" starttime="20210325 16:53:02.056"/>
</kw>
<status status="FAIL" endtime="20210325 16:55:02.020" starttime="20210325 16:53:02.055"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210325 16:55:02.021" starttime="20210325 16:53:02.018">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:02.028" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:02.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:02.032" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:55:02.032" starttime="20210325 16:55:02.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:02.034" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:55:02.034" starttime="20210325 16:55:02.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:02.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:02.035" starttime="20210325 16:55:02.034"/>
</kw>
<status status="PASS" endtime="20210325 16:55:02.037" starttime="20210325 16:55:02.025"/>
</kw>
<msg timestamp="20210325 16:55:02.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:02.038" starttime="20210325 16:55:02.025"/>
</kw>
<msg timestamp="20210325 16:55:02.038" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:55:02.038" starttime="20210325 16:55:02.024"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:55:02.039" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:55:02.040" starttime="20210325 16:55:02.039"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:02.044" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:02.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:02.052" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:55:02.052" starttime="20210325 16:55:02.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:02.053" level="INFO"/>
<status status="PASS" endtime="20210325 16:55:02.053" starttime="20210325 16:55:02.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:02.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:02.054" starttime="20210325 16:55:02.053"/>
</kw>
<status status="PASS" endtime="20210325 16:55:02.055" starttime="20210325 16:55:02.041"/>
</kw>
<msg timestamp="20210325 16:55:02.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:02.055" starttime="20210325 16:55:02.041"/>
</kw>
<status status="PASS" endtime="20210325 16:55:02.055" starttime="20210325 16:55:02.040"/>
</kw>
<status status="PASS" endtime="20210325 16:55:02.056" starttime="20210325 16:55:02.040"/>
</kw>
<status status="PASS" endtime="20210325 16:55:02.056" starttime="20210325 16:55:02.023"/>
</kw>
<status status="PASS" endtime="20210325 16:55:02.056" starttime="20210325 16:55:02.023"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:02.061" level="INFO">Running command 'ozone sh key list 11852-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:09.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:09.408" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210325 16:55:09.408" starttime="20210325 16:55:02.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:09.410" level="INFO">key1</msg>
<status status="PASS" endtime="20210325 16:55:09.410" starttime="20210325 16:55:09.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:09.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:09.412" starttime="20210325 16:55:09.411"/>
</kw>
<status status="PASS" endtime="20210325 16:55:09.412" starttime="20210325 16:55:02.058"/>
</kw>
<msg timestamp="20210325 16:55:09.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:09.412" starttime="20210325 16:55:02.057"/>
</kw>
<msg timestamp="20210325 16:55:09.413" level="INFO">${target_list} = key1</msg>
<status status="PASS" endtime="20210325 16:55:09.413" starttime="20210325 16:55:02.057"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:09.419" level="INFO">Running command 'ozone sh key list 11852-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:14.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:14.974" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210325 16:55:14.974" starttime="20210325 16:55:09.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:14.975" level="INFO">key1</msg>
<status status="PASS" endtime="20210325 16:55:14.975" starttime="20210325 16:55:14.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:14.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:14.976" starttime="20210325 16:55:14.975"/>
</kw>
<status status="PASS" endtime="20210325 16:55:14.976" starttime="20210325 16:55:09.414"/>
</kw>
<msg timestamp="20210325 16:55:14.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:14.976" starttime="20210325 16:55:09.414"/>
</kw>
<msg timestamp="20210325 16:55:14.977" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210325 16:55:14.977" starttime="20210325 16:55:09.413"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 16:55:14.977" starttime="20210325 16:55:14.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:55:14.978" starttime="20210325 16:55:14.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210325 16:55:14.979" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" endtime="20210325 16:55:14.979" starttime="20210325 16:55:14.978"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210325 16:55:14.979" starttime="20210325 16:55:02.022">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:14.986" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:14.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:14.989" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:55:14.989" starttime="20210325 16:55:14.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:14.991" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:55:14.991" starttime="20210325 16:55:14.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:14.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:14.992" starttime="20210325 16:55:14.991"/>
</kw>
<status status="PASS" endtime="20210325 16:55:14.992" starttime="20210325 16:55:14.983"/>
</kw>
<msg timestamp="20210325 16:55:14.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:14.992" starttime="20210325 16:55:14.983"/>
</kw>
<msg timestamp="20210325 16:55:14.993" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:55:14.993" starttime="20210325 16:55:14.983"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:55:14.994" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:55:14.994" starttime="20210325 16:55:14.993"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:14.998" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:15.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:15.006" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:55:15.006" starttime="20210325 16:55:14.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:15.007" level="INFO"/>
<status status="PASS" endtime="20210325 16:55:15.007" starttime="20210325 16:55:15.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:15.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:15.008" starttime="20210325 16:55:15.007"/>
</kw>
<status status="PASS" endtime="20210325 16:55:15.008" starttime="20210325 16:55:14.995"/>
</kw>
<msg timestamp="20210325 16:55:15.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:15.008" starttime="20210325 16:55:14.995"/>
</kw>
<status status="PASS" endtime="20210325 16:55:15.009" starttime="20210325 16:55:14.994"/>
</kw>
<status status="PASS" endtime="20210325 16:55:15.009" starttime="20210325 16:55:14.994"/>
</kw>
<status status="PASS" endtime="20210325 16:55:15.009" starttime="20210325 16:55:14.982"/>
</kw>
<status status="PASS" endtime="20210325 16:55:15.009" starttime="20210325 16:55:14.981"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:15.013" level="INFO">Running command 'ozone sh key delete 11852-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:21.724" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 16:55:21.724" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210325 16:55:21.725" starttime="20210325 16:55:15.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:21.726" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210325 16:55:21.726" starttime="20210325 16:55:21.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:21.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210325 16:55:21.727" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210325 16:55:21.727" starttime="20210325 16:55:21.726"/>
</kw>
<status status="FAIL" endtime="20210325 16:55:21.727" starttime="20210325 16:55:15.010"/>
</kw>
<msg timestamp="20210325 16:55:21.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210325 16:55:21.727" starttime="20210325 16:55:15.010"/>
</kw>
<status status="FAIL" endtime="20210325 16:55:21.727" starttime="20210325 16:55:15.009"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210325 16:55:21.728" starttime="20210325 16:55:14.980">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:21.742" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:21.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:21.746" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:55:21.747" starttime="20210325 16:55:21.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:21.749" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:55:21.749" starttime="20210325 16:55:21.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:21.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:21.751" starttime="20210325 16:55:21.750"/>
</kw>
<status status="PASS" endtime="20210325 16:55:21.751" starttime="20210325 16:55:21.735"/>
</kw>
<msg timestamp="20210325 16:55:21.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:21.752" starttime="20210325 16:55:21.734"/>
</kw>
<msg timestamp="20210325 16:55:21.753" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:55:21.753" starttime="20210325 16:55:21.733"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:55:21.756" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:55:21.756" starttime="20210325 16:55:21.753"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:21.764" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:21.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:21.776" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:55:21.776" starttime="20210325 16:55:21.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:21.779" level="INFO"/>
<status status="PASS" endtime="20210325 16:55:21.779" starttime="20210325 16:55:21.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:21.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:21.781" starttime="20210325 16:55:21.780"/>
</kw>
<status status="PASS" endtime="20210325 16:55:21.782" starttime="20210325 16:55:21.760"/>
</kw>
<msg timestamp="20210325 16:55:21.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:21.782" starttime="20210325 16:55:21.759"/>
</kw>
<status status="PASS" endtime="20210325 16:55:21.783" starttime="20210325 16:55:21.757"/>
</kw>
<status status="PASS" endtime="20210325 16:55:21.783" starttime="20210325 16:55:21.756"/>
</kw>
<status status="PASS" endtime="20210325 16:55:21.784" starttime="20210325 16:55:21.731"/>
</kw>
<status status="PASS" endtime="20210325 16:55:21.784" starttime="20210325 16:55:21.730"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:21.790" level="INFO">Running command 'ozone sh bucket list 11852-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:28.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:28.701" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210325 16:55:28.701" starttime="20210325 16:55:21.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:28.703" level="INFO">{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:50:55.425Z",
  "modificationTime" : "2021-03-25T16:50:55.425Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:50:16.182Z",
  "modificationTime" : "2021-03-25T16:50:48.564Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:51:08.144Z",
  "modificationTime" : "2021-03-25T16:51:08.144Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:50:02.268Z",
  "modificationTime" : "2021-03-25T16:50:42.030Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:50:09.527Z",
  "modificationTime" : "2021-03-25T16:50:09.527Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210325 16:55:28.704" starttime="20210325 16:55:28.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:28.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:28.705" starttime="20210325 16:55:28.704"/>
</kw>
<status status="PASS" endtime="20210325 16:55:28.706" starttime="20210325 16:55:21.786"/>
</kw>
<msg timestamp="20210325 16:55:28.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:28.706" starttime="20210325 16:55:21.786"/>
</kw>
<msg timestamp="20210325 16:55:28.706" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210325 16:55:28.707" starttime="20210325 16:55:21.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:55:28.708" starttime="20210325 16:55:28.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:55:28.709" starttime="20210325 16:55:28.708"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:55:28.710" starttime="20210325 16:55:21.729"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:28.723" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:28.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:28.727" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:55:28.727" starttime="20210325 16:55:28.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:28.729" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:55:28.729" starttime="20210325 16:55:28.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:28.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:28.730" starttime="20210325 16:55:28.729"/>
</kw>
<status status="PASS" endtime="20210325 16:55:28.730" starttime="20210325 16:55:28.719"/>
</kw>
<msg timestamp="20210325 16:55:28.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:28.731" starttime="20210325 16:55:28.718"/>
</kw>
<msg timestamp="20210325 16:55:28.731" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:55:28.731" starttime="20210325 16:55:28.717"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:55:28.732" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:55:28.732" starttime="20210325 16:55:28.732"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:28.739" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:28.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:28.747" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:55:28.748" starttime="20210325 16:55:28.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:28.749" level="INFO"/>
<status status="PASS" endtime="20210325 16:55:28.750" starttime="20210325 16:55:28.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:28.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:28.751" starttime="20210325 16:55:28.750"/>
</kw>
<status status="PASS" endtime="20210325 16:55:28.751" starttime="20210325 16:55:28.735"/>
</kw>
<msg timestamp="20210325 16:55:28.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:28.752" starttime="20210325 16:55:28.734"/>
</kw>
<status status="PASS" endtime="20210325 16:55:28.752" starttime="20210325 16:55:28.734"/>
</kw>
<status status="PASS" endtime="20210325 16:55:28.752" starttime="20210325 16:55:28.733"/>
</kw>
<status status="PASS" endtime="20210325 16:55:28.752" starttime="20210325 16:55:28.716"/>
</kw>
<status status="PASS" endtime="20210325 16:55:28.752" starttime="20210325 16:55:28.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:28.757" level="INFO">Running command 'ozone sh bucket info 11852-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:35.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:35.953" level="INFO">${output} = 11852-source bucket1</msg>
<status status="PASS" endtime="20210325 16:55:35.953" starttime="20210325 16:55:28.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:35.956" level="INFO">11852-source bucket1</msg>
<status status="PASS" endtime="20210325 16:55:35.957" starttime="20210325 16:55:35.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:35.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:35.959" starttime="20210325 16:55:35.957"/>
</kw>
<status status="PASS" endtime="20210325 16:55:35.960" starttime="20210325 16:55:28.754"/>
</kw>
<msg timestamp="20210325 16:55:35.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:35.961" starttime="20210325 16:55:28.754"/>
</kw>
<msg timestamp="20210325 16:55:35.961" level="INFO">${result} = 11852-source bucket1</msg>
<status status="PASS" endtime="20210325 16:55:35.961" starttime="20210325 16:55:28.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 16:55:35.963" starttime="20210325 16:55:35.962"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:55:35.964" starttime="20210325 16:55:28.714"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:35.976" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:35.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:35.980" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:55:35.981" starttime="20210325 16:55:35.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:35.983" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:55:35.983" starttime="20210325 16:55:35.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:35.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:35.985" starttime="20210325 16:55:35.983"/>
</kw>
<status status="PASS" endtime="20210325 16:55:35.985" starttime="20210325 16:55:35.970"/>
</kw>
<msg timestamp="20210325 16:55:35.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:35.985" starttime="20210325 16:55:35.969"/>
</kw>
<msg timestamp="20210325 16:55:35.986" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:55:35.986" starttime="20210325 16:55:35.968"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:55:35.987" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:55:35.988" starttime="20210325 16:55:35.986"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:35.994" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:36.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:36.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:55:36.005" starttime="20210325 16:55:35.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:36.007" level="INFO"/>
<status status="PASS" endtime="20210325 16:55:36.007" starttime="20210325 16:55:36.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:36.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:36.008" starttime="20210325 16:55:36.007"/>
</kw>
<status status="PASS" endtime="20210325 16:55:36.009" starttime="20210325 16:55:35.991"/>
</kw>
<msg timestamp="20210325 16:55:36.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:36.009" starttime="20210325 16:55:35.990"/>
</kw>
<status status="PASS" endtime="20210325 16:55:36.009" starttime="20210325 16:55:35.989"/>
</kw>
<status status="PASS" endtime="20210325 16:55:36.009" starttime="20210325 16:55:35.988"/>
</kw>
<status status="PASS" endtime="20210325 16:55:36.010" starttime="20210325 16:55:35.968"/>
</kw>
<status status="PASS" endtime="20210325 16:55:36.010" starttime="20210325 16:55:35.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:36.015" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 11852-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:41.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:41.302" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:55:41.302" starttime="20210325 16:55:36.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:41.303" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:55:41.303" starttime="20210325 16:55:41.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:41.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:41.304" starttime="20210325 16:55:41.304"/>
</kw>
<status status="PASS" endtime="20210325 16:55:41.305" starttime="20210325 16:55:36.011"/>
</kw>
<msg timestamp="20210325 16:55:41.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:41.305" starttime="20210325 16:55:36.011"/>
</kw>
<status status="PASS" endtime="20210325 16:55:41.305" starttime="20210325 16:55:36.010"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:41.310" level="INFO">Running command 'ozone sh bucket getacl 11852-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:47.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:47.955" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210325 16:55:47.955" starttime="20210325 16:55:41.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:47.957" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210325 16:55:47.958" starttime="20210325 16:55:47.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:47.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:47.959" starttime="20210325 16:55:47.958"/>
</kw>
<status status="PASS" endtime="20210325 16:55:47.959" starttime="20210325 16:55:41.308"/>
</kw>
<msg timestamp="20210325 16:55:47.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:47.959" starttime="20210325 16:55:41.307"/>
</kw>
<msg timestamp="20210325 16:55:47.960" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210325 16:55:47.960" starttime="20210325 16:55:41.306"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 16:55:47.961" starttime="20210325 16:55:47.960"/>
</kw>
<status status="PASS" endtime="20210325 16:55:47.961" starttime="20210325 16:55:41.305"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:47.967" level="INFO">Running command 'ozone sh bucket getacl 11852-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:54.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:54.203" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:55:54.203" starttime="20210325 16:55:47.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:54.204" level="INFO"/>
<status status="PASS" endtime="20210325 16:55:54.205" starttime="20210325 16:55:54.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:54.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:54.205" starttime="20210325 16:55:54.205"/>
</kw>
<status status="PASS" endtime="20210325 16:55:54.206" starttime="20210325 16:55:47.963"/>
</kw>
<msg timestamp="20210325 16:55:54.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:54.206" starttime="20210325 16:55:47.963"/>
</kw>
<msg timestamp="20210325 16:55:54.206" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210325 16:55:54.206" starttime="20210325 16:55:47.962"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 16:55:54.207" starttime="20210325 16:55:54.206"/>
</kw>
<status status="PASS" endtime="20210325 16:55:54.207" starttime="20210325 16:55:47.961"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:54.211" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 11852-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:55:59.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:55:59.709" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:55:59.709" starttime="20210325 16:55:54.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:55:59.710" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 16:55:59.710" starttime="20210325 16:55:59.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:55:59.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:55:59.712" starttime="20210325 16:55:59.710"/>
</kw>
<status status="PASS" endtime="20210325 16:55:59.712" starttime="20210325 16:55:54.209"/>
</kw>
<msg timestamp="20210325 16:55:59.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:55:59.713" starttime="20210325 16:55:54.208"/>
</kw>
<status status="PASS" endtime="20210325 16:55:59.713" starttime="20210325 16:55:54.208"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:55:59.722" level="INFO">Running command 'ozone sh bucket getacl 11852-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:07.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:07.473" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:07.473" starttime="20210325 16:55:59.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:07.474" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:07.474" starttime="20210325 16:56:07.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:07.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:07.475" starttime="20210325 16:56:07.474"/>
</kw>
<status status="PASS" endtime="20210325 16:56:07.475" starttime="20210325 16:55:59.718"/>
</kw>
<msg timestamp="20210325 16:56:07.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:07.476" starttime="20210325 16:55:59.717"/>
</kw>
<msg timestamp="20210325 16:56:07.476" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210325 16:56:07.476" starttime="20210325 16:55:59.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 16:56:07.478" starttime="20210325 16:56:07.477"/>
</kw>
<status status="PASS" endtime="20210325 16:56:07.479" starttime="20210325 16:55:59.713"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:07.485" level="INFO">Running command 'ozone sh bucket getacl 11852-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:14.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:14.737" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210325 16:56:14.737" starttime="20210325 16:56:07.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:14.739" level="INFO">READ</msg>
<status status="PASS" endtime="20210325 16:56:14.739" starttime="20210325 16:56:14.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:14.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:14.740" starttime="20210325 16:56:14.739"/>
</kw>
<status status="PASS" endtime="20210325 16:56:14.741" starttime="20210325 16:56:07.481"/>
</kw>
<msg timestamp="20210325 16:56:14.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:14.741" starttime="20210325 16:56:07.481"/>
</kw>
<msg timestamp="20210325 16:56:14.741" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210325 16:56:14.741" starttime="20210325 16:56:07.480"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 16:56:14.742" starttime="20210325 16:56:14.742"/>
</kw>
<status status="PASS" endtime="20210325 16:56:14.743" starttime="20210325 16:56:07.479"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:56:14.743" starttime="20210325 16:55:35.966"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:14.755" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:14.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:14.759" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:56:14.759" starttime="20210325 16:56:14.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:14.760" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:56:14.760" starttime="20210325 16:56:14.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:14.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:14.762" starttime="20210325 16:56:14.761"/>
</kw>
<status status="PASS" endtime="20210325 16:56:14.762" starttime="20210325 16:56:14.751"/>
</kw>
<msg timestamp="20210325 16:56:14.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:14.763" starttime="20210325 16:56:14.750"/>
</kw>
<msg timestamp="20210325 16:56:14.763" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:56:14.763" starttime="20210325 16:56:14.749"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:56:14.764" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:56:14.764" starttime="20210325 16:56:14.763"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:14.770" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:14.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:14.804" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:14.804" starttime="20210325 16:56:14.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:14.805" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:14.805" starttime="20210325 16:56:14.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:14.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:14.806" starttime="20210325 16:56:14.806"/>
</kw>
<status status="PASS" endtime="20210325 16:56:14.806" starttime="20210325 16:56:14.766"/>
</kw>
<msg timestamp="20210325 16:56:14.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:14.807" starttime="20210325 16:56:14.766"/>
</kw>
<status status="PASS" endtime="20210325 16:56:14.807" starttime="20210325 16:56:14.765"/>
</kw>
<status status="PASS" endtime="20210325 16:56:14.807" starttime="20210325 16:56:14.764"/>
</kw>
<status status="PASS" endtime="20210325 16:56:14.807" starttime="20210325 16:56:14.749"/>
</kw>
<status status="PASS" endtime="20210325 16:56:14.807" starttime="20210325 16:56:14.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:14.815" level="INFO">Running command 'ozone sh bucket link 11852-source/bucket2 11852-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:21.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:21.610" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:21.610" starttime="20210325 16:56:14.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:21.611" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:21.612" starttime="20210325 16:56:21.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:21.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:21.612" starttime="20210325 16:56:21.612"/>
</kw>
<status status="PASS" endtime="20210325 16:56:21.613" starttime="20210325 16:56:14.809"/>
</kw>
<msg timestamp="20210325 16:56:21.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:21.613" starttime="20210325 16:56:14.808"/>
</kw>
<status status="PASS" endtime="20210325 16:56:21.613" starttime="20210325 16:56:14.807"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:21.617" level="INFO">Running command 'ozone sh bucket create 11852-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:27.977" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 16:56:27.978" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210325 16:56:27.978" starttime="20210325 16:56:21.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:27.979" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210325 16:56:27.979" starttime="20210325 16:56:27.978"/>
</kw>
<msg timestamp="20210325 16:56:27.979" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210325 16:56:27.980" starttime="20210325 16:56:21.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:56:27.980" starttime="20210325 16:56:27.980"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:27.984" level="INFO">Running command 'ozone sh bucket create 11852-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:33.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:33.393" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:33.393" starttime="20210325 16:56:27.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:33.394" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:33.394" starttime="20210325 16:56:33.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:33.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:33.396" starttime="20210325 16:56:33.395"/>
</kw>
<status status="PASS" endtime="20210325 16:56:33.396" starttime="20210325 16:56:27.981"/>
</kw>
<msg timestamp="20210325 16:56:33.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:33.396" starttime="20210325 16:56:27.981"/>
</kw>
<status status="PASS" endtime="20210325 16:56:33.397" starttime="20210325 16:56:27.980"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:33.401" level="INFO">Running command 'ozone sh bucket link 11852-source/bucket1 11852-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:40.079" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 16:56:40.080" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210325 16:56:40.080" starttime="20210325 16:56:33.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:40.083" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210325 16:56:40.083" starttime="20210325 16:56:40.081"/>
</kw>
<msg timestamp="20210325 16:56:40.083" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210325 16:56:40.083" starttime="20210325 16:56:33.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:56:40.084" starttime="20210325 16:56:40.084"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:56:40.084" starttime="20210325 16:56:14.746"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:40.094" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:40.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:40.098" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:56:40.098" starttime="20210325 16:56:40.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:40.100" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:56:40.100" starttime="20210325 16:56:40.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:40.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:40.101" starttime="20210325 16:56:40.100"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.101" starttime="20210325 16:56:40.090"/>
</kw>
<msg timestamp="20210325 16:56:40.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:40.102" starttime="20210325 16:56:40.090"/>
</kw>
<msg timestamp="20210325 16:56:40.102" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:56:40.102" starttime="20210325 16:56:40.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:56:40.104" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:56:40.104" starttime="20210325 16:56:40.103"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:40.110" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:40.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:40.120" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:40.120" starttime="20210325 16:56:40.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:40.122" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:40.122" starttime="20210325 16:56:40.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:40.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:40.123" starttime="20210325 16:56:40.122"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.124" starttime="20210325 16:56:40.106"/>
</kw>
<msg timestamp="20210325 16:56:40.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:40.124" starttime="20210325 16:56:40.106"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.124" starttime="20210325 16:56:40.105"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.125" starttime="20210325 16:56:40.104"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.125" starttime="20210325 16:56:40.088"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.125" starttime="20210325 16:56:40.087"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:40.131" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:40.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:40.136" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:40.136" starttime="20210325 16:56:40.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:40.138" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:40.138" starttime="20210325 16:56:40.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:40.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:40.139" starttime="20210325 16:56:40.138"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.140" starttime="20210325 16:56:40.128"/>
</kw>
<msg timestamp="20210325 16:56:40.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:40.140" starttime="20210325 16:56:40.127"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.140" starttime="20210325 16:56:40.126"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:40.146" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:40.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:40.150" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:56:40.150" starttime="20210325 16:56:40.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:40.152" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:56:40.152" starttime="20210325 16:56:40.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:40.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:40.153" starttime="20210325 16:56:40.152"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.154" starttime="20210325 16:56:40.143"/>
</kw>
<msg timestamp="20210325 16:56:40.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:40.154" starttime="20210325 16:56:40.142"/>
</kw>
<msg timestamp="20210325 16:56:40.154" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:56:40.155" starttime="20210325 16:56:40.142"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:56:40.156" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:56:40.156" starttime="20210325 16:56:40.155"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:40.161" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:40.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:40.171" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:40.171" starttime="20210325 16:56:40.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:40.173" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:40.173" starttime="20210325 16:56:40.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:40.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:40.174" starttime="20210325 16:56:40.173"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.175" starttime="20210325 16:56:40.158"/>
</kw>
<msg timestamp="20210325 16:56:40.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:40.175" starttime="20210325 16:56:40.157"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.176" starttime="20210325 16:56:40.156"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.176" starttime="20210325 16:56:40.156"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.176" starttime="20210325 16:56:40.141"/>
</kw>
<status status="PASS" endtime="20210325 16:56:40.176" starttime="20210325 16:56:40.140"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:40.180" level="INFO">Running command 'ozone sh key list 11852-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:47.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:47.453" level="INFO">${output} = {
  "volumeName" : "11852-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-25T16:46:45.525Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210325 16:56:47.453" starttime="20210325 16:56:40.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:47.455" level="INFO">{
  "volumeName" : "11852-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-25T16:46:45.525Z",
  "modificationTime" : "2021-03-25T16:49:49.646Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210325 16:56:47.455" starttime="20210325 16:56:47.454"/>
</kw>
<msg timestamp="20210325 16:56:47.455" level="INFO">${result} = {
  "volumeName" : "11852-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-03-25T16:46:45.525Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210325 16:56:47.455" starttime="20210325 16:56:40.177"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:56:47.456" starttime="20210325 16:56:47.455"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.456" starttime="20210325 16:56:40.126"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.456" starttime="20210325 16:56:40.125"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:56:47.457" starttime="20210325 16:56:40.085"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:47.465" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:47.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:47.468" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:56:47.468" starttime="20210325 16:56:47.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:47.469" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:56:47.469" starttime="20210325 16:56:47.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:47.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:47.470" starttime="20210325 16:56:47.470"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.470" starttime="20210325 16:56:47.462"/>
</kw>
<msg timestamp="20210325 16:56:47.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:47.471" starttime="20210325 16:56:47.461"/>
</kw>
<msg timestamp="20210325 16:56:47.471" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:56:47.471" starttime="20210325 16:56:47.461"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:56:47.472" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:56:47.472" starttime="20210325 16:56:47.471"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:47.479" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:47.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:47.486" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:47.486" starttime="20210325 16:56:47.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:47.487" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:47.488" starttime="20210325 16:56:47.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:47.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:47.489" starttime="20210325 16:56:47.488"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.489" starttime="20210325 16:56:47.475"/>
</kw>
<msg timestamp="20210325 16:56:47.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:47.489" starttime="20210325 16:56:47.474"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.490" starttime="20210325 16:56:47.473"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.490" starttime="20210325 16:56:47.472"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.490" starttime="20210325 16:56:47.460"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.490" starttime="20210325 16:56:47.459"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:47.496" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:47.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:47.501" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:47.501" starttime="20210325 16:56:47.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:47.502" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:47.502" starttime="20210325 16:56:47.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:47.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:47.503" starttime="20210325 16:56:47.502"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.503" starttime="20210325 16:56:47.493"/>
</kw>
<msg timestamp="20210325 16:56:47.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:47.504" starttime="20210325 16:56:47.493"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.504" starttime="20210325 16:56:47.491"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:47.509" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:47.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:47.514" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:56:47.514" starttime="20210325 16:56:47.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:47.515" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:56:47.515" starttime="20210325 16:56:47.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:47.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:47.516" starttime="20210325 16:56:47.515"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.516" starttime="20210325 16:56:47.507"/>
</kw>
<msg timestamp="20210325 16:56:47.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:47.516" starttime="20210325 16:56:47.506"/>
</kw>
<msg timestamp="20210325 16:56:47.517" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:56:47.517" starttime="20210325 16:56:47.505"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:56:47.517" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:56:47.517" starttime="20210325 16:56:47.517"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:47.522" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:47.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:47.531" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:47.531" starttime="20210325 16:56:47.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:47.532" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:47.532" starttime="20210325 16:56:47.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:47.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:47.534" starttime="20210325 16:56:47.532"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.534" starttime="20210325 16:56:47.519"/>
</kw>
<msg timestamp="20210325 16:56:47.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:47.535" starttime="20210325 16:56:47.519"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.535" starttime="20210325 16:56:47.518"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.535" starttime="20210325 16:56:47.518"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.535" starttime="20210325 16:56:47.505"/>
</kw>
<status status="PASS" endtime="20210325 16:56:47.535" starttime="20210325 16:56:47.504"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:47.539" level="INFO">Running command 'ozone sh key list 11852-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:54.500" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 16:56:54.500" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 11852-target unreadable-link null</msg>
<status status="PASS" endtime="20210325 16:56:54.500" starttime="20210325 16:56:47.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:54.503" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 11852-target unreadable-link null</msg>
<status status="PASS" endtime="20210325 16:56:54.503" starttime="20210325 16:56:54.501"/>
</kw>
<msg timestamp="20210325 16:56:54.504" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 11852-target unreadable-link null</msg>
<status status="PASS" endtime="20210325 16:56:54.504" starttime="20210325 16:56:47.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:56:54.505" starttime="20210325 16:56:54.504"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.505" starttime="20210325 16:56:47.491"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.506" starttime="20210325 16:56:47.490"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:56:54.506" starttime="20210325 16:56:47.458"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:54.518" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:54.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:54.522" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:56:54.522" starttime="20210325 16:56:54.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:54.524" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:56:54.525" starttime="20210325 16:56:54.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:54.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:54.526" starttime="20210325 16:56:54.525"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.527" starttime="20210325 16:56:54.514"/>
</kw>
<msg timestamp="20210325 16:56:54.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:54.527" starttime="20210325 16:56:54.513"/>
</kw>
<msg timestamp="20210325 16:56:54.528" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:56:54.528" starttime="20210325 16:56:54.512"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:56:54.529" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:56:54.529" starttime="20210325 16:56:54.528"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:54.537" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:54.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:54.547" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:54.547" starttime="20210325 16:56:54.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:54.549" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:54.549" starttime="20210325 16:56:54.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:54.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:54.551" starttime="20210325 16:56:54.550"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.552" starttime="20210325 16:56:54.533"/>
</kw>
<msg timestamp="20210325 16:56:54.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:54.552" starttime="20210325 16:56:54.532"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.553" starttime="20210325 16:56:54.530"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.553" starttime="20210325 16:56:54.530"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.553" starttime="20210325 16:56:54.511"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.553" starttime="20210325 16:56:54.509"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:54.560" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:54.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:54.568" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:54.568" starttime="20210325 16:56:54.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:54.570" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:54.570" starttime="20210325 16:56:54.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:54.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:54.572" starttime="20210325 16:56:54.570"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.573" starttime="20210325 16:56:54.557"/>
</kw>
<msg timestamp="20210325 16:56:54.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:54.574" starttime="20210325 16:56:54.556"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.575" starttime="20210325 16:56:54.555"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:54.584" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:54.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:54.589" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:56:54.589" starttime="20210325 16:56:54.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:54.590" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:56:54.590" starttime="20210325 16:56:54.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:54.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:54.591" starttime="20210325 16:56:54.590"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.591" starttime="20210325 16:56:54.579"/>
</kw>
<msg timestamp="20210325 16:56:54.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:54.591" starttime="20210325 16:56:54.578"/>
</kw>
<msg timestamp="20210325 16:56:54.592" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:56:54.592" starttime="20210325 16:56:54.577"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:56:54.593" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:56:54.593" starttime="20210325 16:56:54.592"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:54.601" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:56:54.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:56:54.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:56:54.611" starttime="20210325 16:56:54.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:56:54.613" level="INFO"/>
<status status="PASS" endtime="20210325 16:56:54.613" starttime="20210325 16:56:54.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:56:54.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:56:54.615" starttime="20210325 16:56:54.614"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.615" starttime="20210325 16:56:54.598"/>
</kw>
<msg timestamp="20210325 16:56:54.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:56:54.616" starttime="20210325 16:56:54.596"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.616" starttime="20210325 16:56:54.593"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.616" starttime="20210325 16:56:54.593"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.616" starttime="20210325 16:56:54.575"/>
</kw>
<status status="PASS" endtime="20210325 16:56:54.617" starttime="20210325 16:56:54.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:56:54.621" level="INFO">Running command 'ozone sh bucket info 11852-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:02.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:57:02.327" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210325 16:57:02.327" starttime="20210325 16:56:54.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:02.329" level="INFO">{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:50:16.182Z",
  "modificationTime" : "2021-03-25T16:50:48.564Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210325 16:57:02.329" starttime="20210325 16:57:02.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:57:02.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:57:02.331" starttime="20210325 16:57:02.330"/>
</kw>
<status status="PASS" endtime="20210325 16:57:02.332" starttime="20210325 16:56:54.618"/>
</kw>
<msg timestamp="20210325 16:57:02.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:57:02.333" starttime="20210325 16:56:54.618"/>
</kw>
<msg timestamp="20210325 16:57:02.334" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210325 16:57:02.334" starttime="20210325 16:56:54.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:57:02.335" starttime="20210325 16:57:02.334"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:57:02.336" starttime="20210325 16:57:02.335"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:02.341" level="INFO">Running command 'ozone sh key list 11852-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:09.876" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 16:57:09.876" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 11852-source unreadable-bucket </msg>
<status status="PASS" endtime="20210325 16:57:09.876" starttime="20210325 16:57:02.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:09.877" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 11852-source unreadable-bucket </msg>
<status status="PASS" endtime="20210325 16:57:09.877" starttime="20210325 16:57:09.876"/>
</kw>
<msg timestamp="20210325 16:57:09.878" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 11852-source unreadable-bucket </msg>
<status status="PASS" endtime="20210325 16:57:09.878" starttime="20210325 16:57:02.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:57:09.879" starttime="20210325 16:57:09.878"/>
</kw>
<status status="PASS" endtime="20210325 16:57:09.879" starttime="20210325 16:56:54.554"/>
</kw>
<status status="PASS" endtime="20210325 16:57:09.879" starttime="20210325 16:56:54.554"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:57:09.880" starttime="20210325 16:56:54.507"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:09.887" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:09.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:57:09.894" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:57:09.894" starttime="20210325 16:57:09.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:09.900" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:57:09.900" starttime="20210325 16:57:09.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:57:09.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:57:09.901" starttime="20210325 16:57:09.900"/>
</kw>
<status status="PASS" endtime="20210325 16:57:09.901" starttime="20210325 16:57:09.885"/>
</kw>
<msg timestamp="20210325 16:57:09.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:57:09.902" starttime="20210325 16:57:09.884"/>
</kw>
<msg timestamp="20210325 16:57:09.902" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:57:09.902" starttime="20210325 16:57:09.884"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:57:09.903" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:57:09.903" starttime="20210325 16:57:09.902"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:09.909" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:09.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:57:09.920" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:57:09.920" starttime="20210325 16:57:09.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:09.921" level="INFO"/>
<status status="PASS" endtime="20210325 16:57:09.921" starttime="20210325 16:57:09.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:57:09.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:57:09.922" starttime="20210325 16:57:09.921"/>
</kw>
<status status="PASS" endtime="20210325 16:57:09.922" starttime="20210325 16:57:09.905"/>
</kw>
<msg timestamp="20210325 16:57:09.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:57:09.922" starttime="20210325 16:57:09.905"/>
</kw>
<status status="PASS" endtime="20210325 16:57:09.922" starttime="20210325 16:57:09.904"/>
</kw>
<status status="PASS" endtime="20210325 16:57:09.923" starttime="20210325 16:57:09.904"/>
</kw>
<status status="PASS" endtime="20210325 16:57:09.923" starttime="20210325 16:57:09.883"/>
</kw>
<status status="PASS" endtime="20210325 16:57:09.923" starttime="20210325 16:57:09.882"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:09.928" level="INFO">Running command 'ozone sh bucket link 11852-target/loop1 11852-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:16.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:57:16.609" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:57:16.609" starttime="20210325 16:57:09.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:16.610" level="INFO"/>
<status status="PASS" endtime="20210325 16:57:16.611" starttime="20210325 16:57:16.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:57:16.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:57:16.613" starttime="20210325 16:57:16.611"/>
</kw>
<status status="PASS" endtime="20210325 16:57:16.613" starttime="20210325 16:57:09.924"/>
</kw>
<msg timestamp="20210325 16:57:16.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:57:16.614" starttime="20210325 16:57:09.924"/>
</kw>
<status status="PASS" endtime="20210325 16:57:16.615" starttime="20210325 16:57:09.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:16.623" level="INFO">Running command 'ozone sh bucket link 11852-target/loop2 11852-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:23.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:57:23.015" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:57:23.015" starttime="20210325 16:57:16.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:23.017" level="INFO"/>
<status status="PASS" endtime="20210325 16:57:23.017" starttime="20210325 16:57:23.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:57:23.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:57:23.018" starttime="20210325 16:57:23.017"/>
</kw>
<status status="PASS" endtime="20210325 16:57:23.018" starttime="20210325 16:57:16.618"/>
</kw>
<msg timestamp="20210325 16:57:23.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:57:23.018" starttime="20210325 16:57:16.617"/>
</kw>
<status status="PASS" endtime="20210325 16:57:23.019" starttime="20210325 16:57:16.615"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:23.023" level="INFO">Running command 'ozone sh bucket link 11852-target/loop3 11852-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:29.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:57:29.721" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:57:29.721" starttime="20210325 16:57:23.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:29.723" level="INFO"/>
<status status="PASS" endtime="20210325 16:57:29.723" starttime="20210325 16:57:29.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:57:29.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:57:29.727" starttime="20210325 16:57:29.726"/>
</kw>
<status status="PASS" endtime="20210325 16:57:29.728" starttime="20210325 16:57:23.020"/>
</kw>
<msg timestamp="20210325 16:57:29.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:57:29.728" starttime="20210325 16:57:23.020"/>
</kw>
<status status="PASS" endtime="20210325 16:57:29.728" starttime="20210325 16:57:23.019"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:29.733" level="INFO">Running command 'ozone sh key list 11852-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:36.778" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 16:57:36.778" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210325 16:57:36.778" starttime="20210325 16:57:29.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:36.780" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210325 16:57:36.780" starttime="20210325 16:57:36.779"/>
</kw>
<msg timestamp="20210325 16:57:36.780" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210325 16:57:36.780" starttime="20210325 16:57:29.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:57:36.782" starttime="20210325 16:57:36.781"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:57:36.782" starttime="20210325 16:57:09.881"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:36.791" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:36.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:57:36.794" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:57:36.795" starttime="20210325 16:57:36.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:36.796" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:57:36.796" starttime="20210325 16:57:36.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:57:36.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:57:36.797" starttime="20210325 16:57:36.797"/>
</kw>
<status status="PASS" endtime="20210325 16:57:36.798" starttime="20210325 16:57:36.787"/>
</kw>
<msg timestamp="20210325 16:57:36.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:57:36.798" starttime="20210325 16:57:36.787"/>
</kw>
<msg timestamp="20210325 16:57:36.799" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:57:36.799" starttime="20210325 16:57:36.786"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:57:36.801" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:57:36.801" starttime="20210325 16:57:36.799"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:36.807" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:36.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:57:36.815" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:57:36.815" starttime="20210325 16:57:36.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:36.816" level="INFO"/>
<status status="PASS" endtime="20210325 16:57:36.817" starttime="20210325 16:57:36.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:57:36.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:57:36.818" starttime="20210325 16:57:36.817"/>
</kw>
<status status="PASS" endtime="20210325 16:57:36.819" starttime="20210325 16:57:36.803"/>
</kw>
<msg timestamp="20210325 16:57:36.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:57:36.819" starttime="20210325 16:57:36.803"/>
</kw>
<status status="PASS" endtime="20210325 16:57:36.819" starttime="20210325 16:57:36.802"/>
</kw>
<status status="PASS" endtime="20210325 16:57:36.819" starttime="20210325 16:57:36.801"/>
</kw>
<status status="PASS" endtime="20210325 16:57:36.820" starttime="20210325 16:57:36.786"/>
</kw>
<status status="PASS" endtime="20210325 16:57:36.820" starttime="20210325 16:57:36.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:36.826" level="INFO">Running command 'ozone sh bucket link 11852-source/bucket1 11852-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:57:43.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:57:43.606" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:57:43.606" starttime="20210325 16:57:36.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:57:43.608" level="INFO"/>
<status status="PASS" endtime="20210325 16:57:43.608" starttime="20210325 16:57:43.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:57:43.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:57:43.610" starttime="20210325 16:57:43.608"/>
</kw>
<status status="PASS" endtime="20210325 16:57:43.611" starttime="20210325 16:57:36.823"/>
</kw>
<msg timestamp="20210325 16:57:43.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:57:43.611" starttime="20210325 16:57:36.822"/>
</kw>
<status status="PASS" endtime="20210325 16:57:43.612" starttime="20210325 16:57:36.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:57:43.618" level="INFO">Running command 'ozone sh key put 11852-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:59:36.785" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210325 16:59:36.785" starttime="20210325 16:57:43.615"/>
</kw>
<status status="FAIL" endtime="20210325 16:59:36.786" starttime="20210325 16:57:43.614"/>
</kw>
<msg timestamp="20210325 16:59:36.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210325 16:59:36.786" starttime="20210325 16:57:43.613"/>
</kw>
<status status="FAIL" endtime="20210325 16:59:36.786" starttime="20210325 16:57:43.612"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210325 16:59:36.787" starttime="20210325 16:57:36.783">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:59:36.795" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:59:36.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:59:36.798" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:59:36.799" starttime="20210325 16:59:36.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:59:36.799" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:59:36.800" starttime="20210325 16:59:36.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:59:36.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:59:36.801" starttime="20210325 16:59:36.800"/>
</kw>
<status status="PASS" endtime="20210325 16:59:36.802" starttime="20210325 16:59:36.793"/>
</kw>
<msg timestamp="20210325 16:59:36.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:59:36.803" starttime="20210325 16:59:36.792"/>
</kw>
<msg timestamp="20210325 16:59:36.803" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:59:36.803" starttime="20210325 16:59:36.792"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:59:36.804" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:59:36.805" starttime="20210325 16:59:36.804"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:59:36.811" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:59:36.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:59:36.819" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:59:36.819" starttime="20210325 16:59:36.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:59:36.821" level="INFO"/>
<status status="PASS" endtime="20210325 16:59:36.821" starttime="20210325 16:59:36.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:59:36.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:59:36.822" starttime="20210325 16:59:36.821"/>
</kw>
<status status="PASS" endtime="20210325 16:59:36.823" starttime="20210325 16:59:36.807"/>
</kw>
<msg timestamp="20210325 16:59:36.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:59:36.823" starttime="20210325 16:59:36.806"/>
</kw>
<status status="PASS" endtime="20210325 16:59:36.823" starttime="20210325 16:59:36.805"/>
</kw>
<status status="PASS" endtime="20210325 16:59:36.823" starttime="20210325 16:59:36.805"/>
</kw>
<status status="PASS" endtime="20210325 16:59:36.824" starttime="20210325 16:59:36.791"/>
</kw>
<status status="PASS" endtime="20210325 16:59:36.824" starttime="20210325 16:59:36.791"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:59:36.830" level="INFO">Running command 'ozone sh bucket delete 11852-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:59:41.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:59:41.924" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:59:41.925" starttime="20210325 16:59:36.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:59:41.926" level="INFO"/>
<status status="PASS" endtime="20210325 16:59:41.926" starttime="20210325 16:59:41.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:59:41.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:59:41.927" starttime="20210325 16:59:41.926"/>
</kw>
<status status="PASS" endtime="20210325 16:59:41.927" starttime="20210325 16:59:36.826"/>
</kw>
<msg timestamp="20210325 16:59:41.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:59:41.927" starttime="20210325 16:59:36.826"/>
</kw>
<status status="PASS" endtime="20210325 16:59:41.927" starttime="20210325 16:59:36.824"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:59:41.931" level="INFO">Running command 'ozone sh bucket list 11852-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:59:47.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:59:47.757" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T...</msg>
<status status="PASS" endtime="20210325 16:59:47.757" starttime="20210325 16:59:41.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:59:47.761" level="INFO">{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:56:33.157Z",
  "modificationTime" : "2021-03-25T16:56:33.157Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:50:55.425Z",
  "modificationTime" : "2021-03-25T16:50:55.425Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:50:16.182Z",
  "modificationTime" : "2021-03-25T16:50:48.564Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:56:21.467Z",
  "modificationTime" : "2021-03-25T16:56:21.467Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:57:43.513Z",
  "modificationTime" : "2021-03-25T16:57:43.513Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:57:29.602Z",
  "modificationTime" : "2021-03-25T16:57:29.602Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:57:16.514Z",
  "modificationTime" : "2021-03-25T16:57:16.514Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:57:22.947Z",
  "modificationTime" : "2021-03-25T16:57:22.947Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:50:02.268Z",
  "modificationTime" : "2021-03-25T16:50:42.030Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T16:50:09.527Z",
  "modificationTime" : "2021-03-25T16:50:09.527Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "11852-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210325 16:59:47.762" starttime="20210325 16:59:47.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:59:47.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:59:47.767" starttime="20210325 16:59:47.763"/>
</kw>
<status status="PASS" endtime="20210325 16:59:47.769" starttime="20210325 16:59:41.929"/>
</kw>
<msg timestamp="20210325 16:59:47.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:59:47.770" starttime="20210325 16:59:41.928"/>
</kw>
<msg timestamp="20210325 16:59:47.771" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "11852-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-03-25T...</msg>
<status status="PASS" endtime="20210325 16:59:47.771" starttime="20210325 16:59:41.928"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:59:47.774" starttime="20210325 16:59:47.772"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:59:47.788" level="INFO">Running command 'ozone sh key list 11852-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:59:53.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:59:53.146" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210325 16:59:53.146" starttime="20210325 16:59:47.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:59:53.148" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210325 16:59:53.148" starttime="20210325 16:59:53.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:59:53.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:59:53.149" starttime="20210325 16:59:53.148"/>
</kw>
<status status="PASS" endtime="20210325 16:59:53.150" starttime="20210325 16:59:47.779"/>
</kw>
<msg timestamp="20210325 16:59:53.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:59:53.150" starttime="20210325 16:59:47.778"/>
</kw>
<msg timestamp="20210325 16:59:53.151" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210325 16:59:53.151" starttime="20210325 16:59:47.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 16:59:53.152" starttime="20210325 16:59:53.151"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:59:53.152" starttime="20210325 16:59:36.789"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20210325 16:59:53.159" starttime="20210325 16:46:19.597"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210325 16:59:53.219" level="INFO">${random} = 36988</msg>
<status status="PASS" endtime="20210325 16:59:53.219" starttime="20210325 16:59:53.219"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:59:53.220" level="INFO">${prefix} = 36988</msg>
<status status="PASS" endtime="20210325 16:59:53.220" starttime="20210325 16:59:53.219"/>
</kw>
<status status="PASS" endtime="20210325 16:59:53.220" starttime="20210325 16:59:53.218"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:59:53.236" level="INFO">Running command 'ozone sh volume info /36988-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:00:00.039" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 17:00:00.039" level="INFO">${output} = VOLUME_NOT_FOUND Volume 36988-rpcbasic is not found</msg>
<status status="PASS" endtime="20210325 17:00:00.039" starttime="20210325 16:59:53.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:00:00.042" level="INFO">VOLUME_NOT_FOUND Volume 36988-rpcbasic is not found</msg>
<status status="PASS" endtime="20210325 17:00:00.042" starttime="20210325 17:00:00.040"/>
</kw>
<msg timestamp="20210325 17:00:00.043" level="INFO">${result} = VOLUME_NOT_FOUND Volume 36988-rpcbasic is not found</msg>
<status status="PASS" endtime="20210325 17:00:00.043" starttime="20210325 16:59:53.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:00:00.043" starttime="20210325 17:00:00.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:00:00.052" level="INFO">Running command 'ozone sh volume create /36988-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:00:05.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:00:05.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:00:05.111" starttime="20210325 17:00:00.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:00:05.113" level="INFO"/>
<status status="PASS" endtime="20210325 17:00:05.113" starttime="20210325 17:00:05.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:00:05.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:00:05.114" starttime="20210325 17:00:05.113"/>
</kw>
<status status="PASS" endtime="20210325 17:00:05.114" starttime="20210325 17:00:00.046"/>
</kw>
<msg timestamp="20210325 17:00:05.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:00:05.114" starttime="20210325 17:00:00.045"/>
</kw>
<msg timestamp="20210325 17:00:05.115" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210325 17:00:05.115" starttime="20210325 17:00:00.044"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:00:05.115" starttime="20210325 17:00:05.115"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:00:05.122" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="36988-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:00:12.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:00:12.205" level="INFO">${output} = {
  "metadata": {},
  "name": "36988-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210325 17:00:12.205" starttime="20210325 17:00:05.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:00:12.206" level="INFO">{
  "metadata": {},
  "name": "36988-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-25T17:00:04.990Z",
  "modificationTime": "2021-03-25T17:00:04.990Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210325 17:00:12.206" starttime="20210325 17:00:12.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:00:12.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:00:12.207" starttime="20210325 17:00:12.207"/>
</kw>
<status status="PASS" endtime="20210325 17:00:12.212" starttime="20210325 17:00:05.118"/>
</kw>
<msg timestamp="20210325 17:00:12.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:00:12.212" starttime="20210325 17:00:05.117"/>
</kw>
<msg timestamp="20210325 17:00:12.213" level="INFO">${result} = {
  "metadata": {},
  "name": "36988-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210325 17:00:12.213" starttime="20210325 17:00:05.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:00:12.213" starttime="20210325 17:00:12.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:00:12.221" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="36988-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:00:19.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:00:19.788" level="INFO">${output} = {
  "metadata": {},
  "name": "36988-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210325 17:00:19.788" starttime="20210325 17:00:12.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:00:19.790" level="INFO">{
  "metadata": {},
  "name": "36988-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-25T17:00:04.990Z",
  "modificationTime": "2021-03-25T17:00:04.990Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210325 17:00:19.791" starttime="20210325 17:00:19.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:00:19.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:00:19.793" starttime="20210325 17:00:19.791"/>
</kw>
<status status="PASS" endtime="20210325 17:00:19.795" starttime="20210325 17:00:12.215"/>
</kw>
<msg timestamp="20210325 17:00:19.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:00:19.795" starttime="20210325 17:00:12.215"/>
</kw>
<msg timestamp="20210325 17:00:19.796" level="INFO">${result} = {
  "metadata": {},
  "name": "36988-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210325 17:00:19.796" starttime="20210325 17:00:12.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:00:19.797" starttime="20210325 17:00:19.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:00:19.805" level="INFO">Running command 'ozone sh volume setquota /36988-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:00:26.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:00:26.599" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:00:26.600" starttime="20210325 17:00:19.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:00:26.601" level="INFO"/>
<status status="PASS" endtime="20210325 17:00:26.602" starttime="20210325 17:00:26.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:00:26.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:00:26.604" starttime="20210325 17:00:26.602"/>
</kw>
<status status="PASS" endtime="20210325 17:00:26.604" starttime="20210325 17:00:19.800"/>
</kw>
<msg timestamp="20210325 17:00:26.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:00:26.605" starttime="20210325 17:00:19.800"/>
</kw>
<status status="PASS" endtime="20210325 17:00:26.605" starttime="20210325 17:00:19.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:00:26.614" level="INFO">Running command 'ozone sh volume info /36988-rpcbasic | jq -r '. | select(.name=="36988-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:00:34.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:00:34.812" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:00:34.813" starttime="20210325 17:00:26.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:00:34.815" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210325 17:00:34.815" starttime="20210325 17:00:34.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:00:34.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:00:34.816" starttime="20210325 17:00:34.815"/>
</kw>
<status status="PASS" endtime="20210325 17:00:34.817" starttime="20210325 17:00:26.609"/>
</kw>
<msg timestamp="20210325 17:00:34.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:00:34.817" starttime="20210325 17:00:26.608"/>
</kw>
<msg timestamp="20210325 17:00:34.818" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:00:34.818" starttime="20210325 17:00:26.605"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:00:34.819" starttime="20210325 17:00:34.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:00:34.827" level="INFO">Running command 'ozone sh bucket create /36988-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:00:42.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:00:42.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:00:42.526" starttime="20210325 17:00:34.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:00:42.527" level="INFO"/>
<status status="PASS" endtime="20210325 17:00:42.527" starttime="20210325 17:00:42.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:00:42.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:00:42.529" starttime="20210325 17:00:42.528"/>
</kw>
<status status="PASS" endtime="20210325 17:00:42.529" starttime="20210325 17:00:34.822"/>
</kw>
<msg timestamp="20210325 17:00:42.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:00:42.529" starttime="20210325 17:00:34.821"/>
</kw>
<status status="PASS" endtime="20210325 17:00:42.530" starttime="20210325 17:00:34.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:00:42.536" level="INFO">Running command 'ozone sh bucket info /36988-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:00:52.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:00:52.148" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210325 17:00:52.148" starttime="20210325 17:00:42.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:00:52.150" level="INFO">DISK</msg>
<status status="PASS" endtime="20210325 17:00:52.150" starttime="20210325 17:00:52.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:00:52.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:00:52.151" starttime="20210325 17:00:52.150"/>
</kw>
<status status="PASS" endtime="20210325 17:00:52.151" starttime="20210325 17:00:42.531"/>
</kw>
<msg timestamp="20210325 17:00:52.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:00:52.151" starttime="20210325 17:00:42.531"/>
</kw>
<msg timestamp="20210325 17:00:52.151" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210325 17:00:52.151" starttime="20210325 17:00:42.530"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:00:52.152" starttime="20210325 17:00:52.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:00:52.157" level="INFO">Running command 'ozone sh bucket info /36988-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:01:01.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:01:01.704" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:01:01.704" starttime="20210325 17:00:52.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:01:01.706" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210325 17:01:01.707" starttime="20210325 17:01:01.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:01:01.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:01:01.708" starttime="20210325 17:01:01.707"/>
</kw>
<status status="PASS" endtime="20210325 17:01:01.709" starttime="20210325 17:00:52.154"/>
</kw>
<msg timestamp="20210325 17:01:01.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:01:01.710" starttime="20210325 17:00:52.154"/>
</kw>
<msg timestamp="20210325 17:01:01.711" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:01:01.711" starttime="20210325 17:00:52.152"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:01:01.712" starttime="20210325 17:01:01.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:01:01.719" level="INFO">Running command 'ozone sh bucket info /36988-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:01:11.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:01:11.137" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210325 17:01:11.137" starttime="20210325 17:01:01.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:01:11.139" level="INFO">100</msg>
<status status="PASS" endtime="20210325 17:01:11.139" starttime="20210325 17:01:11.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:01:11.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:01:11.141" starttime="20210325 17:01:11.139"/>
</kw>
<status status="PASS" endtime="20210325 17:01:11.142" starttime="20210325 17:01:01.715"/>
</kw>
<msg timestamp="20210325 17:01:11.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:01:11.142" starttime="20210325 17:01:01.714"/>
</kw>
<msg timestamp="20210325 17:01:11.142" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210325 17:01:11.143" starttime="20210325 17:01:01.713"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:01:11.144" starttime="20210325 17:01:11.143"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:01:11.156" level="INFO">Running command 'ozone sh bucket setquota /36988-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:01:20.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:01:20.722" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:01:20.722" starttime="20210325 17:01:11.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:01:20.724" level="INFO"/>
<status status="PASS" endtime="20210325 17:01:20.724" starttime="20210325 17:01:20.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:01:20.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:01:20.728" starttime="20210325 17:01:20.724"/>
</kw>
<status status="PASS" endtime="20210325 17:01:20.729" starttime="20210325 17:01:11.148"/>
</kw>
<msg timestamp="20210325 17:01:20.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:01:20.729" starttime="20210325 17:01:11.148"/>
</kw>
<status status="PASS" endtime="20210325 17:01:20.730" starttime="20210325 17:01:11.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:01:20.750" level="INFO">Running command 'ozone sh bucket info /36988-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:01:30.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:01:30.283" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210325 17:01:30.283" starttime="20210325 17:01:20.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:01:30.285" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210325 17:01:30.286" starttime="20210325 17:01:30.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:01:30.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:01:30.289" starttime="20210325 17:01:30.287"/>
</kw>
<status status="PASS" endtime="20210325 17:01:30.290" starttime="20210325 17:01:20.740"/>
</kw>
<msg timestamp="20210325 17:01:30.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:01:30.291" starttime="20210325 17:01:20.738"/>
</kw>
<msg timestamp="20210325 17:01:30.292" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210325 17:01:30.292" starttime="20210325 17:01:20.730"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:01:30.294" starttime="20210325 17:01:30.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:01:30.302" level="INFO">Running command 'ozone sh bucket info /36988-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:01:40.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:01:40.494" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210325 17:01:40.494" starttime="20210325 17:01:30.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:01:40.495" level="INFO">1000</msg>
<status status="PASS" endtime="20210325 17:01:40.496" starttime="20210325 17:01:40.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:01:40.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:01:40.497" starttime="20210325 17:01:40.496"/>
</kw>
<status status="PASS" endtime="20210325 17:01:40.498" starttime="20210325 17:01:30.296"/>
</kw>
<msg timestamp="20210325 17:01:40.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:01:40.499" starttime="20210325 17:01:30.296"/>
</kw>
<msg timestamp="20210325 17:01:40.500" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210325 17:01:40.500" starttime="20210325 17:01:30.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:01:40.501" starttime="20210325 17:01:40.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:01:40.508" level="INFO">Running command 'ozone sh bucket list /36988-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:01:49.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:01:49.950" level="INFO">${output} = 36988-rpcbasic</msg>
<status status="PASS" endtime="20210325 17:01:49.950" starttime="20210325 17:01:40.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:01:49.956" level="INFO">36988-rpcbasic</msg>
<status status="PASS" endtime="20210325 17:01:49.956" starttime="20210325 17:01:49.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:01:49.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:01:49.958" starttime="20210325 17:01:49.957"/>
</kw>
<status status="PASS" endtime="20210325 17:01:49.959" starttime="20210325 17:01:40.504"/>
</kw>
<msg timestamp="20210325 17:01:49.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:01:49.959" starttime="20210325 17:01:40.504"/>
</kw>
<msg timestamp="20210325 17:01:49.960" level="INFO">${result} = 36988-rpcbasic</msg>
<status status="PASS" endtime="20210325 17:01:49.960" starttime="20210325 17:01:40.501"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:01:49.961" starttime="20210325 17:01:49.960"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:01:49.973" level="INFO">Running command 'ozone sh key put /36988-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:04:53.221" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210325 17:04:53.221" starttime="20210325 17:01:49.969"/>
</kw>
<status status="FAIL" endtime="20210325 17:04:53.222" starttime="20210325 17:01:49.969"/>
</kw>
<msg timestamp="20210325 17:04:53.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210325 17:04:53.222" starttime="20210325 17:01:49.968"/>
</kw>
<status status="FAIL" endtime="20210325 17:04:53.222" starttime="20210325 17:01:49.966"/>
</kw>
<status status="FAIL" endtime="20210325 17:04:53.222" starttime="20210325 17:01:49.963"/>
</kw>
<status status="FAIL" endtime="20210325 17:04:53.222" starttime="20210325 17:01:49.962"/>
</kw>
<status status="FAIL" endtime="20210325 17:04:53.222" starttime="20210325 16:59:53.221"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210325 17:04:53.223" starttime="20210325 16:59:53.220">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210325 17:04:53.226" starttime="20210325 16:59:53.174"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210325 17:04:53.244" level="INFO">${random} = 10202</msg>
<status status="PASS" endtime="20210325 17:04:53.245" starttime="20210325 17:04:53.244"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 17:04:53.246" level="INFO">${prefix} = 10202</msg>
<status status="PASS" endtime="20210325 17:04:53.246" starttime="20210325 17:04:53.245"/>
</kw>
<status status="PASS" endtime="20210325 17:04:53.246" starttime="20210325 17:04:53.243"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:04:53.253" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:04:53.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:04:53.257" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 17:04:53.257" starttime="20210325 17:04:53.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:04:53.258" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 17:04:53.258" starttime="20210325 17:04:53.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:04:53.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:04:53.260" starttime="20210325 17:04:53.259"/>
</kw>
<status status="PASS" endtime="20210325 17:04:53.260" starttime="20210325 17:04:53.249"/>
</kw>
<msg timestamp="20210325 17:04:53.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:04:53.260" starttime="20210325 17:04:53.249"/>
</kw>
<msg timestamp="20210325 17:04:53.261" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 17:04:53.261" starttime="20210325 17:04:53.248"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 17:04:53.262" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 17:04:53.262" starttime="20210325 17:04:53.261"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:04:53.268" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:04:53.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:04:53.311" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:04:53.312" starttime="20210325 17:04:53.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:04:53.313" level="INFO"/>
<status status="PASS" endtime="20210325 17:04:53.313" starttime="20210325 17:04:53.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:04:53.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:04:53.314" starttime="20210325 17:04:53.313"/>
</kw>
<status status="PASS" endtime="20210325 17:04:53.314" starttime="20210325 17:04:53.265"/>
</kw>
<msg timestamp="20210325 17:04:53.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:04:53.314" starttime="20210325 17:04:53.265"/>
</kw>
<status status="PASS" endtime="20210325 17:04:53.315" starttime="20210325 17:04:53.263"/>
</kw>
<status status="PASS" endtime="20210325 17:04:53.315" starttime="20210325 17:04:53.263"/>
</kw>
<status status="PASS" endtime="20210325 17:04:53.315" starttime="20210325 17:04:53.248"/>
</kw>
<status status="PASS" endtime="20210325 17:04:53.315" starttime="20210325 17:04:53.247"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:04:53.331" level="INFO">Running command 'ozone sh volume info o3://om:9862/10202-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:05:00.432" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 17:05:00.432" level="INFO">${output} = VOLUME_NOT_FOUND Volume 10202-rpcwoport is not found</msg>
<status status="PASS" endtime="20210325 17:05:00.432" starttime="20210325 17:04:53.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:05:00.433" level="INFO">VOLUME_NOT_FOUND Volume 10202-rpcwoport is not found</msg>
<status status="PASS" endtime="20210325 17:05:00.433" starttime="20210325 17:05:00.432"/>
</kw>
<msg timestamp="20210325 17:05:00.434" level="INFO">${result} = VOLUME_NOT_FOUND Volume 10202-rpcwoport is not found</msg>
<status status="PASS" endtime="20210325 17:05:00.434" starttime="20210325 17:04:53.316"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:05:00.434" starttime="20210325 17:05:00.434"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:05:00.439" level="INFO">Running command 'ozone sh volume create o3://om:9862/10202-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:05:07.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:05:07.667" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:05:07.667" starttime="20210325 17:05:00.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:05:07.669" level="INFO"/>
<status status="PASS" endtime="20210325 17:05:07.670" starttime="20210325 17:05:07.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:05:07.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:05:07.671" starttime="20210325 17:05:07.670"/>
</kw>
<status status="PASS" endtime="20210325 17:05:07.672" starttime="20210325 17:05:00.435"/>
</kw>
<msg timestamp="20210325 17:05:07.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:05:07.673" starttime="20210325 17:05:00.435"/>
</kw>
<msg timestamp="20210325 17:05:07.674" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210325 17:05:07.674" starttime="20210325 17:05:00.434"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:05:07.675" starttime="20210325 17:05:07.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:05:07.680" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="10202-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:05:15.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:05:15.263" level="INFO">${output} = {
  "metadata": {},
  "name": "10202-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210325 17:05:15.264" starttime="20210325 17:05:07.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:05:15.266" level="INFO">{
  "metadata": {},
  "name": "10202-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-25T17:05:07.363Z",
  "modificationTime": "2021-03-25T17:05:07.363Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210325 17:05:15.266" starttime="20210325 17:05:15.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:05:15.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:05:15.267" starttime="20210325 17:05:15.266"/>
</kw>
<status status="PASS" endtime="20210325 17:05:15.268" starttime="20210325 17:05:07.676"/>
</kw>
<msg timestamp="20210325 17:05:15.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:05:15.268" starttime="20210325 17:05:07.676"/>
</kw>
<msg timestamp="20210325 17:05:15.269" level="INFO">${result} = {
  "metadata": {},
  "name": "10202-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210325 17:05:15.269" starttime="20210325 17:05:07.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:05:15.270" starttime="20210325 17:05:15.269"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:05:15.277" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="10202-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:05:20.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:05:20.547" level="INFO">${output} = {
  "metadata": {},
  "name": "10202-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210325 17:05:20.547" starttime="20210325 17:05:15.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:05:20.548" level="INFO">{
  "metadata": {},
  "name": "10202-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-25T17:05:07.363Z",
  "modificationTime": "2021-03-25T17:05:07.363Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210325 17:05:20.548" starttime="20210325 17:05:20.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:05:20.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:05:20.549" starttime="20210325 17:05:20.548"/>
</kw>
<status status="PASS" endtime="20210325 17:05:20.549" starttime="20210325 17:05:15.272"/>
</kw>
<msg timestamp="20210325 17:05:20.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:05:20.549" starttime="20210325 17:05:15.271"/>
</kw>
<msg timestamp="20210325 17:05:20.549" level="INFO">${result} = {
  "metadata": {},
  "name": "10202-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210325 17:05:20.550" starttime="20210325 17:05:15.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:05:20.550" starttime="20210325 17:05:20.550"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:05:20.555" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/10202-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:05:26.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:05:26.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:05:26.868" starttime="20210325 17:05:20.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:05:26.872" level="INFO"/>
<status status="PASS" endtime="20210325 17:05:26.872" starttime="20210325 17:05:26.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:05:26.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:05:26.875" starttime="20210325 17:05:26.873"/>
</kw>
<status status="PASS" endtime="20210325 17:05:26.876" starttime="20210325 17:05:20.551"/>
</kw>
<msg timestamp="20210325 17:05:26.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:05:26.876" starttime="20210325 17:05:20.551"/>
</kw>
<status status="PASS" endtime="20210325 17:05:26.876" starttime="20210325 17:05:20.550"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:05:26.884" level="INFO">Running command 'ozone sh volume info o3://om:9862/10202-rpcwoport | jq -r '. | select(.name=="10202-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:05:34.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:05:34.408" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:05:34.409" starttime="20210325 17:05:26.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:05:34.410" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210325 17:05:34.410" starttime="20210325 17:05:34.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:05:34.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:05:34.411" starttime="20210325 17:05:34.410"/>
</kw>
<status status="PASS" endtime="20210325 17:05:34.411" starttime="20210325 17:05:26.879"/>
</kw>
<msg timestamp="20210325 17:05:34.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:05:34.411" starttime="20210325 17:05:26.878"/>
</kw>
<msg timestamp="20210325 17:05:34.412" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:05:34.412" starttime="20210325 17:05:26.877"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:05:34.413" starttime="20210325 17:05:34.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:05:34.419" level="INFO">Running command 'ozone sh bucket create o3://om:9862/10202-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:05:40.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:05:40.535" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:05:40.535" starttime="20210325 17:05:34.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:05:40.537" level="INFO"/>
<status status="PASS" endtime="20210325 17:05:40.537" starttime="20210325 17:05:40.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:05:40.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:05:40.538" starttime="20210325 17:05:40.538"/>
</kw>
<status status="PASS" endtime="20210325 17:05:40.539" starttime="20210325 17:05:34.415"/>
</kw>
<msg timestamp="20210325 17:05:40.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:05:40.539" starttime="20210325 17:05:34.414"/>
</kw>
<status status="PASS" endtime="20210325 17:05:40.540" starttime="20210325 17:05:34.413"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:05:40.549" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10202-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:05:47.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:05:47.609" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210325 17:05:47.610" starttime="20210325 17:05:40.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:05:47.611" level="INFO">DISK</msg>
<status status="PASS" endtime="20210325 17:05:47.611" starttime="20210325 17:05:47.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:05:47.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:05:47.612" starttime="20210325 17:05:47.611"/>
</kw>
<status status="PASS" endtime="20210325 17:05:47.612" starttime="20210325 17:05:40.544"/>
</kw>
<msg timestamp="20210325 17:05:47.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:05:47.613" starttime="20210325 17:05:40.542"/>
</kw>
<msg timestamp="20210325 17:05:47.613" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210325 17:05:47.614" starttime="20210325 17:05:40.540"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:05:47.614" starttime="20210325 17:05:47.614"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:05:47.621" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10202-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:05:54.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:05:54.640" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:05:54.640" starttime="20210325 17:05:47.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:05:54.641" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210325 17:05:54.641" starttime="20210325 17:05:54.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:05:54.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:05:54.642" starttime="20210325 17:05:54.642"/>
</kw>
<status status="PASS" endtime="20210325 17:05:54.642" starttime="20210325 17:05:47.616"/>
</kw>
<msg timestamp="20210325 17:05:54.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:05:54.643" starttime="20210325 17:05:47.616"/>
</kw>
<msg timestamp="20210325 17:05:54.643" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:05:54.643" starttime="20210325 17:05:47.615"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:05:54.644" starttime="20210325 17:05:54.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:05:54.651" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10202-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:06:01.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:06:01.965" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210325 17:06:01.966" starttime="20210325 17:05:54.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:06:01.967" level="INFO">100</msg>
<status status="PASS" endtime="20210325 17:06:01.967" starttime="20210325 17:06:01.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:06:01.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:06:01.968" starttime="20210325 17:06:01.967"/>
</kw>
<status status="PASS" endtime="20210325 17:06:01.968" starttime="20210325 17:05:54.647"/>
</kw>
<msg timestamp="20210325 17:06:01.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:06:01.968" starttime="20210325 17:05:54.646"/>
</kw>
<msg timestamp="20210325 17:06:01.969" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210325 17:06:01.969" starttime="20210325 17:05:54.644"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:06:01.969" starttime="20210325 17:06:01.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:06:01.973" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/10202-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:06:08.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:06:08.696" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:06:08.696" starttime="20210325 17:06:01.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:06:08.698" level="INFO"/>
<status status="PASS" endtime="20210325 17:06:08.698" starttime="20210325 17:06:08.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:06:08.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:06:08.699" starttime="20210325 17:06:08.698"/>
</kw>
<status status="PASS" endtime="20210325 17:06:08.699" starttime="20210325 17:06:01.970"/>
</kw>
<msg timestamp="20210325 17:06:08.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:06:08.699" starttime="20210325 17:06:01.970"/>
</kw>
<status status="PASS" endtime="20210325 17:06:08.700" starttime="20210325 17:06:01.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:06:08.706" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10202-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:06:16.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:06:16.049" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210325 17:06:16.049" starttime="20210325 17:06:08.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:06:16.050" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210325 17:06:16.050" starttime="20210325 17:06:16.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:06:16.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:06:16.051" starttime="20210325 17:06:16.050"/>
</kw>
<status status="PASS" endtime="20210325 17:06:16.051" starttime="20210325 17:06:08.701"/>
</kw>
<msg timestamp="20210325 17:06:16.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:06:16.051" starttime="20210325 17:06:08.701"/>
</kw>
<msg timestamp="20210325 17:06:16.052" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210325 17:06:16.052" starttime="20210325 17:06:08.700"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:06:16.053" starttime="20210325 17:06:16.053"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:06:16.058" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10202-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:06:23.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:06:23.129" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210325 17:06:23.129" starttime="20210325 17:06:16.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:06:23.130" level="INFO">1000</msg>
<status status="PASS" endtime="20210325 17:06:23.130" starttime="20210325 17:06:23.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:06:23.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:06:23.131" starttime="20210325 17:06:23.130"/>
</kw>
<status status="PASS" endtime="20210325 17:06:23.131" starttime="20210325 17:06:16.055"/>
</kw>
<msg timestamp="20210325 17:06:23.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:06:23.131" starttime="20210325 17:06:16.055"/>
</kw>
<msg timestamp="20210325 17:06:23.132" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210325 17:06:23.132" starttime="20210325 17:06:16.054"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:06:23.133" starttime="20210325 17:06:23.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:06:23.138" level="INFO">Running command 'ozone sh bucket list o3://om:9862/10202-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:06:29.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:06:29.990" level="INFO">${output} = 10202-rpcwoport</msg>
<status status="PASS" endtime="20210325 17:06:29.990" starttime="20210325 17:06:23.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:06:29.991" level="INFO">10202-rpcwoport</msg>
<status status="PASS" endtime="20210325 17:06:29.991" starttime="20210325 17:06:29.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:06:29.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:06:29.992" starttime="20210325 17:06:29.991"/>
</kw>
<status status="PASS" endtime="20210325 17:06:29.992" starttime="20210325 17:06:23.134"/>
</kw>
<msg timestamp="20210325 17:06:29.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:06:29.992" starttime="20210325 17:06:23.134"/>
</kw>
<msg timestamp="20210325 17:06:29.993" level="INFO">${result} = 10202-rpcwoport</msg>
<status status="PASS" endtime="20210325 17:06:29.993" starttime="20210325 17:06:23.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:06:29.993" starttime="20210325 17:06:29.993"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:06:29.999" level="INFO">Running command 'ozone sh key put o3://om:9862/10202-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:09:38.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:09:38.734" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:09:38.734" starttime="20210325 17:06:29.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:09:38.736" level="INFO"/>
<status status="PASS" endtime="20210325 17:09:38.736" starttime="20210325 17:09:38.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:09:38.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:09:38.738" starttime="20210325 17:09:38.737"/>
</kw>
<status status="PASS" endtime="20210325 17:09:38.739" starttime="20210325 17:06:29.996"/>
</kw>
<msg timestamp="20210325 17:09:38.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:09:38.740" starttime="20210325 17:06:29.996"/>
</kw>
<status status="PASS" endtime="20210325 17:09:38.740" starttime="20210325 17:06:29.995"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:09:38.747" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:09:38.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:09:38.752" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:09:38.752" starttime="20210325 17:09:38.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:09:38.754" level="INFO"/>
<status status="PASS" endtime="20210325 17:09:38.754" starttime="20210325 17:09:38.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:09:38.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:09:38.755" starttime="20210325 17:09:38.754"/>
</kw>
<status status="PASS" endtime="20210325 17:09:38.756" starttime="20210325 17:09:38.742"/>
</kw>
<msg timestamp="20210325 17:09:38.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:09:38.756" starttime="20210325 17:09:38.742"/>
</kw>
<status status="PASS" endtime="20210325 17:09:38.756" starttime="20210325 17:09:38.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:09:38.762" level="INFO">Running command 'ozone sh key get o3://om:9862/10202-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:09:50.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:09:50.057" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:09:50.057" starttime="20210325 17:09:38.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:09:50.059" level="INFO"/>
<status status="PASS" endtime="20210325 17:09:50.059" starttime="20210325 17:09:50.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:09:50.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:09:50.061" starttime="20210325 17:09:50.059"/>
</kw>
<status status="PASS" endtime="20210325 17:09:50.061" starttime="20210325 17:09:38.758"/>
</kw>
<msg timestamp="20210325 17:09:50.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:09:50.062" starttime="20210325 17:09:38.758"/>
</kw>
<status status="PASS" endtime="20210325 17:09:50.062" starttime="20210325 17:09:38.757"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:09:50.067" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:09:50.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:09:50.072" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:09:50.072" starttime="20210325 17:09:50.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:09:50.076" level="INFO"/>
<status status="PASS" endtime="20210325 17:09:50.076" starttime="20210325 17:09:50.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:09:50.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:09:50.078" starttime="20210325 17:09:50.076"/>
</kw>
<status status="PASS" endtime="20210325 17:09:50.078" starttime="20210325 17:09:50.063"/>
</kw>
<msg timestamp="20210325 17:09:50.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:09:50.079" starttime="20210325 17:09:50.063"/>
</kw>
<status status="PASS" endtime="20210325 17:09:50.079" starttime="20210325 17:09:50.062"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:09:50.085" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/10202-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:09:53.252" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210325 17:09:53.252" starttime="20210325 17:09:50.082"/>
</kw>
<status status="FAIL" endtime="20210325 17:09:53.253" starttime="20210325 17:09:50.081"/>
</kw>
<msg timestamp="20210325 17:09:53.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210325 17:09:53.253" starttime="20210325 17:09:50.081"/>
</kw>
<status status="FAIL" endtime="20210325 17:09:53.254" starttime="20210325 17:09:50.080"/>
</kw>
<status status="FAIL" endtime="20210325 17:09:53.254" starttime="20210325 17:06:29.994"/>
</kw>
<status status="FAIL" endtime="20210325 17:09:53.254" starttime="20210325 17:06:29.994"/>
</kw>
<status status="FAIL" endtime="20210325 17:09:53.254" starttime="20210325 17:04:53.315"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210325 17:09:53.255" starttime="20210325 17:04:53.246">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:09:53.294" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:09:53.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:09:53.307" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 17:09:53.307" starttime="20210325 17:09:53.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:09:53.309" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 17:09:53.310" starttime="20210325 17:09:53.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:09:53.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:09:53.310" starttime="20210325 17:09:53.310"/>
</kw>
<status status="PASS" endtime="20210325 17:09:53.311" starttime="20210325 17:09:53.272"/>
</kw>
<msg timestamp="20210325 17:09:53.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:09:53.311" starttime="20210325 17:09:53.272"/>
</kw>
<msg timestamp="20210325 17:09:53.311" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 17:09:53.312" starttime="20210325 17:09:53.265"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 17:09:53.314" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 17:09:53.314" starttime="20210325 17:09:53.313"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:09:53.339" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:09:53.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:09:53.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:09:53.401" starttime="20210325 17:09:53.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:09:53.403" level="INFO"/>
<status status="PASS" endtime="20210325 17:09:53.403" starttime="20210325 17:09:53.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:09:53.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:09:53.406" starttime="20210325 17:09:53.406"/>
</kw>
<status status="PASS" endtime="20210325 17:09:53.407" starttime="20210325 17:09:53.322"/>
</kw>
<msg timestamp="20210325 17:09:53.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:09:53.409" starttime="20210325 17:09:53.322"/>
</kw>
<status status="PASS" endtime="20210325 17:09:53.409" starttime="20210325 17:09:53.320"/>
</kw>
<status status="PASS" endtime="20210325 17:09:53.409" starttime="20210325 17:09:53.314"/>
</kw>
<status status="PASS" endtime="20210325 17:09:53.409" starttime="20210325 17:09:53.262"/>
</kw>
<status status="PASS" endtime="20210325 17:09:53.409" starttime="20210325 17:09:53.259"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:09:53.428" level="INFO">Running command 'ozone sh volume create o3://om:9862/10202-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:10:08.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:10:08.625" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:10:08.626" starttime="20210325 17:09:53.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:10:08.627" level="INFO"/>
<status status="PASS" endtime="20210325 17:10:08.627" starttime="20210325 17:10:08.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:10:08.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:10:08.628" starttime="20210325 17:10:08.627"/>
</kw>
<status status="PASS" endtime="20210325 17:10:08.629" starttime="20210325 17:09:53.411"/>
</kw>
<msg timestamp="20210325 17:10:08.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:10:08.629" starttime="20210325 17:09:53.411"/>
</kw>
<status status="PASS" endtime="20210325 17:10:08.629" starttime="20210325 17:09:53.410"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:10:08.643" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10202-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:10:17.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:10:17.522" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:10:17.522" starttime="20210325 17:10:08.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:10:17.525" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:10:17.525" starttime="20210325 17:10:17.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:10:17.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:10:17.526" starttime="20210325 17:10:17.525"/>
</kw>
<status status="PASS" endtime="20210325 17:10:17.529" starttime="20210325 17:10:08.631"/>
</kw>
<msg timestamp="20210325 17:10:17.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:10:17.529" starttime="20210325 17:10:08.630"/>
</kw>
<msg timestamp="20210325 17:10:17.530" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:10:17.530" starttime="20210325 17:10:08.629"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:10:17.532" starttime="20210325 17:10:17.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:10:17.540" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/10202-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:10:22.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:10:22.175" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210325 17:10:22.176" starttime="20210325 17:10:17.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:10:22.177" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210325 17:10:22.177" starttime="20210325 17:10:22.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:10:22.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:10:22.178" starttime="20210325 17:10:22.177"/>
</kw>
<status status="PASS" endtime="20210325 17:10:22.178" starttime="20210325 17:10:17.535"/>
</kw>
<msg timestamp="20210325 17:10:22.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:10:22.178" starttime="20210325 17:10:17.534"/>
</kw>
<msg timestamp="20210325 17:10:22.179" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210325 17:10:22.179" starttime="20210325 17:10:17.533"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:10:22.187" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10202-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:10:29.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:10:29.738" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:10:29.738" starttime="20210325 17:10:22.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:10:29.740" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:10:29.740" starttime="20210325 17:10:29.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:10:29.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:10:29.741" starttime="20210325 17:10:29.741"/>
</kw>
<status status="PASS" endtime="20210325 17:10:29.742" starttime="20210325 17:10:22.181"/>
</kw>
<msg timestamp="20210325 17:10:29.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:10:29.742" starttime="20210325 17:10:22.180"/>
</kw>
<msg timestamp="20210325 17:10:29.743" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:10:29.743" starttime="20210325 17:10:22.179"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:10:29.745" starttime="20210325 17:10:29.743"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:10:29.750" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/10202-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:10:36.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:10:36.789" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210325 17:10:36.789" starttime="20210325 17:10:29.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:10:36.791" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210325 17:10:36.791" starttime="20210325 17:10:36.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:10:36.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:10:36.792" starttime="20210325 17:10:36.791"/>
</kw>
<status status="PASS" endtime="20210325 17:10:36.792" starttime="20210325 17:10:29.746"/>
</kw>
<msg timestamp="20210325 17:10:36.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:10:36.792" starttime="20210325 17:10:29.746"/>
</kw>
<msg timestamp="20210325 17:10:36.792" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210325 17:10:36.793" starttime="20210325 17:10:29.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:10:36.798" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10202-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:10:44.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:10:44.144" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:10:44.144" starttime="20210325 17:10:36.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:10:44.145" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:10:44.145" starttime="20210325 17:10:44.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:10:44.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:10:44.146" starttime="20210325 17:10:44.145"/>
</kw>
<status status="PASS" endtime="20210325 17:10:44.146" starttime="20210325 17:10:36.794"/>
</kw>
<msg timestamp="20210325 17:10:44.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:10:44.147" starttime="20210325 17:10:36.794"/>
</kw>
<msg timestamp="20210325 17:10:44.147" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:10:44.147" starttime="20210325 17:10:36.793"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:10:44.149" starttime="20210325 17:10:44.147"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:10:44.156" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/10202-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:10:51.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:10:51.487" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:10:51.487" starttime="20210325 17:10:44.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:10:51.489" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:10:51.489" starttime="20210325 17:10:51.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:10:51.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:10:51.489" starttime="20210325 17:10:51.489"/>
</kw>
<status status="PASS" endtime="20210325 17:10:51.490" starttime="20210325 17:10:44.151"/>
</kw>
<msg timestamp="20210325 17:10:51.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:10:51.490" starttime="20210325 17:10:44.150"/>
</kw>
<msg timestamp="20210325 17:10:51.490" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:10:51.490" starttime="20210325 17:10:44.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:10:51.496" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10202-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:10:58.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:10:58.155" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210325 17:10:58.155" starttime="20210325 17:10:51.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:10:58.156" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:10:58.157" starttime="20210325 17:10:58.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:10:58.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:10:58.157" starttime="20210325 17:10:58.157"/>
</kw>
<status status="PASS" endtime="20210325 17:10:58.158" starttime="20210325 17:10:51.492"/>
</kw>
<msg timestamp="20210325 17:10:58.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:10:58.158" starttime="20210325 17:10:51.491"/>
</kw>
<msg timestamp="20210325 17:10:58.158" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210325 17:10:58.158" starttime="20210325 17:10:51.490"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:10:58.159" starttime="20210325 17:10:58.158"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:10:58.161" starttime="20210325 17:10:58.159"/>
</kw>
<status status="PASS" endtime="20210325 17:10:58.161" starttime="20210325 17:09:53.410"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210325 17:10:58.161" starttime="20210325 17:09:53.257"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:10:58.173" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:10:58.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:10:58.178" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 17:10:58.178" starttime="20210325 17:10:58.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:10:58.180" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 17:10:58.180" starttime="20210325 17:10:58.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:10:58.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:10:58.182" starttime="20210325 17:10:58.181"/>
</kw>
<status status="PASS" endtime="20210325 17:10:58.183" starttime="20210325 17:10:58.168"/>
</kw>
<msg timestamp="20210325 17:10:58.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:10:58.183" starttime="20210325 17:10:58.167"/>
</kw>
<msg timestamp="20210325 17:10:58.184" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 17:10:58.184" starttime="20210325 17:10:58.167"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 17:10:58.185" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 17:10:58.185" starttime="20210325 17:10:58.184"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:10:58.196" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:10:58.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:10:58.210" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:10:58.210" starttime="20210325 17:10:58.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:10:58.211" level="INFO"/>
<status status="PASS" endtime="20210325 17:10:58.212" starttime="20210325 17:10:58.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:10:58.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:10:58.213" starttime="20210325 17:10:58.212"/>
</kw>
<status status="PASS" endtime="20210325 17:10:58.214" starttime="20210325 17:10:58.188"/>
</kw>
<msg timestamp="20210325 17:10:58.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:10:58.214" starttime="20210325 17:10:58.187"/>
</kw>
<status status="PASS" endtime="20210325 17:10:58.214" starttime="20210325 17:10:58.186"/>
</kw>
<status status="PASS" endtime="20210325 17:10:58.214" starttime="20210325 17:10:58.185"/>
</kw>
<status status="PASS" endtime="20210325 17:10:58.214" starttime="20210325 17:10:58.165"/>
</kw>
<status status="PASS" endtime="20210325 17:10:58.215" starttime="20210325 17:10:58.164"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:10:58.220" level="INFO">Running command 'ozone sh bucket create o3://om:9862/10202-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:11:05.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:11:05.644" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:11:05.645" starttime="20210325 17:10:58.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:11:05.647" level="INFO"/>
<status status="PASS" endtime="20210325 17:11:05.647" starttime="20210325 17:11:05.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:11:05.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:11:05.649" starttime="20210325 17:11:05.647"/>
</kw>
<status status="PASS" endtime="20210325 17:11:05.649" starttime="20210325 17:10:58.217"/>
</kw>
<msg timestamp="20210325 17:11:05.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:11:05.650" starttime="20210325 17:10:58.217"/>
</kw>
<status status="PASS" endtime="20210325 17:11:05.650" starttime="20210325 17:10:58.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:11:05.657" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10202-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:11:13.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:11:13.691" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:11:13.691" starttime="20210325 17:11:05.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:11:13.693" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:11:13.693" starttime="20210325 17:11:13.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:11:13.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:11:13.694" starttime="20210325 17:11:13.693"/>
</kw>
<status status="PASS" endtime="20210325 17:11:13.695" starttime="20210325 17:11:05.653"/>
</kw>
<msg timestamp="20210325 17:11:13.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:11:13.696" starttime="20210325 17:11:05.652"/>
</kw>
<msg timestamp="20210325 17:11:13.696" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:11:13.696" starttime="20210325 17:11:05.651"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:11:13.697" starttime="20210325 17:11:13.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:11:13.703" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/10202-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:11:21.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:11:21.250" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210325 17:11:21.250" starttime="20210325 17:11:13.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:11:21.252" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210325 17:11:21.252" starttime="20210325 17:11:21.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:11:21.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:11:21.252" starttime="20210325 17:11:21.252"/>
</kw>
<status status="PASS" endtime="20210325 17:11:21.253" starttime="20210325 17:11:13.698"/>
</kw>
<msg timestamp="20210325 17:11:21.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:11:21.253" starttime="20210325 17:11:13.698"/>
</kw>
<msg timestamp="20210325 17:11:21.253" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210325 17:11:21.253" starttime="20210325 17:11:13.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:11:21.259" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10202-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:11:28.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:11:28.264" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:11:28.264" starttime="20210325 17:11:21.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:11:28.266" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:11:28.266" starttime="20210325 17:11:28.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:11:28.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:11:28.266" starttime="20210325 17:11:28.266"/>
</kw>
<status status="PASS" endtime="20210325 17:11:28.267" starttime="20210325 17:11:21.255"/>
</kw>
<msg timestamp="20210325 17:11:28.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:11:28.268" starttime="20210325 17:11:21.255"/>
</kw>
<msg timestamp="20210325 17:11:28.268" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:11:28.269" starttime="20210325 17:11:21.254"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:11:28.271" starttime="20210325 17:11:28.269"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:11:28.277" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/10202-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:11:35.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:11:35.591" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210325 17:11:35.591" starttime="20210325 17:11:28.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:11:35.593" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210325 17:11:35.593" starttime="20210325 17:11:35.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:11:35.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:11:35.594" starttime="20210325 17:11:35.593"/>
</kw>
<status status="PASS" endtime="20210325 17:11:35.594" starttime="20210325 17:11:28.273"/>
</kw>
<msg timestamp="20210325 17:11:35.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:11:35.594" starttime="20210325 17:11:28.273"/>
</kw>
<msg timestamp="20210325 17:11:35.595" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210325 17:11:35.595" starttime="20210325 17:11:28.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:11:35.600" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10202-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:11:42.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:11:42.933" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:11:42.933" starttime="20210325 17:11:35.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:11:42.935" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:11:42.936" starttime="20210325 17:11:42.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:11:42.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:11:42.938" starttime="20210325 17:11:42.936"/>
</kw>
<status status="PASS" endtime="20210325 17:11:42.939" starttime="20210325 17:11:35.596"/>
</kw>
<msg timestamp="20210325 17:11:42.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:11:42.940" starttime="20210325 17:11:35.596"/>
</kw>
<msg timestamp="20210325 17:11:42.941" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:11:42.941" starttime="20210325 17:11:35.595"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:11:42.943" starttime="20210325 17:11:42.941"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:11:42.950" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/10202-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:11:49.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:11:49.847" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:11:49.847" starttime="20210325 17:11:42.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:11:49.850" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:11:49.850" starttime="20210325 17:11:49.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:11:49.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:11:49.852" starttime="20210325 17:11:49.850"/>
</kw>
<status status="PASS" endtime="20210325 17:11:49.853" starttime="20210325 17:11:42.945"/>
</kw>
<msg timestamp="20210325 17:11:49.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:11:49.854" starttime="20210325 17:11:42.944"/>
</kw>
<msg timestamp="20210325 17:11:49.854" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:11:49.854" starttime="20210325 17:11:42.943"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:11:49.862" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10202-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:11:57.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:11:57.577" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210325 17:11:57.577" starttime="20210325 17:11:49.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:11:57.578" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:11:57.579" starttime="20210325 17:11:57.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:11:57.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:11:57.580" starttime="20210325 17:11:57.579"/>
</kw>
<status status="PASS" endtime="20210325 17:11:57.580" starttime="20210325 17:11:49.857"/>
</kw>
<msg timestamp="20210325 17:11:57.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:11:57.581" starttime="20210325 17:11:49.856"/>
</kw>
<msg timestamp="20210325 17:11:57.581" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210325 17:11:57.581" starttime="20210325 17:11:49.854"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:11:57.582" starttime="20210325 17:11:57.581"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:11:57.583" starttime="20210325 17:11:57.582"/>
</kw>
<status status="PASS" endtime="20210325 17:11:57.583" starttime="20210325 17:10:58.215"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210325 17:11:57.584" starttime="20210325 17:10:58.163"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:11:57.592" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:11:57.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:11:57.596" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 17:11:57.596" starttime="20210325 17:11:57.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:11:57.597" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 17:11:57.597" starttime="20210325 17:11:57.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:11:57.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:11:57.598" starttime="20210325 17:11:57.597"/>
</kw>
<status status="PASS" endtime="20210325 17:11:57.598" starttime="20210325 17:11:57.589"/>
</kw>
<msg timestamp="20210325 17:11:57.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:11:57.599" starttime="20210325 17:11:57.588"/>
</kw>
<msg timestamp="20210325 17:11:57.599" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 17:11:57.599" starttime="20210325 17:11:57.587"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 17:11:57.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 17:11:57.601" starttime="20210325 17:11:57.600"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:11:57.609" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:11:57.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:11:57.619" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:11:57.619" starttime="20210325 17:11:57.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:11:57.620" level="INFO"/>
<status status="PASS" endtime="20210325 17:11:57.620" starttime="20210325 17:11:57.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:11:57.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:11:57.621" starttime="20210325 17:11:57.621"/>
</kw>
<status status="PASS" endtime="20210325 17:11:57.622" starttime="20210325 17:11:57.603"/>
</kw>
<msg timestamp="20210325 17:11:57.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:11:57.622" starttime="20210325 17:11:57.603"/>
</kw>
<status status="PASS" endtime="20210325 17:11:57.622" starttime="20210325 17:11:57.602"/>
</kw>
<status status="PASS" endtime="20210325 17:11:57.622" starttime="20210325 17:11:57.601"/>
</kw>
<status status="PASS" endtime="20210325 17:11:57.623" starttime="20210325 17:11:57.587"/>
</kw>
<status status="PASS" endtime="20210325 17:11:57.623" starttime="20210325 17:11:57.586"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:11:57.629" level="INFO">Running command 'ozone sh key put o3://om:9862/10202-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:15:08.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:15:08.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:15:08.877" starttime="20210325 17:11:57.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:15:08.879" level="INFO"/>
<status status="PASS" endtime="20210325 17:15:08.879" starttime="20210325 17:15:08.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:15:08.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:15:08.880" starttime="20210325 17:15:08.879"/>
</kw>
<status status="PASS" endtime="20210325 17:15:08.881" starttime="20210325 17:11:57.626"/>
</kw>
<msg timestamp="20210325 17:15:08.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:15:08.881" starttime="20210325 17:11:57.625"/>
</kw>
<status status="PASS" endtime="20210325 17:15:08.882" starttime="20210325 17:11:57.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:15:08.889" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10202-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:15:16.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:15:16.330" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:15:16.330" starttime="20210325 17:15:08.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:15:16.331" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:15:16.331" starttime="20210325 17:15:16.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:15:16.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:15:16.332" starttime="20210325 17:15:16.331"/>
</kw>
<status status="PASS" endtime="20210325 17:15:16.333" starttime="20210325 17:15:08.885"/>
</kw>
<msg timestamp="20210325 17:15:16.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:15:16.333" starttime="20210325 17:15:08.884"/>
</kw>
<msg timestamp="20210325 17:15:16.334" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:15:16.334" starttime="20210325 17:15:08.882"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:15:16.336" starttime="20210325 17:15:16.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:15:16.344" level="INFO">Running command 'ozone sh key addacl o3://om:9862/10202-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:15:23.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:15:23.749" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 17:15:23.749" starttime="20210325 17:15:16.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:15:23.750" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 17:15:23.750" starttime="20210325 17:15:23.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:15:23.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:15:23.751" starttime="20210325 17:15:23.751"/>
</kw>
<status status="PASS" endtime="20210325 17:15:23.751" starttime="20210325 17:15:16.339"/>
</kw>
<msg timestamp="20210325 17:15:23.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:15:23.752" starttime="20210325 17:15:16.338"/>
</kw>
<msg timestamp="20210325 17:15:23.752" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210325 17:15:23.752" starttime="20210325 17:15:16.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:15:23.758" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10202-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:15:31.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:15:31.128" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:15:31.128" starttime="20210325 17:15:23.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:15:31.130" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:15:31.131" starttime="20210325 17:15:31.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:15:31.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:15:31.132" starttime="20210325 17:15:31.131"/>
</kw>
<status status="PASS" endtime="20210325 17:15:31.133" starttime="20210325 17:15:23.753"/>
</kw>
<msg timestamp="20210325 17:15:31.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:15:31.134" starttime="20210325 17:15:23.753"/>
</kw>
<msg timestamp="20210325 17:15:31.135" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:15:31.135" starttime="20210325 17:15:23.752"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:15:31.137" starttime="20210325 17:15:31.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:15:31.143" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/10202-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:15:38.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:15:38.064" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210325 17:15:38.064" starttime="20210325 17:15:31.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:15:38.065" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210325 17:15:38.065" starttime="20210325 17:15:38.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:15:38.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:15:38.066" starttime="20210325 17:15:38.066"/>
</kw>
<status status="PASS" endtime="20210325 17:15:38.066" starttime="20210325 17:15:31.139"/>
</kw>
<msg timestamp="20210325 17:15:38.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:15:38.067" starttime="20210325 17:15:31.138"/>
</kw>
<msg timestamp="20210325 17:15:38.067" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210325 17:15:38.067" starttime="20210325 17:15:31.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:15:38.075" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10202-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:15:43.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:15:43.660" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:15:43.660" starttime="20210325 17:15:38.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:15:43.661" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:15:43.661" starttime="20210325 17:15:43.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:15:43.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:15:43.662" starttime="20210325 17:15:43.662"/>
</kw>
<status status="PASS" endtime="20210325 17:15:43.662" starttime="20210325 17:15:38.071"/>
</kw>
<msg timestamp="20210325 17:15:43.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:15:43.663" starttime="20210325 17:15:38.071"/>
</kw>
<msg timestamp="20210325 17:15:43.663" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:15:43.663" starttime="20210325 17:15:38.067"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:15:43.664" starttime="20210325 17:15:43.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:15:43.668" level="INFO">Running command 'ozone sh key setacl o3://om:9862/10202-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:15:50.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:15:50.507" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:15:50.507" starttime="20210325 17:15:43.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:15:50.508" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:15:50.508" starttime="20210325 17:15:50.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:15:50.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:15:50.509" starttime="20210325 17:15:50.508"/>
</kw>
<status status="PASS" endtime="20210325 17:15:50.509" starttime="20210325 17:15:43.665"/>
</kw>
<msg timestamp="20210325 17:15:50.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:15:50.510" starttime="20210325 17:15:43.665"/>
</kw>
<msg timestamp="20210325 17:15:50.510" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:15:50.510" starttime="20210325 17:15:43.664"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:15:50.515" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10202-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:15:57.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:15:57.901" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210325 17:15:57.901" starttime="20210325 17:15:50.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:15:57.904" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:15:57.904" starttime="20210325 17:15:57.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:15:57.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:15:57.905" starttime="20210325 17:15:57.904"/>
</kw>
<status status="PASS" endtime="20210325 17:15:57.906" starttime="20210325 17:15:50.511"/>
</kw>
<msg timestamp="20210325 17:15:57.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:15:57.906" starttime="20210325 17:15:50.511"/>
</kw>
<msg timestamp="20210325 17:15:57.907" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210325 17:15:57.907" starttime="20210325 17:15:50.510"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:15:57.908" starttime="20210325 17:15:57.907"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:15:57.909" starttime="20210325 17:15:57.908"/>
</kw>
<status status="PASS" endtime="20210325 17:15:57.910" starttime="20210325 17:11:57.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210325 17:15:57.910" starttime="20210325 17:11:57.585"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:15:57.920" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:15:57.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:15:57.924" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 17:15:57.924" starttime="20210325 17:15:57.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:15:57.926" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 17:15:57.927" starttime="20210325 17:15:57.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:15:57.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:15:57.929" starttime="20210325 17:15:57.928"/>
</kw>
<status status="PASS" endtime="20210325 17:15:57.929" starttime="20210325 17:15:57.917"/>
</kw>
<msg timestamp="20210325 17:15:57.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:15:57.930" starttime="20210325 17:15:57.916"/>
</kw>
<msg timestamp="20210325 17:15:57.930" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 17:15:57.930" starttime="20210325 17:15:57.915"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 17:15:57.932" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 17:15:57.932" starttime="20210325 17:15:57.931"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:15:57.938" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:15:58.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:15:58.032" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:15:58.032" starttime="20210325 17:15:57.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:15:58.033" level="INFO"/>
<status status="PASS" endtime="20210325 17:15:58.033" starttime="20210325 17:15:58.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:15:58.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:15:58.034" starttime="20210325 17:15:58.033"/>
</kw>
<status status="PASS" endtime="20210325 17:15:58.034" starttime="20210325 17:15:57.934"/>
</kw>
<msg timestamp="20210325 17:15:58.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:15:58.034" starttime="20210325 17:15:57.934"/>
</kw>
<status status="PASS" endtime="20210325 17:15:58.035" starttime="20210325 17:15:57.933"/>
</kw>
<status status="PASS" endtime="20210325 17:15:58.035" starttime="20210325 17:15:57.932"/>
</kw>
<status status="PASS" endtime="20210325 17:15:58.035" starttime="20210325 17:15:57.914"/>
</kw>
<status status="PASS" endtime="20210325 17:15:58.035" starttime="20210325 17:15:57.913"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:15:58.040" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/10202-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:16:04.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:16:04.874" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210325 17:16:04.874" starttime="20210325 17:15:58.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:16:04.877" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210325 17:16:04.878" starttime="20210325 17:16:04.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:16:04.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:16:04.881" starttime="20210325 17:16:04.878"/>
</kw>
<status status="PASS" endtime="20210325 17:16:04.881" starttime="20210325 17:15:58.037"/>
</kw>
<msg timestamp="20210325 17:16:04.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:16:04.882" starttime="20210325 17:15:58.036"/>
</kw>
<status status="PASS" endtime="20210325 17:16:04.882" starttime="20210325 17:15:58.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:16:04.891" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/10202-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:16:09.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:16:09.649" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:16:09.649" starttime="20210325 17:16:04.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:16:09.652" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:16:09.652" starttime="20210325 17:16:09.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:16:09.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:16:09.653" starttime="20210325 17:16:09.652"/>
</kw>
<status status="PASS" endtime="20210325 17:16:09.653" starttime="20210325 17:16:04.885"/>
</kw>
<msg timestamp="20210325 17:16:09.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:16:09.653" starttime="20210325 17:16:04.885"/>
</kw>
<msg timestamp="20210325 17:16:09.653" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:16:09.653" starttime="20210325 17:16:04.883"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:16:09.658" starttime="20210325 17:16:09.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:16:09.663" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/10202-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:16:15.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:16:15.827" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210325 17:16:15.827" starttime="20210325 17:16:09.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:16:15.829" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210325 17:16:15.829" starttime="20210325 17:16:15.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:16:15.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:16:15.830" starttime="20210325 17:16:15.829"/>
</kw>
<status status="PASS" endtime="20210325 17:16:15.831" starttime="20210325 17:16:09.659"/>
</kw>
<msg timestamp="20210325 17:16:15.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:16:15.831" starttime="20210325 17:16:09.659"/>
</kw>
<msg timestamp="20210325 17:16:15.831" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210325 17:16:15.831" starttime="20210325 17:16:09.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:16:15.837" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/10202-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:16:23.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:16:23.169" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:16:23.169" starttime="20210325 17:16:15.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:16:23.171" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:16:23.171" starttime="20210325 17:16:23.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:16:23.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:16:23.172" starttime="20210325 17:16:23.171"/>
</kw>
<status status="PASS" endtime="20210325 17:16:23.172" starttime="20210325 17:16:15.833"/>
</kw>
<msg timestamp="20210325 17:16:23.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:16:23.172" starttime="20210325 17:16:15.833"/>
</kw>
<msg timestamp="20210325 17:16:23.173" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:16:23.173" starttime="20210325 17:16:15.832"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:16:23.174" starttime="20210325 17:16:23.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:16:23.178" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/10202-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:16:29.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:16:29.936" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:16:29.936" starttime="20210325 17:16:23.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:16:29.938" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:16:29.938" starttime="20210325 17:16:29.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:16:29.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:16:29.939" starttime="20210325 17:16:29.938"/>
</kw>
<status status="PASS" endtime="20210325 17:16:29.939" starttime="20210325 17:16:23.175"/>
</kw>
<msg timestamp="20210325 17:16:29.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:16:29.939" starttime="20210325 17:16:23.175"/>
</kw>
<msg timestamp="20210325 17:16:29.940" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210325 17:16:29.940" starttime="20210325 17:16:23.174"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:16:29.945" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/10202-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:16:37.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:16:37.044" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" endtime="20210325 17:16:37.044" starttime="20210325 17:16:29.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:16:37.046" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:16:37.046" starttime="20210325 17:16:37.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:16:37.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:16:37.048" starttime="20210325 17:16:37.046"/>
</kw>
<status status="PASS" endtime="20210325 17:16:37.048" starttime="20210325 17:16:29.941"/>
</kw>
<msg timestamp="20210325 17:16:37.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:16:37.048" starttime="20210325 17:16:29.941"/>
</kw>
<msg timestamp="20210325 17:16:37.049" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" endtime="20210325 17:16:37.049" starttime="20210325 17:16:29.940"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:16:37.050" starttime="20210325 17:16:37.049"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:16:37.052" starttime="20210325 17:16:37.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:16:37.057" level="INFO">Running command 'ozone sh key put o3://om:9862/10202-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:19:47.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:19:47.699" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:19:47.699" starttime="20210325 17:16:37.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:19:47.701" level="INFO"/>
<status status="PASS" endtime="20210325 17:19:47.701" starttime="20210325 17:19:47.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:19:47.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:19:47.702" starttime="20210325 17:19:47.701"/>
</kw>
<status status="PASS" endtime="20210325 17:19:47.702" starttime="20210325 17:16:37.054"/>
</kw>
<msg timestamp="20210325 17:19:47.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:19:47.702" starttime="20210325 17:16:37.053"/>
</kw>
<status status="PASS" endtime="20210325 17:19:47.703" starttime="20210325 17:16:37.053"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:19:47.707" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10202-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:19:54.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:19:54.097" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:19:54.097" starttime="20210325 17:19:47.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:19:54.100" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210325 17:19:54.100" starttime="20210325 17:19:54.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:19:54.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:19:54.102" starttime="20210325 17:19:54.100"/>
</kw>
<status status="PASS" endtime="20210325 17:19:54.102" starttime="20210325 17:19:47.704"/>
</kw>
<msg timestamp="20210325 17:19:54.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:19:54.103" starttime="20210325 17:19:47.704"/>
</kw>
<msg timestamp="20210325 17:19:54.104" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210325 17:19:54.104" starttime="20210325 17:19:47.703"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:19:54.105" starttime="20210325 17:19:54.104"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210325 17:19:54.107" starttime="20210325 17:19:54.106"/>
</kw>
<status status="PASS" endtime="20210325 17:19:54.107" starttime="20210325 17:15:58.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210325 17:19:54.108" starttime="20210325 17:15:57.911"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:19:54.118" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:19:54.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:19:54.123" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 17:19:54.123" starttime="20210325 17:19:54.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:19:54.125" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 17:19:54.126" starttime="20210325 17:19:54.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:19:54.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:19:54.127" starttime="20210325 17:19:54.126"/>
</kw>
<status status="PASS" endtime="20210325 17:19:54.128" starttime="20210325 17:19:54.114"/>
</kw>
<msg timestamp="20210325 17:19:54.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:19:54.128" starttime="20210325 17:19:54.113"/>
</kw>
<msg timestamp="20210325 17:19:54.129" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 17:19:54.129" starttime="20210325 17:19:54.113"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 17:19:54.130" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 17:19:54.130" starttime="20210325 17:19:54.129"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:19:54.136" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:19:54.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:19:54.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:19:54.147" starttime="20210325 17:19:54.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:19:54.148" level="INFO"/>
<status status="PASS" endtime="20210325 17:19:54.148" starttime="20210325 17:19:54.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:19:54.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:19:54.149" starttime="20210325 17:19:54.149"/>
</kw>
<status status="PASS" endtime="20210325 17:19:54.150" starttime="20210325 17:19:54.133"/>
</kw>
<msg timestamp="20210325 17:19:54.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:19:54.150" starttime="20210325 17:19:54.132"/>
</kw>
<status status="PASS" endtime="20210325 17:19:54.150" starttime="20210325 17:19:54.131"/>
</kw>
<status status="PASS" endtime="20210325 17:19:54.150" starttime="20210325 17:19:54.131"/>
</kw>
<status status="PASS" endtime="20210325 17:19:54.150" starttime="20210325 17:19:54.112"/>
</kw>
<status status="PASS" endtime="20210325 17:19:54.150" starttime="20210325 17:19:54.111"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:19:54.154" level="INFO">Running command 'ozone sh volume info o3:///10202-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:20:00.411" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 17:20:00.411" level="INFO">${output} = VOLUME_NOT_FOUND Volume 10202-rpcwport is not found</msg>
<status status="PASS" endtime="20210325 17:20:00.411" starttime="20210325 17:19:54.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:20:00.415" level="INFO">VOLUME_NOT_FOUND Volume 10202-rpcwport is not found</msg>
<status status="PASS" endtime="20210325 17:20:00.415" starttime="20210325 17:20:00.413"/>
</kw>
<msg timestamp="20210325 17:20:00.416" level="INFO">${result} = VOLUME_NOT_FOUND Volume 10202-rpcwport is not found</msg>
<status status="PASS" endtime="20210325 17:20:00.416" starttime="20210325 17:19:54.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:20:00.418" starttime="20210325 17:20:00.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:20:00.427" level="INFO">Running command 'ozone sh volume create o3:///10202-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:20:07.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:20:07.106" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:20:07.106" starttime="20210325 17:20:00.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:20:07.108" level="INFO"/>
<status status="PASS" endtime="20210325 17:20:07.109" starttime="20210325 17:20:07.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:20:07.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:20:07.110" starttime="20210325 17:20:07.109"/>
</kw>
<status status="PASS" endtime="20210325 17:20:07.111" starttime="20210325 17:20:00.422"/>
</kw>
<msg timestamp="20210325 17:20:07.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:20:07.111" starttime="20210325 17:20:00.420"/>
</kw>
<msg timestamp="20210325 17:20:07.112" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210325 17:20:07.112" starttime="20210325 17:20:00.419"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:20:07.113" starttime="20210325 17:20:07.112"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:20:07.120" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="10202-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:20:14.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:20:14.705" level="INFO">${output} = {
  "metadata": {},
  "name": "10202-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210325 17:20:14.705" starttime="20210325 17:20:07.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:20:14.707" level="INFO">{
  "metadata": {},
  "name": "10202-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-25T17:20:06.893Z",
  "modificationTime": "2021-03-25T17:20:06.893Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210325 17:20:14.708" starttime="20210325 17:20:14.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:20:14.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:20:14.709" starttime="20210325 17:20:14.708"/>
</kw>
<status status="PASS" endtime="20210325 17:20:14.710" starttime="20210325 17:20:07.116"/>
</kw>
<msg timestamp="20210325 17:20:14.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:20:14.710" starttime="20210325 17:20:07.115"/>
</kw>
<msg timestamp="20210325 17:20:14.711" level="INFO">${result} = {
  "metadata": {},
  "name": "10202-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210325 17:20:14.711" starttime="20210325 17:20:07.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:20:14.712" starttime="20210325 17:20:14.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:20:14.718" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="10202-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:20:21.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:20:21.743" level="INFO">${output} = {
  "metadata": {},
  "name": "10202-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210325 17:20:21.744" starttime="20210325 17:20:14.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:20:21.746" level="INFO">{
  "metadata": {},
  "name": "10202-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-25T17:20:06.893Z",
  "modificationTime": "2021-03-25T17:20:06.893Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210325 17:20:21.746" starttime="20210325 17:20:21.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:20:21.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:20:21.747" starttime="20210325 17:20:21.746"/>
</kw>
<status status="PASS" endtime="20210325 17:20:21.748" starttime="20210325 17:20:14.714"/>
</kw>
<msg timestamp="20210325 17:20:21.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:20:21.748" starttime="20210325 17:20:14.714"/>
</kw>
<msg timestamp="20210325 17:20:21.749" level="INFO">${result} = {
  "metadata": {},
  "name": "10202-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210325 17:20:21.749" starttime="20210325 17:20:14.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:20:21.750" starttime="20210325 17:20:21.749"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:20:21.756" level="INFO">Running command 'ozone sh volume setquota o3:///10202-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:20:28.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:20:28.295" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:20:28.295" starttime="20210325 17:20:21.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:20:28.296" level="INFO"/>
<status status="PASS" endtime="20210325 17:20:28.296" starttime="20210325 17:20:28.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:20:28.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:20:28.299" starttime="20210325 17:20:28.296"/>
</kw>
<status status="PASS" endtime="20210325 17:20:28.300" starttime="20210325 17:20:21.752"/>
</kw>
<msg timestamp="20210325 17:20:28.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:20:28.300" starttime="20210325 17:20:21.751"/>
</kw>
<status status="PASS" endtime="20210325 17:20:28.301" starttime="20210325 17:20:21.750"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:20:28.308" level="INFO">Running command 'ozone sh volume info o3:///10202-rpcwport | jq -r '. | select(.name=="10202-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:20:34.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:20:34.088" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:20:34.088" starttime="20210325 17:20:28.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:20:34.090" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210325 17:20:34.091" starttime="20210325 17:20:34.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:20:34.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:20:34.092" starttime="20210325 17:20:34.091"/>
</kw>
<status status="PASS" endtime="20210325 17:20:34.093" starttime="20210325 17:20:28.304"/>
</kw>
<msg timestamp="20210325 17:20:34.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:20:34.094" starttime="20210325 17:20:28.303"/>
</kw>
<msg timestamp="20210325 17:20:34.094" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:20:34.094" starttime="20210325 17:20:28.301"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:20:34.096" starttime="20210325 17:20:34.095"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:20:34.106" level="INFO">Running command 'ozone sh bucket create o3:///10202-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:20:38.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:20:38.777" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:20:38.777" starttime="20210325 17:20:34.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:20:38.778" level="INFO"/>
<status status="PASS" endtime="20210325 17:20:38.778" starttime="20210325 17:20:38.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:20:38.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:20:38.779" starttime="20210325 17:20:38.778"/>
</kw>
<status status="PASS" endtime="20210325 17:20:38.779" starttime="20210325 17:20:34.099"/>
</kw>
<msg timestamp="20210325 17:20:38.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:20:38.779" starttime="20210325 17:20:34.098"/>
</kw>
<status status="PASS" endtime="20210325 17:20:38.780" starttime="20210325 17:20:34.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:20:38.785" level="INFO">Running command 'ozone sh bucket info o3:///10202-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:20:46.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:20:46.286" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210325 17:20:46.286" starttime="20210325 17:20:38.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:20:46.288" level="INFO">DISK</msg>
<status status="PASS" endtime="20210325 17:20:46.289" starttime="20210325 17:20:46.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:20:46.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:20:46.290" starttime="20210325 17:20:46.289"/>
</kw>
<status status="PASS" endtime="20210325 17:20:46.291" starttime="20210325 17:20:38.782"/>
</kw>
<msg timestamp="20210325 17:20:46.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:20:46.292" starttime="20210325 17:20:38.781"/>
</kw>
<msg timestamp="20210325 17:20:46.292" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210325 17:20:46.292" starttime="20210325 17:20:38.780"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:20:46.293" starttime="20210325 17:20:46.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:20:46.299" level="INFO">Running command 'ozone sh bucket info o3:///10202-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:20:53.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:20:53.437" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:20:53.438" starttime="20210325 17:20:46.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:20:53.439" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210325 17:20:53.439" starttime="20210325 17:20:53.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:20:53.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:20:53.440" starttime="20210325 17:20:53.439"/>
</kw>
<status status="PASS" endtime="20210325 17:20:53.441" starttime="20210325 17:20:46.295"/>
</kw>
<msg timestamp="20210325 17:20:53.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:20:53.441" starttime="20210325 17:20:46.295"/>
</kw>
<msg timestamp="20210325 17:20:53.441" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:20:53.441" starttime="20210325 17:20:46.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:20:53.442" starttime="20210325 17:20:53.441"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:20:53.448" level="INFO">Running command 'ozone sh bucket info o3:///10202-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:21:00.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:21:00.187" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210325 17:21:00.188" starttime="20210325 17:20:53.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:21:00.190" level="INFO">100</msg>
<status status="PASS" endtime="20210325 17:21:00.190" starttime="20210325 17:21:00.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:21:00.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:21:00.191" starttime="20210325 17:21:00.190"/>
</kw>
<status status="PASS" endtime="20210325 17:21:00.192" starttime="20210325 17:20:53.443"/>
</kw>
<msg timestamp="20210325 17:21:00.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:21:00.192" starttime="20210325 17:20:53.443"/>
</kw>
<msg timestamp="20210325 17:21:00.192" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210325 17:21:00.192" starttime="20210325 17:20:53.442"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:21:00.193" starttime="20210325 17:21:00.193"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:21:00.200" level="INFO">Running command 'ozone sh bucket setquota o3:///10202-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:21:06.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:21:06.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:21:06.342" starttime="20210325 17:21:00.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:21:06.344" level="INFO"/>
<status status="PASS" endtime="20210325 17:21:06.344" starttime="20210325 17:21:06.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:21:06.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:21:06.346" starttime="20210325 17:21:06.345"/>
</kw>
<status status="PASS" endtime="20210325 17:21:06.347" starttime="20210325 17:21:00.196"/>
</kw>
<msg timestamp="20210325 17:21:06.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:21:06.347" starttime="20210325 17:21:00.195"/>
</kw>
<status status="PASS" endtime="20210325 17:21:06.347" starttime="20210325 17:21:00.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:21:06.353" level="INFO">Running command 'ozone sh bucket info o3:///10202-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:21:13.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:21:13.752" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210325 17:21:13.752" starttime="20210325 17:21:06.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:21:13.754" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210325 17:21:13.754" starttime="20210325 17:21:13.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:21:13.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:21:13.754" starttime="20210325 17:21:13.754"/>
</kw>
<status status="PASS" endtime="20210325 17:21:13.755" starttime="20210325 17:21:06.349"/>
</kw>
<msg timestamp="20210325 17:21:13.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:21:13.755" starttime="20210325 17:21:06.349"/>
</kw>
<msg timestamp="20210325 17:21:13.755" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210325 17:21:13.755" starttime="20210325 17:21:06.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:21:13.756" starttime="20210325 17:21:13.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:21:13.766" level="INFO">Running command 'ozone sh bucket info o3:///10202-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:21:21.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:21:21.206" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210325 17:21:21.206" starttime="20210325 17:21:13.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:21:21.207" level="INFO">1000</msg>
<status status="PASS" endtime="20210325 17:21:21.207" starttime="20210325 17:21:21.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:21:21.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:21:21.207" starttime="20210325 17:21:21.207"/>
</kw>
<status status="PASS" endtime="20210325 17:21:21.208" starttime="20210325 17:21:13.757"/>
</kw>
<msg timestamp="20210325 17:21:21.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:21:21.208" starttime="20210325 17:21:13.757"/>
</kw>
<msg timestamp="20210325 17:21:21.208" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210325 17:21:21.208" starttime="20210325 17:21:13.756"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:21:21.209" starttime="20210325 17:21:21.208"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:21:21.214" level="INFO">Running command 'ozone sh bucket list o3:///10202-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:21:26.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:21:26.123" level="INFO">${output} = 10202-rpcwport</msg>
<status status="PASS" endtime="20210325 17:21:26.124" starttime="20210325 17:21:21.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:21:26.126" level="INFO">10202-rpcwport</msg>
<status status="PASS" endtime="20210325 17:21:26.126" starttime="20210325 17:21:26.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:21:26.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:21:26.127" starttime="20210325 17:21:26.126"/>
</kw>
<status status="PASS" endtime="20210325 17:21:26.128" starttime="20210325 17:21:21.210"/>
</kw>
<msg timestamp="20210325 17:21:26.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:21:26.128" starttime="20210325 17:21:21.210"/>
</kw>
<msg timestamp="20210325 17:21:26.129" level="INFO">${result} = 10202-rpcwport</msg>
<status status="PASS" endtime="20210325 17:21:26.129" starttime="20210325 17:21:21.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:21:26.130" starttime="20210325 17:21:26.129"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:21:26.138" level="INFO">Running command 'ozone sh key put o3:///10202-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:24:36.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:24:36.821" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:24:36.822" starttime="20210325 17:21:26.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:24:36.824" level="INFO"/>
<status status="PASS" endtime="20210325 17:24:36.824" starttime="20210325 17:24:36.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:24:36.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:24:36.827" starttime="20210325 17:24:36.824"/>
</kw>
<status status="PASS" endtime="20210325 17:24:36.827" starttime="20210325 17:21:26.133"/>
</kw>
<msg timestamp="20210325 17:24:36.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:24:36.827" starttime="20210325 17:21:26.133"/>
</kw>
<status status="PASS" endtime="20210325 17:24:36.828" starttime="20210325 17:21:26.132"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:24:36.832" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:24:36.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:24:36.837" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:24:36.837" starttime="20210325 17:24:36.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:24:36.840" level="INFO"/>
<status status="PASS" endtime="20210325 17:24:36.840" starttime="20210325 17:24:36.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:24:36.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:24:36.843" starttime="20210325 17:24:36.840"/>
</kw>
<status status="PASS" endtime="20210325 17:24:36.843" starttime="20210325 17:24:36.829"/>
</kw>
<msg timestamp="20210325 17:24:36.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:24:36.844" starttime="20210325 17:24:36.829"/>
</kw>
<status status="PASS" endtime="20210325 17:24:36.844" starttime="20210325 17:24:36.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:24:36.850" level="INFO">Running command 'ozone sh key get o3:///10202-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:24:47.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:24:47.213" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:24:47.213" starttime="20210325 17:24:36.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:24:47.214" level="INFO"/>
<status status="PASS" endtime="20210325 17:24:47.214" starttime="20210325 17:24:47.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:24:47.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:24:47.215" starttime="20210325 17:24:47.215"/>
</kw>
<status status="PASS" endtime="20210325 17:24:47.215" starttime="20210325 17:24:36.847"/>
</kw>
<msg timestamp="20210325 17:24:47.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:24:47.216" starttime="20210325 17:24:36.846"/>
</kw>
<status status="PASS" endtime="20210325 17:24:47.216" starttime="20210325 17:24:36.845"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:24:47.220" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:24:47.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:24:47.225" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:24:47.225" starttime="20210325 17:24:47.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:24:47.226" level="INFO"/>
<status status="PASS" endtime="20210325 17:24:47.226" starttime="20210325 17:24:47.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:24:47.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:24:47.227" starttime="20210325 17:24:47.227"/>
</kw>
<status status="PASS" endtime="20210325 17:24:47.228" starttime="20210325 17:24:47.217"/>
</kw>
<msg timestamp="20210325 17:24:47.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:24:47.228" starttime="20210325 17:24:47.217"/>
</kw>
<status status="PASS" endtime="20210325 17:24:47.229" starttime="20210325 17:24:47.216"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:24:47.234" level="INFO">Running command 'ozone sh key put -t RATIS o3:///10202-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:24:54.111" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210325 17:24:54.111" starttime="20210325 17:24:47.231"/>
</kw>
<status status="FAIL" endtime="20210325 17:24:54.112" starttime="20210325 17:24:47.230"/>
</kw>
<msg timestamp="20210325 17:24:54.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210325 17:24:54.113" starttime="20210325 17:24:47.230"/>
</kw>
<status status="FAIL" endtime="20210325 17:24:54.113" starttime="20210325 17:24:47.229"/>
</kw>
<status status="FAIL" endtime="20210325 17:24:54.113" starttime="20210325 17:21:26.131"/>
</kw>
<status status="FAIL" endtime="20210325 17:24:54.114" starttime="20210325 17:21:26.130"/>
</kw>
<status status="FAIL" endtime="20210325 17:24:54.114" starttime="20210325 17:19:54.151"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210325 17:24:54.114" starttime="20210325 17:19:54.109">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:24:54.136" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:24:54.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:24:54.162" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 17:24:54.162" starttime="20210325 17:24:54.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:24:54.164" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 17:24:54.164" starttime="20210325 17:24:54.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:24:54.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:24:54.165" starttime="20210325 17:24:54.164"/>
</kw>
<status status="PASS" endtime="20210325 17:24:54.166" starttime="20210325 17:24:54.125"/>
</kw>
<msg timestamp="20210325 17:24:54.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:24:54.166" starttime="20210325 17:24:54.124"/>
</kw>
<msg timestamp="20210325 17:24:54.167" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 17:24:54.167" starttime="20210325 17:24:54.121"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 17:24:54.168" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 17:24:54.168" starttime="20210325 17:24:54.167"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:24:54.174" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:24:54.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:24:54.221" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:24:54.221" starttime="20210325 17:24:54.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:24:54.227" level="INFO"/>
<status status="PASS" endtime="20210325 17:24:54.228" starttime="20210325 17:24:54.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:24:54.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:24:54.230" starttime="20210325 17:24:54.228"/>
</kw>
<status status="PASS" endtime="20210325 17:24:54.230" starttime="20210325 17:24:54.170"/>
</kw>
<msg timestamp="20210325 17:24:54.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:24:54.230" starttime="20210325 17:24:54.170"/>
</kw>
<status status="PASS" endtime="20210325 17:24:54.231" starttime="20210325 17:24:54.169"/>
</kw>
<status status="PASS" endtime="20210325 17:24:54.231" starttime="20210325 17:24:54.168"/>
</kw>
<status status="PASS" endtime="20210325 17:24:54.232" starttime="20210325 17:24:54.119"/>
</kw>
<status status="PASS" endtime="20210325 17:24:54.232" starttime="20210325 17:24:54.118"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:24:54.255" level="INFO">Running command 'ozone sh volume info /10202-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:25:04.961" level="INFO">${rc} = 255</msg>
<msg timestamp="20210325 17:25:04.961" level="INFO">${output} = VOLUME_NOT_FOUND Volume 10202-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210325 17:25:04.962" starttime="20210325 17:24:54.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:25:04.963" level="INFO">VOLUME_NOT_FOUND Volume 10202-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210325 17:25:04.963" starttime="20210325 17:25:04.962"/>
</kw>
<msg timestamp="20210325 17:25:04.963" level="INFO">${result} = VOLUME_NOT_FOUND Volume 10202-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210325 17:25:04.963" starttime="20210325 17:24:54.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:25:04.964" starttime="20210325 17:25:04.964"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:25:04.970" level="INFO">Running command 'ozone sh volume create /10202-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:25:11.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:25:11.953" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:25:11.953" starttime="20210325 17:25:04.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:25:11.958" level="INFO"/>
<status status="PASS" endtime="20210325 17:25:11.959" starttime="20210325 17:25:11.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:25:11.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:25:11.960" starttime="20210325 17:25:11.959"/>
</kw>
<status status="PASS" endtime="20210325 17:25:11.961" starttime="20210325 17:25:04.966"/>
</kw>
<msg timestamp="20210325 17:25:11.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:25:11.961" starttime="20210325 17:25:04.965"/>
</kw>
<msg timestamp="20210325 17:25:11.962" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210325 17:25:11.962" starttime="20210325 17:25:04.964"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:25:11.963" starttime="20210325 17:25:11.962"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:25:11.970" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="10202-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:25:19.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:25:19.466" level="INFO">${output} = {
  "metadata": {},
  "name": "10202-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210325 17:25:19.466" starttime="20210325 17:25:11.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:25:19.469" level="INFO">{
  "metadata": {},
  "name": "10202-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-25T17:25:11.860Z",
  "modificationTime": "2021-03-25T17:25:11.860Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210325 17:25:19.469" starttime="20210325 17:25:19.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:25:19.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:25:19.471" starttime="20210325 17:25:19.469"/>
</kw>
<status status="PASS" endtime="20210325 17:25:19.472" starttime="20210325 17:25:11.967"/>
</kw>
<msg timestamp="20210325 17:25:19.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:25:19.472" starttime="20210325 17:25:11.966"/>
</kw>
<msg timestamp="20210325 17:25:19.473" level="INFO">${result} = {
  "metadata": {},
  "name": "10202-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210325 17:25:19.473" starttime="20210325 17:25:11.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:25:19.474" starttime="20210325 17:25:19.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:25:19.481" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="10202-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:25:25.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:25:25.055" level="INFO">${output} = {
  "metadata": {},
  "name": "10202-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210325 17:25:25.055" starttime="20210325 17:25:19.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:25:25.057" level="INFO">{
  "metadata": {},
  "name": "10202-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-03-25T17:25:11.860Z",
  "modificationTime": "2021-03-25T17:25:11.860Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210325 17:25:25.058" starttime="20210325 17:25:25.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:25:25.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:25:25.058" starttime="20210325 17:25:25.058"/>
</kw>
<status status="PASS" endtime="20210325 17:25:25.059" starttime="20210325 17:25:19.478"/>
</kw>
<msg timestamp="20210325 17:25:25.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:25:25.060" starttime="20210325 17:25:19.477"/>
</kw>
<msg timestamp="20210325 17:25:25.060" level="INFO">${result} = {
  "metadata": {},
  "name": "10202-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210325 17:25:25.060" starttime="20210325 17:25:19.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210325 17:25:25.061" starttime="20210325 17:25:25.060"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:25:25.071" level="INFO">Running command 'ozone sh volume setquota /10202-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:25:32.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:25:32.037" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:25:32.037" starttime="20210325 17:25:25.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:25:32.039" level="INFO"/>
<status status="PASS" endtime="20210325 17:25:32.039" starttime="20210325 17:25:32.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:25:32.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:25:32.040" starttime="20210325 17:25:32.039"/>
</kw>
<status status="PASS" endtime="20210325 17:25:32.041" starttime="20210325 17:25:25.063"/>
</kw>
<msg timestamp="20210325 17:25:32.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:25:32.041" starttime="20210325 17:25:25.062"/>
</kw>
<status status="PASS" endtime="20210325 17:25:32.042" starttime="20210325 17:25:25.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:25:32.048" level="INFO">Running command 'ozone sh volume info /10202-rpcwoscheme | jq -r '. | select(.name=="10202-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:25:39.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:25:39.327" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:25:39.327" starttime="20210325 17:25:32.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:25:39.330" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210325 17:25:39.330" starttime="20210325 17:25:39.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:25:39.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:25:39.332" starttime="20210325 17:25:39.331"/>
</kw>
<status status="PASS" endtime="20210325 17:25:39.332" starttime="20210325 17:25:32.044"/>
</kw>
<msg timestamp="20210325 17:25:39.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:25:39.333" starttime="20210325 17:25:32.044"/>
</kw>
<msg timestamp="20210325 17:25:39.333" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:25:39.333" starttime="20210325 17:25:32.042"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:25:39.334" starttime="20210325 17:25:39.334"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:25:39.341" level="INFO">Running command 'ozone sh bucket create /10202-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:25:45.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:25:45.946" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:25:45.947" starttime="20210325 17:25:39.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:25:45.949" level="INFO"/>
<status status="PASS" endtime="20210325 17:25:45.951" starttime="20210325 17:25:45.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:25:45.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:25:45.953" starttime="20210325 17:25:45.952"/>
</kw>
<status status="PASS" endtime="20210325 17:25:45.954" starttime="20210325 17:25:39.337"/>
</kw>
<msg timestamp="20210325 17:25:45.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:25:45.954" starttime="20210325 17:25:39.336"/>
</kw>
<status status="PASS" endtime="20210325 17:25:45.954" starttime="20210325 17:25:39.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:25:45.962" level="INFO">Running command 'ozone sh bucket info /10202-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:25:53.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:25:53.010" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210325 17:25:53.010" starttime="20210325 17:25:45.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:25:53.012" level="INFO">DISK</msg>
<status status="PASS" endtime="20210325 17:25:53.012" starttime="20210325 17:25:53.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:25:53.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:25:53.013" starttime="20210325 17:25:53.012"/>
</kw>
<status status="PASS" endtime="20210325 17:25:53.014" starttime="20210325 17:25:45.957"/>
</kw>
<msg timestamp="20210325 17:25:53.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:25:53.014" starttime="20210325 17:25:45.956"/>
</kw>
<msg timestamp="20210325 17:25:53.014" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210325 17:25:53.014" starttime="20210325 17:25:45.955"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:25:53.015" starttime="20210325 17:25:53.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:25:53.023" level="INFO">Running command 'ozone sh bucket info /10202-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:26:00.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:26:00.602" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:26:00.602" starttime="20210325 17:25:53.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:26:00.603" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210325 17:26:00.603" starttime="20210325 17:26:00.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:26:00.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:26:00.604" starttime="20210325 17:26:00.604"/>
</kw>
<status status="PASS" endtime="20210325 17:26:00.605" starttime="20210325 17:25:53.017"/>
</kw>
<msg timestamp="20210325 17:26:00.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:26:00.605" starttime="20210325 17:25:53.017"/>
</kw>
<msg timestamp="20210325 17:26:00.605" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210325 17:26:00.605" starttime="20210325 17:25:53.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:26:00.606" starttime="20210325 17:26:00.605"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:26:00.610" level="INFO">Running command 'ozone sh bucket info /10202-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:26:07.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:26:07.760" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210325 17:26:07.760" starttime="20210325 17:26:00.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:26:07.762" level="INFO">100</msg>
<status status="PASS" endtime="20210325 17:26:07.762" starttime="20210325 17:26:07.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:26:07.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:26:07.763" starttime="20210325 17:26:07.763"/>
</kw>
<status status="PASS" endtime="20210325 17:26:07.764" starttime="20210325 17:26:00.607"/>
</kw>
<msg timestamp="20210325 17:26:07.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:26:07.764" starttime="20210325 17:26:00.607"/>
</kw>
<msg timestamp="20210325 17:26:07.765" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210325 17:26:07.765" starttime="20210325 17:26:00.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:26:07.765" starttime="20210325 17:26:07.765"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:26:07.772" level="INFO">Running command 'ozone sh bucket setquota /10202-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:26:14.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:26:14.717" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:26:14.718" starttime="20210325 17:26:07.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:26:14.719" level="INFO"/>
<status status="PASS" endtime="20210325 17:26:14.719" starttime="20210325 17:26:14.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:26:14.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:26:14.720" starttime="20210325 17:26:14.719"/>
</kw>
<status status="PASS" endtime="20210325 17:26:14.721" starttime="20210325 17:26:07.767"/>
</kw>
<msg timestamp="20210325 17:26:14.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:26:14.721" starttime="20210325 17:26:07.766"/>
</kw>
<status status="PASS" endtime="20210325 17:26:14.721" starttime="20210325 17:26:07.766"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:26:14.726" level="INFO">Running command 'ozone sh bucket info /10202-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:26:22.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:26:22.420" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210325 17:26:22.420" starttime="20210325 17:26:14.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:26:22.423" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210325 17:26:22.423" starttime="20210325 17:26:22.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:26:22.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:26:22.426" starttime="20210325 17:26:22.424"/>
</kw>
<status status="PASS" endtime="20210325 17:26:22.426" starttime="20210325 17:26:14.722"/>
</kw>
<msg timestamp="20210325 17:26:22.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:26:22.427" starttime="20210325 17:26:14.722"/>
</kw>
<msg timestamp="20210325 17:26:22.427" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210325 17:26:22.427" starttime="20210325 17:26:14.721"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:26:22.429" starttime="20210325 17:26:22.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:26:22.436" level="INFO">Running command 'ozone sh bucket info /10202-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:26:30.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:26:30.132" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210325 17:26:30.132" starttime="20210325 17:26:22.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:26:30.135" level="INFO">1000</msg>
<status status="PASS" endtime="20210325 17:26:30.136" starttime="20210325 17:26:30.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:26:30.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:26:30.138" starttime="20210325 17:26:30.136"/>
</kw>
<status status="PASS" endtime="20210325 17:26:30.138" starttime="20210325 17:26:22.432"/>
</kw>
<msg timestamp="20210325 17:26:30.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:26:30.140" starttime="20210325 17:26:22.431"/>
</kw>
<msg timestamp="20210325 17:26:30.140" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210325 17:26:30.140" starttime="20210325 17:26:22.429"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:26:30.142" starttime="20210325 17:26:30.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:26:30.152" level="INFO">Running command 'ozone sh bucket list /10202-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:26:37.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:26:37.158" level="INFO">${output} = 10202-rpcwoscheme</msg>
<status status="PASS" endtime="20210325 17:26:37.159" starttime="20210325 17:26:30.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:26:37.160" level="INFO">10202-rpcwoscheme</msg>
<status status="PASS" endtime="20210325 17:26:37.161" starttime="20210325 17:26:37.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:26:37.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:26:37.163" starttime="20210325 17:26:37.161"/>
</kw>
<status status="PASS" endtime="20210325 17:26:37.163" starttime="20210325 17:26:30.146"/>
</kw>
<msg timestamp="20210325 17:26:37.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:26:37.164" starttime="20210325 17:26:30.145"/>
</kw>
<msg timestamp="20210325 17:26:37.164" level="INFO">${result} = 10202-rpcwoscheme</msg>
<status status="PASS" endtime="20210325 17:26:37.164" starttime="20210325 17:26:30.143"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210325 17:26:37.166" starttime="20210325 17:26:37.165"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:26:37.174" level="INFO">Running command 'ozone sh key put /10202-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:29:48.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:29:48.688" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:29:48.688" starttime="20210325 17:26:37.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:29:48.690" level="INFO"/>
<status status="PASS" endtime="20210325 17:29:48.690" starttime="20210325 17:29:48.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:29:48.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:29:48.692" starttime="20210325 17:29:48.691"/>
</kw>
<status status="PASS" endtime="20210325 17:29:48.693" starttime="20210325 17:26:37.170"/>
</kw>
<msg timestamp="20210325 17:29:48.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:29:48.693" starttime="20210325 17:26:37.169"/>
</kw>
<status status="PASS" endtime="20210325 17:29:48.693" starttime="20210325 17:26:37.168"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:29:48.700" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:29:48.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 17:29:48.704" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 17:29:48.704" starttime="20210325 17:29:48.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 17:29:48.706" level="INFO"/>
<status status="PASS" endtime="20210325 17:29:48.706" starttime="20210325 17:29:48.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 17:29:48.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 17:29:48.707" starttime="20210325 17:29:48.706"/>
</kw>
<status status="PASS" endtime="20210325 17:29:48.708" starttime="20210325 17:29:48.696"/>
</kw>
<msg timestamp="20210325 17:29:48.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 17:29:48.708" starttime="20210325 17:29:48.696"/>
</kw>
<status status="PASS" endtime="20210325 17:29:48.709" starttime="20210325 17:29:48.694"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 17:29:48.714" level="INFO">Running command 'ozone sh key get /10202-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 17:29:54.117" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210325 17:29:54.117" starttime="20210325 17:29:48.712"/>
</kw>
<status status="FAIL" endtime="20210325 17:29:54.118" starttime="20210325 17:29:48.711"/>
</kw>
<msg timestamp="20210325 17:29:54.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210325 17:29:54.118" starttime="20210325 17:29:48.711"/>
</kw>
<status status="FAIL" endtime="20210325 17:29:54.119" starttime="20210325 17:29:48.709"/>
</kw>
<status status="FAIL" endtime="20210325 17:29:54.119" starttime="20210325 17:26:37.167"/>
</kw>
<status status="FAIL" endtime="20210325 17:29:54.119" starttime="20210325 17:26:37.166"/>
</kw>
<status status="FAIL" endtime="20210325 17:29:54.120" starttime="20210325 17:24:54.232"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210325 17:29:54.121" starttime="20210325 17:24:54.116">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210325 17:29:54.125" starttime="20210325 17:04:53.229"/>
</suite>
<status status="FAIL" endtime="20210325 17:29:54.155" starttime="20210325 16:40:58.813"/>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:40:53.509" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:40:53.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:40:53.513" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210325 16:40:53.513" starttime="20210325 16:40:53.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:40:53.514" level="INFO">scm</msg>
<status status="PASS" endtime="20210325 16:40:53.514" starttime="20210325 16:40:53.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:40:53.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:40:53.515" starttime="20210325 16:40:53.514"/>
</kw>
<status status="PASS" endtime="20210325 16:40:53.515" starttime="20210325 16:40:53.504"/>
</kw>
<msg timestamp="20210325 16:40:53.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:40:53.515" starttime="20210325 16:40:53.503"/>
</kw>
<msg timestamp="20210325 16:40:53.515" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210325 16:40:53.516" starttime="20210325 16:40:53.503"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210325 16:40:53.516" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210325 16:40:53.517" starttime="20210325 16:40:53.516"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210325 16:40:53.521" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210325 16:40:53.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210325 16:40:53.528" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210325 16:40:53.528" starttime="20210325 16:40:53.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210325 16:40:53.529" level="INFO"/>
<status status="PASS" endtime="20210325 16:40:53.530" starttime="20210325 16:40:53.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210325 16:40:53.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210325 16:40:53.530" starttime="20210325 16:40:53.530"/>
</kw>
<status status="PASS" endtime="20210325 16:40:53.531" starttime="20210325 16:40:53.518"/>
</kw>
<msg timestamp="20210325 16:40:53.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210325 16:40:53.531" starttime="20210325 16:40:53.518"/>
</kw>
<status status="PASS" endtime="20210325 16:40:53.531" starttime="20210325 16:40:53.517"/>
</kw>
<status status="PASS" endtime="20210325 16:40:53.531" starttime="20210325 16:40:53.517"/>
</kw>
<status status="PASS" endtime="20210325 16:40:53.531" starttime="20210325 16:40:53.502"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210325 16:40:53.532" starttime="20210325 16:40:53.501"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210325 16:40:53.533" starttime="20210325 16:40:53.440"/>
</suite>
<status status="FAIL" elapsedtime="2935435" endtime="N/A" starttime="N/A"/>
</suite>
<statistics>
<total>
<stat fail="10" skip="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="10" skip="0" id="s1" name="ozonesecure" pass="20">ozonesecure</stat>
<stat fail="10" skip="0" id="s1-s1" name="Basic" pass="19">ozonesecure.Basic</stat>
<stat fail="1" skip="0" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="0" skip="0" id="s1-s1-s2" name="Getconf" pass="4">ozonesecure.Basic.Getconf</stat>
<stat fail="5" skip="0" id="s1-s1-s3" name="Links" pass="10">ozonesecure.Basic.Links</stat>
<stat fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell" pass="4">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" skip="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
