<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210720 21:08:59.434" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 21:00:27.449" level="INFO">${random} = 83290</msg>
<status status="PASS" starttime="20210720 21:00:27.449" endtime="20210720 21:00:27.450"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:00:27.452" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-83290 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:00:31.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:00:31.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:00:27.451" endtime="20210720 21:00:31.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:00:31.010" level="INFO"/>
<status status="PASS" starttime="20210720 21:00:31.010" endtime="20210720 21:00:31.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:00:31.011" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:00:31.010" endtime="20210720 21:00:31.011"/>
</kw>
<status status="PASS" starttime="20210720 21:00:27.451" endtime="20210720 21:00:31.011"/>
</kw>
<msg timestamp="20210720 21:00:31.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:00:27.450" endtime="20210720 21:00:31.011"/>
</kw>
<msg timestamp="20210720 21:00:31.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:00:27.450" endtime="20210720 21:00:31.012"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:00:31.012" endtime="20210720 21:00:31.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:00:27.448" endtime="20210720 21:00:31.012"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 21:00:27.408" endtime="20210720 21:00:31.013"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:00:14.467" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:00:17.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:00:17.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:00:14.466" endtime="20210720 21:00:17.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:00:17.075" level="INFO"/>
<status status="PASS" starttime="20210720 21:00:17.075" endtime="20210720 21:00:17.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:00:17.076" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:00:17.076" endtime="20210720 21:00:17.076"/>
</kw>
<status status="PASS" starttime="20210720 21:00:14.465" endtime="20210720 21:00:17.076"/>
</kw>
<msg timestamp="20210720 21:00:17.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:00:14.465" endtime="20210720 21:00:17.077"/>
</kw>
<msg timestamp="20210720 21:00:17.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:00:14.464" endtime="20210720 21:00:17.077"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:00:17.077" endtime="20210720 21:00:17.077"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:00:17.082" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:00:19.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:00:19.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:00:17.079" endtime="20210720 21:00:19.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:00:19.132" level="INFO"/>
<status status="PASS" starttime="20210720 21:00:19.131" endtime="20210720 21:00:19.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:00:19.134" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:00:19.132" endtime="20210720 21:00:19.134"/>
</kw>
<status status="PASS" starttime="20210720 21:00:17.079" endtime="20210720 21:00:19.134"/>
</kw>
<msg timestamp="20210720 21:00:19.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:00:17.078" endtime="20210720 21:00:19.134"/>
</kw>
<msg timestamp="20210720 21:00:19.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:00:17.077" endtime="20210720 21:00:19.135"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:00:19.135" endtime="20210720 21:00:19.135"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:00:19.140" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:00:23.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:00:23.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:00:19.139" endtime="20210720 21:00:23.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:00:23.844" level="INFO"/>
<status status="PASS" starttime="20210720 21:00:23.843" endtime="20210720 21:00:23.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:00:23.844" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:00:23.844" endtime="20210720 21:00:23.844"/>
</kw>
<status status="PASS" starttime="20210720 21:00:19.136" endtime="20210720 21:00:23.845"/>
</kw>
<msg timestamp="20210720 21:00:23.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:00:19.136" endtime="20210720 21:00:23.845"/>
</kw>
<msg timestamp="20210720 21:00:23.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:00:19.135" endtime="20210720 21:00:23.845"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:00:23.845" endtime="20210720 21:00:23.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:00:14.464" endtime="20210720 21:00:23.846"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210720 21:00:14.416" endtime="20210720 21:00:23.847"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:01:42.432" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:01:45.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:01:45.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:01:42.429" endtime="20210720 21:01:45.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:01:45.012" level="INFO"/>
<status status="PASS" starttime="20210720 21:01:45.011" endtime="20210720 21:01:45.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:01:45.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:01:45.012" endtime="20210720 21:01:45.012"/>
</kw>
<status status="PASS" starttime="20210720 21:01:42.428" endtime="20210720 21:01:45.013"/>
</kw>
<msg timestamp="20210720 21:01:45.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:01:42.428" endtime="20210720 21:01:45.013"/>
</kw>
<msg timestamp="20210720 21:01:45.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:01:42.427" endtime="20210720 21:01:45.013"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:01:45.013" endtime="20210720 21:01:45.014"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:01:45.018" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:01:47.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:01:47.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:01:45.016" endtime="20210720 21:01:47.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:01:47.428" level="INFO"/>
<status status="PASS" starttime="20210720 21:01:47.427" endtime="20210720 21:01:47.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:01:47.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:01:47.428" endtime="20210720 21:01:47.429"/>
</kw>
<status status="PASS" starttime="20210720 21:01:45.015" endtime="20210720 21:01:47.429"/>
</kw>
<msg timestamp="20210720 21:01:47.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:01:45.015" endtime="20210720 21:01:47.429"/>
</kw>
<msg timestamp="20210720 21:01:47.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:01:45.014" endtime="20210720 21:01:47.430"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:01:47.430" endtime="20210720 21:01:47.430"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:01:47.434" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:01:52.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:01:52.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:01:47.432" endtime="20210720 21:01:52.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:01:52.430" level="INFO"/>
<status status="PASS" starttime="20210720 21:01:52.429" endtime="20210720 21:01:52.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:01:52.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:01:52.430" endtime="20210720 21:01:52.431"/>
</kw>
<status status="PASS" starttime="20210720 21:01:47.432" endtime="20210720 21:01:52.431"/>
</kw>
<msg timestamp="20210720 21:01:52.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:01:47.431" endtime="20210720 21:01:52.431"/>
</kw>
<msg timestamp="20210720 21:01:52.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:01:47.431" endtime="20210720 21:01:52.431"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:01:52.432" endtime="20210720 21:01:52.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:01:42.426" endtime="20210720 21:01:52.432"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210720 21:01:42.374" endtime="20210720 21:01:52.434"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 21:01:56.112" level="INFO">${random} = 81052</msg>
<status status="PASS" starttime="20210720 21:01:56.111" endtime="20210720 21:01:56.112"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:01:56.117" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-81052 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:02:00.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:02:00.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:01:56.114" endtime="20210720 21:02:00.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:02:00.207" level="INFO"/>
<status status="PASS" starttime="20210720 21:02:00.206" endtime="20210720 21:02:00.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:02:00.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:02:00.207" endtime="20210720 21:02:00.208"/>
</kw>
<status status="PASS" starttime="20210720 21:01:56.113" endtime="20210720 21:02:00.208"/>
</kw>
<msg timestamp="20210720 21:02:00.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:01:56.113" endtime="20210720 21:02:00.208"/>
</kw>
<msg timestamp="20210720 21:02:00.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:01:56.112" endtime="20210720 21:02:00.209"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:02:00.209" endtime="20210720 21:02:00.209"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:01:56.110" endtime="20210720 21:02:00.209"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 21:01:56.059" endtime="20210720 21:02:00.211"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 21:01:33.880" level="INFO">${random} = 27355</msg>
<status status="PASS" starttime="20210720 21:01:33.880" endtime="20210720 21:01:33.880"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:01:33.886" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-27355 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:01:38.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:01:38.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:01:33.882" endtime="20210720 21:01:38.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:01:38.615" level="INFO"/>
<status status="PASS" starttime="20210720 21:01:38.614" endtime="20210720 21:01:38.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:01:38.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:01:38.615" endtime="20210720 21:01:38.616"/>
</kw>
<status status="PASS" starttime="20210720 21:01:33.882" endtime="20210720 21:01:38.616"/>
</kw>
<msg timestamp="20210720 21:01:38.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:01:33.881" endtime="20210720 21:01:38.617"/>
</kw>
<msg timestamp="20210720 21:01:38.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:01:33.880" endtime="20210720 21:01:38.617"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:01:38.617" endtime="20210720 21:01:38.618"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:01:33.879" endtime="20210720 21:01:38.618"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 21:01:33.819" endtime="20210720 21:01:38.619"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="32048"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 21:03:37.872" level="INFO">${random} = 98078</msg>
<status status="PASS" starttime="20210720 21:03:37.871" endtime="20210720 21:03:37.872"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:03:37.875" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-98078 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:03:41.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:03:41.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:03:37.873" endtime="20210720 21:03:41.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:03:41.669" level="INFO"/>
<status status="PASS" starttime="20210720 21:03:41.668" endtime="20210720 21:03:41.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:03:41.670" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:03:41.669" endtime="20210720 21:03:41.670"/>
</kw>
<status status="PASS" starttime="20210720 21:03:37.873" endtime="20210720 21:03:41.670"/>
</kw>
<msg timestamp="20210720 21:03:41.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:03:37.872" endtime="20210720 21:03:41.670"/>
</kw>
<msg timestamp="20210720 21:03:41.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:03:37.872" endtime="20210720 21:03:41.670"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:03:41.670" endtime="20210720 21:03:41.671"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:03:37.870" endtime="20210720 21:03:41.671"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 21:03:37.828" endtime="20210720 21:03:41.672"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:03:24.305" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:03:26.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:03:26.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:03:24.304" endtime="20210720 21:03:26.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:03:26.560" level="INFO"/>
<status status="PASS" starttime="20210720 21:03:26.559" endtime="20210720 21:03:26.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:03:26.561" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:03:26.560" endtime="20210720 21:03:26.561"/>
</kw>
<status status="PASS" starttime="20210720 21:03:24.303" endtime="20210720 21:03:26.561"/>
</kw>
<msg timestamp="20210720 21:03:26.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:03:24.303" endtime="20210720 21:03:26.561"/>
</kw>
<msg timestamp="20210720 21:03:26.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:03:24.303" endtime="20210720 21:03:26.561"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:03:26.561" endtime="20210720 21:03:26.562"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:03:26.570" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:03:28.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:03:28.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:03:26.563" endtime="20210720 21:03:28.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:03:28.826" level="INFO"/>
<status status="PASS" starttime="20210720 21:03:28.826" endtime="20210720 21:03:28.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:03:28.827" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:03:28.827" endtime="20210720 21:03:28.827"/>
</kw>
<status status="PASS" starttime="20210720 21:03:26.563" endtime="20210720 21:03:28.827"/>
</kw>
<msg timestamp="20210720 21:03:28.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:03:26.562" endtime="20210720 21:03:28.828"/>
</kw>
<msg timestamp="20210720 21:03:28.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:03:26.562" endtime="20210720 21:03:28.828"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:03:28.828" endtime="20210720 21:03:28.828"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:03:28.837" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:03:34.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:03:34.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:03:28.836" endtime="20210720 21:03:34.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:03:34.069" level="INFO"/>
<status status="PASS" starttime="20210720 21:03:34.068" endtime="20210720 21:03:34.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:03:34.069" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:03:34.069" endtime="20210720 21:03:34.070"/>
</kw>
<status status="PASS" starttime="20210720 21:03:28.829" endtime="20210720 21:03:34.070"/>
</kw>
<msg timestamp="20210720 21:03:34.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:03:28.829" endtime="20210720 21:03:34.070"/>
</kw>
<msg timestamp="20210720 21:03:34.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 21:03:28.829" endtime="20210720 21:03:34.070"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:03:34.070" endtime="20210720 21:03:34.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:03:24.302" endtime="20210720 21:03:34.071"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210720 21:03:24.260" endtime="20210720 21:03:34.073"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:10.359" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210720 21:05:10.358" endtime="20210720 21:05:10.359"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:10.360" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:05:10.360" endtime="20210720 21:05:10.360"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:05:10.361" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:05:10.360" endtime="20210720 21:05:10.361"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:05:10.361" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210720 21:05:10.361" endtime="20210720 21:05:10.361"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:05:10.363" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:05:10.363" level="INFO">${version_file_contents} = #Tue Jul 20 21:04:30 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626815048505
clusterID=11afc263-0400-4261-ad20-33f83045be7e
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210720 21:05:10.362" endtime="20210720 21:05:10.363"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:05:10.364" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210720 21:05:10.363" endtime="20210720 21:05:10.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:10.364" endtime="20210720 21:05:10.364"/>
</kw>
<status status="PASS" starttime="20210720 21:05:10.362" endtime="20210720 21:05:10.365"/>
</kw>
<status status="PASS" starttime="20210720 21:05:10.362" endtime="20210720 21:05:10.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:05:10.358" endtime="20210720 21:05:10.365"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:05:10.303" endtime="20210720 21:05:10.366"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 21:06:06.245" endtime="20210720 21:06:06.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:06:06.250" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:07:34.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:07:34.532" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210720 21:06:06.247" endtime="20210720 21:07:34.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:07:34.534" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210720 21:07:34.533" endtime="20210720 21:07:34.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:07:34.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:07:34.534" endtime="20210720 21:07:34.534"/>
</kw>
<status status="PASS" starttime="20210720 21:06:06.246" endtime="20210720 21:07:34.535"/>
</kw>
<msg timestamp="20210720 21:07:34.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:06:06.246" endtime="20210720 21:07:34.535"/>
</kw>
<msg timestamp="20210720 21:07:34.535" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210720 21:06:06.246" endtime="20210720 21:07:34.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:07:34.536" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210720 21:07:34.536" endtime="20210720 21:07:34.536"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:06:06.244" endtime="20210720 21:07:34.536"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 21:07:34.538" endtime="20210720 21:07:34.539"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:07:34.543" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:07:37.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:07:37.547" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210720 21:07:34.540" endtime="20210720 21:07:37.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:07:37.549" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210720 21:07:37.548" endtime="20210720 21:07:37.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:07:37.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:07:37.549" endtime="20210720 21:07:37.550"/>
</kw>
<status status="PASS" starttime="20210720 21:07:34.540" endtime="20210720 21:07:37.550"/>
</kw>
<msg timestamp="20210720 21:07:37.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:07:34.539" endtime="20210720 21:07:37.550"/>
</kw>
<msg timestamp="20210720 21:07:37.551" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210720 21:07:34.539" endtime="20210720 21:07:37.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:07:37.551" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210720 21:07:37.551" endtime="20210720 21:07:37.552"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:07:34.537" endtime="20210720 21:07:37.552"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210720 21:06:06.188" endtime="20210720 21:07:37.553"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:07:41.732" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210720 21:07:41.731" endtime="20210720 21:07:41.732"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:07:41.732" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:07:41.732" endtime="20210720 21:07:41.732"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:07:41.733" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:07:41.733" endtime="20210720 21:07:41.733"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:07:41.734" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210720 21:07:41.733" endtime="20210720 21:07:41.734"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:07:41.735" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:07:41.735" level="INFO">${version_file_contents} = #Tue Jul 20 21:06:13 UTC 2021
cTime=1626814958310
clusterID=CID-620ffbcf-c008-4133-85c5-4fcb84b3c7af
nodeType=SCM
scmUuid=e1c67837-caae-4560-9491-3f62b3c8a9de
layoutVersion=2
</msg>
<status status="PASS" starttime="20210720 21:07:41.735" endtime="20210720 21:07:41.735"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:07:41.736" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210720 21:07:41.735" endtime="20210720 21:07:41.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:07:41.736" endtime="20210720 21:07:41.737"/>
</kw>
<status status="PASS" starttime="20210720 21:07:41.734" endtime="20210720 21:07:41.737"/>
</kw>
<status status="PASS" starttime="20210720 21:07:41.734" endtime="20210720 21:07:41.737"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:07:41.730" endtime="20210720 21:07:41.737"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:07:41.667" endtime="20210720 21:07:41.738"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:07:45.797" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210720 21:07:45.797" endtime="20210720 21:07:45.798"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:07:45.798" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:07:45.798" endtime="20210720 21:07:45.798"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:07:45.799" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:07:45.798" endtime="20210720 21:07:45.799"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:07:45.799" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210720 21:07:45.799" endtime="20210720 21:07:45.799"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:07:45.801" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:07:45.801" level="INFO">${version_file_contents} = #Tue Jul 20 21:06:24 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626815048505
clusterID=11afc263-0400-4261-ad20-33f83045be7e
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210720 21:07:45.800" endtime="20210720 21:07:45.801"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:07:45.801" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210720 21:07:45.801" endtime="20210720 21:07:45.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:07:45.802" endtime="20210720 21:07:45.802"/>
</kw>
<status status="PASS" starttime="20210720 21:07:45.800" endtime="20210720 21:07:45.802"/>
</kw>
<status status="PASS" starttime="20210720 21:07:45.799" endtime="20210720 21:07:45.802"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:07:45.796" endtime="20210720 21:07:45.802"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:07:45.741" endtime="20210720 21:07:45.803"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:07:49.941" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210720 21:07:49.940" endtime="20210720 21:07:49.941"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:07:49.942" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:07:49.942" endtime="20210720 21:07:49.942"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:07:49.943" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:07:49.942" endtime="20210720 21:07:49.943"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:07:49.943" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210720 21:07:49.943" endtime="20210720 21:07:49.943"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:07:49.945" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:07:49.945" level="INFO">${version_file_contents} = #Tue Jul 20 21:06:23 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626815047203
clusterID=ed588059-5563-46b6-9dc9-94535956c9d0
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210720 21:07:49.944" endtime="20210720 21:07:49.945"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:07:49.947" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210720 21:07:49.947" endtime="20210720 21:07:49.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:07:49.948" endtime="20210720 21:07:49.948"/>
</kw>
<status status="PASS" starttime="20210720 21:07:49.944" endtime="20210720 21:07:49.948"/>
</kw>
<status status="PASS" starttime="20210720 21:07:49.944" endtime="20210720 21:07:49.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:07:49.939" endtime="20210720 21:07:49.949"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:07:49.882" endtime="20210720 21:07:49.949"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:07:54.113" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210720 21:07:54.112" endtime="20210720 21:07:54.113"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:07:54.113" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:07:54.113" endtime="20210720 21:07:54.113"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:07:54.114" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:07:54.114" endtime="20210720 21:07:54.114"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:07:54.114" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210720 21:07:54.114" endtime="20210720 21:07:54.115"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:07:54.116" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:07:54.116" level="INFO">${version_file_contents} = #Tue Jul 20 21:06:23 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626815044978
clusterID=68c909d2-3a1b-4ed0-afc7-dab9bfa98037
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210720 21:07:54.116" endtime="20210720 21:07:54.116"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:07:54.117" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210720 21:07:54.117" endtime="20210720 21:07:54.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:07:54.117" endtime="20210720 21:07:54.118"/>
</kw>
<status status="PASS" starttime="20210720 21:07:54.115" endtime="20210720 21:07:54.118"/>
</kw>
<status status="PASS" starttime="20210720 21:07:54.115" endtime="20210720 21:07:54.118"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:07:54.111" endtime="20210720 21:07:54.118"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:07:54.055" endtime="20210720 21:07:54.119"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:07:58.297" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210720 21:07:58.296" endtime="20210720 21:07:58.297"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:07:58.298" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:07:58.298" endtime="20210720 21:07:58.298"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:07:58.299" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:07:58.298" endtime="20210720 21:07:58.299"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:07:58.299" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210720 21:07:58.299" endtime="20210720 21:07:58.299"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:07:58.301" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:07:58.301" level="INFO">${version_file_contents} = #Tue Jul 20 21:02:56 UTC 2021
cTime=1626814959466
clusterID=CID-620ffbcf-c008-4133-85c5-4fcb84b3c7af
omUuid=9a71d7c3-8894-41d0-82de-0d0f447f839c
nodeType=OM
scmUuid=e1c67837-caae-4560-9491-3f62b3c8a9d...</msg>
<status status="PASS" starttime="20210720 21:07:58.301" endtime="20210720 21:07:58.301"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:07:58.302" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210720 21:07:58.301" endtime="20210720 21:07:58.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:07:58.302" endtime="20210720 21:07:58.303"/>
</kw>
<status status="PASS" starttime="20210720 21:07:58.300" endtime="20210720 21:07:58.303"/>
</kw>
<status status="PASS" starttime="20210720 21:07:58.300" endtime="20210720 21:07:58.303"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:07:58.295" endtime="20210720 21:07:58.303"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:07:58.239" endtime="20210720 21:07:58.304"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:08:02.421" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210720 21:08:02.420" endtime="20210720 21:08:02.421"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:08:02.421" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:08:02.421" endtime="20210720 21:08:02.422"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:08:02.422" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:08:02.422" endtime="20210720 21:08:02.422"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:08:02.423" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210720 21:08:02.423" endtime="20210720 21:08:02.423"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:08:02.424" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:08:02.425" level="INFO">${version_file_contents} = #Tue Jul 20 21:02:54 UTC 2021
cTime=1626814957605
clusterID=CID-620ffbcf-c008-4133-85c5-4fcb84b3c7af
omUuid=1434e3f3-50c2-4221-ab38-e97afc508223
nodeType=OM
scmUuid=e1c67837-caae-4560-9491-3f62b3c8a9d...</msg>
<status status="PASS" starttime="20210720 21:08:02.424" endtime="20210720 21:08:02.425"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:08:02.426" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210720 21:08:02.425" endtime="20210720 21:08:02.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:08:02.426" endtime="20210720 21:08:02.426"/>
</kw>
<status status="PASS" starttime="20210720 21:08:02.424" endtime="20210720 21:08:02.426"/>
</kw>
<status status="PASS" starttime="20210720 21:08:02.423" endtime="20210720 21:08:02.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:08:02.419" endtime="20210720 21:08:02.427"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:08:02.364" endtime="20210720 21:08:02.427"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:08:06.476" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210720 21:08:06.475" endtime="20210720 21:08:06.476"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:08:06.476" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:08:06.476" endtime="20210720 21:08:06.476"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:08:06.477" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:08:06.477" endtime="20210720 21:08:06.477"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:08:06.478" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210720 21:08:06.477" endtime="20210720 21:08:06.478"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:08:06.479" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:08:06.479" level="INFO">${version_file_contents} = #Tue Jul 20 21:02:56 UTC 2021
cTime=1626814959666
clusterID=CID-620ffbcf-c008-4133-85c5-4fcb84b3c7af
omUuid=6fdaffdb-a006-415f-a8e3-d71916acfbb8
nodeType=OM
scmUuid=e1c67837-caae-4560-9491-3f62b3c8a9d...</msg>
<status status="PASS" starttime="20210720 21:08:06.479" endtime="20210720 21:08:06.479"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:08:06.480" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210720 21:08:06.479" endtime="20210720 21:08:06.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:08:06.480" endtime="20210720 21:08:06.481"/>
</kw>
<status status="PASS" starttime="20210720 21:08:06.478" endtime="20210720 21:08:06.481"/>
</kw>
<status status="PASS" starttime="20210720 21:08:06.478" endtime="20210720 21:08:06.481"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:08:06.474" endtime="20210720 21:08:06.481"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:08:06.421" endtime="20210720 21:08:06.482"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 21:08:10.730" level="INFO">${random} = 53824</msg>
<status status="PASS" starttime="20210720 21:08:10.730" endtime="20210720 21:08:10.730"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:08:10.736" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-53824 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:08:15.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:08:15.459" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:10.732" endtime="20210720 21:08:15.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:08:15.460" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:15.459" endtime="20210720 21:08:15.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:08:15.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:08:15.460" endtime="20210720 21:08:15.461"/>
</kw>
<status status="PASS" starttime="20210720 21:08:10.732" endtime="20210720 21:08:15.461"/>
</kw>
<msg timestamp="20210720 21:08:15.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:08:10.731" endtime="20210720 21:08:15.461"/>
</kw>
<msg timestamp="20210720 21:08:15.462" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:10.730" endtime="20210720 21:08:15.462"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:08:15.462" endtime="20210720 21:08:15.463"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:08:10.729" endtime="20210720 21:08:15.463"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 21:08:10.668" endtime="20210720 21:08:15.464"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 21:08:19.585" level="INFO">${random} = 27162</msg>
<status status="PASS" starttime="20210720 21:08:19.584" endtime="20210720 21:08:19.585"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:08:19.593" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-27162 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:08:23.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:08:23.927" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:19.589" endtime="20210720 21:08:23.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:08:23.928" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:23.927" endtime="20210720 21:08:23.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:08:23.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:08:23.929" endtime="20210720 21:08:23.930"/>
</kw>
<status status="PASS" starttime="20210720 21:08:19.588" endtime="20210720 21:08:23.930"/>
</kw>
<msg timestamp="20210720 21:08:23.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:08:19.587" endtime="20210720 21:08:23.930"/>
</kw>
<msg timestamp="20210720 21:08:23.931" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:19.586" endtime="20210720 21:08:23.931"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:08:23.931" endtime="20210720 21:08:23.932"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:08:19.582" endtime="20210720 21:08:23.932"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 21:08:19.518" endtime="20210720 21:08:23.933"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:14.357" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210720 21:05:14.356" endtime="20210720 21:05:14.357"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:14.358" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:05:14.358" endtime="20210720 21:05:14.358"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:05:14.359" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:05:14.358" endtime="20210720 21:05:14.359"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:05:14.359" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210720 21:05:14.359" endtime="20210720 21:05:14.360"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:05:14.362" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:05:14.362" level="INFO">${version_file_contents} = #Tue Jul 20 21:04:29 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626815047203
clusterID=ed588059-5563-46b6-9dc9-94535956c9d0
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210720 21:05:14.361" endtime="20210720 21:05:14.362"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:05:14.363" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210720 21:05:14.362" endtime="20210720 21:05:14.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:14.363" endtime="20210720 21:05:14.363"/>
</kw>
<status status="PASS" starttime="20210720 21:05:14.360" endtime="20210720 21:05:14.363"/>
</kw>
<status status="PASS" starttime="20210720 21:05:14.360" endtime="20210720 21:05:14.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:05:14.355" endtime="20210720 21:05:14.364"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:05:14.295" endtime="20210720 21:05:14.364"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:08:28.252" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:08:31.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:08:31.097" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:28.249" endtime="20210720 21:08:31.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:08:31.099" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:31.098" endtime="20210720 21:08:31.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:08:31.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:08:31.099" endtime="20210720 21:08:31.099"/>
</kw>
<status status="PASS" starttime="20210720 21:08:28.248" endtime="20210720 21:08:31.100"/>
</kw>
<msg timestamp="20210720 21:08:31.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:08:28.248" endtime="20210720 21:08:31.100"/>
</kw>
<msg timestamp="20210720 21:08:31.100" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:28.247" endtime="20210720 21:08:31.100"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:08:31.100" endtime="20210720 21:08:31.101"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:08:31.105" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:08:33.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:08:33.751" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:31.103" endtime="20210720 21:08:33.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:08:33.752" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:33.751" endtime="20210720 21:08:33.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:08:33.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:08:33.753" endtime="20210720 21:08:33.753"/>
</kw>
<status status="PASS" starttime="20210720 21:08:31.102" endtime="20210720 21:08:33.754"/>
</kw>
<msg timestamp="20210720 21:08:33.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:08:31.102" endtime="20210720 21:08:33.754"/>
</kw>
<msg timestamp="20210720 21:08:33.755" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:31.101" endtime="20210720 21:08:33.755"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:08:33.755" endtime="20210720 21:08:33.755"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:08:33.759" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:08:38.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:08:38.983" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:33.757" endtime="20210720 21:08:38.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:08:38.985" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:38.984" endtime="20210720 21:08:38.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:08:38.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:08:38.985" endtime="20210720 21:08:38.986"/>
</kw>
<status status="PASS" starttime="20210720 21:08:33.757" endtime="20210720 21:08:38.986"/>
</kw>
<msg timestamp="20210720 21:08:38.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:08:33.756" endtime="20210720 21:08:38.986"/>
</kw>
<msg timestamp="20210720 21:08:38.986" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:33.756" endtime="20210720 21:08:38.987"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:08:38.987" endtime="20210720 21:08:38.987"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:08:28.246" endtime="20210720 21:08:38.988"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210720 21:08:28.193" endtime="20210720 21:08:38.990"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 21:08:43.022" level="INFO">${random} = 65473</msg>
<status status="PASS" starttime="20210720 21:08:43.022" endtime="20210720 21:08:43.022"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:08:43.028" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-65473 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:08:47.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:08:47.466" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:43.024" endtime="20210720 21:08:47.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:08:47.468" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:47.467" endtime="20210720 21:08:47.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:08:47.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:08:47.468" endtime="20210720 21:08:47.469"/>
</kw>
<status status="PASS" starttime="20210720 21:08:43.024" endtime="20210720 21:08:47.469"/>
</kw>
<msg timestamp="20210720 21:08:47.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:08:43.023" endtime="20210720 21:08:47.469"/>
</kw>
<msg timestamp="20210720 21:08:47.470" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:08:43.022" endtime="20210720 21:08:47.470"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:08:47.470" endtime="20210720 21:08:47.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:08:43.021" endtime="20210720 21:08:47.470"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 21:08:42.961" endtime="20210720 21:08:47.472"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:18.462" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210720 21:05:18.461" endtime="20210720 21:05:18.462"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:18.463" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:05:18.463" endtime="20210720 21:05:18.463"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:05:18.464" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:05:18.463" endtime="20210720 21:05:18.464"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:05:18.465" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210720 21:05:18.464" endtime="20210720 21:05:18.465"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:05:18.466" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:05:18.466" level="INFO">${version_file_contents} = #Tue Jul 20 21:04:28 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1626815044978
clusterID=68c909d2-3a1b-4ed0-afc7-dab9bfa98037
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210720 21:05:18.465" endtime="20210720 21:05:18.466"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:05:18.467" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210720 21:05:18.466" endtime="20210720 21:05:18.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:18.467" endtime="20210720 21:05:18.468"/>
</kw>
<status status="PASS" starttime="20210720 21:05:18.465" endtime="20210720 21:05:18.468"/>
</kw>
<status status="PASS" starttime="20210720 21:05:18.465" endtime="20210720 21:05:18.468"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:05:18.460" endtime="20210720 21:05:18.468"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:05:18.402" endtime="20210720 21:05:18.469"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:22.476" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210720 21:05:22.475" endtime="20210720 21:05:22.476"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:22.477" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:05:22.476" endtime="20210720 21:05:22.477"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:05:22.477" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:05:22.477" endtime="20210720 21:05:22.477"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:05:22.478" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210720 21:05:22.477" endtime="20210720 21:05:22.478"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:05:22.479" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:05:22.479" level="INFO">${version_file_contents} = #Tue Jul 20 21:02:56 UTC 2021
cTime=1626814959466
clusterID=CID-620ffbcf-c008-4133-85c5-4fcb84b3c7af
omUuid=9a71d7c3-8894-41d0-82de-0d0f447f839c
nodeType=OM
scmUuid=e1c67837-caae-4560-9491-3f62b3c8a9d...</msg>
<status status="PASS" starttime="20210720 21:05:22.479" endtime="20210720 21:05:22.479"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:05:22.480" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210720 21:05:22.480" endtime="20210720 21:05:22.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:22.480" endtime="20210720 21:05:22.481"/>
</kw>
<status status="PASS" starttime="20210720 21:05:22.478" endtime="20210720 21:05:22.481"/>
</kw>
<status status="PASS" starttime="20210720 21:05:22.478" endtime="20210720 21:05:22.481"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:05:22.474" endtime="20210720 21:05:22.481"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:05:22.422" endtime="20210720 21:05:22.482"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:26.525" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210720 21:05:26.524" endtime="20210720 21:05:26.525"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:26.526" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:05:26.525" endtime="20210720 21:05:26.526"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:05:26.526" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:05:26.526" endtime="20210720 21:05:26.526"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:05:26.527" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210720 21:05:26.526" endtime="20210720 21:05:26.527"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:05:26.528" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:05:26.528" level="INFO">${version_file_contents} = #Tue Jul 20 21:02:54 UTC 2021
cTime=1626814957605
clusterID=CID-620ffbcf-c008-4133-85c5-4fcb84b3c7af
omUuid=1434e3f3-50c2-4221-ab38-e97afc508223
nodeType=OM
scmUuid=e1c67837-caae-4560-9491-3f62b3c8a9d...</msg>
<status status="PASS" starttime="20210720 21:05:26.528" endtime="20210720 21:05:26.529"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:05:26.529" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210720 21:05:26.529" endtime="20210720 21:05:26.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:26.529" endtime="20210720 21:05:26.530"/>
</kw>
<status status="PASS" starttime="20210720 21:05:26.527" endtime="20210720 21:05:26.530"/>
</kw>
<status status="PASS" starttime="20210720 21:05:26.527" endtime="20210720 21:05:26.530"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:05:26.523" endtime="20210720 21:05:26.530"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:05:26.471" endtime="20210720 21:05:26.531"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:30.574" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210720 21:05:30.574" endtime="20210720 21:05:30.575"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:30.575" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:05:30.575" endtime="20210720 21:05:30.575"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:05:30.576" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:05:30.575" endtime="20210720 21:05:30.576"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:05:30.577" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210720 21:05:30.576" endtime="20210720 21:05:30.577"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:05:30.578" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:05:30.578" level="INFO">${version_file_contents} = #Tue Jul 20 21:02:56 UTC 2021
cTime=1626814959666
clusterID=CID-620ffbcf-c008-4133-85c5-4fcb84b3c7af
omUuid=6fdaffdb-a006-415f-a8e3-d71916acfbb8
nodeType=OM
scmUuid=e1c67837-caae-4560-9491-3f62b3c8a9d...</msg>
<status status="PASS" starttime="20210720 21:05:30.578" endtime="20210720 21:05:30.578"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:05:30.579" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210720 21:05:30.578" endtime="20210720 21:05:30.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:30.579" endtime="20210720 21:05:30.580"/>
</kw>
<status status="PASS" starttime="20210720 21:05:30.577" endtime="20210720 21:05:30.580"/>
</kw>
<status status="PASS" starttime="20210720 21:05:30.577" endtime="20210720 21:05:30.580"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:05:30.573" endtime="20210720 21:05:30.580"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:05:30.521" endtime="20210720 21:05:30.581"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 21:05:34.578" level="INFO">${random} = 41894</msg>
<status status="PASS" starttime="20210720 21:05:34.578" endtime="20210720 21:05:34.578"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:05:34.585" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-41894 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:05:39.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:05:39.115" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:34.581" endtime="20210720 21:05:39.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:05:39.116" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:39.116" endtime="20210720 21:05:39.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:05:39.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:05:39.117" endtime="20210720 21:05:39.117"/>
</kw>
<status status="PASS" starttime="20210720 21:05:34.580" endtime="20210720 21:05:39.118"/>
</kw>
<msg timestamp="20210720 21:05:39.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:05:34.580" endtime="20210720 21:05:39.118"/>
</kw>
<msg timestamp="20210720 21:05:39.118" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:34.579" endtime="20210720 21:05:39.118"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:39.119" endtime="20210720 21:05:39.119"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:05:34.577" endtime="20210720 21:05:39.119"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 21:05:34.507" endtime="20210720 21:05:39.121"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:05:43.039" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:05:45.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:05:45.680" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:43.035" endtime="20210720 21:05:45.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:05:45.682" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:45.681" endtime="20210720 21:05:45.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:05:45.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:05:45.682" endtime="20210720 21:05:45.682"/>
</kw>
<status status="PASS" starttime="20210720 21:05:43.035" endtime="20210720 21:05:45.683"/>
</kw>
<msg timestamp="20210720 21:05:45.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:05:43.035" endtime="20210720 21:05:45.683"/>
</kw>
<msg timestamp="20210720 21:05:45.683" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:43.034" endtime="20210720 21:05:45.683"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:45.683" endtime="20210720 21:05:45.684"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:05:45.689" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:05:48.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:05:48.291" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:45.686" endtime="20210720 21:05:48.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:05:48.292" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:48.291" endtime="20210720 21:05:48.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:05:48.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:05:48.292" endtime="20210720 21:05:48.293"/>
</kw>
<status status="PASS" starttime="20210720 21:05:45.685" endtime="20210720 21:05:48.293"/>
</kw>
<msg timestamp="20210720 21:05:48.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:05:45.685" endtime="20210720 21:05:48.293"/>
</kw>
<msg timestamp="20210720 21:05:48.294" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:45.684" endtime="20210720 21:05:48.294"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:48.295" endtime="20210720 21:05:48.295"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:05:48.301" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:05:53.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:05:53.739" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:48.298" endtime="20210720 21:05:53.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:05:53.740" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:53.739" endtime="20210720 21:05:53.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:05:53.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:05:53.740" endtime="20210720 21:05:53.741"/>
</kw>
<status status="PASS" starttime="20210720 21:05:48.296" endtime="20210720 21:05:53.741"/>
</kw>
<msg timestamp="20210720 21:05:53.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:05:48.296" endtime="20210720 21:05:53.742"/>
</kw>
<msg timestamp="20210720 21:05:53.742" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:48.295" endtime="20210720 21:05:53.742"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:53.742" endtime="20210720 21:05:53.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:05:43.033" endtime="20210720 21:05:53.743"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210720 21:05:42.981" endtime="20210720 21:05:53.744"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 21:05:57.803" level="INFO">${random} = 71372</msg>
<status status="PASS" starttime="20210720 21:05:57.802" endtime="20210720 21:05:57.803"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 21:05:57.809" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-71372 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 21:06:02.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 21:06:02.059" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:57.805" endtime="20210720 21:06:02.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 21:06:02.060" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:06:02.059" endtime="20210720 21:06:02.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 21:06:02.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 21:06:02.060" endtime="20210720 21:06:02.061"/>
</kw>
<status status="PASS" starttime="20210720 21:05:57.804" endtime="20210720 21:06:02.061"/>
</kw>
<msg timestamp="20210720 21:06:02.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 21:05:57.804" endtime="20210720 21:06:02.062"/>
</kw>
<msg timestamp="20210720 21:06:02.062" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210720 21:05:57.803" endtime="20210720 21:06:02.062"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:06:02.062" endtime="20210720 21:06:02.062"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:05:57.801" endtime="20210720 21:06:02.063"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 21:05:57.749" endtime="20210720 21:06:02.064"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:06.318" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210720 21:05:06.317" endtime="20210720 21:05:06.318"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210720 21:05:06.319" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210720 21:05:06.318" endtime="20210720 21:05:06.319"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210720 21:05:06.319" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210720 21:05:06.319" endtime="20210720 21:05:06.319"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210720 21:05:06.320" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210720 21:05:06.319" endtime="20210720 21:05:06.320"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210720 21:05:06.321" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210720 21:05:06.321" level="INFO">${version_file_contents} = #Tue Jul 20 21:02:38 UTC 2021
cTime=1626814958310
clusterID=CID-620ffbcf-c008-4133-85c5-4fcb84b3c7af
nodeType=SCM
scmUuid=e1c67837-caae-4560-9491-3f62b3c8a9de
layoutVersion=0
</msg>
<status status="PASS" starttime="20210720 21:05:06.321" endtime="20210720 21:05:06.322"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210720 21:05:06.322" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210720 21:05:06.322" endtime="20210720 21:05:06.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 21:05:06.322" endtime="20210720 21:05:06.323"/>
</kw>
<status status="PASS" starttime="20210720 21:05:06.320" endtime="20210720 21:05:06.323"/>
</kw>
<status status="PASS" starttime="20210720 21:05:06.320" endtime="20210720 21:05:06.323"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 21:05:06.316" endtime="20210720 21:05:06.323"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210720 21:05:06.258" endtime="20210720 21:05:06.324"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="150131"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="182179"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
