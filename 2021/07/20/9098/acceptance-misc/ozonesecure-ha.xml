<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210720 20:46:34.917" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-ha">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:15:37.610" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:15:51.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:15:51.802" level="INFO">${output} = 2021-07-20 20:15:39,726 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:15:39,911 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:15:37.606" endtime="20210720 20:15:51.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:15:51.803" level="INFO">2021-07-20 20:15:39,726 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:15:39,911 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-20 20:15:39,912 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-20 20:15:40,199 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-07-20 20:15:40,280 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:41,292 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:41,569 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:15:42,097 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-07-20 20:15:42,292 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:42,508 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-07-20 20:15:43,295 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:44,295 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:45,139 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-20 20:15:45,296 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:45,407 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-20 20:15:45,407 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-EB5D8449A984-&gt;5a23a414-9886-4450-950a-ec3d59209c22
2021-07-20 20:15:45,408 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-20 20:15:46,296 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:47,296 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:48,305 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:49,305 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:50,306 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:51,306 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-20 20:15:51,363 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=7965.440013, max=7965.440013, mean=7965.440013, stddev=0.0, median=7965.440013, p75=7965.440013, p95=7965.440013, p98=7965.440013, p99=7965.440013, p999=7965.440013, mean_rate=0.11698734566939133, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-20 20:15:51,364 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2021-07-20 20:15:51,364 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-20 20:15:51,364 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210720 20:15:51.802" endtime="20210720 20:15:51.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:15:51.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:15:51.803" endtime="20210720 20:15:51.804"/>
</kw>
<status status="PASS" starttime="20210720 20:15:37.605" endtime="20210720 20:15:51.804"/>
</kw>
<msg timestamp="20210720 20:15:51.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:15:37.605" endtime="20210720 20:15:51.804"/>
</kw>
<msg timestamp="20210720 20:15:51.805" level="INFO">${result} = 2021-07-20 20:15:39,726 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:15:39,911 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:15:37.603" endtime="20210720 20:15:51.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:15:51.805" endtime="20210720 20:15:51.806"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:15:37.603" endtime="20210720 20:15:51.806"/>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:15:51.811" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:15:57.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:15:57.581" level="INFO">${output} = 2021-07-20 20:15:53,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:15:54,046 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:15:51.809" endtime="20210720 20:15:57.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:15:57.582" level="INFO">2021-07-20 20:15:53,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:15:54,046 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-20 20:15:54,046 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-20 20:15:54,249 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-07-20 20:15:54,346 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:55,353 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:55,556 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:15:56,090 [pool-2-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:15:56,354 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:15:57,355 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-20 20:15:57,412 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=374.05532, max=374.05532, mean=374.05532, stddev=0.0, median=374.05532, p75=374.05532, p95=374.05532, p98=374.05532, p99=374.05532, p999=374.05532, mean_rate=0.7040197644593741, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-20 20:15:57,414 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-20 20:15:57,416 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-20 20:15:57,416 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210720 20:15:57.581" endtime="20210720 20:15:57.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:15:57.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:15:57.582" endtime="20210720 20:15:57.583"/>
</kw>
<status status="PASS" starttime="20210720 20:15:51.809" endtime="20210720 20:15:57.583"/>
</kw>
<msg timestamp="20210720 20:15:57.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:15:51.808" endtime="20210720 20:15:57.584"/>
</kw>
<msg timestamp="20210720 20:15:57.584" level="INFO">${result} = 2021-07-20 20:15:53,856 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:15:54,046 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:15:51.807" endtime="20210720 20:15:57.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:15:57.584" endtime="20210720 20:15:57.585"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:15:51.807" endtime="20210720 20:15:57.585"/>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:15:57.590" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:16:02.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:16:02.910" level="INFO">${output} = 2021-07-20 20:15:59,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:15:59,881 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:15:57.588" endtime="20210720 20:16:02.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:16:02.912" level="INFO">2021-07-20 20:15:59,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:15:59,881 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-20 20:15:59,881 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-20 20:16:00,058 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-07-20 20:16:00,163 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:01,165 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:01,296 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:16:01,908 [pool-2-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:16:02,165 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-20 20:16:02,859 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=173.321034, max=173.321034, mean=173.321034, stddev=0.0, median=173.321034, p75=173.321034, p95=173.321034, p98=173.321034, p99=173.321034, p999=173.321034, mean_rate=0.9451426860363855, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-20 20:16:02,860 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-20 20:16:02,861 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-20 20:16:02,861 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210720 20:16:02.911" endtime="20210720 20:16:02.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:16:02.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:16:02.912" endtime="20210720 20:16:02.913"/>
</kw>
<status status="PASS" starttime="20210720 20:15:57.587" endtime="20210720 20:16:02.913"/>
</kw>
<msg timestamp="20210720 20:16:02.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:15:57.587" endtime="20210720 20:16:02.913"/>
</kw>
<msg timestamp="20210720 20:16:02.914" level="INFO">${result} = 2021-07-20 20:15:59,758 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:15:59,881 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:15:57.586" endtime="20210720 20:16:02.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:16:02.914" endtime="20210720 20:16:02.914"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:15:57.585" endtime="20210720 20:16:02.915"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20210720 20:15:37.586" endtime="20210720 20:16:02.916"/>
</suite>
<suite id="s1-s1-s2" name="Remove" source="/opt/hadoop/smoketest/freon/remove.robot">
<test id="s1-s1-s2-t1" name="Ozone Client Key Remover">
<kw name="Ozone Client Key Generator For Remover" type="SETUP">
<arg>${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:16:02.928" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockr 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:16:13.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:16:13.000" level="INFO">${output} = 2021-07-20 20:16:04,957 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:05,110 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:16:02.925" endtime="20210720 20:16:13.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:16:13.002" level="INFO">2021-07-20 20:16:04,957 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:05,110 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-20 20:16:05,110 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-20 20:16:05,315 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr
2021-07-20 20:16:05,412 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:06,419 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:06,727 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:16:07,427 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:08,061 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-20 20:16:08,401 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-20 20:16:08,402 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-2E5246217F3B-&gt;5a23a414-9886-4450-950a-ec3d59209c22
2021-07-20 20:16:08,404 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-20 20:16:08,427 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:09,427 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:10,428 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:11,428 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:12,429 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-20 20:16:12,639 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4574.038016, max=4574.038016, mean=4574.038016, stddev=0.0, median=4574.038016, p75=4574.038016, p95=4574.038016, p98=4574.038016, p99=4574.038016, p999=4574.038016, mean_rate=0.18553764135327605, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2021-07-20 20:16:12,640 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2021-07-20 20:16:12,641 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-20 20:16:12,641 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210720 20:16:13.001" endtime="20210720 20:16:13.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:16:13.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:16:13.002" endtime="20210720 20:16:13.002"/>
</kw>
<status status="PASS" starttime="20210720 20:16:02.925" endtime="20210720 20:16:13.003"/>
</kw>
<msg timestamp="20210720 20:16:13.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:16:02.924" endtime="20210720 20:16:13.003"/>
</kw>
<status status="PASS" starttime="20210720 20:16:02.924" endtime="20210720 20:16:13.003"/>
</kw>
<status status="PASS" starttime="20210720 20:16:02.923" endtime="20210720 20:16:13.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockr ${OM_HA_PARAM} -t=1 -n=1 -p ${OCKR_PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:16:13.008" level="INFO">Running command 'ozone freon ockr --om-service-id=id1 -t=1 -n=1 -p ockr 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:16:18.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:16:18.577" level="INFO">${output} = 2021-07-20 20:16:15,155 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:15,287 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:16:13.006" endtime="20210720 20:16:18.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:16:18.578" level="INFO">2021-07-20 20:16:15,155 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:15,287 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-20 20:16:15,288 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-20 20:16:15,485 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr
2021-07-20 20:16:15,596 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:16,601 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:16,788 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:16:17,602 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-20 20:16:18,511 [shutdown-hook-0] INFO metrics: type=TIMER, name=remove, count=1, min=79.365826, max=79.365826, mean=79.365826, stddev=0.0, median=79.365826, p75=79.365826, p95=79.365826, p98=79.365826, p99=79.365826, p999=79.365826, mean_rate=0.9403096944393972, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-20 20:16:18,513 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-20 20:16:18,514 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-20 20:16:18,514 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210720 20:16:18.577" endtime="20210720 20:16:18.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:16:18.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:16:18.579" endtime="20210720 20:16:18.579"/>
</kw>
<status status="PASS" starttime="20210720 20:16:13.005" endtime="20210720 20:16:18.579"/>
</kw>
<msg timestamp="20210720 20:16:18.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:16:13.005" endtime="20210720 20:16:18.580"/>
</kw>
<msg timestamp="20210720 20:16:18.580" level="INFO">${result} = 2021-07-20 20:16:15,155 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:15,287 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:16:13.004" endtime="20210720 20:16:18.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:16:18.580" endtime="20210720 20:16:18.581"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:16:02.922" endtime="20210720 20:16:18.581"/>
</test>
<test id="s1-s1-s2-t2" name="OM Bucket Remover">
<kw name="OM Bucket Generator For Remover" type="SETUP">
<arg>${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:16:18.588" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombr 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:16:24.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:16:24.167" level="INFO">${output} = 2021-07-20 20:16:20,751 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:20,904 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:16:18.585" endtime="20210720 20:16:24.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:16:24.168" level="INFO">2021-07-20 20:16:20,751 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:20,904 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-20 20:16:20,904 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-20 20:16:21,115 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr
2021-07-20 20:16:21,205 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:22,211 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:22,616 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:16:23,126 [pool-2-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:16:23,211 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-20 20:16:24,107 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=108.333881, max=108.333881, mean=108.333881, stddev=0.0, median=108.333881, p75=108.333881, p95=108.333881, p98=108.333881, p99=108.333881, p999=108.333881, mean_rate=0.9467083086540679, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-20 20:16:24,108 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-07-20 20:16:24,109 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-20 20:16:24,109 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210720 20:16:24.167" endtime="20210720 20:16:24.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:16:24.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:16:24.168" endtime="20210720 20:16:24.169"/>
</kw>
<status status="PASS" starttime="20210720 20:16:18.585" endtime="20210720 20:16:24.169"/>
</kw>
<msg timestamp="20210720 20:16:24.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:16:18.584" endtime="20210720 20:16:24.169"/>
</kw>
<status status="PASS" starttime="20210720 20:16:18.584" endtime="20210720 20:16:24.170"/>
</kw>
<status status="PASS" starttime="20210720 20:16:18.583" endtime="20210720 20:16:24.170"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombr ${OM_HA_PARAM} -t=1 -n=1 -p ${OMBR_PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:16:24.175" level="INFO">Running command 'ozone freon ombr --om-service-id=id1 -t=1 -n=1 -p ombr 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:16:29.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:16:29.007" level="INFO">${output} = 2021-07-20 20:16:26,307 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:26,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:16:24.172" endtime="20210720 20:16:29.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:16:29.008" level="INFO">2021-07-20 20:16:26,307 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:26,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-20 20:16:26,452 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-20 20:16:26,678 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr
2021-07-20 20:16:26,793 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:27,796 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:28,175 [pool-2-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:147)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:16:28,796 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-20 20:16:28,940 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-remove, count=1, min=760.612574, max=760.612574, mean=760.612574, stddev=0.0, median=760.612574, p75=760.612574, p95=760.612574, p98=760.612574, p99=760.612574, p999=760.612574, mean_rate=0.8590017841260896, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-20 20:16:28,941 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-07-20 20:16:28,943 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-20 20:16:28,943 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210720 20:16:29.008" endtime="20210720 20:16:29.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:16:29.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:16:29.009" endtime="20210720 20:16:29.009"/>
</kw>
<status status="PASS" starttime="20210720 20:16:24.172" endtime="20210720 20:16:29.010"/>
</kw>
<msg timestamp="20210720 20:16:29.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:16:24.171" endtime="20210720 20:16:29.010"/>
</kw>
<msg timestamp="20210720 20:16:29.010" level="INFO">${result} = 2021-07-20 20:16:26,307 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:26,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:16:24.170" endtime="20210720 20:16:29.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:16:29.010" endtime="20210720 20:16:29.011"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:16:18.582" endtime="20210720 20:16:29.011"/>
</test>
<doc>Test freon data remove commands</doc>
<status status="PASS" starttime="20210720 20:16:02.918" endtime="20210720 20:16:29.012"/>
</suite>
<suite id="s1-s1-s3" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:16:29.023" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:16:36.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:16:36.692" level="INFO">${output} = 2021-07-20 20:16:30,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:31,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:16:29.021" endtime="20210720 20:16:36.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:16:36.694" level="INFO">2021-07-20 20:16:30,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:31,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-20 20:16:31,047 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-20 20:16:31,326 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-07-20 20:16:31,454 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:32,459 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:32,688 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:16:33,459 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:34,116 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-20 20:16:34,483 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:16:35,485 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-20 20:16:36,320 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=54.433591, max=54.433591, mean=54.433591, stddev=0.0, median=54.433591, p75=54.433591, p95=54.433591, p98=54.433591, p99=54.433591, p999=54.433591, mean_rate=0.9361518138373897, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-20 20:16:36,321 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-07-20 20:16:36,321 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-20 20:16:36,321 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210720 20:16:36.693" endtime="20210720 20:16:36.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:16:36.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:16:36.694" endtime="20210720 20:16:36.695"/>
</kw>
<status status="PASS" starttime="20210720 20:16:29.021" endtime="20210720 20:16:36.695"/>
</kw>
<msg timestamp="20210720 20:16:36.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:16:29.020" endtime="20210720 20:16:36.695"/>
</kw>
<msg timestamp="20210720 20:16:36.696" level="INFO">${result} = 2021-07-20 20:16:30,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:16:31,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:16:29.019" endtime="20210720 20:16:36.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:16:36.696" endtime="20210720 20:16:36.697"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:16:29.019" endtime="20210720 20:16:36.697"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210720 20:16:29.014" endtime="20210720 20:16:36.698"/>
</suite>
<status status="PASS" starttime="20210720 20:15:37.559" endtime="20210720 20:16:36.700"/>
</suite>
<suite id="s1-s2" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:16:43.651" level="INFO">${random} = 08078</msg>
<status status="PASS" starttime="20210720 20:16:43.650" endtime="20210720 20:16:43.651"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:16:43.653" level="INFO">${source} = 08078-source</msg>
<status status="PASS" starttime="20210720 20:16:43.651" endtime="20210720 20:16:43.653"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:16:43.654" level="INFO">${target} = 08078-target</msg>
<status status="PASS" starttime="20210720 20:16:43.653" endtime="20210720 20:16:43.654"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:16:43.662" level="INFO">Running command 'ozone sh volume create 08078-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:16:47.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:16:47.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:16:43.656" endtime="20210720 20:16:47.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:16:47.728" level="INFO"/>
<status status="PASS" starttime="20210720 20:16:47.727" endtime="20210720 20:16:47.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:16:47.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:16:47.728" endtime="20210720 20:16:47.729"/>
</kw>
<status status="PASS" starttime="20210720 20:16:43.655" endtime="20210720 20:16:47.729"/>
</kw>
<msg timestamp="20210720 20:16:47.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:16:43.655" endtime="20210720 20:16:47.729"/>
</kw>
<status status="PASS" starttime="20210720 20:16:43.654" endtime="20210720 20:16:47.730"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:16:47.734" level="INFO">Running command 'ozone sh volume create 08078-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:16:51.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:16:51.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:16:47.731" endtime="20210720 20:16:51.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:16:51.958" level="INFO"/>
<status status="PASS" starttime="20210720 20:16:51.958" endtime="20210720 20:16:51.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:16:51.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:16:51.958" endtime="20210720 20:16:51.959"/>
</kw>
<status status="PASS" starttime="20210720 20:16:47.731" endtime="20210720 20:16:51.959"/>
</kw>
<msg timestamp="20210720 20:16:51.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:16:47.730" endtime="20210720 20:16:51.959"/>
</kw>
<status status="PASS" starttime="20210720 20:16:47.730" endtime="20210720 20:16:51.960"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:16:51.964" level="INFO">Running command 'ozone sh bucket create 08078-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:16:56.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:16:56.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:16:51.962" endtime="20210720 20:16:56.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:16:56.105" level="INFO"/>
<status status="PASS" starttime="20210720 20:16:56.105" endtime="20210720 20:16:56.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:16:56.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:16:56.106" endtime="20210720 20:16:56.106"/>
</kw>
<status status="PASS" starttime="20210720 20:16:51.962" endtime="20210720 20:16:56.107"/>
</kw>
<msg timestamp="20210720 20:16:56.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:16:51.961" endtime="20210720 20:16:56.107"/>
</kw>
<status status="PASS" starttime="20210720 20:16:51.961" endtime="20210720 20:16:56.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:16:56.111" level="INFO">Running command 'ozone sh key put 08078-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:05.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:05.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:16:56.109" endtime="20210720 20:17:05.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:05.773" level="INFO"/>
<status status="PASS" starttime="20210720 20:17:05.773" endtime="20210720 20:17:05.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:05.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:05.774" endtime="20210720 20:17:05.774"/>
</kw>
<status status="PASS" starttime="20210720 20:16:56.108" endtime="20210720 20:17:05.775"/>
</kw>
<msg timestamp="20210720 20:17:05.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:16:56.108" endtime="20210720 20:17:05.775"/>
</kw>
<status status="PASS" starttime="20210720 20:16:56.107" endtime="20210720 20:17:05.775"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:05.779" level="INFO">Running command 'ozone sh bucket create 08078-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:09.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:09.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:17:05.776" endtime="20210720 20:17:09.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:09.817" level="INFO"/>
<status status="PASS" starttime="20210720 20:17:09.816" endtime="20210720 20:17:09.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:09.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:09.817" endtime="20210720 20:17:09.818"/>
</kw>
<status status="PASS" starttime="20210720 20:17:05.776" endtime="20210720 20:17:09.818"/>
</kw>
<msg timestamp="20210720 20:17:09.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:05.776" endtime="20210720 20:17:09.818"/>
</kw>
<status status="PASS" starttime="20210720 20:17:05.775" endtime="20210720 20:17:09.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:09.824" level="INFO">Running command 'ozone sh bucket link 08078-source/readable-bucket 08078-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:14.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:14.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:17:09.821" endtime="20210720 20:17:14.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:14.284" level="INFO"/>
<status status="PASS" starttime="20210720 20:17:14.283" endtime="20210720 20:17:14.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:14.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:14.284" endtime="20210720 20:17:14.285"/>
</kw>
<status status="PASS" starttime="20210720 20:17:09.819" endtime="20210720 20:17:14.285"/>
</kw>
<msg timestamp="20210720 20:17:14.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:09.819" endtime="20210720 20:17:14.285"/>
</kw>
<status status="PASS" starttime="20210720 20:17:09.818" endtime="20210720 20:17:14.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:14.289" level="INFO">Running command 'ozone sh bucket link 08078-source/readable-bucket 08078-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:18.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:18.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:17:14.287" endtime="20210720 20:17:18.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:18.889" level="INFO"/>
<status status="PASS" starttime="20210720 20:17:18.888" endtime="20210720 20:17:18.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:18.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:18.889" endtime="20210720 20:17:18.890"/>
</kw>
<status status="PASS" starttime="20210720 20:17:14.287" endtime="20210720 20:17:18.890"/>
</kw>
<msg timestamp="20210720 20:17:18.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:14.286" endtime="20210720 20:17:18.890"/>
</kw>
<status status="PASS" starttime="20210720 20:17:14.286" endtime="20210720 20:17:18.891"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:18.894" level="INFO">Running command 'ozone sh bucket link 08078-source/unreadable-bucket 08078-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:23.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:23.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:17:18.892" endtime="20210720 20:17:23.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:23.190" level="INFO"/>
<status status="PASS" starttime="20210720 20:17:23.189" endtime="20210720 20:17:23.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:23.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:23.190" endtime="20210720 20:17:23.191"/>
</kw>
<status status="PASS" starttime="20210720 20:17:18.892" endtime="20210720 20:17:23.191"/>
</kw>
<msg timestamp="20210720 20:17:23.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:18.891" endtime="20210720 20:17:23.191"/>
</kw>
<status status="PASS" starttime="20210720 20:17:18.891" endtime="20210720 20:17:23.191"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:23.196" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 08078-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:27.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:27.274" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:17:23.194" endtime="20210720 20:17:27.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:27.276" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:17:27.275" endtime="20210720 20:17:27.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:27.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:27.276" endtime="20210720 20:17:27.277"/>
</kw>
<status status="PASS" starttime="20210720 20:17:23.193" endtime="20210720 20:17:27.277"/>
</kw>
<msg timestamp="20210720 20:17:27.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:23.192" endtime="20210720 20:17:27.277"/>
</kw>
<status status="PASS" starttime="20210720 20:17:23.192" endtime="20210720 20:17:27.278"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:27.282" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 08078-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:31.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:31.358" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:17:27.279" endtime="20210720 20:17:31.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:31.360" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:17:31.359" endtime="20210720 20:17:31.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:31.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:31.360" endtime="20210720 20:17:31.361"/>
</kw>
<status status="PASS" starttime="20210720 20:17:27.279" endtime="20210720 20:17:31.361"/>
</kw>
<msg timestamp="20210720 20:17:31.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:27.278" endtime="20210720 20:17:31.361"/>
</kw>
<status status="PASS" starttime="20210720 20:17:27.278" endtime="20210720 20:17:31.361"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:31.366" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 08078-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:35.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:35.514" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:17:31.364" endtime="20210720 20:17:35.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:35.515" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:17:35.515" endtime="20210720 20:17:35.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:35.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:35.515" endtime="20210720 20:17:35.516"/>
</kw>
<status status="PASS" starttime="20210720 20:17:31.363" endtime="20210720 20:17:35.516"/>
</kw>
<msg timestamp="20210720 20:17:35.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:31.363" endtime="20210720 20:17:35.516"/>
</kw>
<status status="PASS" starttime="20210720 20:17:31.361" endtime="20210720 20:17:35.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:35.520" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 08078-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:39.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:39.783" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:17:35.518" endtime="20210720 20:17:39.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:39.784" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:17:39.784" endtime="20210720 20:17:39.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:39.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:39.784" endtime="20210720 20:17:39.786"/>
</kw>
<status status="PASS" starttime="20210720 20:17:35.518" endtime="20210720 20:17:39.787"/>
</kw>
<msg timestamp="20210720 20:17:39.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:35.517" endtime="20210720 20:17:39.787"/>
</kw>
<status status="PASS" starttime="20210720 20:17:35.517" endtime="20210720 20:17:39.787"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:39.791" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 08078-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:43.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:43.787" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:17:39.788" endtime="20210720 20:17:43.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:43.789" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:17:43.788" endtime="20210720 20:17:43.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:43.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:43.789" endtime="20210720 20:17:43.789"/>
</kw>
<status status="PASS" starttime="20210720 20:17:39.788" endtime="20210720 20:17:43.790"/>
</kw>
<msg timestamp="20210720 20:17:43.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:39.788" endtime="20210720 20:17:43.790"/>
</kw>
<status status="PASS" starttime="20210720 20:17:39.787" endtime="20210720 20:17:43.790"/>
</kw>
<status status="PASS" starttime="20210720 20:16:51.960" endtime="20210720 20:17:43.791"/>
</kw>
<status status="PASS" starttime="20210720 20:16:51.960" endtime="20210720 20:17:43.791"/>
</kw>
<status status="PASS" starttime="20210720 20:16:43.650" endtime="20210720 20:17:43.791"/>
</kw>
<test id="s1-s2-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:43.797" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:43.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:43.800" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:17:43.794" endtime="20210720 20:17:43.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:43.801" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:17:43.801" endtime="20210720 20:17:43.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:43.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:43.802" endtime="20210720 20:17:43.804"/>
</kw>
<status status="PASS" starttime="20210720 20:17:43.794" endtime="20210720 20:17:43.804"/>
</kw>
<msg timestamp="20210720 20:17:43.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:43.794" endtime="20210720 20:17:43.805"/>
</kw>
<msg timestamp="20210720 20:17:43.805" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:17:43.793" endtime="20210720 20:17:43.805"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:17:43.807" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:17:43.805" endtime="20210720 20:17:43.807"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:43.811" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:43.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:43.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:17:43.809" endtime="20210720 20:17:43.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:43.870" level="INFO"/>
<status status="PASS" starttime="20210720 20:17:43.869" endtime="20210720 20:17:43.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:43.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:43.870" endtime="20210720 20:17:43.871"/>
</kw>
<status status="PASS" starttime="20210720 20:17:43.808" endtime="20210720 20:17:43.871"/>
</kw>
<msg timestamp="20210720 20:17:43.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:43.808" endtime="20210720 20:17:43.871"/>
</kw>
<status status="PASS" starttime="20210720 20:17:43.807" endtime="20210720 20:17:43.872"/>
</kw>
<status status="PASS" starttime="20210720 20:17:43.807" endtime="20210720 20:17:43.872"/>
</kw>
<status status="PASS" starttime="20210720 20:17:43.793" endtime="20210720 20:17:43.872"/>
</kw>
<status status="PASS" starttime="20210720 20:17:43.792" endtime="20210720 20:17:43.872"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:43.877" level="INFO">Running command 'ozone sh bucket link 08078-source/no-such-bucket 08078-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:48.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:48.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:17:43.874" endtime="20210720 20:17:48.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:48.283" level="INFO"/>
<status status="PASS" starttime="20210720 20:17:48.283" endtime="20210720 20:17:48.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:48.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:48.284" endtime="20210720 20:17:48.284"/>
</kw>
<status status="PASS" starttime="20210720 20:17:43.874" endtime="20210720 20:17:48.284"/>
</kw>
<msg timestamp="20210720 20:17:48.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:43.873" endtime="20210720 20:17:48.285"/>
</kw>
<status status="PASS" starttime="20210720 20:17:43.872" endtime="20210720 20:17:48.285"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:48.288" level="INFO">Running command 'ozone sh key list 08078-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:52.747" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:17:52.747" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210720 20:17:48.286" endtime="20210720 20:17:52.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:52.748" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210720 20:17:52.748" endtime="20210720 20:17:52.749"/>
</kw>
<msg timestamp="20210720 20:17:52.749" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210720 20:17:48.285" endtime="20210720 20:17:52.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:17:52.749" endtime="20210720 20:17:52.750"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:17:43.791" endtime="20210720 20:17:52.750"/>
</test>
<test id="s1-s2-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:52.758" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:52.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:52.761" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:17:52.755" endtime="20210720 20:17:52.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:52.762" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:17:52.762" endtime="20210720 20:17:52.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:52.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:52.763" endtime="20210720 20:17:52.763"/>
</kw>
<status status="PASS" starttime="20210720 20:17:52.754" endtime="20210720 20:17:52.764"/>
</kw>
<msg timestamp="20210720 20:17:52.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:52.754" endtime="20210720 20:17:52.764"/>
</kw>
<msg timestamp="20210720 20:17:52.764" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:17:52.754" endtime="20210720 20:17:52.764"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:17:52.765" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:17:52.765" endtime="20210720 20:17:52.765"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:52.770" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:52.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:52.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:17:52.768" endtime="20210720 20:17:52.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:52.780" level="INFO"/>
<status status="PASS" starttime="20210720 20:17:52.779" endtime="20210720 20:17:52.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:52.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:52.780" endtime="20210720 20:17:52.781"/>
</kw>
<status status="PASS" starttime="20210720 20:17:52.767" endtime="20210720 20:17:52.781"/>
</kw>
<msg timestamp="20210720 20:17:52.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:52.767" endtime="20210720 20:17:52.781"/>
</kw>
<status status="PASS" starttime="20210720 20:17:52.766" endtime="20210720 20:17:52.782"/>
</kw>
<status status="PASS" starttime="20210720 20:17:52.765" endtime="20210720 20:17:52.782"/>
</kw>
<status status="PASS" starttime="20210720 20:17:52.753" endtime="20210720 20:17:52.782"/>
</kw>
<status status="PASS" starttime="20210720 20:17:52.753" endtime="20210720 20:17:52.782"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:52.786" level="INFO">Running command 'ozone sh bucket link 08078-source/bucket1 08078-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:17:57.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:17:57.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:17:52.784" endtime="20210720 20:17:57.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:17:57.075" level="INFO"/>
<status status="PASS" starttime="20210720 20:17:57.074" endtime="20210720 20:17:57.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:17:57.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:17:57.075" endtime="20210720 20:17:57.076"/>
</kw>
<status status="PASS" starttime="20210720 20:17:52.783" endtime="20210720 20:17:57.076"/>
</kw>
<msg timestamp="20210720 20:17:57.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:52.783" endtime="20210720 20:17:57.076"/>
</kw>
<status status="PASS" starttime="20210720 20:17:52.782" endtime="20210720 20:17:57.077"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:17:57.081" level="INFO">Running command 'ozone sh bucket create 08078-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:01.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:01.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:17:57.078" endtime="20210720 20:18:01.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:01.441" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:01.440" endtime="20210720 20:18:01.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:01.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:01.441" endtime="20210720 20:18:01.442"/>
</kw>
<status status="PASS" starttime="20210720 20:17:57.078" endtime="20210720 20:18:01.442"/>
</kw>
<msg timestamp="20210720 20:18:01.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:17:57.078" endtime="20210720 20:18:01.442"/>
</kw>
<status status="PASS" starttime="20210720 20:17:57.077" endtime="20210720 20:18:01.443"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:01.447" level="INFO">Running command 'ozone sh key put 08078-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:08.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:08.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:01.445" endtime="20210720 20:18:08.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:08.963" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:08.962" endtime="20210720 20:18:08.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:08.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:08.963" endtime="20210720 20:18:08.964"/>
</kw>
<status status="PASS" starttime="20210720 20:18:01.444" endtime="20210720 20:18:08.965"/>
</kw>
<msg timestamp="20210720 20:18:08.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:01.444" endtime="20210720 20:18:08.965"/>
</kw>
<status status="PASS" starttime="20210720 20:18:01.443" endtime="20210720 20:18:08.965"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:18:08.967" level="INFO">${postfix} = 32168</msg>
<status status="PASS" starttime="20210720 20:18:08.966" endtime="20210720 20:18:08.967"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:18:08.967" level="INFO">${tmpfile} = /tmp/tempkey-32168</msg>
<status status="PASS" starttime="20210720 20:18:08.967" endtime="20210720 20:18:08.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:08.971" level="INFO">Running command 'ozone sh key get 08078-target/link1/key1 /tmp/tempkey-32168 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:15.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:15.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:08.969" endtime="20210720 20:18:15.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:15.576" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:15.575" endtime="20210720 20:18:15.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:15.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:15.576" endtime="20210720 20:18:15.576"/>
</kw>
<status status="PASS" starttime="20210720 20:18:08.969" endtime="20210720 20:18:15.577"/>
</kw>
<msg timestamp="20210720 20:18:15.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:08.968" endtime="20210720 20:18:15.577"/>
</kw>
<status status="PASS" starttime="20210720 20:18:08.967" endtime="20210720 20:18:15.577"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210720 20:18:15.580" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-32168 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:15.585" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210720 20:18:15.577" endtime="20210720 20:18:15.585"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:15.590" level="INFO">Running command 'rm -f /tmp/tempkey-32168 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:15.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:15.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:15.588" endtime="20210720 20:18:15.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:15.595" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:15.594" endtime="20210720 20:18:15.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:15.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:15.595" endtime="20210720 20:18:15.596"/>
</kw>
<status status="PASS" starttime="20210720 20:18:15.587" endtime="20210720 20:18:15.596"/>
</kw>
<msg timestamp="20210720 20:18:15.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:15.586" endtime="20210720 20:18:15.596"/>
</kw>
<status status="PASS" starttime="20210720 20:18:15.585" endtime="20210720 20:18:15.596"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210720 20:18:15.597" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210720 20:18:15.597" endtime="20210720 20:18:15.597"/>
</kw>
<msg timestamp="20210720 20:18:15.597" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210720 20:18:08.966" endtime="20210720 20:18:15.597"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210720 20:18:15.598" endtime="20210720 20:18:15.598"/>
</kw>
<status status="PASS" starttime="20210720 20:18:08.965" endtime="20210720 20:18:15.598"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:17:52.751" endtime="20210720 20:18:15.598"/>
</test>
<test id="s1-s2-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:15.605" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:15.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:15.609" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:18:15.603" endtime="20210720 20:18:15.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:15.611" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:18:15.610" endtime="20210720 20:18:15.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:15.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:15.611" endtime="20210720 20:18:15.611"/>
</kw>
<status status="PASS" starttime="20210720 20:18:15.602" endtime="20210720 20:18:15.612"/>
</kw>
<msg timestamp="20210720 20:18:15.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:15.602" endtime="20210720 20:18:15.612"/>
</kw>
<msg timestamp="20210720 20:18:15.612" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:18:15.601" endtime="20210720 20:18:15.612"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:18:15.613" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:18:15.612" endtime="20210720 20:18:15.613"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:15.618" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:15.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:15.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:15.615" endtime="20210720 20:18:15.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:15.627" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:15.626" endtime="20210720 20:18:15.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:15.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:15.627" endtime="20210720 20:18:15.628"/>
</kw>
<status status="PASS" starttime="20210720 20:18:15.615" endtime="20210720 20:18:15.628"/>
</kw>
<msg timestamp="20210720 20:18:15.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:15.614" endtime="20210720 20:18:15.629"/>
</kw>
<status status="PASS" starttime="20210720 20:18:15.614" endtime="20210720 20:18:15.629"/>
</kw>
<status status="PASS" starttime="20210720 20:18:15.613" endtime="20210720 20:18:15.629"/>
</kw>
<status status="PASS" starttime="20210720 20:18:15.601" endtime="20210720 20:18:15.629"/>
</kw>
<status status="PASS" starttime="20210720 20:18:15.600" endtime="20210720 20:18:15.629"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:15.634" level="INFO">Running command 'ozone sh key put 08078-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:22.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:22.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:15.632" endtime="20210720 20:18:22.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:22.840" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:22.839" endtime="20210720 20:18:22.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:22.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:22.841" endtime="20210720 20:18:22.841"/>
</kw>
<status status="PASS" starttime="20210720 20:18:15.631" endtime="20210720 20:18:22.842"/>
</kw>
<msg timestamp="20210720 20:18:22.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:15.630" endtime="20210720 20:18:22.842"/>
</kw>
<status status="PASS" starttime="20210720 20:18:15.629" endtime="20210720 20:18:22.842"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:18:22.844" level="INFO">${postfix} = 29110</msg>
<status status="PASS" starttime="20210720 20:18:22.844" endtime="20210720 20:18:22.844"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:18:22.845" level="INFO">${tmpfile} = /tmp/tempkey-29110</msg>
<status status="PASS" starttime="20210720 20:18:22.845" endtime="20210720 20:18:22.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:22.850" level="INFO">Running command 'ozone sh key get 08078-source/bucket1/key2 /tmp/tempkey-29110 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:29.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:29.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:22.847" endtime="20210720 20:18:29.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:29.479" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:29.478" endtime="20210720 20:18:29.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:29.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:29.479" endtime="20210720 20:18:29.480"/>
</kw>
<status status="PASS" starttime="20210720 20:18:22.846" endtime="20210720 20:18:29.480"/>
</kw>
<msg timestamp="20210720 20:18:29.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:22.846" endtime="20210720 20:18:29.481"/>
</kw>
<status status="PASS" starttime="20210720 20:18:22.845" endtime="20210720 20:18:29.482"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210720 20:18:29.485" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-29110 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:29.488" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210720 20:18:29.482" endtime="20210720 20:18:29.488"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:29.493" level="INFO">Running command 'rm -f /tmp/tempkey-29110 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:29.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:29.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:29.491" endtime="20210720 20:18:29.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:29.496" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:29.496" endtime="20210720 20:18:29.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:29.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:29.497" endtime="20210720 20:18:29.497"/>
</kw>
<status status="PASS" starttime="20210720 20:18:29.490" endtime="20210720 20:18:29.498"/>
</kw>
<msg timestamp="20210720 20:18:29.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:29.490" endtime="20210720 20:18:29.498"/>
</kw>
<status status="PASS" starttime="20210720 20:18:29.489" endtime="20210720 20:18:29.498"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210720 20:18:29.499" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210720 20:18:29.498" endtime="20210720 20:18:29.499"/>
</kw>
<msg timestamp="20210720 20:18:29.499" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210720 20:18:22.843" endtime="20210720 20:18:29.499"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210720 20:18:29.499" endtime="20210720 20:18:29.500"/>
</kw>
<status status="PASS" starttime="20210720 20:18:22.842" endtime="20210720 20:18:29.500"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:18:15.599" endtime="20210720 20:18:29.500"/>
</test>
<test id="s1-s2-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:29.507" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:29.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:29.510" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:18:29.505" endtime="20210720 20:18:29.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:29.511" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:18:29.511" endtime="20210720 20:18:29.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:29.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:29.512" endtime="20210720 20:18:29.512"/>
</kw>
<status status="PASS" starttime="20210720 20:18:29.504" endtime="20210720 20:18:29.513"/>
</kw>
<msg timestamp="20210720 20:18:29.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:29.503" endtime="20210720 20:18:29.513"/>
</kw>
<msg timestamp="20210720 20:18:29.513" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:18:29.503" endtime="20210720 20:18:29.513"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:18:29.514" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:18:29.513" endtime="20210720 20:18:29.514"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:29.518" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:29.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:29.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:29.516" endtime="20210720 20:18:29.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:29.527" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:29.527" endtime="20210720 20:18:29.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:29.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:29.528" endtime="20210720 20:18:29.528"/>
</kw>
<status status="PASS" starttime="20210720 20:18:29.515" endtime="20210720 20:18:29.529"/>
</kw>
<msg timestamp="20210720 20:18:29.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:29.515" endtime="20210720 20:18:29.529"/>
</kw>
<status status="PASS" starttime="20210720 20:18:29.515" endtime="20210720 20:18:29.529"/>
</kw>
<status status="PASS" starttime="20210720 20:18:29.514" endtime="20210720 20:18:29.529"/>
</kw>
<status status="PASS" starttime="20210720 20:18:29.502" endtime="20210720 20:18:29.529"/>
</kw>
<status status="PASS" starttime="20210720 20:18:29.502" endtime="20210720 20:18:29.529"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:29.533" level="INFO">Running command 'ozone sh key list 08078-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:34.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:34.138" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210720 20:18:29.531" endtime="20210720 20:18:34.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:34.139" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210720 20:18:34.138" endtime="20210720 20:18:34.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:34.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:34.139" endtime="20210720 20:18:34.140"/>
</kw>
<status status="PASS" starttime="20210720 20:18:29.530" endtime="20210720 20:18:34.140"/>
</kw>
<msg timestamp="20210720 20:18:34.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:29.530" endtime="20210720 20:18:34.141"/>
</kw>
<msg timestamp="20210720 20:18:34.141" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20210720 20:18:29.529" endtime="20210720 20:18:34.141"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:34.145" level="INFO">Running command 'ozone sh key list 08078-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:38.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:38.850" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210720 20:18:34.143" endtime="20210720 20:18:38.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:38.851" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210720 20:18:38.850" endtime="20210720 20:18:38.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:38.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:38.851" endtime="20210720 20:18:38.852"/>
</kw>
<status status="PASS" starttime="20210720 20:18:34.142" endtime="20210720 20:18:38.852"/>
</kw>
<msg timestamp="20210720 20:18:38.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:34.142" endtime="20210720 20:18:38.852"/>
</kw>
<msg timestamp="20210720 20:18:38.853" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210720 20:18:34.141" endtime="20210720 20:18:38.853"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:18:38.853" endtime="20210720 20:18:38.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:18:38.854" endtime="20210720 20:18:38.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:18:38.854" endtime="20210720 20:18:38.855"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:18:29.501" endtime="20210720 20:18:38.855"/>
</test>
<test id="s1-s2-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:38.862" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:38.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:38.866" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:18:38.860" endtime="20210720 20:18:38.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:38.868" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:18:38.867" endtime="20210720 20:18:38.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:38.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:38.868" endtime="20210720 20:18:38.868"/>
</kw>
<status status="PASS" starttime="20210720 20:18:38.859" endtime="20210720 20:18:38.869"/>
</kw>
<msg timestamp="20210720 20:18:38.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:38.859" endtime="20210720 20:18:38.869"/>
</kw>
<msg timestamp="20210720 20:18:38.869" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:18:38.858" endtime="20210720 20:18:38.869"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:18:38.870" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:18:38.869" endtime="20210720 20:18:38.870"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:38.874" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:38.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:38.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:38.872" endtime="20210720 20:18:38.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:38.883" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:38.883" endtime="20210720 20:18:38.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:38.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:38.884" endtime="20210720 20:18:38.884"/>
</kw>
<status status="PASS" starttime="20210720 20:18:38.871" endtime="20210720 20:18:38.885"/>
</kw>
<msg timestamp="20210720 20:18:38.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:38.871" endtime="20210720 20:18:38.885"/>
</kw>
<status status="PASS" starttime="20210720 20:18:38.871" endtime="20210720 20:18:38.885"/>
</kw>
<status status="PASS" starttime="20210720 20:18:38.870" endtime="20210720 20:18:38.885"/>
</kw>
<status status="PASS" starttime="20210720 20:18:38.857" endtime="20210720 20:18:38.885"/>
</kw>
<status status="PASS" starttime="20210720 20:18:38.857" endtime="20210720 20:18:38.885"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:38.889" level="INFO">Running command 'ozone sh key delete 08078-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:43.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:43.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:38.887" endtime="20210720 20:18:43.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:43.240" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:43.239" endtime="20210720 20:18:43.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:43.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:43.240" endtime="20210720 20:18:43.241"/>
</kw>
<status status="PASS" starttime="20210720 20:18:38.886" endtime="20210720 20:18:43.241"/>
</kw>
<msg timestamp="20210720 20:18:43.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:38.886" endtime="20210720 20:18:43.241"/>
</kw>
<status status="PASS" starttime="20210720 20:18:38.886" endtime="20210720 20:18:43.241"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:43.245" level="INFO">Running command 'ozone sh key list 08078-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:47.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:47.658" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210720 20:18:43.243" endtime="20210720 20:18:47.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:47.660" level="INFO">key1</msg>
<status status="PASS" starttime="20210720 20:18:47.659" endtime="20210720 20:18:47.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:47.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:47.660" endtime="20210720 20:18:47.661"/>
</kw>
<status status="PASS" starttime="20210720 20:18:43.242" endtime="20210720 20:18:47.661"/>
</kw>
<msg timestamp="20210720 20:18:47.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:43.242" endtime="20210720 20:18:47.661"/>
</kw>
<msg timestamp="20210720 20:18:47.662" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210720 20:18:43.242" endtime="20210720 20:18:47.662"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:18:47.662" endtime="20210720 20:18:47.663"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:18:38.856" endtime="20210720 20:18:47.663"/>
</test>
<test id="s1-s2-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:47.674" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:47.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:47.678" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:18:47.671" endtime="20210720 20:18:47.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:47.679" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:18:47.678" endtime="20210720 20:18:47.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:47.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:47.679" endtime="20210720 20:18:47.680"/>
</kw>
<status status="PASS" starttime="20210720 20:18:47.671" endtime="20210720 20:18:47.680"/>
</kw>
<msg timestamp="20210720 20:18:47.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:47.670" endtime="20210720 20:18:47.680"/>
</kw>
<msg timestamp="20210720 20:18:47.681" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:18:47.670" endtime="20210720 20:18:47.681"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:18:47.681" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:18:47.681" endtime="20210720 20:18:47.681"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:47.686" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:47.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:47.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:47.684" endtime="20210720 20:18:47.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:47.694" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:47.694" endtime="20210720 20:18:47.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:47.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:47.695" endtime="20210720 20:18:47.695"/>
</kw>
<status status="PASS" starttime="20210720 20:18:47.683" endtime="20210720 20:18:47.696"/>
</kw>
<msg timestamp="20210720 20:18:47.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:47.683" endtime="20210720 20:18:47.696"/>
</kw>
<status status="PASS" starttime="20210720 20:18:47.682" endtime="20210720 20:18:47.696"/>
</kw>
<status status="PASS" starttime="20210720 20:18:47.682" endtime="20210720 20:18:47.696"/>
</kw>
<status status="PASS" starttime="20210720 20:18:47.669" endtime="20210720 20:18:47.697"/>
</kw>
<status status="PASS" starttime="20210720 20:18:47.668" endtime="20210720 20:18:47.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:47.700" level="INFO">Running command 'ozone sh bucket list 08078-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:52.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:52.126" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210720 20:18:47.698" endtime="20210720 20:18:52.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:52.127" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:17:48.122Z",
  "modificationTime" : "2021-07-20T20:17:48.122Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:17:23.063Z",
  "modificationTime" : "2021-07-20T20:17:43.628Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:17:56.880Z",
  "modificationTime" : "2021-07-20T20:17:56.880Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:17:14.185Z",
  "modificationTime" : "2021-07-20T20:17:39.674Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:17:18.663Z",
  "modificationTime" : "2021-07-20T20:17:18.663Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210720 20:18:52.126" endtime="20210720 20:18:52.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:52.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:52.127" endtime="20210720 20:18:52.128"/>
</kw>
<status status="PASS" starttime="20210720 20:18:47.698" endtime="20210720 20:18:52.128"/>
</kw>
<msg timestamp="20210720 20:18:52.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:47.697" endtime="20210720 20:18:52.128"/>
</kw>
<msg timestamp="20210720 20:18:52.129" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210720 20:18:47.697" endtime="20210720 20:18:52.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:18:52.129" endtime="20210720 20:18:52.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:18:52.129" endtime="20210720 20:18:52.130"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:18:47.667" endtime="20210720 20:18:52.130"/>
</test>
<test id="s1-s2-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:52.136" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:52.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:52.140" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:18:52.134" endtime="20210720 20:18:52.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:52.141" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:18:52.141" endtime="20210720 20:18:52.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:52.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:52.142" endtime="20210720 20:18:52.142"/>
</kw>
<status status="PASS" starttime="20210720 20:18:52.134" endtime="20210720 20:18:52.143"/>
</kw>
<msg timestamp="20210720 20:18:52.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:52.133" endtime="20210720 20:18:52.143"/>
</kw>
<msg timestamp="20210720 20:18:52.143" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:18:52.133" endtime="20210720 20:18:52.143"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:18:52.144" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:18:52.143" endtime="20210720 20:18:52.144"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:52.148" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:52.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:52.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:52.146" endtime="20210720 20:18:52.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:52.157" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:52.156" endtime="20210720 20:18:52.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:52.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:52.157" endtime="20210720 20:18:52.158"/>
</kw>
<status status="PASS" starttime="20210720 20:18:52.145" endtime="20210720 20:18:52.158"/>
</kw>
<msg timestamp="20210720 20:18:52.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:52.145" endtime="20210720 20:18:52.158"/>
</kw>
<status status="PASS" starttime="20210720 20:18:52.144" endtime="20210720 20:18:52.158"/>
</kw>
<status status="PASS" starttime="20210720 20:18:52.144" endtime="20210720 20:18:52.158"/>
</kw>
<status status="PASS" starttime="20210720 20:18:52.132" endtime="20210720 20:18:52.159"/>
</kw>
<status status="PASS" starttime="20210720 20:18:52.132" endtime="20210720 20:18:52.159"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:52.163" level="INFO">Running command 'ozone sh bucket info 08078-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:56.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:56.683" level="INFO">${output} = 08078-source bucket1</msg>
<status status="PASS" starttime="20210720 20:18:52.160" endtime="20210720 20:18:56.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:56.684" level="INFO">08078-source bucket1</msg>
<status status="PASS" starttime="20210720 20:18:56.684" endtime="20210720 20:18:56.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:56.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:56.685" endtime="20210720 20:18:56.686"/>
</kw>
<status status="PASS" starttime="20210720 20:18:52.160" endtime="20210720 20:18:56.686"/>
</kw>
<msg timestamp="20210720 20:18:56.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:52.159" endtime="20210720 20:18:56.686"/>
</kw>
<msg timestamp="20210720 20:18:56.686" level="INFO">${result} = 08078-source bucket1</msg>
<status status="PASS" starttime="20210720 20:18:52.159" endtime="20210720 20:18:56.687"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:18:56.687" endtime="20210720 20:18:56.687"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:18:52.131" endtime="20210720 20:18:56.688"/>
</test>
<test id="s1-s2-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:56.695" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:56.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:56.698" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:18:56.692" endtime="20210720 20:18:56.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:56.699" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:18:56.698" endtime="20210720 20:18:56.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:56.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:56.699" endtime="20210720 20:18:56.700"/>
</kw>
<status status="PASS" starttime="20210720 20:18:56.691" endtime="20210720 20:18:56.700"/>
</kw>
<msg timestamp="20210720 20:18:56.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:56.691" endtime="20210720 20:18:56.700"/>
</kw>
<msg timestamp="20210720 20:18:56.701" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:18:56.690" endtime="20210720 20:18:56.701"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:18:56.701" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:18:56.701" endtime="20210720 20:18:56.702"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:56.706" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:18:56.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:18:56.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:18:56.704" endtime="20210720 20:18:56.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:18:56.716" level="INFO"/>
<status status="PASS" starttime="20210720 20:18:56.715" endtime="20210720 20:18:56.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:18:56.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:18:56.716" endtime="20210720 20:18:56.717"/>
</kw>
<status status="PASS" starttime="20210720 20:18:56.703" endtime="20210720 20:18:56.718"/>
</kw>
<msg timestamp="20210720 20:18:56.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:56.703" endtime="20210720 20:18:56.718"/>
</kw>
<status status="PASS" starttime="20210720 20:18:56.702" endtime="20210720 20:18:56.718"/>
</kw>
<status status="PASS" starttime="20210720 20:18:56.702" endtime="20210720 20:18:56.718"/>
</kw>
<status status="PASS" starttime="20210720 20:18:56.690" endtime="20210720 20:18:56.718"/>
</kw>
<status status="PASS" starttime="20210720 20:18:56.689" endtime="20210720 20:18:56.718"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:18:56.723" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 08078-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:00.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:00.843" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:18:56.721" endtime="20210720 20:19:00.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:00.844" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:19:00.843" endtime="20210720 20:19:00.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:00.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:00.845" endtime="20210720 20:19:00.845"/>
</kw>
<status status="PASS" starttime="20210720 20:18:56.720" endtime="20210720 20:19:00.846"/>
</kw>
<msg timestamp="20210720 20:19:00.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:18:56.720" endtime="20210720 20:19:00.846"/>
</kw>
<status status="PASS" starttime="20210720 20:18:56.719" endtime="20210720 20:19:00.846"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:00.851" level="INFO">Running command 'ozone sh bucket getacl 08078-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:05.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:05.302" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210720 20:19:00.849" endtime="20210720 20:19:05.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:05.304" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210720 20:19:05.303" endtime="20210720 20:19:05.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:05.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:05.304" endtime="20210720 20:19:05.305"/>
</kw>
<status status="PASS" starttime="20210720 20:19:00.848" endtime="20210720 20:19:05.305"/>
</kw>
<msg timestamp="20210720 20:19:05.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:00.848" endtime="20210720 20:19:05.305"/>
</kw>
<msg timestamp="20210720 20:19:05.305" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210720 20:19:00.847" endtime="20210720 20:19:05.305"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:19:05.306" endtime="20210720 20:19:05.306"/>
</kw>
<status status="PASS" starttime="20210720 20:19:00.846" endtime="20210720 20:19:05.306"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:05.312" level="INFO">Running command 'ozone sh bucket getacl 08078-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:09.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:09.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:05.310" endtime="20210720 20:19:09.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:09.801" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:09.800" endtime="20210720 20:19:09.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:09.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:09.801" endtime="20210720 20:19:09.802"/>
</kw>
<status status="PASS" starttime="20210720 20:19:05.309" endtime="20210720 20:19:09.802"/>
</kw>
<msg timestamp="20210720 20:19:09.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:05.309" endtime="20210720 20:19:09.802"/>
</kw>
<msg timestamp="20210720 20:19:09.803" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210720 20:19:05.308" endtime="20210720 20:19:09.803"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:19:09.803" endtime="20210720 20:19:09.803"/>
</kw>
<status status="PASS" starttime="20210720 20:19:05.306" endtime="20210720 20:19:09.804"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:09.807" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 08078-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:13.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:13.916" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:19:09.805" endtime="20210720 20:19:13.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:13.917" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210720 20:19:13.917" endtime="20210720 20:19:13.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:13.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:13.918" endtime="20210720 20:19:13.918"/>
</kw>
<status status="PASS" starttime="20210720 20:19:09.805" endtime="20210720 20:19:13.919"/>
</kw>
<msg timestamp="20210720 20:19:13.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:09.804" endtime="20210720 20:19:13.919"/>
</kw>
<status status="PASS" starttime="20210720 20:19:09.804" endtime="20210720 20:19:13.919"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:13.925" level="INFO">Running command 'ozone sh bucket getacl 08078-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:18.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:18.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:13.923" endtime="20210720 20:19:18.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:18.160" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:18.159" endtime="20210720 20:19:18.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:18.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:18.160" endtime="20210720 20:19:18.161"/>
</kw>
<status status="PASS" starttime="20210720 20:19:13.922" endtime="20210720 20:19:18.161"/>
</kw>
<msg timestamp="20210720 20:19:18.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:13.922" endtime="20210720 20:19:18.161"/>
</kw>
<msg timestamp="20210720 20:19:18.161" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210720 20:19:13.921" endtime="20210720 20:19:18.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:19:18.162" endtime="20210720 20:19:18.162"/>
</kw>
<status status="PASS" starttime="20210720 20:19:13.919" endtime="20210720 20:19:18.163"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:18.167" level="INFO">Running command 'ozone sh bucket getacl 08078-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:22.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:22.557" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210720 20:19:18.165" endtime="20210720 20:19:22.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:22.559" level="INFO">READ</msg>
<status status="PASS" starttime="20210720 20:19:22.558" endtime="20210720 20:19:22.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:22.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:22.559" endtime="20210720 20:19:22.560"/>
</kw>
<status status="PASS" starttime="20210720 20:19:18.165" endtime="20210720 20:19:22.560"/>
</kw>
<msg timestamp="20210720 20:19:22.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:18.164" endtime="20210720 20:19:22.561"/>
</kw>
<msg timestamp="20210720 20:19:22.561" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210720 20:19:18.163" endtime="20210720 20:19:22.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:19:22.561" endtime="20210720 20:19:22.562"/>
</kw>
<status status="PASS" starttime="20210720 20:19:18.163" endtime="20210720 20:19:22.562"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:18:56.688" endtime="20210720 20:19:22.562"/>
</test>
<test id="s1-s2-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:22.570" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:22.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:22.575" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:19:22.568" endtime="20210720 20:19:22.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:22.577" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:19:22.576" endtime="20210720 20:19:22.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:22.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:22.577" endtime="20210720 20:19:22.578"/>
</kw>
<status status="PASS" starttime="20210720 20:19:22.567" endtime="20210720 20:19:22.578"/>
</kw>
<msg timestamp="20210720 20:19:22.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:22.567" endtime="20210720 20:19:22.578"/>
</kw>
<msg timestamp="20210720 20:19:22.579" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:19:22.566" endtime="20210720 20:19:22.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:19:22.579" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:19:22.579" endtime="20210720 20:19:22.580"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:22.584" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:22.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:22.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:22.582" endtime="20210720 20:19:22.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:22.592" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:22.592" endtime="20210720 20:19:22.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:22.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:22.593" endtime="20210720 20:19:22.594"/>
</kw>
<status status="PASS" starttime="20210720 20:19:22.581" endtime="20210720 20:19:22.594"/>
</kw>
<msg timestamp="20210720 20:19:22.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:22.581" endtime="20210720 20:19:22.594"/>
</kw>
<status status="PASS" starttime="20210720 20:19:22.580" endtime="20210720 20:19:22.595"/>
</kw>
<status status="PASS" starttime="20210720 20:19:22.580" endtime="20210720 20:19:22.595"/>
</kw>
<status status="PASS" starttime="20210720 20:19:22.566" endtime="20210720 20:19:22.595"/>
</kw>
<status status="PASS" starttime="20210720 20:19:22.565" endtime="20210720 20:19:22.595"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:22.599" level="INFO">Running command 'ozone sh bucket link 08078-source/bucket2 08078-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:26.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:26.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:22.597" endtime="20210720 20:19:26.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:26.782" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:26.782" endtime="20210720 20:19:26.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:26.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:26.783" endtime="20210720 20:19:26.783"/>
</kw>
<status status="PASS" starttime="20210720 20:19:22.596" endtime="20210720 20:19:26.784"/>
</kw>
<msg timestamp="20210720 20:19:26.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:22.596" endtime="20210720 20:19:26.784"/>
</kw>
<status status="PASS" starttime="20210720 20:19:22.595" endtime="20210720 20:19:26.784"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:26.787" level="INFO">Running command 'ozone sh bucket create 08078-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:31.046" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:19:31.046" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210720 20:19:26.785" endtime="20210720 20:19:31.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:31.048" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210720 20:19:31.047" endtime="20210720 20:19:31.048"/>
</kw>
<msg timestamp="20210720 20:19:31.048" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210720 20:19:26.784" endtime="20210720 20:19:31.048"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:19:31.049" endtime="20210720 20:19:31.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:31.053" level="INFO">Running command 'ozone sh bucket create 08078-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:35.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:35.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:31.051" endtime="20210720 20:19:35.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:35.354" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:35.354" endtime="20210720 20:19:35.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:35.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:35.355" endtime="20210720 20:19:35.356"/>
</kw>
<status status="PASS" starttime="20210720 20:19:31.050" endtime="20210720 20:19:35.356"/>
</kw>
<msg timestamp="20210720 20:19:35.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:31.050" endtime="20210720 20:19:35.357"/>
</kw>
<status status="PASS" starttime="20210720 20:19:31.049" endtime="20210720 20:19:35.357"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:35.360" level="INFO">Running command 'ozone sh bucket link 08078-source/bucket1 08078-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:39.552" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:19:39.552" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210720 20:19:35.358" endtime="20210720 20:19:39.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:39.553" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210720 20:19:39.553" endtime="20210720 20:19:39.554"/>
</kw>
<msg timestamp="20210720 20:19:39.554" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210720 20:19:35.357" endtime="20210720 20:19:39.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:19:39.554" endtime="20210720 20:19:39.555"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:19:22.563" endtime="20210720 20:19:39.555"/>
</test>
<test id="s1-s2-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:39.561" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:39.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:39.566" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:19:39.559" endtime="20210720 20:19:39.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:39.567" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:19:39.566" endtime="20210720 20:19:39.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:39.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:39.567" endtime="20210720 20:19:39.568"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.558" endtime="20210720 20:19:39.568"/>
</kw>
<msg timestamp="20210720 20:19:39.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:39.558" endtime="20210720 20:19:39.568"/>
</kw>
<msg timestamp="20210720 20:19:39.569" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:19:39.558" endtime="20210720 20:19:39.569"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:19:39.569" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:19:39.569" endtime="20210720 20:19:39.569"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:39.574" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:39.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:39.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:39.572" endtime="20210720 20:19:39.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:39.583" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:39.583" endtime="20210720 20:19:39.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:39.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:39.583" endtime="20210720 20:19:39.584"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.571" endtime="20210720 20:19:39.584"/>
</kw>
<msg timestamp="20210720 20:19:39.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:39.571" endtime="20210720 20:19:39.585"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.570" endtime="20210720 20:19:39.585"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.569" endtime="20210720 20:19:39.585"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.557" endtime="20210720 20:19:39.585"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.557" endtime="20210720 20:19:39.585"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:39.590" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:39.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:39.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:39.588" endtime="20210720 20:19:39.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:39.597" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:39.596" endtime="20210720 20:19:39.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:39.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:39.597" endtime="20210720 20:19:39.598"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.587" endtime="20210720 20:19:39.598"/>
</kw>
<msg timestamp="20210720 20:19:39.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:39.587" endtime="20210720 20:19:39.598"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.586" endtime="20210720 20:19:39.599"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:39.604" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:39.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:39.608" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:19:39.602" endtime="20210720 20:19:39.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:39.610" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:19:39.609" endtime="20210720 20:19:39.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:39.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:39.610" endtime="20210720 20:19:39.611"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.601" endtime="20210720 20:19:39.611"/>
</kw>
<msg timestamp="20210720 20:19:39.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:39.601" endtime="20210720 20:19:39.611"/>
</kw>
<msg timestamp="20210720 20:19:39.611" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:19:39.600" endtime="20210720 20:19:39.611"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:19:39.612" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:19:39.612" endtime="20210720 20:19:39.612"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:39.617" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:39.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:39.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:39.614" endtime="20210720 20:19:39.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:39.626" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:39.625" endtime="20210720 20:19:39.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:39.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:39.626" endtime="20210720 20:19:39.627"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.614" endtime="20210720 20:19:39.627"/>
</kw>
<msg timestamp="20210720 20:19:39.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:39.614" endtime="20210720 20:19:39.627"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.613" endtime="20210720 20:19:39.627"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.612" endtime="20210720 20:19:39.627"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.600" endtime="20210720 20:19:39.628"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.599" endtime="20210720 20:19:39.628"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:39.632" level="INFO">Running command 'ozone sh key list 08078-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:44.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:44.087" level="INFO">${output} = {
  "volumeName" : "08078-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-20T20:17:00.167Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210720 20:19:39.629" endtime="20210720 20:19:44.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:44.088" level="INFO">{
  "volumeName" : "08078-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-20T20:17:00.167Z",
  "modificationTime" : "2021-07-20T20:17:05.193Z",
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210720 20:19:44.087" endtime="20210720 20:19:44.088"/>
</kw>
<msg timestamp="20210720 20:19:44.089" level="INFO">${result} = {
  "volumeName" : "08078-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-07-20T20:17:00.167Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210720 20:19:39.628" endtime="20210720 20:19:44.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:19:44.089" endtime="20210720 20:19:44.089"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.586" endtime="20210720 20:19:44.090"/>
</kw>
<status status="PASS" starttime="20210720 20:19:39.586" endtime="20210720 20:19:44.090"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:19:39.556" endtime="20210720 20:19:44.090"/>
</test>
<test id="s1-s2-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:44.096" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:44.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:44.100" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:19:44.094" endtime="20210720 20:19:44.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:44.101" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:19:44.101" endtime="20210720 20:19:44.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:44.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:44.102" endtime="20210720 20:19:44.102"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.093" endtime="20210720 20:19:44.103"/>
</kw>
<msg timestamp="20210720 20:19:44.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:44.093" endtime="20210720 20:19:44.103"/>
</kw>
<msg timestamp="20210720 20:19:44.103" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:19:44.092" endtime="20210720 20:19:44.103"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:19:44.104" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:19:44.103" endtime="20210720 20:19:44.104"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:44.109" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:44.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:44.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:44.106" endtime="20210720 20:19:44.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:44.117" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:44.116" endtime="20210720 20:19:44.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:44.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:44.117" endtime="20210720 20:19:44.118"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.106" endtime="20210720 20:19:44.118"/>
</kw>
<msg timestamp="20210720 20:19:44.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:44.106" endtime="20210720 20:19:44.118"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.105" endtime="20210720 20:19:44.119"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.104" endtime="20210720 20:19:44.119"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.092" endtime="20210720 20:19:44.119"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.091" endtime="20210720 20:19:44.119"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:44.124" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:44.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:44.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:44.122" endtime="20210720 20:19:44.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:44.130" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:44.129" endtime="20210720 20:19:44.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:44.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:44.130" endtime="20210720 20:19:44.131"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.121" endtime="20210720 20:19:44.131"/>
</kw>
<msg timestamp="20210720 20:19:44.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:44.121" endtime="20210720 20:19:44.131"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.120" endtime="20210720 20:19:44.132"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:44.138" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:44.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:44.141" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:19:44.135" endtime="20210720 20:19:44.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:44.142" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:19:44.141" endtime="20210720 20:19:44.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:44.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:44.142" endtime="20210720 20:19:44.143"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.134" endtime="20210720 20:19:44.143"/>
</kw>
<msg timestamp="20210720 20:19:44.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:44.134" endtime="20210720 20:19:44.143"/>
</kw>
<msg timestamp="20210720 20:19:44.144" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:19:44.133" endtime="20210720 20:19:44.144"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:19:44.145" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:19:44.144" endtime="20210720 20:19:44.145"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:44.149" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:44.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:44.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:44.147" endtime="20210720 20:19:44.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:44.158" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:44.157" endtime="20210720 20:19:44.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:44.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:44.158" endtime="20210720 20:19:44.159"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.147" endtime="20210720 20:19:44.159"/>
</kw>
<msg timestamp="20210720 20:19:44.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:44.146" endtime="20210720 20:19:44.159"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.145" endtime="20210720 20:19:44.159"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.145" endtime="20210720 20:19:44.159"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.132" endtime="20210720 20:19:44.160"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.132" endtime="20210720 20:19:44.160"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:44.163" level="INFO">Running command 'ozone sh key list 08078-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:48.155" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:19:48.155" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 08078-target unreadable-link null</msg>
<status status="PASS" starttime="20210720 20:19:44.161" endtime="20210720 20:19:48.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:48.157" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 08078-target unreadable-link null</msg>
<status status="PASS" starttime="20210720 20:19:48.156" endtime="20210720 20:19:48.157"/>
</kw>
<msg timestamp="20210720 20:19:48.157" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 08078-target unreadable-link null</msg>
<status status="PASS" starttime="20210720 20:19:44.160" endtime="20210720 20:19:48.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:19:48.158" endtime="20210720 20:19:48.158"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.120" endtime="20210720 20:19:48.158"/>
</kw>
<status status="PASS" starttime="20210720 20:19:44.119" endtime="20210720 20:19:48.158"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:19:44.090" endtime="20210720 20:19:48.159"/>
</test>
<test id="s1-s2-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:48.165" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:48.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:48.169" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:19:48.163" endtime="20210720 20:19:48.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:48.171" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:19:48.170" endtime="20210720 20:19:48.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:48.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:48.171" endtime="20210720 20:19:48.171"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.163" endtime="20210720 20:19:48.172"/>
</kw>
<msg timestamp="20210720 20:19:48.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:48.162" endtime="20210720 20:19:48.172"/>
</kw>
<msg timestamp="20210720 20:19:48.172" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:19:48.161" endtime="20210720 20:19:48.172"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:19:48.173" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:19:48.172" endtime="20210720 20:19:48.173"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:48.178" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:48.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:48.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:48.176" endtime="20210720 20:19:48.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:48.187" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:48.186" endtime="20210720 20:19:48.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:48.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:48.187" endtime="20210720 20:19:48.188"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.175" endtime="20210720 20:19:48.188"/>
</kw>
<msg timestamp="20210720 20:19:48.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:48.175" endtime="20210720 20:19:48.189"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.174" endtime="20210720 20:19:48.189"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.173" endtime="20210720 20:19:48.189"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.161" endtime="20210720 20:19:48.189"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.160" endtime="20210720 20:19:48.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:48.194" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:48.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:48.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:48.192" endtime="20210720 20:19:48.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:48.198" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:48.198" endtime="20210720 20:19:48.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:48.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:48.199" endtime="20210720 20:19:48.199"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.191" endtime="20210720 20:19:48.200"/>
</kw>
<msg timestamp="20210720 20:19:48.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:48.191" endtime="20210720 20:19:48.200"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.190" endtime="20210720 20:19:48.200"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:48.206" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:48.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:48.209" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:19:48.204" endtime="20210720 20:19:48.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:48.211" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:19:48.210" endtime="20210720 20:19:48.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:48.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:48.211" endtime="20210720 20:19:48.212"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.203" endtime="20210720 20:19:48.212"/>
</kw>
<msg timestamp="20210720 20:19:48.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:48.203" endtime="20210720 20:19:48.212"/>
</kw>
<msg timestamp="20210720 20:19:48.212" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:19:48.202" endtime="20210720 20:19:48.212"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:19:48.213" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:19:48.213" endtime="20210720 20:19:48.214"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:48.218" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:48.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:48.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:48.216" endtime="20210720 20:19:48.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:48.226" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:48.226" endtime="20210720 20:19:48.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:48.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:48.226" endtime="20210720 20:19:48.227"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.215" endtime="20210720 20:19:48.228"/>
</kw>
<msg timestamp="20210720 20:19:48.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:48.215" endtime="20210720 20:19:48.228"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.214" endtime="20210720 20:19:48.228"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.214" endtime="20210720 20:19:48.228"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.202" endtime="20210720 20:19:48.228"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.201" endtime="20210720 20:19:48.229"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:48.232" level="INFO">Running command 'ozone sh bucket info 08078-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:52.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:52.504" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210720 20:19:48.230" endtime="20210720 20:19:52.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:52.506" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:17:23.063Z",
  "modificationTime" : "2021-07-20T20:17:43.628Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210720 20:19:52.505" endtime="20210720 20:19:52.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:52.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:52.506" endtime="20210720 20:19:52.506"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.230" endtime="20210720 20:19:52.507"/>
</kw>
<msg timestamp="20210720 20:19:52.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:48.229" endtime="20210720 20:19:52.507"/>
</kw>
<msg timestamp="20210720 20:19:52.507" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210720 20:19:48.229" endtime="20210720 20:19:52.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:19:52.508" endtime="20210720 20:19:52.508"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:19:52.508" endtime="20210720 20:19:52.509"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:52.513" level="INFO">Running command 'ozone sh key list 08078-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:56.613" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:19:56.613" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 08078-source unreadable-bucket </msg>
<status status="PASS" starttime="20210720 20:19:52.510" endtime="20210720 20:19:56.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:56.615" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 08078-source unreadable-bucket </msg>
<status status="PASS" starttime="20210720 20:19:56.614" endtime="20210720 20:19:56.615"/>
</kw>
<msg timestamp="20210720 20:19:56.615" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 08078-source unreadable-bucket </msg>
<status status="PASS" starttime="20210720 20:19:52.510" endtime="20210720 20:19:56.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:19:56.615" endtime="20210720 20:19:56.616"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.190" endtime="20210720 20:19:56.616"/>
</kw>
<status status="PASS" starttime="20210720 20:19:48.189" endtime="20210720 20:19:56.616"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:19:48.159" endtime="20210720 20:19:56.616"/>
</test>
<test id="s1-s2-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:56.623" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:56.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:56.627" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:19:56.621" endtime="20210720 20:19:56.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:56.628" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:19:56.628" endtime="20210720 20:19:56.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:56.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:56.628" endtime="20210720 20:19:56.629"/>
</kw>
<status status="PASS" starttime="20210720 20:19:56.620" endtime="20210720 20:19:56.629"/>
</kw>
<msg timestamp="20210720 20:19:56.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:56.620" endtime="20210720 20:19:56.629"/>
</kw>
<msg timestamp="20210720 20:19:56.630" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:19:56.619" endtime="20210720 20:19:56.630"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:19:56.631" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:19:56.630" endtime="20210720 20:19:56.631"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:56.637" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:19:56.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:19:56.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:56.634" endtime="20210720 20:19:56.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:19:56.653" level="INFO"/>
<status status="PASS" starttime="20210720 20:19:56.652" endtime="20210720 20:19:56.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:19:56.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:19:56.653" endtime="20210720 20:19:56.654"/>
</kw>
<status status="PASS" starttime="20210720 20:19:56.632" endtime="20210720 20:19:56.654"/>
</kw>
<msg timestamp="20210720 20:19:56.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:56.632" endtime="20210720 20:19:56.654"/>
</kw>
<status status="PASS" starttime="20210720 20:19:56.631" endtime="20210720 20:19:56.654"/>
</kw>
<status status="PASS" starttime="20210720 20:19:56.631" endtime="20210720 20:19:56.654"/>
</kw>
<status status="PASS" starttime="20210720 20:19:56.619" endtime="20210720 20:19:56.655"/>
</kw>
<status status="PASS" starttime="20210720 20:19:56.618" endtime="20210720 20:19:56.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:19:56.659" level="INFO">Running command 'ozone sh bucket link 08078-target/loop1 08078-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:00.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:00.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:19:56.657" endtime="20210720 20:20:00.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:00.777" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:00.776" endtime="20210720 20:20:00.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:00.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:00.777" endtime="20210720 20:20:00.778"/>
</kw>
<status status="PASS" starttime="20210720 20:19:56.656" endtime="20210720 20:20:00.778"/>
</kw>
<msg timestamp="20210720 20:20:00.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:19:56.656" endtime="20210720 20:20:00.779"/>
</kw>
<status status="PASS" starttime="20210720 20:19:56.655" endtime="20210720 20:20:00.779"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:00.783" level="INFO">Running command 'ozone sh bucket link 08078-target/loop2 08078-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:05.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:05.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:20:00.780" endtime="20210720 20:20:05.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:05.052" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:05.052" endtime="20210720 20:20:05.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:05.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:05.053" endtime="20210720 20:20:05.053"/>
</kw>
<status status="PASS" starttime="20210720 20:20:00.780" endtime="20210720 20:20:05.054"/>
</kw>
<msg timestamp="20210720 20:20:05.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:00.780" endtime="20210720 20:20:05.054"/>
</kw>
<status status="PASS" starttime="20210720 20:20:00.779" endtime="20210720 20:20:05.054"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:05.060" level="INFO">Running command 'ozone sh bucket link 08078-target/loop3 08078-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:09.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:09.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:20:05.057" endtime="20210720 20:20:09.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:09.279" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:09.278" endtime="20210720 20:20:09.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:09.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:09.279" endtime="20210720 20:20:09.280"/>
</kw>
<status status="PASS" starttime="20210720 20:20:05.056" endtime="20210720 20:20:09.280"/>
</kw>
<msg timestamp="20210720 20:20:09.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:05.055" endtime="20210720 20:20:09.280"/>
</kw>
<status status="PASS" starttime="20210720 20:20:05.055" endtime="20210720 20:20:09.281"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:09.284" level="INFO">Running command 'ozone sh key list 08078-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:13.403" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:20:13.403" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210720 20:20:09.281" endtime="20210720 20:20:13.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:13.404" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210720 20:20:13.403" endtime="20210720 20:20:13.404"/>
</kw>
<msg timestamp="20210720 20:20:13.405" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210720 20:20:09.281" endtime="20210720 20:20:13.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:20:13.405" endtime="20210720 20:20:13.405"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:19:56.617" endtime="20210720 20:20:13.405"/>
</test>
<test id="s1-s2-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:13.412" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:13.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:13.416" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:20:13.410" endtime="20210720 20:20:13.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:13.417" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:20:13.417" endtime="20210720 20:20:13.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:13.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:13.418" endtime="20210720 20:20:13.418"/>
</kw>
<status status="PASS" starttime="20210720 20:20:13.409" endtime="20210720 20:20:13.419"/>
</kw>
<msg timestamp="20210720 20:20:13.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:13.409" endtime="20210720 20:20:13.419"/>
</kw>
<msg timestamp="20210720 20:20:13.419" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:20:13.408" endtime="20210720 20:20:13.419"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:20:13.420" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:20:13.419" endtime="20210720 20:20:13.420"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:13.424" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:13.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:13.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:20:13.422" endtime="20210720 20:20:13.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:13.432" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:13.432" endtime="20210720 20:20:13.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:13.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:13.433" endtime="20210720 20:20:13.433"/>
</kw>
<status status="PASS" starttime="20210720 20:20:13.422" endtime="20210720 20:20:13.434"/>
</kw>
<msg timestamp="20210720 20:20:13.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:13.421" endtime="20210720 20:20:13.434"/>
</kw>
<status status="PASS" starttime="20210720 20:20:13.421" endtime="20210720 20:20:13.434"/>
</kw>
<status status="PASS" starttime="20210720 20:20:13.420" endtime="20210720 20:20:13.434"/>
</kw>
<status status="PASS" starttime="20210720 20:20:13.408" endtime="20210720 20:20:13.434"/>
</kw>
<status status="PASS" starttime="20210720 20:20:13.407" endtime="20210720 20:20:13.434"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:13.438" level="INFO">Running command 'ozone sh bucket link 08078-source/bucket1 08078-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:17.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:17.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:20:13.436" endtime="20210720 20:20:17.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:17.741" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:17.740" endtime="20210720 20:20:17.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:17.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:17.742" endtime="20210720 20:20:17.742"/>
</kw>
<status status="PASS" starttime="20210720 20:20:13.435" endtime="20210720 20:20:17.743"/>
</kw>
<msg timestamp="20210720 20:20:17.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:13.435" endtime="20210720 20:20:17.743"/>
</kw>
<status status="PASS" starttime="20210720 20:20:13.434" endtime="20210720 20:20:17.743"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:17.747" level="INFO">Running command 'ozone sh key put 08078-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:24.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:24.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:20:17.745" endtime="20210720 20:20:24.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:24.325" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:24.325" endtime="20210720 20:20:24.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:24.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:24.326" endtime="20210720 20:20:24.326"/>
</kw>
<status status="PASS" starttime="20210720 20:20:17.744" endtime="20210720 20:20:24.327"/>
</kw>
<msg timestamp="20210720 20:20:24.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:17.744" endtime="20210720 20:20:24.327"/>
</kw>
<status status="PASS" starttime="20210720 20:20:17.743" endtime="20210720 20:20:24.327"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:20:24.329" level="INFO">${postfix} = 49487</msg>
<status status="PASS" starttime="20210720 20:20:24.329" endtime="20210720 20:20:24.330"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:20:24.330" level="INFO">${tmpfile} = /tmp/tempkey-49487</msg>
<status status="PASS" starttime="20210720 20:20:24.330" endtime="20210720 20:20:24.330"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:24.334" level="INFO">Running command 'ozone sh key get 08078-target/link1/key3 /tmp/tempkey-49487 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:30.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:30.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:20:24.332" endtime="20210720 20:20:30.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:30.745" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:30.744" endtime="20210720 20:20:30.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:30.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:30.745" endtime="20210720 20:20:30.746"/>
</kw>
<status status="PASS" starttime="20210720 20:20:24.331" endtime="20210720 20:20:30.747"/>
</kw>
<msg timestamp="20210720 20:20:30.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:24.331" endtime="20210720 20:20:30.747"/>
</kw>
<status status="PASS" starttime="20210720 20:20:24.330" endtime="20210720 20:20:30.747"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210720 20:20:30.750" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-49487 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:30.752" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210720 20:20:30.747" endtime="20210720 20:20:30.752"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:30.757" level="INFO">Running command 'rm -f /tmp/tempkey-49487 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:30.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:30.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:20:30.755" endtime="20210720 20:20:30.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:30.761" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:30.760" endtime="20210720 20:20:30.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:30.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:30.761" endtime="20210720 20:20:30.761"/>
</kw>
<status status="PASS" starttime="20210720 20:20:30.754" endtime="20210720 20:20:30.762"/>
</kw>
<msg timestamp="20210720 20:20:30.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:30.754" endtime="20210720 20:20:30.762"/>
</kw>
<status status="PASS" starttime="20210720 20:20:30.753" endtime="20210720 20:20:30.762"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210720 20:20:30.763" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210720 20:20:30.762" endtime="20210720 20:20:30.763"/>
</kw>
<msg timestamp="20210720 20:20:30.763" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210720 20:20:24.328" endtime="20210720 20:20:30.763"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210720 20:20:30.763" endtime="20210720 20:20:30.764"/>
</kw>
<status status="PASS" starttime="20210720 20:20:24.327" endtime="20210720 20:20:30.764"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:20:13.406" endtime="20210720 20:20:30.764"/>
</test>
<test id="s1-s2-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:30.772" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:30.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:30.775" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:20:30.769" endtime="20210720 20:20:30.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:30.776" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:20:30.776" endtime="20210720 20:20:30.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:30.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:30.777" endtime="20210720 20:20:30.777"/>
</kw>
<status status="PASS" starttime="20210720 20:20:30.768" endtime="20210720 20:20:30.777"/>
</kw>
<msg timestamp="20210720 20:20:30.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:30.768" endtime="20210720 20:20:30.778"/>
</kw>
<msg timestamp="20210720 20:20:30.778" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:20:30.768" endtime="20210720 20:20:30.778"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:20:30.779" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:20:30.778" endtime="20210720 20:20:30.779"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:30.784" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:30.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:30.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:20:30.781" endtime="20210720 20:20:30.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:30.792" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:30.791" endtime="20210720 20:20:30.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:30.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:30.792" endtime="20210720 20:20:30.792"/>
</kw>
<status status="PASS" starttime="20210720 20:20:30.781" endtime="20210720 20:20:30.793"/>
</kw>
<msg timestamp="20210720 20:20:30.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:30.780" endtime="20210720 20:20:30.793"/>
</kw>
<status status="PASS" starttime="20210720 20:20:30.779" endtime="20210720 20:20:30.793"/>
</kw>
<status status="PASS" starttime="20210720 20:20:30.779" endtime="20210720 20:20:30.794"/>
</kw>
<status status="PASS" starttime="20210720 20:20:30.767" endtime="20210720 20:20:30.794"/>
</kw>
<status status="PASS" starttime="20210720 20:20:30.767" endtime="20210720 20:20:30.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:30.798" level="INFO">Running command 'ozone sh bucket delete 08078-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:34.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:34.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:20:30.796" endtime="20210720 20:20:34.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:34.854" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:34.854" endtime="20210720 20:20:34.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:34.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:34.855" endtime="20210720 20:20:34.855"/>
</kw>
<status status="PASS" starttime="20210720 20:20:30.795" endtime="20210720 20:20:34.856"/>
</kw>
<msg timestamp="20210720 20:20:34.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:30.795" endtime="20210720 20:20:34.856"/>
</kw>
<status status="PASS" starttime="20210720 20:20:30.794" endtime="20210720 20:20:34.856"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:34.860" level="INFO">Running command 'ozone sh bucket list 08078-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:39.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:39.387" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210720 20:20:34.858" endtime="20210720 20:20:39.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:39.388" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:19:35.166Z",
  "modificationTime" : "2021-07-20T20:19:35.166Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:17:48.122Z",
  "modificationTime" : "2021-07-20T20:17:48.122Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:17:23.063Z",
  "modificationTime" : "2021-07-20T20:17:43.628Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:19:26.599Z",
  "modificationTime" : "2021-07-20T20:19:26.599Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:20:17.548Z",
  "modificationTime" : "2021-07-20T20:20:17.548Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:20:09.196Z",
  "modificationTime" : "2021-07-20T20:20:09.196Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:20:00.687Z",
  "modificationTime" : "2021-07-20T20:20:00.687Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:20:04.896Z",
  "modificationTime" : "2021-07-20T20:20:04.896Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:17:14.185Z",
  "modificationTime" : "2021-07-20T20:17:39.674Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-07-20T20:17:18.663Z",
  "modificationTime" : "2021-07-20T20:17:18.663Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "08078-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210720 20:20:39.387" endtime="20210720 20:20:39.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:39.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:39.388" endtime="20210720 20:20:39.389"/>
</kw>
<status status="PASS" starttime="20210720 20:20:34.857" endtime="20210720 20:20:39.389"/>
</kw>
<msg timestamp="20210720 20:20:39.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:34.857" endtime="20210720 20:20:39.390"/>
</kw>
<msg timestamp="20210720 20:20:39.390" level="INFO">${bucket_list} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "08078-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210720 20:20:34.856" endtime="20210720 20:20:39.390"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:20:39.390" endtime="20210720 20:20:39.391"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:39.394" level="INFO">Running command 'ozone sh key list 08078-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:43.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:43.791" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20210720 20:20:39.392" endtime="20210720 20:20:43.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:43.793" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20210720 20:20:43.792" endtime="20210720 20:20:43.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:43.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:43.793" endtime="20210720 20:20:43.794"/>
</kw>
<status status="PASS" starttime="20210720 20:20:39.392" endtime="20210720 20:20:43.794"/>
</kw>
<msg timestamp="20210720 20:20:43.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:39.391" endtime="20210720 20:20:43.794"/>
</kw>
<msg timestamp="20210720 20:20:43.794" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20210720 20:20:39.391" endtime="20210720 20:20:43.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:20:43.795" endtime="20210720 20:20:43.795"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:20:30.765" endtime="20210720 20:20:43.795"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20210720 20:16:43.591" endtime="20210720 20:20:43.797"/>
</suite>
<suite id="s1-s3" name="S3" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:20:50.619" level="INFO">${random} = 10619</msg>
<status status="PASS" starttime="20210720 20:20:50.618" endtime="20210720 20:20:50.619"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:20:50.621" level="INFO">${PREFIX} = 10619</msg>
<status status="PASS" starttime="20210720 20:20:50.619" endtime="20210720 20:20:50.621"/>
</kw>
<status status="PASS" starttime="20210720 20:20:50.618" endtime="20210720 20:20:50.621"/>
</kw>
<status status="PASS" starttime="20210720 20:20:50.618" endtime="20210720 20:20:50.621"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:50.626" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:50.630" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:20:50.630" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:20:50.622" endtime="20210720 20:20:50.630"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:20:50.630" endtime="20210720 20:20:50.631"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:50.633" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:50.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:50.902" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:20:50.631" endtime="20210720 20:20:50.903"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:50.908" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:57.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:57.259" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Pac...</msg>
<status status="PASS" starttime="20210720 20:20:50.906" endtime="20210720 20:20:57.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:57.260" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:20:57.260" endtime="20210720 20:20:57.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:57.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:57.261" endtime="20210720 20:20:57.261"/>
</kw>
<status status="PASS" starttime="20210720 20:20:50.906" endtime="20210720 20:20:57.262"/>
</kw>
<msg timestamp="20210720 20:20:57.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:50.905" endtime="20210720 20:20:57.262"/>
</kw>
<status status="PASS" starttime="20210720 20:20:50.905" endtime="20210720 20:20:57.262"/>
</kw>
<status status="PASS" starttime="20210720 20:20:50.904" endtime="20210720 20:20:57.263"/>
</kw>
<status status="PASS" starttime="20210720 20:20:50.903" endtime="20210720 20:20:57.263"/>
</kw>
<status status="PASS" starttime="20210720 20:20:50.622" endtime="20210720 20:20:57.263"/>
</kw>
<status status="PASS" starttime="20210720 20:20:50.621" endtime="20210720 20:20:57.263"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:57.272" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:57.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:57.276" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:20:57.269" endtime="20210720 20:20:57.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:57.277" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:20:57.276" endtime="20210720 20:20:57.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:57.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:57.277" endtime="20210720 20:20:57.278"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.269" endtime="20210720 20:20:57.278"/>
</kw>
<msg timestamp="20210720 20:20:57.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:57.268" endtime="20210720 20:20:57.278"/>
</kw>
<msg timestamp="20210720 20:20:57.278" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:20:57.268" endtime="20210720 20:20:57.279"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:20:57.281" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:20:57.279" endtime="20210720 20:20:57.281"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:57.285" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:20:57.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:20:57.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:20:57.282" endtime="20210720 20:20:57.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:20:57.293" level="INFO"/>
<status status="PASS" starttime="20210720 20:20:57.292" endtime="20210720 20:20:57.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:20:57.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:20:57.293" endtime="20210720 20:20:57.294"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.282" endtime="20210720 20:20:57.294"/>
</kw>
<msg timestamp="20210720 20:20:57.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:57.282" endtime="20210720 20:20:57.294"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.281" endtime="20210720 20:20:57.295"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.281" endtime="20210720 20:20:57.295"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.267" endtime="20210720 20:20:57.295"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.267" endtime="20210720 20:20:57.295"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:20:57.300" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:01.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:01.013" level="INFO">${output} = 2021-07-20 20:21:00,277 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:20:57.298" endtime="20210720 20:21:01.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:01.015" level="INFO">2021-07-20 20:21:00,277 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:21:01.014" endtime="20210720 20:21:01.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:01.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:01.015" endtime="20210720 20:21:01.015"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.298" endtime="20210720 20:21:01.016"/>
</kw>
<msg timestamp="20210720 20:21:01.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:20:57.297" endtime="20210720 20:21:01.016"/>
</kw>
<msg timestamp="20210720 20:21:01.016" level="INFO">${result} = 2021-07-20 20:21:00,277 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:20:57.297" endtime="20210720 20:21:01.016"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:21:01.017" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:21:01.017" endtime="20210720 20:21:01.017"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:21:01.018" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:21:01.018" endtime="20210720 20:21:01.018"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:21:01.019" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:21:01.018" endtime="20210720 20:21:01.019"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:01.020" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:21:01.019" endtime="20210720 20:21:01.020"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:01.021" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:21:01.020" endtime="20210720 20:21:01.021"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:01.026" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:01.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:01.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:01.024" endtime="20210720 20:21:01.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:01.553" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:01.553" endtime="20210720 20:21:01.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:01.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:01.553" endtime="20210720 20:21:01.554"/>
</kw>
<status status="PASS" starttime="20210720 20:21:01.023" endtime="20210720 20:21:01.554"/>
</kw>
<msg timestamp="20210720 20:21:01.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:01.023" endtime="20210720 20:21:01.555"/>
</kw>
<status status="PASS" starttime="20210720 20:21:01.021" endtime="20210720 20:21:01.555"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:01.558" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:01.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:01.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:01.556" endtime="20210720 20:21:01.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:01.902" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:01.902" endtime="20210720 20:21:01.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:01.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:01.903" endtime="20210720 20:21:01.903"/>
</kw>
<status status="PASS" starttime="20210720 20:21:01.556" endtime="20210720 20:21:01.903"/>
</kw>
<msg timestamp="20210720 20:21:01.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:01.555" endtime="20210720 20:21:01.904"/>
</kw>
<status status="PASS" starttime="20210720 20:21:01.555" endtime="20210720 20:21:01.904"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:01.907" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:02.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:02.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:01.905" endtime="20210720 20:21:02.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:02.241" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:02.240" endtime="20210720 20:21:02.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:02.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:02.241" endtime="20210720 20:21:02.241"/>
</kw>
<status status="PASS" starttime="20210720 20:21:01.905" endtime="20210720 20:21:02.242"/>
</kw>
<msg timestamp="20210720 20:21:02.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:01.904" endtime="20210720 20:21:02.242"/>
</kw>
<status status="PASS" starttime="20210720 20:21:01.904" endtime="20210720 20:21:02.242"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:02.246" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:02.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:02.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:02.244" endtime="20210720 20:21:02.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:02.580" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:02.579" endtime="20210720 20:21:02.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:02.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:02.580" endtime="20210720 20:21:02.581"/>
</kw>
<status status="PASS" starttime="20210720 20:21:02.243" endtime="20210720 20:21:02.581"/>
</kw>
<msg timestamp="20210720 20:21:02.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:02.243" endtime="20210720 20:21:02.582"/>
</kw>
<status status="PASS" starttime="20210720 20:21:02.242" endtime="20210720 20:21:02.582"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.296" endtime="20210720 20:21:02.582"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.295" endtime="20210720 20:21:02.582"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:02.582" endtime="20210720 20:21:02.583"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.266" endtime="20210720 20:21:02.583"/>
</kw>
<status status="PASS" starttime="20210720 20:20:57.264" endtime="20210720 20:21:02.583"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:21:02.584" level="INFO">${postfix} = 36100</msg>
<status status="PASS" starttime="20210720 20:21:02.584" endtime="20210720 20:21:02.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:02.585" level="INFO">${bucket} = bucket-36100</msg>
<status status="PASS" starttime="20210720 20:21:02.585" endtime="20210720 20:21:02.585"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:02.590" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-36100 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:05.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:05.222" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-36100"
}</msg>
<status status="PASS" starttime="20210720 20:21:02.587" endtime="20210720 20:21:05.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:05.223" level="INFO">{
    "Location": "http://s3g:9878/bucket-36100"
}</msg>
<status status="PASS" starttime="20210720 20:21:05.222" endtime="20210720 20:21:05.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:05.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:05.223" endtime="20210720 20:21:05.225"/>
</kw>
<status status="PASS" starttime="20210720 20:21:02.587" endtime="20210720 20:21:05.225"/>
</kw>
<msg timestamp="20210720 20:21:05.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:02.587" endtime="20210720 20:21:05.225"/>
</kw>
<msg timestamp="20210720 20:21:05.226" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-36100"
}</msg>
<status status="PASS" starttime="20210720 20:21:02.586" endtime="20210720 20:21:05.226"/>
</kw>
<msg timestamp="20210720 20:21:05.226" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-36100"
}</msg>
<status status="PASS" starttime="20210720 20:21:02.586" endtime="20210720 20:21:05.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:05.226" endtime="20210720 20:21:05.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:05.227" endtime="20210720 20:21:05.227"/>
</kw>
<status status="PASS" starttime="20210720 20:21:02.585" endtime="20210720 20:21:05.227"/>
</kw>
<status status="PASS" starttime="20210720 20:21:02.584" endtime="20210720 20:21:05.227"/>
</kw>
<msg timestamp="20210720 20:21:05.227" level="INFO">${BUCKET} = bucket-36100</msg>
<status status="PASS" starttime="20210720 20:21:02.583" endtime="20210720 20:21:05.227"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:21:05.228" level="INFO">${BUCKET} = bucket-36100</msg>
<status status="PASS" starttime="20210720 20:21:05.228" endtime="20210720 20:21:05.228"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:05.228" endtime="20210720 20:21:05.229"/>
</kw>
<status status="PASS" starttime="20210720 20:20:50.617" endtime="20210720 20:21:05.229"/>
</kw>
<suite id="s1-s3-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:21:05.242" level="INFO">${random} = 71715</msg>
<status status="PASS" starttime="20210720 20:21:05.241" endtime="20210720 20:21:05.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:21:05.243" level="INFO">${PREFIX} = 71715</msg>
<status status="PASS" starttime="20210720 20:21:05.242" endtime="20210720 20:21:05.243"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.241" endtime="20210720 20:21:05.244"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.241" endtime="20210720 20:21:05.244"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:05.247" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:05.251" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:21:05.251" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:21:05.244" endtime="20210720 20:21:05.251"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:05.252" endtime="20210720 20:21:05.252"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:05.254" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:05.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:05.414" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:21:05.252" endtime="20210720 20:21:05.414"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:05.419" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:05.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:05.843" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:21:05.417" endtime="20210720 20:21:05.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:05.844" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:21:05.843" endtime="20210720 20:21:05.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:05.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:05.845" endtime="20210720 20:21:05.845"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.416" endtime="20210720 20:21:05.846"/>
</kw>
<msg timestamp="20210720 20:21:05.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:05.416" endtime="20210720 20:21:05.846"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.416" endtime="20210720 20:21:05.846"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.415" endtime="20210720 20:21:05.846"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.415" endtime="20210720 20:21:05.846"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.244" endtime="20210720 20:21:05.846"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.244" endtime="20210720 20:21:05.847"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:05.852" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:05.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:05.856" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:21:05.850" endtime="20210720 20:21:05.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:05.857" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:21:05.856" endtime="20210720 20:21:05.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:05.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:05.857" endtime="20210720 20:21:05.858"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.849" endtime="20210720 20:21:05.858"/>
</kw>
<msg timestamp="20210720 20:21:05.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:05.849" endtime="20210720 20:21:05.858"/>
</kw>
<msg timestamp="20210720 20:21:05.858" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:21:05.849" endtime="20210720 20:21:05.858"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:21:05.860" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:21:05.859" endtime="20210720 20:21:05.861"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:05.865" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:05.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:05.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:05.862" endtime="20210720 20:21:05.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:05.873" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:05.873" endtime="20210720 20:21:05.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:05.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:05.874" endtime="20210720 20:21:05.874"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.862" endtime="20210720 20:21:05.874"/>
</kw>
<msg timestamp="20210720 20:21:05.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:05.862" endtime="20210720 20:21:05.875"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.861" endtime="20210720 20:21:05.875"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.861" endtime="20210720 20:21:05.875"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.848" endtime="20210720 20:21:05.875"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.848" endtime="20210720 20:21:05.875"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:05.879" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:09.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:09.747" level="INFO">${output} = 2021-07-20 20:21:09,023 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:21:05.877" endtime="20210720 20:21:09.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:09.748" level="INFO">2021-07-20 20:21:09,023 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:21:09.747" endtime="20210720 20:21:09.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:09.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:09.748" endtime="20210720 20:21:09.749"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.877" endtime="20210720 20:21:09.749"/>
</kw>
<msg timestamp="20210720 20:21:09.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:05.877" endtime="20210720 20:21:09.749"/>
</kw>
<msg timestamp="20210720 20:21:09.750" level="INFO">${result} = 2021-07-20 20:21:09,023 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:21:05.876" endtime="20210720 20:21:09.750"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:21:09.750" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:21:09.750" endtime="20210720 20:21:09.750"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:21:09.751" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:21:09.751" endtime="20210720 20:21:09.751"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:21:09.752" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:21:09.751" endtime="20210720 20:21:09.752"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:09.753" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:21:09.752" endtime="20210720 20:21:09.753"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:09.755" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:21:09.754" endtime="20210720 20:21:09.755"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:09.758" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:10.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:10.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:09.756" endtime="20210720 20:21:10.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:10.115" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:10.115" endtime="20210720 20:21:10.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:10.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:10.116" endtime="20210720 20:21:10.116"/>
</kw>
<status status="PASS" starttime="20210720 20:21:09.755" endtime="20210720 20:21:10.117"/>
</kw>
<msg timestamp="20210720 20:21:10.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:09.755" endtime="20210720 20:21:10.117"/>
</kw>
<status status="PASS" starttime="20210720 20:21:09.755" endtime="20210720 20:21:10.117"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:10.121" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:10.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:10.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:10.119" endtime="20210720 20:21:10.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:10.479" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:10.478" endtime="20210720 20:21:10.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:10.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:10.479" endtime="20210720 20:21:10.480"/>
</kw>
<status status="PASS" starttime="20210720 20:21:10.118" endtime="20210720 20:21:10.480"/>
</kw>
<msg timestamp="20210720 20:21:10.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:10.118" endtime="20210720 20:21:10.480"/>
</kw>
<status status="PASS" starttime="20210720 20:21:10.117" endtime="20210720 20:21:10.481"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:10.484" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:10.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:10.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:10.482" endtime="20210720 20:21:10.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:10.832" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:10.831" endtime="20210720 20:21:10.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:10.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:10.832" endtime="20210720 20:21:10.833"/>
</kw>
<status status="PASS" starttime="20210720 20:21:10.482" endtime="20210720 20:21:10.833"/>
</kw>
<msg timestamp="20210720 20:21:10.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:10.481" endtime="20210720 20:21:10.833"/>
</kw>
<status status="PASS" starttime="20210720 20:21:10.481" endtime="20210720 20:21:10.834"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:10.843" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:11.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:11.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:10.835" endtime="20210720 20:21:11.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:11.185" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:11.185" endtime="20210720 20:21:11.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:11.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:11.186" endtime="20210720 20:21:11.186"/>
</kw>
<status status="PASS" starttime="20210720 20:21:10.834" endtime="20210720 20:21:11.186"/>
</kw>
<msg timestamp="20210720 20:21:11.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:10.834" endtime="20210720 20:21:11.187"/>
</kw>
<status status="PASS" starttime="20210720 20:21:10.834" endtime="20210720 20:21:11.187"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.876" endtime="20210720 20:21:11.187"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.875" endtime="20210720 20:21:11.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:11.187" endtime="20210720 20:21:11.188"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.847" endtime="20210720 20:21:11.188"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.847" endtime="20210720 20:21:11.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:21:11.190" level="INFO">${postfix} = 72074</msg>
<status status="PASS" starttime="20210720 20:21:11.190" endtime="20210720 20:21:11.190"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:11.190" level="INFO">${bucket} = bucket-72074</msg>
<status status="PASS" starttime="20210720 20:21:11.190" endtime="20210720 20:21:11.190"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:11.197" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-72074 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:11.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:11.794" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-72074"
}</msg>
<status status="PASS" starttime="20210720 20:21:11.195" endtime="20210720 20:21:11.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:11.795" level="INFO">{
    "Location": "http://s3g:9878/bucket-72074"
}</msg>
<status status="PASS" starttime="20210720 20:21:11.794" endtime="20210720 20:21:11.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:11.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:11.795" endtime="20210720 20:21:11.796"/>
</kw>
<status status="PASS" starttime="20210720 20:21:11.195" endtime="20210720 20:21:11.796"/>
</kw>
<msg timestamp="20210720 20:21:11.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:11.194" endtime="20210720 20:21:11.796"/>
</kw>
<msg timestamp="20210720 20:21:11.797" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-72074"
}</msg>
<status status="PASS" starttime="20210720 20:21:11.194" endtime="20210720 20:21:11.797"/>
</kw>
<msg timestamp="20210720 20:21:11.797" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-72074"
}</msg>
<status status="PASS" starttime="20210720 20:21:11.193" endtime="20210720 20:21:11.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:11.797" endtime="20210720 20:21:11.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:11.798" endtime="20210720 20:21:11.798"/>
</kw>
<status status="PASS" starttime="20210720 20:21:11.191" endtime="20210720 20:21:11.798"/>
</kw>
<status status="PASS" starttime="20210720 20:21:11.189" endtime="20210720 20:21:11.799"/>
</kw>
<msg timestamp="20210720 20:21:11.799" level="INFO">${BUCKET} = bucket-72074</msg>
<status status="PASS" starttime="20210720 20:21:11.189" endtime="20210720 20:21:11.799"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:21:11.799" level="INFO">${BUCKET} = bucket-72074</msg>
<status status="PASS" starttime="20210720 20:21:11.799" endtime="20210720 20:21:11.800"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:11.800" endtime="20210720 20:21:11.800"/>
</kw>
<status status="PASS" starttime="20210720 20:21:05.240" endtime="20210720 20:21:11.800"/>
</kw>
<test id="s1-s3-s1-t1" name="File upload and directory list">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:11.805" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210720 20:21:11.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:11.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:11.803" endtime="20210720 20:21:11.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:11.810" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:11.809" endtime="20210720 20:21:11.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:11.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:11.810" endtime="20210720 20:21:11.811"/>
</kw>
<status status="PASS" starttime="20210720 20:21:11.802" endtime="20210720 20:21:11.811"/>
</kw>
<msg timestamp="20210720 20:21:11.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:11.802" endtime="20210720 20:21:11.811"/>
</kw>
<status status="PASS" starttime="20210720 20:21:11.802" endtime="20210720 20:21:11.812"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:11.816" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-72074 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:17.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:17.080" level="INFO">${output} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-72074/testfile        </msg>
<status status="PASS" starttime="20210720 20:21:11.814" endtime="20210720 20:21:17.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:17.081" level="INFO">Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-72074/testfile        </msg>
<status status="PASS" starttime="20210720 20:21:17.080" endtime="20210720 20:21:17.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:17.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:17.081" endtime="20210720 20:21:17.082"/>
</kw>
<status status="PASS" starttime="20210720 20:21:11.813" endtime="20210720 20:21:17.082"/>
</kw>
<msg timestamp="20210720 20:21:17.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:11.813" endtime="20210720 20:21:17.082"/>
</kw>
<msg timestamp="20210720 20:21:17.083" level="INFO">${output} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-72074/testfile        </msg>
<status status="PASS" starttime="20210720 20:21:11.812" endtime="20210720 20:21:17.083"/>
</kw>
<msg timestamp="20210720 20:21:17.083" level="INFO">${result} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-72074/testfile        </msg>
<status status="PASS" starttime="20210720 20:21:11.812" endtime="20210720 20:21:17.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:17.083" endtime="20210720 20:21:17.083"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:17.088" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-72074/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:20.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:20.378" level="INFO">${output} = Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-72074/dir1/dir2/file   </msg>
<status status="PASS" starttime="20210720 20:21:17.086" endtime="20210720 20:21:20.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:20.379" level="INFO">Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-72074/dir1/dir2/file   </msg>
<status status="PASS" starttime="20210720 20:21:20.378" endtime="20210720 20:21:20.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:20.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:20.380" endtime="20210720 20:21:20.380"/>
</kw>
<status status="PASS" starttime="20210720 20:21:17.085" endtime="20210720 20:21:20.381"/>
</kw>
<msg timestamp="20210720 20:21:20.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:17.085" endtime="20210720 20:21:20.381"/>
</kw>
<msg timestamp="20210720 20:21:20.382" level="INFO">${output} = Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-72074/dir1/dir2/file   </msg>
<status status="PASS" starttime="20210720 20:21:17.084" endtime="20210720 20:21:20.382"/>
</kw>
<msg timestamp="20210720 20:21:20.382" level="INFO">${result} = Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-72074/dir1/dir2/file   </msg>
<status status="PASS" starttime="20210720 20:21:17.084" endtime="20210720 20:21:20.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:20.382" endtime="20210720 20:21:20.383"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:20.387" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-72074 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:20.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:20.972" level="INFO">${output} =                            PRE dir1/
2021-07-20 20:21:16         29 testfile</msg>
<status status="PASS" starttime="20210720 20:21:20.385" endtime="20210720 20:21:20.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:20.973" level="INFO">                           PRE dir1/
2021-07-20 20:21:16         29 testfile</msg>
<status status="PASS" starttime="20210720 20:21:20.972" endtime="20210720 20:21:20.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:20.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:20.973" endtime="20210720 20:21:20.974"/>
</kw>
<status status="PASS" starttime="20210720 20:21:20.384" endtime="20210720 20:21:20.974"/>
</kw>
<msg timestamp="20210720 20:21:20.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:20.384" endtime="20210720 20:21:20.974"/>
</kw>
<msg timestamp="20210720 20:21:20.975" level="INFO">${output} =                            PRE dir1/
2021-07-20 20:21:16         29 testfile</msg>
<status status="PASS" starttime="20210720 20:21:20.383" endtime="20210720 20:21:20.975"/>
</kw>
<msg timestamp="20210720 20:21:20.975" level="INFO">${result} =                            PRE dir1/
2021-07-20 20:21:16         29 testfile</msg>
<status status="PASS" starttime="20210720 20:21:20.383" endtime="20210720 20:21:20.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:20.975" endtime="20210720 20:21:20.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:20.976" endtime="20210720 20:21:20.976"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:20.976" endtime="20210720 20:21:20.977"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:20.982" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-72074/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:21.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:21.563" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20210720 20:21:20.979" endtime="20210720 20:21:21.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:21.565" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20210720 20:21:21.564" endtime="20210720 20:21:21.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:21.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:21.565" endtime="20210720 20:21:21.566"/>
</kw>
<status status="PASS" starttime="20210720 20:21:20.978" endtime="20210720 20:21:21.566"/>
</kw>
<msg timestamp="20210720 20:21:21.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:20.978" endtime="20210720 20:21:21.566"/>
</kw>
<msg timestamp="20210720 20:21:21.566" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20210720 20:21:20.978" endtime="20210720 20:21:21.566"/>
</kw>
<msg timestamp="20210720 20:21:21.567" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20210720 20:21:20.977" endtime="20210720 20:21:21.567"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:21.567" endtime="20210720 20:21:21.568"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:21.568" endtime="20210720 20:21:21.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:21.569" endtime="20210720 20:21:21.569"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:21.574" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-72074/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:22.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:22.117" level="INFO">${output} = 2021-07-20 20:21:20         29 file</msg>
<status status="PASS" starttime="20210720 20:21:21.572" endtime="20210720 20:21:22.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:22.118" level="INFO">2021-07-20 20:21:20         29 file</msg>
<status status="PASS" starttime="20210720 20:21:22.117" endtime="20210720 20:21:22.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:22.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:22.118" endtime="20210720 20:21:22.119"/>
</kw>
<status status="PASS" starttime="20210720 20:21:21.571" endtime="20210720 20:21:22.119"/>
</kw>
<msg timestamp="20210720 20:21:22.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:21.570" endtime="20210720 20:21:22.120"/>
</kw>
<msg timestamp="20210720 20:21:22.120" level="INFO">${output} = 2021-07-20 20:21:20         29 file</msg>
<status status="PASS" starttime="20210720 20:21:21.570" endtime="20210720 20:21:22.120"/>
</kw>
<msg timestamp="20210720 20:21:22.120" level="INFO">${result} = 2021-07-20 20:21:20         29 file</msg>
<status status="PASS" starttime="20210720 20:21:21.569" endtime="20210720 20:21:22.120"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:22.121" endtime="20210720 20:21:22.121"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:22.121" endtime="20210720 20:21:22.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:22.122" endtime="20210720 20:21:22.122"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:21:11.800" endtime="20210720 20:21:22.123"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210720 20:21:05.229" endtime="20210720 20:21:22.125"/>
</suite>
<suite id="s1-s3-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:21:22.143" level="INFO">${random} = 37939</msg>
<status status="PASS" starttime="20210720 20:21:22.143" endtime="20210720 20:21:22.143"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:21:22.145" level="INFO">${PREFIX} = 37939</msg>
<status status="PASS" starttime="20210720 20:21:22.144" endtime="20210720 20:21:22.145"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.142" endtime="20210720 20:21:22.146"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.142" endtime="20210720 20:21:22.146"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:22.149" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:22.151" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:21:22.151" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:21:22.146" endtime="20210720 20:21:22.151"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:22.151" endtime="20210720 20:21:22.152"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:22.154" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:22.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:22.318" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:21:22.152" endtime="20210720 20:21:22.318"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:22.324" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:22.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:22.772" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:21:22.321" endtime="20210720 20:21:22.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:22.773" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:21:22.773" endtime="20210720 20:21:22.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:22.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:22.774" endtime="20210720 20:21:22.775"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.321" endtime="20210720 20:21:22.775"/>
</kw>
<msg timestamp="20210720 20:21:22.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:22.320" endtime="20210720 20:21:22.775"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.320" endtime="20210720 20:21:22.776"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.320" endtime="20210720 20:21:22.776"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.319" endtime="20210720 20:21:22.777"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.146" endtime="20210720 20:21:22.777"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.146" endtime="20210720 20:21:22.777"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:22.785" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:22.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:22.789" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:21:22.783" endtime="20210720 20:21:22.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:22.790" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:21:22.790" endtime="20210720 20:21:22.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:22.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:22.791" endtime="20210720 20:21:22.792"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.782" endtime="20210720 20:21:22.792"/>
</kw>
<msg timestamp="20210720 20:21:22.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:22.782" endtime="20210720 20:21:22.792"/>
</kw>
<msg timestamp="20210720 20:21:22.792" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:21:22.781" endtime="20210720 20:21:22.792"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:21:22.795" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:21:22.793" endtime="20210720 20:21:22.795"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:22.799" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:22.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:22.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:22.797" endtime="20210720 20:21:22.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:22.807" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:22.806" endtime="20210720 20:21:22.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:22.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:22.807" endtime="20210720 20:21:22.807"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.796" endtime="20210720 20:21:22.808"/>
</kw>
<msg timestamp="20210720 20:21:22.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:22.796" endtime="20210720 20:21:22.808"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.795" endtime="20210720 20:21:22.808"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.795" endtime="20210720 20:21:22.808"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.781" endtime="20210720 20:21:22.808"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.779" endtime="20210720 20:21:22.809"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:22.813" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:26.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:26.468" level="INFO">${output} = 2021-07-20 20:21:25,796 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:21:22.811" endtime="20210720 20:21:26.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:26.470" level="INFO">2021-07-20 20:21:25,796 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:21:26.469" endtime="20210720 20:21:26.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:26.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:26.470" endtime="20210720 20:21:26.471"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.811" endtime="20210720 20:21:26.471"/>
</kw>
<msg timestamp="20210720 20:21:26.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:22.810" endtime="20210720 20:21:26.471"/>
</kw>
<msg timestamp="20210720 20:21:26.471" level="INFO">${result} = 2021-07-20 20:21:25,796 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:21:22.809" endtime="20210720 20:21:26.471"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:21:26.472" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:21:26.472" endtime="20210720 20:21:26.472"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:21:26.473" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:21:26.472" endtime="20210720 20:21:26.473"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:21:26.473" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:21:26.473" endtime="20210720 20:21:26.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:26.475" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:21:26.474" endtime="20210720 20:21:26.475"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:26.476" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:21:26.475" endtime="20210720 20:21:26.476"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:26.480" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:26.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:26.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:26.477" endtime="20210720 20:21:26.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:26.853" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:26.853" endtime="20210720 20:21:26.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:26.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:26.854" endtime="20210720 20:21:26.854"/>
</kw>
<status status="PASS" starttime="20210720 20:21:26.477" endtime="20210720 20:21:26.854"/>
</kw>
<msg timestamp="20210720 20:21:26.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:26.477" endtime="20210720 20:21:26.855"/>
</kw>
<status status="PASS" starttime="20210720 20:21:26.476" endtime="20210720 20:21:26.855"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:26.859" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:27.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:27.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:26.856" endtime="20210720 20:21:27.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:27.225" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:27.224" endtime="20210720 20:21:27.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:27.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:27.225" endtime="20210720 20:21:27.226"/>
</kw>
<status status="PASS" starttime="20210720 20:21:26.856" endtime="20210720 20:21:27.226"/>
</kw>
<msg timestamp="20210720 20:21:27.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:26.856" endtime="20210720 20:21:27.227"/>
</kw>
<status status="PASS" starttime="20210720 20:21:26.855" endtime="20210720 20:21:27.227"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:27.231" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:27.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:27.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:27.229" endtime="20210720 20:21:27.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:27.586" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:27.586" endtime="20210720 20:21:27.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:27.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:27.587" endtime="20210720 20:21:27.587"/>
</kw>
<status status="PASS" starttime="20210720 20:21:27.228" endtime="20210720 20:21:27.587"/>
</kw>
<msg timestamp="20210720 20:21:27.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:27.228" endtime="20210720 20:21:27.588"/>
</kw>
<status status="PASS" starttime="20210720 20:21:27.227" endtime="20210720 20:21:27.588"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:27.593" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:27.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:27.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:27.591" endtime="20210720 20:21:27.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:27.964" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:27.963" endtime="20210720 20:21:27.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:27.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:27.964" endtime="20210720 20:21:27.965"/>
</kw>
<status status="PASS" starttime="20210720 20:21:27.590" endtime="20210720 20:21:27.965"/>
</kw>
<msg timestamp="20210720 20:21:27.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:27.589" endtime="20210720 20:21:27.965"/>
</kw>
<status status="PASS" starttime="20210720 20:21:27.588" endtime="20210720 20:21:27.966"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.809" endtime="20210720 20:21:27.966"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.809" endtime="20210720 20:21:27.966"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:27.966" endtime="20210720 20:21:27.966"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.778" endtime="20210720 20:21:27.967"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.777" endtime="20210720 20:21:27.967"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:21:27.968" level="INFO">${postfix} = 39533</msg>
<status status="PASS" starttime="20210720 20:21:27.968" endtime="20210720 20:21:27.968"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:27.969" level="INFO">${bucket} = bucket-39533</msg>
<status status="PASS" starttime="20210720 20:21:27.968" endtime="20210720 20:21:27.969"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:27.973" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-39533 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:28.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:28.532" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-39533"
}</msg>
<status status="PASS" starttime="20210720 20:21:27.971" endtime="20210720 20:21:28.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:28.534" level="INFO">{
    "Location": "http://s3g:9878/bucket-39533"
}</msg>
<status status="PASS" starttime="20210720 20:21:28.533" endtime="20210720 20:21:28.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:28.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:28.534" endtime="20210720 20:21:28.534"/>
</kw>
<status status="PASS" starttime="20210720 20:21:27.970" endtime="20210720 20:21:28.535"/>
</kw>
<msg timestamp="20210720 20:21:28.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:27.970" endtime="20210720 20:21:28.535"/>
</kw>
<msg timestamp="20210720 20:21:28.535" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-39533"
}</msg>
<status status="PASS" starttime="20210720 20:21:27.970" endtime="20210720 20:21:28.535"/>
</kw>
<msg timestamp="20210720 20:21:28.536" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-39533"
}</msg>
<status status="PASS" starttime="20210720 20:21:27.969" endtime="20210720 20:21:28.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:28.536" endtime="20210720 20:21:28.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:28.537" endtime="20210720 20:21:28.537"/>
</kw>
<status status="PASS" starttime="20210720 20:21:27.969" endtime="20210720 20:21:28.537"/>
</kw>
<status status="PASS" starttime="20210720 20:21:27.967" endtime="20210720 20:21:28.537"/>
</kw>
<msg timestamp="20210720 20:21:28.537" level="INFO">${BUCKET} = bucket-39533</msg>
<status status="PASS" starttime="20210720 20:21:27.967" endtime="20210720 20:21:28.538"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:21:28.538" level="INFO">${BUCKET} = bucket-39533</msg>
<status status="PASS" starttime="20210720 20:21:28.538" endtime="20210720 20:21:28.538"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:28.538" endtime="20210720 20:21:28.539"/>
</kw>
<status status="PASS" starttime="20210720 20:21:22.142" endtime="20210720 20:21:28.539"/>
</kw>
<test id="s1-s3-s2-t1" name="Bobo3 Client Test">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 /opt/hadoop/smoketest/s3/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:28.544" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 bucket-39533 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:52.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:52.027" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20210720 20:21:28.542" endtime="20210720 20:21:52.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:52.029" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 23.067s

OK
{'ResponseMetadata': {'RequestId': 'c449a751-cdb9-43bf-9e7d-7fdf4c0308db', 'HostId': 'V9K3QyJxKYE', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 20 Jul 2021 20:21:29 GMT, Tue, 20 Jul 2021 20:21:29 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 20 Jul 2021 20:21:29 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'location': 'http://s3g:9878/boto-bucket999', 'server': 'Ozone', 'x-amz-id-2': 'V9K3QyJxKYE', 'x-amz-request-id': 'c449a751-cdb9-43bf-9e7d-7fdf4c0308db', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/boto-bucket999'}
None
None
None
{'ResponseMetadata': {'RequestId': 'e65e3512-b086-4335-8169-1110b33f96f1', 'HostId': 'dGXf8mOipPjWv', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 20 Jul 2021 20:21:42 GMT, Tue, 20 Jul 2021 20:21:42 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 20 Jul 2021 20:21:42 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'location': 'http://s3g:9878/bucket-ekyxtelles', 'server': 'Ozone', 'x-amz-id-2': 'dGXf8mOipPjWv', 'x-amz-request-id': 'e65e3512-b086-4335-8169-1110b33f96f1', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-ekyxtelles'}
{'ResponseMetadata': {'RequestId': '74a05b7d-c8c3-430e-8112-68331b4ee73e', 'HostId': 'TMFZZsX3igW', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 20 Jul 2021 20:21:42 GMT, Tue, 20 Jul 2021 20:21:42 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 20 Jul 2021 20:21:42 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'TMFZZsX3igW', 'x-amz-request-id': '74a05b7d-c8c3-430e-8112-68331b4ee73e', 'content-length': '653'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'boto-bucket999', 'CreationDate': datetime.datetime(2021, 7, 20, 20, 21, 29, 113000, tzinfo=tzlocal())}, {'Name': 'bucket-36100', 'CreationDate': datetime.datetime(2021, 7, 20, 20, 21, 5, 121000, tzinfo=tzlocal())}, {'Name': 'bucket-39533', 'CreationDate': datetime.datetime(2021, 7, 20, 20, 21, 28, 465000, tzinfo=tzlocal())}, {'Name': 'bucket-72074', 'CreationDate': datetime.datetime(2021, 7, 20, 20, 21, 11, 719000, tzinfo=tzlocal())}, {'Name': 'bucket-ekyxtelles', 'CreationDate': datetime.datetime(2021, 7, 20, 20, 21, 42, 923000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '4102bdbc-56e2-4120-93d2-5fa00fdf59b6', 'HostId': '8Ml2zvg1PRKW', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 20 Jul 2021 20:21:43 GMT, Tue, 20 Jul 2021 20:21:43 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 20 Jul 2021 20:21:43 GMT', 'pragma': 'no-cache', 'content-type': 'application/x-www-form-urlencoded', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': '8Ml2zvg1PRKW', 'x-amz-request-id': '4102bdbc-56e2-4120-93d2-5fa00fdf59b6', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'a4819394-7ed8-47d3-8dfe-4126d7e8f403', 'HostId': 'LGeSyWAY', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Tue, 20 Jul 2021 20:21:43 GMT, Tue, 20 Jul 2021 20:21:43 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 20 Jul 2021 20:21:43 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'LGeSyWAY', 'x-amz-request-id': 'a4819394-7ed8-47d3-8dfe-4126d7e8f403'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '85a36abb-6457-4c06-a9a7-7986deb6e7fe', 'HostId': 'ySgbIwTPHJ9', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 20 Jul 2021 20:21:45 GMT, Tue, 20 Jul 2021 20:21:45 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 20 Jul 2021 20:21:45 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'etag': '2021-07-20T20:21:45.794Z', 'last-modified': 'Tue, 20 Jul 2021 20:21:45 GMT', 'server': 'Ozone', 'x-amz-id-2': 'ySgbIwTPHJ9', 'x-amz-request-id': '85a36abb-6457-4c06-a9a7-7986deb6e7fe', 'content-length': '3811'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2021, 7, 20, 20, 21, 45, tzinfo=tzutc()), 'ContentLength': 3811, 'ETag': '2021-07-20T20:21:45.794Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2021, 7, 20, 20, 21, 45, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '3b08c4b7-f70f-44ff-b2f8-d8ef5917d374', 'HostId': 'g2pJaYoz', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 20 Jul 2021 20:21:46 GMT, Tue, 20 Jul 2021 20:21:46 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 20 Jul 2021 20:21:46 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'g2pJaYoz', 'x-amz-request-id': '3b08c4b7-f70f-44ff-b2f8-d8ef5917d374', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '396b08ab-c97c-4fbd-b2a8-6d1fc5819618', 'HostId': 'LPBXT80RX', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 20 Jul 2021 20:21:46 GMT, Tue, 20 Jul 2021 20:21:46 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 20 Jul 2021 20:21:46 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'etag': '2021-07-20T20:21:34.936Z', 'last-modified': 'Tue, 20 Jul 2021 20:21:34 GMT', 'server': 'Ozone', 'x-amz-id-2': 'LPBXT80RX', 'x-amz-request-id': '396b08ab-c97c-4fbd-b2a8-6d1fc5819618', 'content-length': '3811'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2021, 7, 20, 20, 21, 34, tzinfo=tzutc()), 'ContentLength': 3811, 'ETag': '2021-07-20T20:21:34.936Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2021, 7, 20, 20, 21, 46, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '4200a5b5-857b-4313-be52-c9e5d576f8fc', 'HostId': 'fidITRCpfO9B', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 20 Jul 2021 20:21:46 GMT, Tue, 20 Jul 2021 20:21:46 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 20 Jul 2021 20:21:46 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'fidITRCpfO9B', 'x-amz-request-id': '4200a5b5-857b-4313-be52-c9e5d576f8fc', 'content-length': '292'}, 'RetryAttempts': 0}, 'Bucket': 'bucket-39533', 'Key': 'eqhbkuykhh', 'UploadId': '21dd49df-602d-40a6-b5d7-8a3873c9e876-106614784436535315'}
{'ResponseMetadata': {'RequestId': '241a1f66-7c78-489a-b2bb-267e36882383', 'HostId': 'AGFKv9Y8', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Tue, 20 Jul 2021 20:21:51 GMT, Tue, 20 Jul 2021 20:21:51 GMT', 'cache-control': 'no-cache', 'expires': 'Tue, 20 Jul 2021 20:21:51 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'AGFKv9Y8', 'x-amz-request-id': '241a1f66-7c78-489a-b2bb-267e36882383', 'content-length': '326'}, 'RetryAttempts': 0}, 'Location': 'bucket-39533', 'Bucket': 'bucket-39533', 'Key': 'eqhbkuykhh', 'ETag': '238512fd8bd1d916dc72c8cc28a899d1eed0d8e7e404fbca25fc1640eee1b075'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20210720 20:21:52.028" endtime="20210720 20:21:52.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:52.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:52.029" endtime="20210720 20:21:52.030"/>
</kw>
<status status="PASS" starttime="20210720 20:21:28.541" endtime="20210720 20:21:52.030"/>
</kw>
<msg timestamp="20210720 20:21:52.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:28.541" endtime="20210720 20:21:52.031"/>
</kw>
<msg timestamp="20210720 20:21:52.031" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20210720 20:21:28.540" endtime="20210720 20:21:52.031"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20210720 20:21:28.539" endtime="20210720 20:21:52.031"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20210720 20:21:22.127" endtime="20210720 20:21:52.033"/>
</suite>
<suite id="s1-s3-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:21:52.046" level="INFO">${random} = 88459</msg>
<status status="PASS" starttime="20210720 20:21:52.045" endtime="20210720 20:21:52.046"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:21:52.047" level="INFO">${PREFIX} = 88459</msg>
<status status="PASS" starttime="20210720 20:21:52.046" endtime="20210720 20:21:52.047"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.045" endtime="20210720 20:21:52.048"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.044" endtime="20210720 20:21:52.048"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:52.051" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:52.053" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:21:52.053" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:21:52.048" endtime="20210720 20:21:52.053"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:52.054" endtime="20210720 20:21:52.054"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:52.057" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:52.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:52.221" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:21:52.055" endtime="20210720 20:21:52.221"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:52.227" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:52.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:52.675" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:21:52.225" endtime="20210720 20:21:52.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:52.677" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:21:52.676" endtime="20210720 20:21:52.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:52.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:52.677" endtime="20210720 20:21:52.678"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.224" endtime="20210720 20:21:52.678"/>
</kw>
<msg timestamp="20210720 20:21:52.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:52.224" endtime="20210720 20:21:52.678"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.223" endtime="20210720 20:21:52.679"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.223" endtime="20210720 20:21:52.679"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.222" endtime="20210720 20:21:52.679"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.048" endtime="20210720 20:21:52.679"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.048" endtime="20210720 20:21:52.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:52.685" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:52.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:52.689" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:21:52.682" endtime="20210720 20:21:52.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:52.690" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:21:52.689" endtime="20210720 20:21:52.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:52.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:52.690" endtime="20210720 20:21:52.691"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.682" endtime="20210720 20:21:52.691"/>
</kw>
<msg timestamp="20210720 20:21:52.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:52.682" endtime="20210720 20:21:52.691"/>
</kw>
<msg timestamp="20210720 20:21:52.691" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:21:52.681" endtime="20210720 20:21:52.691"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:21:52.695" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:21:52.692" endtime="20210720 20:21:52.695"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:52.700" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:52.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:52.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:52.697" endtime="20210720 20:21:52.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:52.708" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:52.707" endtime="20210720 20:21:52.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:52.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:52.709" endtime="20210720 20:21:52.710"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.697" endtime="20210720 20:21:52.710"/>
</kw>
<msg timestamp="20210720 20:21:52.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:52.697" endtime="20210720 20:21:52.710"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.695" endtime="20210720 20:21:52.711"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.695" endtime="20210720 20:21:52.711"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.681" endtime="20210720 20:21:52.711"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.680" endtime="20210720 20:21:52.711"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:52.716" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:56.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:56.503" level="INFO">${output} = 2021-07-20 20:21:55,663 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:21:52.714" endtime="20210720 20:21:56.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:56.505" level="INFO">2021-07-20 20:21:55,663 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:21:56.504" endtime="20210720 20:21:56.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:56.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:56.505" endtime="20210720 20:21:56.506"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.713" endtime="20210720 20:21:56.506"/>
</kw>
<msg timestamp="20210720 20:21:56.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:52.713" endtime="20210720 20:21:56.506"/>
</kw>
<msg timestamp="20210720 20:21:56.507" level="INFO">${result} = 2021-07-20 20:21:55,663 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:21:52.712" endtime="20210720 20:21:56.507"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:21:56.508" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:21:56.507" endtime="20210720 20:21:56.508"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:21:56.509" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:21:56.508" endtime="20210720 20:21:56.509"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:21:56.509" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:21:56.509" endtime="20210720 20:21:56.509"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:56.511" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:21:56.510" endtime="20210720 20:21:56.511"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:56.512" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:21:56.511" endtime="20210720 20:21:56.512"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:56.517" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:56.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:56.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:56.514" endtime="20210720 20:21:56.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:56.905" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:56.904" endtime="20210720 20:21:56.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:56.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:56.905" endtime="20210720 20:21:56.905"/>
</kw>
<status status="PASS" starttime="20210720 20:21:56.513" endtime="20210720 20:21:56.906"/>
</kw>
<msg timestamp="20210720 20:21:56.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:56.513" endtime="20210720 20:21:56.906"/>
</kw>
<status status="PASS" starttime="20210720 20:21:56.512" endtime="20210720 20:21:56.906"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:56.911" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:57.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:57.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:56.907" endtime="20210720 20:21:57.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:57.261" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:57.261" endtime="20210720 20:21:57.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:57.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:57.261" endtime="20210720 20:21:57.262"/>
</kw>
<status status="PASS" starttime="20210720 20:21:56.907" endtime="20210720 20:21:57.262"/>
</kw>
<msg timestamp="20210720 20:21:57.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:56.907" endtime="20210720 20:21:57.262"/>
</kw>
<status status="PASS" starttime="20210720 20:21:56.906" endtime="20210720 20:21:57.263"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:57.267" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:57.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:57.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:57.264" endtime="20210720 20:21:57.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:57.606" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:57.606" endtime="20210720 20:21:57.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:57.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:57.607" endtime="20210720 20:21:57.609"/>
</kw>
<status status="PASS" starttime="20210720 20:21:57.264" endtime="20210720 20:21:57.610"/>
</kw>
<msg timestamp="20210720 20:21:57.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:57.263" endtime="20210720 20:21:57.610"/>
</kw>
<status status="PASS" starttime="20210720 20:21:57.263" endtime="20210720 20:21:57.610"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:57.615" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:57.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:57.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:21:57.613" endtime="20210720 20:21:57.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:57.969" level="INFO"/>
<status status="PASS" starttime="20210720 20:21:57.968" endtime="20210720 20:21:57.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:57.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:57.969" endtime="20210720 20:21:57.970"/>
</kw>
<status status="PASS" starttime="20210720 20:21:57.612" endtime="20210720 20:21:57.970"/>
</kw>
<msg timestamp="20210720 20:21:57.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:57.612" endtime="20210720 20:21:57.970"/>
</kw>
<status status="PASS" starttime="20210720 20:21:57.611" endtime="20210720 20:21:57.970"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.712" endtime="20210720 20:21:57.971"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.711" endtime="20210720 20:21:57.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:57.971" endtime="20210720 20:21:57.971"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.680" endtime="20210720 20:21:57.972"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.679" endtime="20210720 20:21:57.972"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:21:57.973" level="INFO">${postfix} = 88738</msg>
<status status="PASS" starttime="20210720 20:21:57.973" endtime="20210720 20:21:57.973"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:57.974" level="INFO">${bucket} = bucket-88738</msg>
<status status="PASS" starttime="20210720 20:21:57.973" endtime="20210720 20:21:57.974"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:57.978" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-88738 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:58.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:58.511" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-88738"
}</msg>
<status status="PASS" starttime="20210720 20:21:57.976" endtime="20210720 20:21:58.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:58.512" level="INFO">{
    "Location": "http://s3g:9878/bucket-88738"
}</msg>
<status status="PASS" starttime="20210720 20:21:58.511" endtime="20210720 20:21:58.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:58.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:58.512" endtime="20210720 20:21:58.513"/>
</kw>
<status status="PASS" starttime="20210720 20:21:57.975" endtime="20210720 20:21:58.513"/>
</kw>
<msg timestamp="20210720 20:21:58.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:57.975" endtime="20210720 20:21:58.513"/>
</kw>
<msg timestamp="20210720 20:21:58.514" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-88738"
}</msg>
<status status="PASS" starttime="20210720 20:21:57.975" endtime="20210720 20:21:58.514"/>
</kw>
<msg timestamp="20210720 20:21:58.514" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-88738"
}</msg>
<status status="PASS" starttime="20210720 20:21:57.974" endtime="20210720 20:21:58.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:58.514" endtime="20210720 20:21:58.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:58.514" endtime="20210720 20:21:58.515"/>
</kw>
<status status="PASS" starttime="20210720 20:21:57.974" endtime="20210720 20:21:58.515"/>
</kw>
<status status="PASS" starttime="20210720 20:21:57.972" endtime="20210720 20:21:58.515"/>
</kw>
<msg timestamp="20210720 20:21:58.516" level="INFO">${BUCKET} = bucket-88738</msg>
<status status="PASS" starttime="20210720 20:21:57.972" endtime="20210720 20:21:58.516"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:21:58.516" level="INFO">${BUCKET} = bucket-88738</msg>
<status status="PASS" starttime="20210720 20:21:58.516" endtime="20210720 20:21:58.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:21:58.516" endtime="20210720 20:21:58.517"/>
</kw>
<status status="PASS" starttime="20210720 20:21:52.044" endtime="20210720 20:21:58.517"/>
</kw>
<test id="s1-s3-s3-t1" name="Create new bucket">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:21:58.520" level="INFO">${postfix} = 08442</msg>
<status status="PASS" starttime="20210720 20:21:58.519" endtime="20210720 20:21:58.520"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:21:58.520" level="INFO">${bucket} = bucket-08442</msg>
<status status="PASS" starttime="20210720 20:21:58.520" endtime="20210720 20:21:58.520"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:58.525" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-08442 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:59.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:59.069" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-08442"
}</msg>
<status status="PASS" starttime="20210720 20:21:58.523" endtime="20210720 20:21:59.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:59.070" level="INFO">{
    "Location": "http://s3g:9878/bucket-08442"
}</msg>
<status status="PASS" starttime="20210720 20:21:59.069" endtime="20210720 20:21:59.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:59.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:59.070" endtime="20210720 20:21:59.071"/>
</kw>
<status status="PASS" starttime="20210720 20:21:58.522" endtime="20210720 20:21:59.071"/>
</kw>
<msg timestamp="20210720 20:21:59.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:58.522" endtime="20210720 20:21:59.071"/>
</kw>
<msg timestamp="20210720 20:21:59.072" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-08442"
}</msg>
<status status="PASS" starttime="20210720 20:21:58.522" endtime="20210720 20:21:59.072"/>
</kw>
<msg timestamp="20210720 20:21:59.072" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-08442"
}</msg>
<status status="PASS" starttime="20210720 20:21:58.521" endtime="20210720 20:21:59.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:59.072" endtime="20210720 20:21:59.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:59.073" endtime="20210720 20:21:59.073"/>
</kw>
<status status="PASS" starttime="20210720 20:21:58.521" endtime="20210720 20:21:59.073"/>
</kw>
<status status="PASS" starttime="20210720 20:21:58.518" endtime="20210720 20:21:59.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:21:58.517" endtime="20210720 20:21:59.074"/>
</test>
<test id="s1-s3-s3-t2" name="Create bucket which already exists">
<kw name="Create bucket with name" library="commonawslib">
<arg>${BUCKET}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:59.080" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-88738 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:21:59.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:21:59.659" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-88738"
}</msg>
<status status="PASS" starttime="20210720 20:21:59.078" endtime="20210720 20:21:59.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:21:59.661" level="INFO">{
    "Location": "http://s3g:9878/bucket-88738"
}</msg>
<status status="PASS" starttime="20210720 20:21:59.660" endtime="20210720 20:21:59.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:21:59.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:21:59.661" endtime="20210720 20:21:59.661"/>
</kw>
<status status="PASS" starttime="20210720 20:21:59.078" endtime="20210720 20:21:59.662"/>
</kw>
<msg timestamp="20210720 20:21:59.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:21:59.077" endtime="20210720 20:21:59.662"/>
</kw>
<msg timestamp="20210720 20:21:59.663" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-88738"
}</msg>
<status status="PASS" starttime="20210720 20:21:59.077" endtime="20210720 20:21:59.663"/>
</kw>
<msg timestamp="20210720 20:21:59.663" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-88738"
}</msg>
<status status="PASS" starttime="20210720 20:21:59.076" endtime="20210720 20:21:59.663"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:59.663" endtime="20210720 20:21:59.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:21:59.664" endtime="20210720 20:21:59.665"/>
</kw>
<status status="PASS" starttime="20210720 20:21:59.076" endtime="20210720 20:21:59.665"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:21:59.075" endtime="20210720 20:21:59.665"/>
</test>
<test id="s1-s3-s3-t3" name="Create bucket with invalid bucket name">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket bucket_1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:21:59.671" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:00.565" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:00.565" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210720 20:21:59.668" endtime="20210720 20:22:00.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:00.567" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210720 20:22:00.566" endtime="20210720 20:22:00.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:00.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:00.567" endtime="20210720 20:22:00.568"/>
</kw>
<msg timestamp="20210720 20:22:00.568" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210720 20:21:59.668" endtime="20210720 20:22:00.568"/>
</kw>
<msg timestamp="20210720 20:22:00.568" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210720 20:21:59.667" endtime="20210720 20:22:00.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:00.569" endtime="20210720 20:22:00.569"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:21:59.666" endtime="20210720 20:22:00.569"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210720 20:21:52.035" endtime="20210720 20:22:00.571"/>
</suite>
<suite id="s1-s3-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:00.599" level="INFO">${random} = 73618</msg>
<status status="PASS" starttime="20210720 20:22:00.598" endtime="20210720 20:22:00.599"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:00.600" level="INFO">${PREFIX} = 73618</msg>
<status status="PASS" starttime="20210720 20:22:00.599" endtime="20210720 20:22:00.601"/>
</kw>
<status status="PASS" starttime="20210720 20:22:00.597" endtime="20210720 20:22:00.601"/>
</kw>
<status status="PASS" starttime="20210720 20:22:00.597" endtime="20210720 20:22:00.601"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:00.604" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:00.606" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:22:00.606" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:22:00.602" endtime="20210720 20:22:00.606"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:00.607" endtime="20210720 20:22:00.608"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:00.611" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:00.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:00.787" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:22:00.608" endtime="20210720 20:22:00.787"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:00.793" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:01.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:01.212" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:22:00.791" endtime="20210720 20:22:01.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:01.213" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:22:01.212" endtime="20210720 20:22:01.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:01.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:01.214" endtime="20210720 20:22:01.214"/>
</kw>
<status status="PASS" starttime="20210720 20:22:00.790" endtime="20210720 20:22:01.215"/>
</kw>
<msg timestamp="20210720 20:22:01.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:00.790" endtime="20210720 20:22:01.215"/>
</kw>
<status status="PASS" starttime="20210720 20:22:00.789" endtime="20210720 20:22:01.215"/>
</kw>
<status status="PASS" starttime="20210720 20:22:00.789" endtime="20210720 20:22:01.215"/>
</kw>
<status status="PASS" starttime="20210720 20:22:00.788" endtime="20210720 20:22:01.215"/>
</kw>
<status status="PASS" starttime="20210720 20:22:00.601" endtime="20210720 20:22:01.215"/>
</kw>
<status status="PASS" starttime="20210720 20:22:00.601" endtime="20210720 20:22:01.216"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:01.221" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:01.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:01.225" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:22:01.219" endtime="20210720 20:22:01.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:01.226" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:22:01.225" endtime="20210720 20:22:01.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:01.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:01.226" endtime="20210720 20:22:01.227"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.219" endtime="20210720 20:22:01.227"/>
</kw>
<msg timestamp="20210720 20:22:01.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:01.218" endtime="20210720 20:22:01.227"/>
</kw>
<msg timestamp="20210720 20:22:01.228" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:22:01.217" endtime="20210720 20:22:01.228"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:01.230" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:22:01.228" endtime="20210720 20:22:01.230"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:01.234" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:01.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:01.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:01.232" endtime="20210720 20:22:01.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:01.243" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:01.242" endtime="20210720 20:22:01.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:01.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:01.243" endtime="20210720 20:22:01.244"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.231" endtime="20210720 20:22:01.244"/>
</kw>
<msg timestamp="20210720 20:22:01.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:01.231" endtime="20210720 20:22:01.244"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.230" endtime="20210720 20:22:01.245"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.230" endtime="20210720 20:22:01.245"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.217" endtime="20210720 20:22:01.245"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.217" endtime="20210720 20:22:01.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:01.250" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:04.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:04.598" level="INFO">${output} = 2021-07-20 20:22:04,065 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:22:01.248" endtime="20210720 20:22:04.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:04.599" level="INFO">2021-07-20 20:22:04,065 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:22:04.599" endtime="20210720 20:22:04.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:04.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:04.600" endtime="20210720 20:22:04.600"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.247" endtime="20210720 20:22:04.600"/>
</kw>
<msg timestamp="20210720 20:22:04.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:01.247" endtime="20210720 20:22:04.601"/>
</kw>
<msg timestamp="20210720 20:22:04.601" level="INFO">${result} = 2021-07-20 20:22:04,065 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:22:01.246" endtime="20210720 20:22:04.601"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:22:04.602" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:22:04.601" endtime="20210720 20:22:04.602"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:22:04.602" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:22:04.602" endtime="20210720 20:22:04.602"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:22:04.603" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:22:04.603" endtime="20210720 20:22:04.603"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:04.605" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:22:04.603" endtime="20210720 20:22:04.605"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:04.606" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:22:04.605" endtime="20210720 20:22:04.606"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:04.611" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:04.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:04.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:04.608" endtime="20210720 20:22:04.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:04.995" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:04.994" endtime="20210720 20:22:04.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:04.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:04.996" endtime="20210720 20:22:04.996"/>
</kw>
<status status="PASS" starttime="20210720 20:22:04.607" endtime="20210720 20:22:04.997"/>
</kw>
<msg timestamp="20210720 20:22:04.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:04.606" endtime="20210720 20:22:04.997"/>
</kw>
<status status="PASS" starttime="20210720 20:22:04.606" endtime="20210720 20:22:04.997"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:05.002" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:05.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:05.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:04.999" endtime="20210720 20:22:05.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:05.382" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:05.381" endtime="20210720 20:22:05.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:05.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:05.383" endtime="20210720 20:22:05.384"/>
</kw>
<status status="PASS" starttime="20210720 20:22:04.999" endtime="20210720 20:22:05.384"/>
</kw>
<msg timestamp="20210720 20:22:05.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:04.998" endtime="20210720 20:22:05.385"/>
</kw>
<status status="PASS" starttime="20210720 20:22:04.997" endtime="20210720 20:22:05.385"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:05.389" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:05.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:05.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:05.387" endtime="20210720 20:22:05.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:05.745" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:05.745" endtime="20210720 20:22:05.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:05.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:05.745" endtime="20210720 20:22:05.746"/>
</kw>
<status status="PASS" starttime="20210720 20:22:05.386" endtime="20210720 20:22:05.746"/>
</kw>
<msg timestamp="20210720 20:22:05.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:05.386" endtime="20210720 20:22:05.747"/>
</kw>
<status status="PASS" starttime="20210720 20:22:05.385" endtime="20210720 20:22:05.747"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:05.751" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:06.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:06.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:05.748" endtime="20210720 20:22:06.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:06.127" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:06.126" endtime="20210720 20:22:06.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:06.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:06.127" endtime="20210720 20:22:06.127"/>
</kw>
<status status="PASS" starttime="20210720 20:22:05.748" endtime="20210720 20:22:06.128"/>
</kw>
<msg timestamp="20210720 20:22:06.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:05.748" endtime="20210720 20:22:06.128"/>
</kw>
<status status="PASS" starttime="20210720 20:22:05.747" endtime="20210720 20:22:06.128"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.246" endtime="20210720 20:22:06.128"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.245" endtime="20210720 20:22:06.129"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:06.129" endtime="20210720 20:22:06.129"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.216" endtime="20210720 20:22:06.129"/>
</kw>
<status status="PASS" starttime="20210720 20:22:01.216" endtime="20210720 20:22:06.129"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:06.131" level="INFO">${postfix} = 95255</msg>
<status status="PASS" starttime="20210720 20:22:06.130" endtime="20210720 20:22:06.131"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:06.131" level="INFO">${bucket} = bucket-95255</msg>
<status status="PASS" starttime="20210720 20:22:06.131" endtime="20210720 20:22:06.131"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:06.137" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-95255 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:06.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:06.666" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-95255"
}</msg>
<status status="PASS" starttime="20210720 20:22:06.134" endtime="20210720 20:22:06.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:06.667" level="INFO">{
    "Location": "http://s3g:9878/bucket-95255"
}</msg>
<status status="PASS" starttime="20210720 20:22:06.667" endtime="20210720 20:22:06.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:06.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:06.668" endtime="20210720 20:22:06.668"/>
</kw>
<status status="PASS" starttime="20210720 20:22:06.133" endtime="20210720 20:22:06.669"/>
</kw>
<msg timestamp="20210720 20:22:06.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:06.133" endtime="20210720 20:22:06.669"/>
</kw>
<msg timestamp="20210720 20:22:06.669" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-95255"
}</msg>
<status status="PASS" starttime="20210720 20:22:06.132" endtime="20210720 20:22:06.669"/>
</kw>
<msg timestamp="20210720 20:22:06.670" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-95255"
}</msg>
<status status="PASS" starttime="20210720 20:22:06.132" endtime="20210720 20:22:06.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:06.670" endtime="20210720 20:22:06.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:06.671" endtime="20210720 20:22:06.671"/>
</kw>
<status status="PASS" starttime="20210720 20:22:06.131" endtime="20210720 20:22:06.671"/>
</kw>
<status status="PASS" starttime="20210720 20:22:06.130" endtime="20210720 20:22:06.672"/>
</kw>
<msg timestamp="20210720 20:22:06.672" level="INFO">${BUCKET} = bucket-95255</msg>
<status status="PASS" starttime="20210720 20:22:06.130" endtime="20210720 20:22:06.672"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:06.673" level="INFO">${BUCKET} = bucket-95255</msg>
<status status="PASS" starttime="20210720 20:22:06.672" endtime="20210720 20:22:06.673"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:06.673" endtime="20210720 20:22:06.673"/>
</kw>
<status status="PASS" starttime="20210720 20:22:00.596" endtime="20210720 20:22:06.673"/>
</kw>
<test id="s1-s3-s4-t1" name="Delete existing bucket">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:06.677" level="INFO">${postfix} = 26400</msg>
<status status="PASS" starttime="20210720 20:22:06.676" endtime="20210720 20:22:06.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:06.677" level="INFO">${bucket} = bucket-26400</msg>
<status status="PASS" starttime="20210720 20:22:06.677" endtime="20210720 20:22:06.678"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:06.683" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-26400 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:07.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:07.226" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-26400"
}</msg>
<status status="PASS" starttime="20210720 20:22:06.680" endtime="20210720 20:22:07.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:07.228" level="INFO">{
    "Location": "http://s3g:9878/bucket-26400"
}</msg>
<status status="PASS" starttime="20210720 20:22:07.226" endtime="20210720 20:22:07.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:07.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:07.228" endtime="20210720 20:22:07.229"/>
</kw>
<status status="PASS" starttime="20210720 20:22:06.680" endtime="20210720 20:22:07.229"/>
</kw>
<msg timestamp="20210720 20:22:07.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:06.679" endtime="20210720 20:22:07.229"/>
</kw>
<msg timestamp="20210720 20:22:07.230" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-26400"
}</msg>
<status status="PASS" starttime="20210720 20:22:06.679" endtime="20210720 20:22:07.230"/>
</kw>
<msg timestamp="20210720 20:22:07.230" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-26400"
}</msg>
<status status="PASS" starttime="20210720 20:22:06.678" endtime="20210720 20:22:07.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:07.231" endtime="20210720 20:22:07.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:07.231" endtime="20210720 20:22:07.232"/>
</kw>
<status status="PASS" starttime="20210720 20:22:06.678" endtime="20210720 20:22:07.232"/>
</kw>
<status status="PASS" starttime="20210720 20:22:06.676" endtime="20210720 20:22:07.233"/>
</kw>
<status status="PASS" starttime="20210720 20:22:06.675" endtime="20210720 20:22:07.233"/>
</kw>
<msg timestamp="20210720 20:22:07.233" level="INFO">${bucket} = bucket-26400</msg>
<status status="PASS" starttime="20210720 20:22:06.675" endtime="20210720 20:22:07.233"/>
</kw>
<msg timestamp="20210720 20:22:07.233" level="INFO">${bucket} = bucket-26400</msg>
<status status="PASS" starttime="20210720 20:22:06.675" endtime="20210720 20:22:07.233"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:07.238" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-26400 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:07.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:07.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:07.236" endtime="20210720 20:22:07.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:07.778" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:07.777" endtime="20210720 20:22:07.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:07.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:07.778" endtime="20210720 20:22:07.779"/>
</kw>
<status status="PASS" starttime="20210720 20:22:07.235" endtime="20210720 20:22:07.780"/>
</kw>
<msg timestamp="20210720 20:22:07.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:07.235" endtime="20210720 20:22:07.780"/>
</kw>
<msg timestamp="20210720 20:22:07.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:07.234" endtime="20210720 20:22:07.780"/>
</kw>
<status status="PASS" starttime="20210720 20:22:07.233" endtime="20210720 20:22:07.780"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:06.674" endtime="20210720 20:22:07.781"/>
</test>
<test id="s1-s3-s4-t2" name="Delete non-existent bucket">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:07.787" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:08.440" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:08.440" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:22:07.784" endtime="20210720 20:22:08.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:08.442" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:22:08.441" endtime="20210720 20:22:08.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:08.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:08.442" endtime="20210720 20:22:08.443"/>
</kw>
<msg timestamp="20210720 20:22:08.443" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:22:07.783" endtime="20210720 20:22:08.444"/>
</kw>
<msg timestamp="20210720 20:22:08.444" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:22:07.783" endtime="20210720 20:22:08.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:08.444" endtime="20210720 20:22:08.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:07.782" endtime="20210720 20:22:08.445"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210720 20:22:00.577" endtime="20210720 20:22:08.446"/>
</suite>
<suite id="s1-s3-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:08.463" level="INFO">${random} = 78195</msg>
<status status="PASS" starttime="20210720 20:22:08.462" endtime="20210720 20:22:08.463"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:08.465" level="INFO">${PREFIX} = 78195</msg>
<status status="PASS" starttime="20210720 20:22:08.463" endtime="20210720 20:22:08.465"/>
</kw>
<status status="PASS" starttime="20210720 20:22:08.461" endtime="20210720 20:22:08.465"/>
</kw>
<status status="PASS" starttime="20210720 20:22:08.461" endtime="20210720 20:22:08.466"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:08.469" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:08.471" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:22:08.471" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:22:08.466" endtime="20210720 20:22:08.471"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:08.472" endtime="20210720 20:22:08.473"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:08.475" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:08.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:08.625" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:22:08.473" endtime="20210720 20:22:08.625"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:08.631" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:09.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:09.094" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:22:08.629" endtime="20210720 20:22:09.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:09.096" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:22:09.095" endtime="20210720 20:22:09.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:09.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:09.096" endtime="20210720 20:22:09.097"/>
</kw>
<status status="PASS" starttime="20210720 20:22:08.628" endtime="20210720 20:22:09.097"/>
</kw>
<msg timestamp="20210720 20:22:09.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:08.628" endtime="20210720 20:22:09.097"/>
</kw>
<status status="PASS" starttime="20210720 20:22:08.627" endtime="20210720 20:22:09.097"/>
</kw>
<status status="PASS" starttime="20210720 20:22:08.627" endtime="20210720 20:22:09.098"/>
</kw>
<status status="PASS" starttime="20210720 20:22:08.626" endtime="20210720 20:22:09.098"/>
</kw>
<status status="PASS" starttime="20210720 20:22:08.466" endtime="20210720 20:22:09.098"/>
</kw>
<status status="PASS" starttime="20210720 20:22:08.466" endtime="20210720 20:22:09.098"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:09.103" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:09.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:09.107" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:22:09.101" endtime="20210720 20:22:09.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:09.108" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:22:09.107" endtime="20210720 20:22:09.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:09.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:09.108" endtime="20210720 20:22:09.109"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.100" endtime="20210720 20:22:09.109"/>
</kw>
<msg timestamp="20210720 20:22:09.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:09.100" endtime="20210720 20:22:09.109"/>
</kw>
<msg timestamp="20210720 20:22:09.110" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:22:09.100" endtime="20210720 20:22:09.110"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:09.112" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:22:09.110" endtime="20210720 20:22:09.112"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:09.117" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:09.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:09.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:09.114" endtime="20210720 20:22:09.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:09.127" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:09.126" endtime="20210720 20:22:09.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:09.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:09.127" endtime="20210720 20:22:09.128"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.113" endtime="20210720 20:22:09.128"/>
</kw>
<msg timestamp="20210720 20:22:09.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:09.113" endtime="20210720 20:22:09.128"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.113" endtime="20210720 20:22:09.129"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.112" endtime="20210720 20:22:09.129"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.099" endtime="20210720 20:22:09.129"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.099" endtime="20210720 20:22:09.129"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:09.134" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:12.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:12.597" level="INFO">${output} = 2021-07-20 20:22:12,028 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:22:09.132" endtime="20210720 20:22:12.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:12.598" level="INFO">2021-07-20 20:22:12,028 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:22:12.597" endtime="20210720 20:22:12.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:12.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:12.598" endtime="20210720 20:22:12.598"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.131" endtime="20210720 20:22:12.599"/>
</kw>
<msg timestamp="20210720 20:22:12.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:09.131" endtime="20210720 20:22:12.599"/>
</kw>
<msg timestamp="20210720 20:22:12.599" level="INFO">${result} = 2021-07-20 20:22:12,028 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:22:09.130" endtime="20210720 20:22:12.599"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:22:12.600" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:22:12.600" endtime="20210720 20:22:12.600"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:22:12.601" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:22:12.600" endtime="20210720 20:22:12.601"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:22:12.602" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:22:12.601" endtime="20210720 20:22:12.602"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:12.603" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:22:12.602" endtime="20210720 20:22:12.603"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:12.604" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:22:12.603" endtime="20210720 20:22:12.604"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:12.608" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:12.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:12.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:12.606" endtime="20210720 20:22:12.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:12.951" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:12.951" endtime="20210720 20:22:12.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:12.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:12.952" endtime="20210720 20:22:12.952"/>
</kw>
<status status="PASS" starttime="20210720 20:22:12.605" endtime="20210720 20:22:12.953"/>
</kw>
<msg timestamp="20210720 20:22:12.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:12.605" endtime="20210720 20:22:12.953"/>
</kw>
<status status="PASS" starttime="20210720 20:22:12.605" endtime="20210720 20:22:12.953"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:12.957" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:13.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:13.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:12.955" endtime="20210720 20:22:13.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:13.304" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:13.304" endtime="20210720 20:22:13.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:13.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:13.305" endtime="20210720 20:22:13.305"/>
</kw>
<status status="PASS" starttime="20210720 20:22:12.954" endtime="20210720 20:22:13.306"/>
</kw>
<msg timestamp="20210720 20:22:13.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:12.954" endtime="20210720 20:22:13.306"/>
</kw>
<status status="PASS" starttime="20210720 20:22:12.953" endtime="20210720 20:22:13.306"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:13.310" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:13.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:13.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:13.308" endtime="20210720 20:22:13.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:13.660" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:13.659" endtime="20210720 20:22:13.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:13.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:13.660" endtime="20210720 20:22:13.661"/>
</kw>
<status status="PASS" starttime="20210720 20:22:13.307" endtime="20210720 20:22:13.661"/>
</kw>
<msg timestamp="20210720 20:22:13.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:13.307" endtime="20210720 20:22:13.662"/>
</kw>
<status status="PASS" starttime="20210720 20:22:13.306" endtime="20210720 20:22:13.662"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:13.666" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:14.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:14.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:13.663" endtime="20210720 20:22:14.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:14.010" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:14.009" endtime="20210720 20:22:14.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:14.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:14.010" endtime="20210720 20:22:14.011"/>
</kw>
<status status="PASS" starttime="20210720 20:22:13.663" endtime="20210720 20:22:14.011"/>
</kw>
<msg timestamp="20210720 20:22:14.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:13.662" endtime="20210720 20:22:14.011"/>
</kw>
<status status="PASS" starttime="20210720 20:22:13.662" endtime="20210720 20:22:14.011"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.130" endtime="20210720 20:22:14.012"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.129" endtime="20210720 20:22:14.012"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:14.012" endtime="20210720 20:22:14.013"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.099" endtime="20210720 20:22:14.013"/>
</kw>
<status status="PASS" starttime="20210720 20:22:09.098" endtime="20210720 20:22:14.013"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:14.014" level="INFO">${postfix} = 17678</msg>
<status status="PASS" starttime="20210720 20:22:14.014" endtime="20210720 20:22:14.014"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:14.015" level="INFO">${bucket} = bucket-17678</msg>
<status status="PASS" starttime="20210720 20:22:14.015" endtime="20210720 20:22:14.015"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:14.019" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-17678 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:14.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:14.571" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-17678"
}</msg>
<status status="PASS" starttime="20210720 20:22:14.017" endtime="20210720 20:22:14.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:14.572" level="INFO">{
    "Location": "http://s3g:9878/bucket-17678"
}</msg>
<status status="PASS" starttime="20210720 20:22:14.571" endtime="20210720 20:22:14.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:14.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:14.573" endtime="20210720 20:22:14.573"/>
</kw>
<status status="PASS" starttime="20210720 20:22:14.017" endtime="20210720 20:22:14.574"/>
</kw>
<msg timestamp="20210720 20:22:14.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:14.016" endtime="20210720 20:22:14.574"/>
</kw>
<msg timestamp="20210720 20:22:14.574" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-17678"
}</msg>
<status status="PASS" starttime="20210720 20:22:14.016" endtime="20210720 20:22:14.574"/>
</kw>
<msg timestamp="20210720 20:22:14.575" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-17678"
}</msg>
<status status="PASS" starttime="20210720 20:22:14.015" endtime="20210720 20:22:14.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:14.575" endtime="20210720 20:22:14.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:14.575" endtime="20210720 20:22:14.576"/>
</kw>
<status status="PASS" starttime="20210720 20:22:14.015" endtime="20210720 20:22:14.576"/>
</kw>
<status status="PASS" starttime="20210720 20:22:14.014" endtime="20210720 20:22:14.576"/>
</kw>
<msg timestamp="20210720 20:22:14.576" level="INFO">${BUCKET} = bucket-17678</msg>
<status status="PASS" starttime="20210720 20:22:14.013" endtime="20210720 20:22:14.577"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:14.577" level="INFO">${BUCKET} = bucket-17678</msg>
<status status="PASS" starttime="20210720 20:22:14.577" endtime="20210720 20:22:14.577"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:14.577" endtime="20210720 20:22:14.578"/>
</kw>
<status status="PASS" starttime="20210720 20:22:08.460" endtime="20210720 20:22:14.578"/>
</kw>
<test id="s1-s3-s5-t1" name="Head Bucket not existent">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:14.587" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket bucket-17678 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:15.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:15.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:14.582" endtime="20210720 20:22:15.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:15.080" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:15.079" endtime="20210720 20:22:15.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:15.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:15.080" endtime="20210720 20:22:15.081"/>
</kw>
<status status="PASS" starttime="20210720 20:22:14.581" endtime="20210720 20:22:15.082"/>
</kw>
<msg timestamp="20210720 20:22:15.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:14.581" endtime="20210720 20:22:15.082"/>
</kw>
<msg timestamp="20210720 20:22:15.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:14.580" endtime="20210720 20:22:15.083"/>
</kw>
<msg timestamp="20210720 20:22:15.083" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:22:14.579" endtime="20210720 20:22:15.083"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:15.088" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:15.598" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:15.598" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210720 20:22:15.085" endtime="20210720 20:22:15.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:15.600" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210720 20:22:15.599" endtime="20210720 20:22:15.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:15.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:15.600" endtime="20210720 20:22:15.601"/>
</kw>
<msg timestamp="20210720 20:22:15.601" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210720 20:22:15.084" endtime="20210720 20:22:15.601"/>
</kw>
<msg timestamp="20210720 20:22:15.602" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210720 20:22:15.084" endtime="20210720 20:22:15.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:15.602" endtime="20210720 20:22:15.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:15.603" endtime="20210720 20:22:15.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:14.578" endtime="20210720 20:22:15.603"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210720 20:22:08.448" endtime="20210720 20:22:15.604"/>
</suite>
<suite id="s1-s3-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:15.622" level="INFO">${random} = 79968</msg>
<status status="PASS" starttime="20210720 20:22:15.622" endtime="20210720 20:22:15.622"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:15.624" level="INFO">${PREFIX} = 79968</msg>
<status status="PASS" starttime="20210720 20:22:15.622" endtime="20210720 20:22:15.624"/>
</kw>
<status status="PASS" starttime="20210720 20:22:15.621" endtime="20210720 20:22:15.624"/>
</kw>
<status status="PASS" starttime="20210720 20:22:15.621" endtime="20210720 20:22:15.625"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:15.628" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:15.631" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:22:15.631" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:22:15.625" endtime="20210720 20:22:15.631"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:15.631" endtime="20210720 20:22:15.632"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:15.634" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:15.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:15.792" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:22:15.632" endtime="20210720 20:22:15.793"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:15.798" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:16.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:16.246" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:22:15.796" endtime="20210720 20:22:16.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:16.247" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:22:16.247" endtime="20210720 20:22:16.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:16.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:16.248" endtime="20210720 20:22:16.249"/>
</kw>
<status status="PASS" starttime="20210720 20:22:15.795" endtime="20210720 20:22:16.249"/>
</kw>
<msg timestamp="20210720 20:22:16.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:15.795" endtime="20210720 20:22:16.249"/>
</kw>
<status status="PASS" starttime="20210720 20:22:15.795" endtime="20210720 20:22:16.250"/>
</kw>
<status status="PASS" starttime="20210720 20:22:15.794" endtime="20210720 20:22:16.250"/>
</kw>
<status status="PASS" starttime="20210720 20:22:15.793" endtime="20210720 20:22:16.250"/>
</kw>
<status status="PASS" starttime="20210720 20:22:15.625" endtime="20210720 20:22:16.250"/>
</kw>
<status status="PASS" starttime="20210720 20:22:15.625" endtime="20210720 20:22:16.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:16.256" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:16.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:16.259" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:22:16.254" endtime="20210720 20:22:16.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:16.260" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:22:16.260" endtime="20210720 20:22:16.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:16.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:16.261" endtime="20210720 20:22:16.261"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.253" endtime="20210720 20:22:16.261"/>
</kw>
<msg timestamp="20210720 20:22:16.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:16.252" endtime="20210720 20:22:16.262"/>
</kw>
<msg timestamp="20210720 20:22:16.262" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:22:16.252" endtime="20210720 20:22:16.262"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:16.264" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:22:16.262" endtime="20210720 20:22:16.264"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:16.269" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:16.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:16.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:16.267" endtime="20210720 20:22:16.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:16.277" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:16.277" endtime="20210720 20:22:16.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:16.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:16.277" endtime="20210720 20:22:16.278"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.266" endtime="20210720 20:22:16.278"/>
</kw>
<msg timestamp="20210720 20:22:16.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:16.265" endtime="20210720 20:22:16.279"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.265" endtime="20210720 20:22:16.279"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.264" endtime="20210720 20:22:16.279"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.252" endtime="20210720 20:22:16.279"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.251" endtime="20210720 20:22:16.279"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:16.284" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:19.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:19.918" level="INFO">${output} = 2021-07-20 20:22:19,202 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:22:16.282" endtime="20210720 20:22:19.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:19.920" level="INFO">2021-07-20 20:22:19,202 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:22:19.919" endtime="20210720 20:22:19.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:19.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:19.920" endtime="20210720 20:22:19.920"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.281" endtime="20210720 20:22:19.921"/>
</kw>
<msg timestamp="20210720 20:22:19.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:16.281" endtime="20210720 20:22:19.921"/>
</kw>
<msg timestamp="20210720 20:22:19.922" level="INFO">${result} = 2021-07-20 20:22:19,202 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:22:16.280" endtime="20210720 20:22:19.922"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:22:19.922" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:22:19.922" endtime="20210720 20:22:19.922"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:22:19.923" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:22:19.923" endtime="20210720 20:22:19.923"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:22:19.924" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:22:19.923" endtime="20210720 20:22:19.924"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:19.926" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:22:19.924" endtime="20210720 20:22:19.926"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:19.927" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:22:19.926" endtime="20210720 20:22:19.927"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:19.931" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:20.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:20.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:19.928" endtime="20210720 20:22:20.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:20.305" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:20.305" endtime="20210720 20:22:20.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:20.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:20.306" endtime="20210720 20:22:20.306"/>
</kw>
<status status="PASS" starttime="20210720 20:22:19.928" endtime="20210720 20:22:20.307"/>
</kw>
<msg timestamp="20210720 20:22:20.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:19.928" endtime="20210720 20:22:20.307"/>
</kw>
<status status="PASS" starttime="20210720 20:22:19.927" endtime="20210720 20:22:20.307"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:20.311" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:20.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:20.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:20.309" endtime="20210720 20:22:20.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:20.660" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:20.660" endtime="20210720 20:22:20.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:20.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:20.661" endtime="20210720 20:22:20.661"/>
</kw>
<status status="PASS" starttime="20210720 20:22:20.308" endtime="20210720 20:22:20.661"/>
</kw>
<msg timestamp="20210720 20:22:20.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:20.308" endtime="20210720 20:22:20.662"/>
</kw>
<status status="PASS" starttime="20210720 20:22:20.307" endtime="20210720 20:22:20.662"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:20.666" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:21.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:21.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:20.663" endtime="20210720 20:22:21.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:21.007" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:21.006" endtime="20210720 20:22:21.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:21.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:21.007" endtime="20210720 20:22:21.008"/>
</kw>
<status status="PASS" starttime="20210720 20:22:20.663" endtime="20210720 20:22:21.009"/>
</kw>
<msg timestamp="20210720 20:22:21.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:20.663" endtime="20210720 20:22:21.009"/>
</kw>
<status status="PASS" starttime="20210720 20:22:20.662" endtime="20210720 20:22:21.009"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:21.013" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:21.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:21.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:21.011" endtime="20210720 20:22:21.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:21.381" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:21.380" endtime="20210720 20:22:21.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:21.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:21.381" endtime="20210720 20:22:21.382"/>
</kw>
<status status="PASS" starttime="20210720 20:22:21.010" endtime="20210720 20:22:21.382"/>
</kw>
<msg timestamp="20210720 20:22:21.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:21.010" endtime="20210720 20:22:21.382"/>
</kw>
<status status="PASS" starttime="20210720 20:22:21.009" endtime="20210720 20:22:21.382"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.280" endtime="20210720 20:22:21.383"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.279" endtime="20210720 20:22:21.383"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:21.383" endtime="20210720 20:22:21.383"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.251" endtime="20210720 20:22:21.384"/>
</kw>
<status status="PASS" starttime="20210720 20:22:16.250" endtime="20210720 20:22:21.384"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:21.385" level="INFO">${postfix} = 19859</msg>
<status status="PASS" starttime="20210720 20:22:21.385" endtime="20210720 20:22:21.385"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:21.386" level="INFO">${bucket} = bucket-19859</msg>
<status status="PASS" starttime="20210720 20:22:21.385" endtime="20210720 20:22:21.386"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:21.390" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-19859 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:21.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:21.922" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-19859"
}</msg>
<status status="PASS" starttime="20210720 20:22:21.388" endtime="20210720 20:22:21.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:21.923" level="INFO">{
    "Location": "http://s3g:9878/bucket-19859"
}</msg>
<status status="PASS" starttime="20210720 20:22:21.922" endtime="20210720 20:22:21.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:21.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:21.923" endtime="20210720 20:22:21.924"/>
</kw>
<status status="PASS" starttime="20210720 20:22:21.388" endtime="20210720 20:22:21.924"/>
</kw>
<msg timestamp="20210720 20:22:21.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:21.387" endtime="20210720 20:22:21.925"/>
</kw>
<msg timestamp="20210720 20:22:21.925" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-19859"
}</msg>
<status status="PASS" starttime="20210720 20:22:21.387" endtime="20210720 20:22:21.925"/>
</kw>
<msg timestamp="20210720 20:22:21.925" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-19859"
}</msg>
<status status="PASS" starttime="20210720 20:22:21.386" endtime="20210720 20:22:21.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:21.925" endtime="20210720 20:22:21.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:21.926" endtime="20210720 20:22:21.926"/>
</kw>
<status status="PASS" starttime="20210720 20:22:21.386" endtime="20210720 20:22:21.926"/>
</kw>
<status status="PASS" starttime="20210720 20:22:21.384" endtime="20210720 20:22:21.927"/>
</kw>
<msg timestamp="20210720 20:22:21.927" level="INFO">${BUCKET} = bucket-19859</msg>
<status status="PASS" starttime="20210720 20:22:21.384" endtime="20210720 20:22:21.927"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:21.927" level="INFO">${BUCKET} = bucket-19859</msg>
<status status="PASS" starttime="20210720 20:22:21.927" endtime="20210720 20:22:21.927"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:21.928" endtime="20210720 20:22:21.928"/>
</kw>
<status status="PASS" starttime="20210720 20:22:15.620" endtime="20210720 20:22:21.928"/>
</kw>
<test id="s1-s3-s6-t1" name="List buckets">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:21.934" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:22.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:22.427" level="INFO">${output} = bucket-08442
bucket-17678
bucket-19859
bucket-36100
bucket-39533
bucket-72074
bucket-88738
bucket-95255
bucket-ekyxtelles</msg>
<status status="PASS" starttime="20210720 20:22:21.932" endtime="20210720 20:22:22.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:22.429" level="INFO">bucket-08442
bucket-17678
bucket-19859
bucket-36100
bucket-39533
bucket-72074
bucket-88738
bucket-95255
bucket-ekyxtelles</msg>
<status status="PASS" starttime="20210720 20:22:22.427" endtime="20210720 20:22:22.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:22.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:22.429" endtime="20210720 20:22:22.430"/>
</kw>
<status status="PASS" starttime="20210720 20:22:21.931" endtime="20210720 20:22:22.430"/>
</kw>
<msg timestamp="20210720 20:22:22.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:21.931" endtime="20210720 20:22:22.430"/>
</kw>
<msg timestamp="20210720 20:22:22.431" level="INFO">${output} = bucket-08442
bucket-17678
bucket-19859
bucket-36100
bucket-39533
bucket-72074
bucket-88738
bucket-95255
bucket-ekyxtelles</msg>
<status status="PASS" starttime="20210720 20:22:21.930" endtime="20210720 20:22:22.431"/>
</kw>
<msg timestamp="20210720 20:22:22.431" level="INFO">${result} = bucket-08442
bucket-17678
bucket-19859
bucket-36100
bucket-39533
bucket-72074
bucket-88738
bucket-95255
bucket-ekyxtelles</msg>
<status status="PASS" starttime="20210720 20:22:21.930" endtime="20210720 20:22:22.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:22.432" endtime="20210720 20:22:22.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:21.929" endtime="20210720 20:22:22.432"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210720 20:22:15.607" endtime="20210720 20:22:22.433"/>
</suite>
<suite id="s1-s3-s7" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:22.449" level="INFO">${random} = 42156</msg>
<status status="PASS" starttime="20210720 20:22:22.448" endtime="20210720 20:22:22.449"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:22.451" level="INFO">${PREFIX} = 42156</msg>
<status status="PASS" starttime="20210720 20:22:22.449" endtime="20210720 20:22:22.451"/>
</kw>
<status status="PASS" starttime="20210720 20:22:22.448" endtime="20210720 20:22:22.451"/>
</kw>
<status status="PASS" starttime="20210720 20:22:22.447" endtime="20210720 20:22:22.451"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:22.454" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:22.456" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:22:22.456" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:22:22.452" endtime="20210720 20:22:22.456"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:22.457" endtime="20210720 20:22:22.457"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:22.460" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:22.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:22.603" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:22:22.458" endtime="20210720 20:22:22.603"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:22.608" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:23.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:23.061" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:22:22.606" endtime="20210720 20:22:23.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:23.062" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:22:23.061" endtime="20210720 20:22:23.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:23.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:23.062" endtime="20210720 20:22:23.063"/>
</kw>
<status status="PASS" starttime="20210720 20:22:22.606" endtime="20210720 20:22:23.064"/>
</kw>
<msg timestamp="20210720 20:22:23.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:22.605" endtime="20210720 20:22:23.064"/>
</kw>
<status status="PASS" starttime="20210720 20:22:22.605" endtime="20210720 20:22:23.064"/>
</kw>
<status status="PASS" starttime="20210720 20:22:22.605" endtime="20210720 20:22:23.064"/>
</kw>
<status status="PASS" starttime="20210720 20:22:22.604" endtime="20210720 20:22:23.064"/>
</kw>
<status status="PASS" starttime="20210720 20:22:22.451" endtime="20210720 20:22:23.065"/>
</kw>
<status status="PASS" starttime="20210720 20:22:22.451" endtime="20210720 20:22:23.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:23.072" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:23.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:23.083" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:22:23.070" endtime="20210720 20:22:23.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:23.084" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:22:23.083" endtime="20210720 20:22:23.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:23.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:23.084" endtime="20210720 20:22:23.084"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.069" endtime="20210720 20:22:23.085"/>
</kw>
<msg timestamp="20210720 20:22:23.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:23.069" endtime="20210720 20:22:23.085"/>
</kw>
<msg timestamp="20210720 20:22:23.085" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:22:23.069" endtime="20210720 20:22:23.085"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:23.088" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:22:23.086" endtime="20210720 20:22:23.088"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:23.092" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:23.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:23.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:23.090" endtime="20210720 20:22:23.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:23.111" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:23.110" endtime="20210720 20:22:23.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:23.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:23.111" endtime="20210720 20:22:23.112"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.089" endtime="20210720 20:22:23.112"/>
</kw>
<msg timestamp="20210720 20:22:23.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:23.089" endtime="20210720 20:22:23.112"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.088" endtime="20210720 20:22:23.113"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.088" endtime="20210720 20:22:23.113"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.068" endtime="20210720 20:22:23.113"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.067" endtime="20210720 20:22:23.113"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:23.120" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:27.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:27.052" level="INFO">${output} = 2021-07-20 20:22:26,370 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:22:23.117" endtime="20210720 20:22:27.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:27.056" level="INFO">2021-07-20 20:22:26,370 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:22:27.053" endtime="20210720 20:22:27.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:27.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:27.056" endtime="20210720 20:22:27.060"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.116" endtime="20210720 20:22:27.060"/>
</kw>
<msg timestamp="20210720 20:22:27.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:23.115" endtime="20210720 20:22:27.061"/>
</kw>
<msg timestamp="20210720 20:22:27.061" level="INFO">${result} = 2021-07-20 20:22:26,370 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:22:23.114" endtime="20210720 20:22:27.061"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:22:27.062" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:22:27.061" endtime="20210720 20:22:27.062"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:22:27.063" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:22:27.062" endtime="20210720 20:22:27.063"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:22:27.063" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:22:27.063" endtime="20210720 20:22:27.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:27.064" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:22:27.063" endtime="20210720 20:22:27.065"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:27.066" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:22:27.065" endtime="20210720 20:22:27.066"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:27.070" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:27.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:27.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:27.067" endtime="20210720 20:22:27.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:27.418" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:27.418" endtime="20210720 20:22:27.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:27.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:27.419" endtime="20210720 20:22:27.419"/>
</kw>
<status status="PASS" starttime="20210720 20:22:27.067" endtime="20210720 20:22:27.419"/>
</kw>
<msg timestamp="20210720 20:22:27.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:27.066" endtime="20210720 20:22:27.420"/>
</kw>
<status status="PASS" starttime="20210720 20:22:27.066" endtime="20210720 20:22:27.420"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:27.426" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:27.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:27.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:27.423" endtime="20210720 20:22:27.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:27.786" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:27.785" endtime="20210720 20:22:27.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:27.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:27.786" endtime="20210720 20:22:27.787"/>
</kw>
<status status="PASS" starttime="20210720 20:22:27.423" endtime="20210720 20:22:27.787"/>
</kw>
<msg timestamp="20210720 20:22:27.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:27.422" endtime="20210720 20:22:27.787"/>
</kw>
<status status="PASS" starttime="20210720 20:22:27.420" endtime="20210720 20:22:27.788"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:27.792" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:28.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:28.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:27.790" endtime="20210720 20:22:28.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:28.168" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:28.167" endtime="20210720 20:22:28.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:28.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:28.168" endtime="20210720 20:22:28.169"/>
</kw>
<status status="PASS" starttime="20210720 20:22:27.789" endtime="20210720 20:22:28.169"/>
</kw>
<msg timestamp="20210720 20:22:28.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:27.789" endtime="20210720 20:22:28.169"/>
</kw>
<status status="PASS" starttime="20210720 20:22:27.788" endtime="20210720 20:22:28.169"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:28.174" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:28.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:28.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:28.171" endtime="20210720 20:22:28.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:28.547" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:28.547" endtime="20210720 20:22:28.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:28.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:28.548" endtime="20210720 20:22:28.548"/>
</kw>
<status status="PASS" starttime="20210720 20:22:28.171" endtime="20210720 20:22:28.549"/>
</kw>
<msg timestamp="20210720 20:22:28.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:28.170" endtime="20210720 20:22:28.549"/>
</kw>
<status status="PASS" starttime="20210720 20:22:28.170" endtime="20210720 20:22:28.549"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.114" endtime="20210720 20:22:28.549"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.113" endtime="20210720 20:22:28.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:28.550" endtime="20210720 20:22:28.550"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.065" endtime="20210720 20:22:28.550"/>
</kw>
<status status="PASS" starttime="20210720 20:22:23.065" endtime="20210720 20:22:28.550"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:28.552" level="INFO">${postfix} = 78407</msg>
<status status="PASS" starttime="20210720 20:22:28.552" endtime="20210720 20:22:28.552"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:22:28.553" level="INFO">${bucket} = bucket-78407</msg>
<status status="PASS" starttime="20210720 20:22:28.552" endtime="20210720 20:22:28.553"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:28.570" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-78407 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:29.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:29.124" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-78407"
}</msg>
<status status="PASS" starttime="20210720 20:22:28.568" endtime="20210720 20:22:29.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:29.125" level="INFO">{
    "Location": "http://s3g:9878/bucket-78407"
}</msg>
<status status="PASS" starttime="20210720 20:22:29.125" endtime="20210720 20:22:29.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:29.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:29.126" endtime="20210720 20:22:29.126"/>
</kw>
<status status="PASS" starttime="20210720 20:22:28.554" endtime="20210720 20:22:29.126"/>
</kw>
<msg timestamp="20210720 20:22:29.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:28.554" endtime="20210720 20:22:29.127"/>
</kw>
<msg timestamp="20210720 20:22:29.127" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-78407"
}</msg>
<status status="PASS" starttime="20210720 20:22:28.553" endtime="20210720 20:22:29.127"/>
</kw>
<msg timestamp="20210720 20:22:29.127" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-78407"
}</msg>
<status status="PASS" starttime="20210720 20:22:28.553" endtime="20210720 20:22:29.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:29.127" endtime="20210720 20:22:29.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:29.128" endtime="20210720 20:22:29.129"/>
</kw>
<status status="PASS" starttime="20210720 20:22:28.553" endtime="20210720 20:22:29.129"/>
</kw>
<status status="PASS" starttime="20210720 20:22:28.551" endtime="20210720 20:22:29.129"/>
</kw>
<msg timestamp="20210720 20:22:29.129" level="INFO">${BUCKET} = bucket-78407</msg>
<status status="PASS" starttime="20210720 20:22:28.551" endtime="20210720 20:22:29.129"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:29.130" level="INFO">${BUCKET} = bucket-78407</msg>
<status status="PASS" starttime="20210720 20:22:29.130" endtime="20210720 20:22:29.130"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:22:29.130" endtime="20210720 20:22:29.131"/>
</kw>
<status status="PASS" starttime="20210720 20:22:22.447" endtime="20210720 20:22:29.131"/>
</kw>
<test id="s1-s3-s7-t1" name="Test Multipart Upload">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:29.134" level="INFO">${random} = 19608</msg>
<status status="PASS" starttime="20210720 20:22:29.133" endtime="20210720 20:22:29.134"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:29.135" level="INFO">${PREFIX} = 19608</msg>
<status status="PASS" starttime="20210720 20:22:29.134" endtime="20210720 20:22:29.135"/>
</kw>
<status status="PASS" starttime="20210720 20:22:29.132" endtime="20210720 20:22:29.135"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:29.139" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 19608/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:29.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:29.686" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "841ac0b2-f741-4483-9a91-a6382f788def-106614787251961878", 
    "Key": "19608/multipartKey"
}</msg>
<status status="PASS" starttime="20210720 20:22:29.137" endtime="20210720 20:22:29.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:29.687" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "841ac0b2-f741-4483-9a91-a6382f788def-106614787251961878", 
    "Key": "19608/multipartKey"
}</msg>
<status status="PASS" starttime="20210720 20:22:29.687" endtime="20210720 20:22:29.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:29.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:29.688" endtime="20210720 20:22:29.689"/>
</kw>
<status status="PASS" starttime="20210720 20:22:29.136" endtime="20210720 20:22:29.689"/>
</kw>
<msg timestamp="20210720 20:22:29.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:29.136" endtime="20210720 20:22:29.689"/>
</kw>
<msg timestamp="20210720 20:22:29.690" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "841ac0b2-f741-4483-9a91-a6382f788def-106614787251961878", 
    "Key": "19608/multipartKey"
}</msg>
<status status="PASS" starttime="20210720 20:22:29.135" endtime="20210720 20:22:29.690"/>
</kw>
<msg timestamp="20210720 20:22:29.690" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "841ac0b2-f741-4483-9a91-a6382f788def-106614787251961878", 
    "Key": "19608/multipartKey"
}</msg>
<status status="PASS" starttime="20210720 20:22:29.135" endtime="20210720 20:22:29.690"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:29.694" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "841ac0b2-f741-4483-9a91-a6382f788def-106614787251961878", 
    "Key": "19608/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:29.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:29.747" level="INFO">${output} = 841ac0b2-f741-4483-9a91-a6382f788def-106614787251961878</msg>
<status status="PASS" starttime="20210720 20:22:29.691" endtime="20210720 20:22:29.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:29.748" level="INFO">841ac0b2-f741-4483-9a91-a6382f788def-106614787251961878</msg>
<status status="PASS" starttime="20210720 20:22:29.748" endtime="20210720 20:22:29.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:29.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:29.749" endtime="20210720 20:22:29.749"/>
</kw>
<msg timestamp="20210720 20:22:29.750" level="INFO">${uploadID} = 841ac0b2-f741-4483-9a91-a6382f788def-106614787251961878</msg>
<status status="PASS" starttime="20210720 20:22:29.690" endtime="20210720 20:22:29.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:29.750" endtime="20210720 20:22:29.751"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:29.751" endtime="20210720 20:22:29.751"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:29.751" endtime="20210720 20:22:29.752"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:29.757" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 19608/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:30.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:30.303" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231", 
    "Key": "19608/multipartKey"
}</msg>
<status status="PASS" starttime="20210720 20:22:29.754" endtime="20210720 20:22:30.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:30.304" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231", 
    "Key": "19608/multipartKey"
}</msg>
<status status="PASS" starttime="20210720 20:22:30.303" endtime="20210720 20:22:30.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:30.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:30.304" endtime="20210720 20:22:30.305"/>
</kw>
<status status="PASS" starttime="20210720 20:22:29.754" endtime="20210720 20:22:30.305"/>
</kw>
<msg timestamp="20210720 20:22:30.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:29.754" endtime="20210720 20:22:30.306"/>
</kw>
<msg timestamp="20210720 20:22:30.306" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231", 
    "Key": "19608/multipartKey"
}</msg>
<status status="PASS" starttime="20210720 20:22:29.753" endtime="20210720 20:22:30.306"/>
</kw>
<msg timestamp="20210720 20:22:30.306" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231", 
    "Key": "19608/multipartKey"
}</msg>
<status status="PASS" starttime="20210720 20:22:29.752" endtime="20210720 20:22:30.306"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:30.310" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231", 
    "Key": "19608/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:30.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:30.351" level="INFO">${output} = ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231</msg>
<status status="PASS" starttime="20210720 20:22:30.307" endtime="20210720 20:22:30.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:30.353" level="INFO">ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231</msg>
<status status="PASS" starttime="20210720 20:22:30.352" endtime="20210720 20:22:30.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:30.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:30.353" endtime="20210720 20:22:30.353"/>
</kw>
<msg timestamp="20210720 20:22:30.354" level="INFO">${nextUploadID} = ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231</msg>
<status status="PASS" starttime="20210720 20:22:30.307" endtime="20210720 20:22:30.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:30.354" endtime="20210720 20:22:30.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:30.355" endtime="20210720 20:22:30.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:30.355" endtime="20210720 20:22:30.356"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20210720 20:22:30.356" endtime="20210720 20:22:30.356"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:30.361" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:30.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:30.404" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0389341 s, 135 MB/s</msg>
<status status="PASS" starttime="20210720 20:22:30.359" endtime="20210720 20:22:30.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:30.406" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0389341 s, 135 MB/s</msg>
<status status="PASS" starttime="20210720 20:22:30.405" endtime="20210720 20:22:30.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:30.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:30.406" endtime="20210720 20:22:30.406"/>
</kw>
<status status="PASS" starttime="20210720 20:22:30.359" endtime="20210720 20:22:30.407"/>
</kw>
<msg timestamp="20210720 20:22:30.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:30.358" endtime="20210720 20:22:30.407"/>
</kw>
<status status="PASS" starttime="20210720 20:22:30.357" endtime="20210720 20:22:30.407"/>
</kw>
<status status="PASS" starttime="20210720 20:22:30.357" endtime="20210720 20:22:30.407"/>
</kw>
<status status="PASS" starttime="20210720 20:22:30.357" endtime="20210720 20:22:30.407"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:30.413" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 19608/multipartKey --part-number 1 --body /tmp/part1 --upload-id ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:31.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:31.457" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/19608/multipartKey-ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:30.410" endtime="20210720 20:22:31.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:31.458" level="INFO">{
    "ETag": "/s3v/bucket-78407/19608/multipartKey-ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:31.457" endtime="20210720 20:22:31.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:31.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:31.458" endtime="20210720 20:22:31.459"/>
</kw>
<status status="PASS" starttime="20210720 20:22:30.409" endtime="20210720 20:22:31.459"/>
</kw>
<msg timestamp="20210720 20:22:31.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:30.409" endtime="20210720 20:22:31.459"/>
</kw>
<msg timestamp="20210720 20:22:31.460" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/19608/multipartKey-ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:30.408" endtime="20210720 20:22:31.460"/>
</kw>
<msg timestamp="20210720 20:22:31.460" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/19608/multipartKey-ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:30.408" endtime="20210720 20:22:31.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:31.460" endtime="20210720 20:22:31.461"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:31.466" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:31.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:31.509" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0393222 s, 133 MB/s</msg>
<status status="PASS" starttime="20210720 20:22:31.463" endtime="20210720 20:22:31.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:31.510" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0393222 s, 133 MB/s</msg>
<status status="PASS" starttime="20210720 20:22:31.510" endtime="20210720 20:22:31.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:31.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:31.511" endtime="20210720 20:22:31.511"/>
</kw>
<status status="PASS" starttime="20210720 20:22:31.462" endtime="20210720 20:22:31.512"/>
</kw>
<msg timestamp="20210720 20:22:31.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:31.462" endtime="20210720 20:22:31.512"/>
</kw>
<status status="PASS" starttime="20210720 20:22:31.462" endtime="20210720 20:22:31.512"/>
</kw>
<status status="PASS" starttime="20210720 20:22:31.461" endtime="20210720 20:22:31.512"/>
</kw>
<status status="PASS" starttime="20210720 20:22:31.461" endtime="20210720 20:22:31.512"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:31.517" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 19608/multipartKey --part-number 1 --body /tmp/part1 --upload-id ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:32.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:32.502" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/19608/multipartKey-ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:31.515" endtime="20210720 20:22:32.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:32.503" level="INFO">{
    "ETag": "/s3v/bucket-78407/19608/multipartKey-ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:32.502" endtime="20210720 20:22:32.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:32.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:32.503" endtime="20210720 20:22:32.504"/>
</kw>
<status status="PASS" starttime="20210720 20:22:31.514" endtime="20210720 20:22:32.504"/>
</kw>
<msg timestamp="20210720 20:22:32.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:31.514" endtime="20210720 20:22:32.504"/>
</kw>
<msg timestamp="20210720 20:22:32.505" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/19608/multipartKey-ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:31.513" endtime="20210720 20:22:32.505"/>
</kw>
<msg timestamp="20210720 20:22:32.505" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/19608/multipartKey-ee8fa112-fdf9-4301-bd0b-e9b14232e35b-106614787291742231-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:31.513" endtime="20210720 20:22:32.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:32.505" endtime="20210720 20:22:32.506"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:29.131" endtime="20210720 20:22:32.506"/>
</test>
<test id="s1-s3-s7-t2" name="Test Multipart Upload Complete">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:32.510" level="INFO">${random} = 52471</msg>
<status status="PASS" starttime="20210720 20:22:32.509" endtime="20210720 20:22:32.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:32.511" level="INFO">${PREFIX} = 52471</msg>
<status status="PASS" starttime="20210720 20:22:32.510" endtime="20210720 20:22:32.511"/>
</kw>
<status status="PASS" starttime="20210720 20:22:32.509" endtime="20210720 20:22:32.511"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:32.516" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 52471/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:33.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:33.070" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274", 
    "Key": "52471/multipartKey1"
}</msg>
<status status="PASS" starttime="20210720 20:22:32.514" endtime="20210720 20:22:33.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:33.072" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274", 
    "Key": "52471/multipartKey1"
}</msg>
<status status="PASS" starttime="20210720 20:22:33.071" endtime="20210720 20:22:33.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:33.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:33.072" endtime="20210720 20:22:33.073"/>
</kw>
<status status="PASS" starttime="20210720 20:22:32.513" endtime="20210720 20:22:33.073"/>
</kw>
<msg timestamp="20210720 20:22:33.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:32.513" endtime="20210720 20:22:33.073"/>
</kw>
<msg timestamp="20210720 20:22:33.073" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274", 
    "Key": "52471/multipartKey1"
}</msg>
<status status="PASS" starttime="20210720 20:22:32.512" endtime="20210720 20:22:33.073"/>
</kw>
<msg timestamp="20210720 20:22:33.074" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274", 
    "Key": "52471/multipartKey1"
}</msg>
<status status="PASS" starttime="20210720 20:22:32.511" endtime="20210720 20:22:33.074"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:33.077" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274", 
    "Key": "52471/multipartKey1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:33.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:33.119" level="INFO">${output} = 72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274</msg>
<status status="PASS" starttime="20210720 20:22:33.075" endtime="20210720 20:22:33.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:33.120" level="INFO">72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274</msg>
<status status="PASS" starttime="20210720 20:22:33.119" endtime="20210720 20:22:33.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:33.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:33.120" endtime="20210720 20:22:33.121"/>
</kw>
<msg timestamp="20210720 20:22:33.121" level="INFO">${uploadID} = 72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274</msg>
<status status="PASS" starttime="20210720 20:22:33.074" endtime="20210720 20:22:33.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:33.122" endtime="20210720 20:22:33.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:33.122" endtime="20210720 20:22:33.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:33.123" endtime="20210720 20:22:33.123"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:33.128" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:33.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:33.175" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0418165 s, 125 MB/s</msg>
<status status="PASS" starttime="20210720 20:22:33.126" endtime="20210720 20:22:33.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:33.176" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0418165 s, 125 MB/s</msg>
<status status="PASS" starttime="20210720 20:22:33.175" endtime="20210720 20:22:33.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:33.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:33.176" endtime="20210720 20:22:33.177"/>
</kw>
<status status="PASS" starttime="20210720 20:22:33.125" endtime="20210720 20:22:33.177"/>
</kw>
<msg timestamp="20210720 20:22:33.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:33.125" endtime="20210720 20:22:33.178"/>
</kw>
<status status="PASS" starttime="20210720 20:22:33.124" endtime="20210720 20:22:33.178"/>
</kw>
<status status="PASS" starttime="20210720 20:22:33.124" endtime="20210720 20:22:33.178"/>
</kw>
<status status="PASS" starttime="20210720 20:22:33.123" endtime="20210720 20:22:33.178"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:33.183" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 52471/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:36.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:36.665" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:33.180" endtime="20210720 20:22:36.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:36.667" level="INFO">{
    "ETag": "/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:36.666" endtime="20210720 20:22:36.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:36.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:36.667" endtime="20210720 20:22:36.668"/>
</kw>
<status status="PASS" starttime="20210720 20:22:33.180" endtime="20210720 20:22:36.668"/>
</kw>
<msg timestamp="20210720 20:22:36.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:33.179" endtime="20210720 20:22:36.668"/>
</kw>
<msg timestamp="20210720 20:22:36.669" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:33.179" endtime="20210720 20:22:36.669"/>
</kw>
<msg timestamp="20210720 20:22:36.669" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:33.178" endtime="20210720 20:22:36.669"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:36.673" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:36.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:36.716" level="INFO">${output} = /s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-1</msg>
<status status="PASS" starttime="20210720 20:22:36.670" endtime="20210720 20:22:36.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:36.717" level="INFO">/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-1</msg>
<status status="PASS" starttime="20210720 20:22:36.716" endtime="20210720 20:22:36.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:36.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:36.717" endtime="20210720 20:22:36.718"/>
</kw>
<msg timestamp="20210720 20:22:36.718" level="INFO">${eTag1} = /s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-1</msg>
<status status="PASS" starttime="20210720 20:22:36.669" endtime="20210720 20:22:36.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:36.719" endtime="20210720 20:22:36.719"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:36.723" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210720 20:22:36.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:36.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:36.721" endtime="20210720 20:22:36.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:36.726" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:36.726" endtime="20210720 20:22:36.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:36.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:36.727" endtime="20210720 20:22:36.727"/>
</kw>
<status status="PASS" starttime="20210720 20:22:36.720" endtime="20210720 20:22:36.728"/>
</kw>
<msg timestamp="20210720 20:22:36.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:36.720" endtime="20210720 20:22:36.728"/>
</kw>
<status status="PASS" starttime="20210720 20:22:36.719" endtime="20210720 20:22:36.728"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:36.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 52471/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:39.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:39.970" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:36.730" endtime="20210720 20:22:39.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:39.971" level="INFO">{
    "ETag": "/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:39.971" endtime="20210720 20:22:39.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:39.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:39.972" endtime="20210720 20:22:39.972"/>
</kw>
<status status="PASS" starttime="20210720 20:22:36.730" endtime="20210720 20:22:39.973"/>
</kw>
<msg timestamp="20210720 20:22:39.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:36.729" endtime="20210720 20:22:39.973"/>
</kw>
<msg timestamp="20210720 20:22:39.973" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:36.729" endtime="20210720 20:22:39.973"/>
</kw>
<msg timestamp="20210720 20:22:39.974" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:36.728" endtime="20210720 20:22:39.974"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:39.977" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:40.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:40.031" level="INFO">${output} = /s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-2</msg>
<status status="PASS" starttime="20210720 20:22:39.974" endtime="20210720 20:22:40.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:40.032" level="INFO">/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-2</msg>
<status status="PASS" starttime="20210720 20:22:40.032" endtime="20210720 20:22:40.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:40.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:40.033" endtime="20210720 20:22:40.033"/>
</kw>
<msg timestamp="20210720 20:22:40.035" level="INFO">${eTag2} = /s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-2</msg>
<status status="PASS" starttime="20210720 20:22:39.974" endtime="20210720 20:22:40.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:40.035" endtime="20210720 20:22:40.035"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:40.040" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274 --bucket bucket-78407 --key 52471/multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-1,PartNumber=1},{ETag=/s3v/bucket-78407/52471/multipartKey1-72cdc717-efe9-4441-9243-9f64c1cb13a8-106614787472949274-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:40.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:40.592" level="INFO">${output} = {
    "ETag": "dd0da7db54f9eda17f54f3e0eef34eb2985af3ac7fd4d165986fd3a1db5c7689", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "52471/multipartKey1"
}</msg>
<status status="PASS" starttime="20210720 20:22:40.038" endtime="20210720 20:22:40.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:40.594" level="INFO">{
    "ETag": "dd0da7db54f9eda17f54f3e0eef34eb2985af3ac7fd4d165986fd3a1db5c7689", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "52471/multipartKey1"
}</msg>
<status status="PASS" starttime="20210720 20:22:40.593" endtime="20210720 20:22:40.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:40.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:40.595" endtime="20210720 20:22:40.595"/>
</kw>
<status status="PASS" starttime="20210720 20:22:40.037" endtime="20210720 20:22:40.595"/>
</kw>
<msg timestamp="20210720 20:22:40.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:40.037" endtime="20210720 20:22:40.596"/>
</kw>
<msg timestamp="20210720 20:22:40.596" level="INFO">${output} = {
    "ETag": "dd0da7db54f9eda17f54f3e0eef34eb2985af3ac7fd4d165986fd3a1db5c7689", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "52471/multipartKey1"
}</msg>
<status status="PASS" starttime="20210720 20:22:40.036" endtime="20210720 20:22:40.596"/>
</kw>
<msg timestamp="20210720 20:22:40.596" level="INFO">${result} = {
    "ETag": "dd0da7db54f9eda17f54f3e0eef34eb2985af3ac7fd4d165986fd3a1db5c7689", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "52471/multipartKey1"
}</msg>
<status status="PASS" starttime="20210720 20:22:40.035" endtime="20210720 20:22:40.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:40.597" endtime="20210720 20:22:40.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:40.597" endtime="20210720 20:22:40.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:40.598" endtime="20210720 20:22:40.598"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:40.604" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-78407 --key 52471/multipartKey1 /tmp/52471-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:41.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:41.393" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:22:40 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Tue, 20 Jul 2021 20...</msg>
<status status="PASS" starttime="20210720 20:22:40.601" endtime="20210720 20:22:41.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:41.395" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:22:40 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Tue, 20 Jul 2021 20:22:41 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:22:41.394" endtime="20210720 20:22:41.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:41.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:41.395" endtime="20210720 20:22:41.396"/>
</kw>
<status status="PASS" starttime="20210720 20:22:40.600" endtime="20210720 20:22:41.396"/>
</kw>
<msg timestamp="20210720 20:22:41.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:40.600" endtime="20210720 20:22:41.396"/>
</kw>
<msg timestamp="20210720 20:22:41.396" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:22:40 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Tue, 20 Jul 2021 20...</msg>
<status status="PASS" starttime="20210720 20:22:40.599" endtime="20210720 20:22:41.397"/>
</kw>
<msg timestamp="20210720 20:22:41.397" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:22:40 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Tue, 20 Jul 2021 20...</msg>
<status status="PASS" starttime="20210720 20:22:40.599" endtime="20210720 20:22:41.397"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:41.401" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/52471-multipartKey1'.</msg>
<msg timestamp="20210720 20:22:41.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:41.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:41.399" endtime="20210720 20:22:41.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:41.410" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:41.410" endtime="20210720 20:22:41.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:41.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:41.411" endtime="20210720 20:22:41.411"/>
</kw>
<status status="PASS" starttime="20210720 20:22:41.398" endtime="20210720 20:22:41.412"/>
</kw>
<msg timestamp="20210720 20:22:41.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:41.398" endtime="20210720 20:22:41.412"/>
</kw>
<status status="PASS" starttime="20210720 20:22:41.397" endtime="20210720 20:22:41.412"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:41.417" level="INFO">Running command 'md5sum /tmp/52471-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:41.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:41.434" level="INFO">${output} = 254e71464223da49b9c58b1422180255</msg>
<status status="PASS" starttime="20210720 20:22:41.414" endtime="20210720 20:22:41.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:41.436" level="INFO">254e71464223da49b9c58b1422180255</msg>
<status status="PASS" starttime="20210720 20:22:41.435" endtime="20210720 20:22:41.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:41.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:41.436" endtime="20210720 20:22:41.437"/>
</kw>
<status status="PASS" starttime="20210720 20:22:41.414" endtime="20210720 20:22:41.437"/>
</kw>
<msg timestamp="20210720 20:22:41.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:41.413" endtime="20210720 20:22:41.438"/>
</kw>
<msg timestamp="20210720 20:22:41.438" level="INFO">${checksumbefore} = 254e71464223da49b9c58b1422180255</msg>
<status status="PASS" starttime="20210720 20:22:41.413" endtime="20210720 20:22:41.438"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:41.442" level="INFO">Running command 'md5sum /tmp/52471-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:41.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:41.459" level="INFO">${output} = 254e71464223da49b9c58b1422180255</msg>
<status status="PASS" starttime="20210720 20:22:41.440" endtime="20210720 20:22:41.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:41.460" level="INFO">254e71464223da49b9c58b1422180255</msg>
<status status="PASS" starttime="20210720 20:22:41.459" endtime="20210720 20:22:41.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:41.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:41.460" endtime="20210720 20:22:41.461"/>
</kw>
<status status="PASS" starttime="20210720 20:22:41.439" endtime="20210720 20:22:41.461"/>
</kw>
<msg timestamp="20210720 20:22:41.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:41.439" endtime="20210720 20:22:41.462"/>
</kw>
<msg timestamp="20210720 20:22:41.462" level="INFO">${checksumafter} = 254e71464223da49b9c58b1422180255</msg>
<status status="PASS" starttime="20210720 20:22:41.438" endtime="20210720 20:22:41.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:22:41.462" endtime="20210720 20:22:41.462"/>
</kw>
<status status="PASS" starttime="20210720 20:22:41.412" endtime="20210720 20:22:41.463"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:32.508" endtime="20210720 20:22:41.463"/>
</test>
<test id="s1-s3-s7-t3" name="Test Multipart Upload Complete Entity too small">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:41.466" level="INFO">${random} = 68719</msg>
<status status="PASS" starttime="20210720 20:22:41.465" endtime="20210720 20:22:41.466"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:41.467" level="INFO">${PREFIX} = 68719</msg>
<status status="PASS" starttime="20210720 20:22:41.466" endtime="20210720 20:22:41.467"/>
</kw>
<status status="PASS" starttime="20210720 20:22:41.465" endtime="20210720 20:22:41.467"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:41.471" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 68719/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:42.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:42.042" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197", 
    "Key": "68719/multipartKey2"
}</msg>
<status status="PASS" starttime="20210720 20:22:41.469" endtime="20210720 20:22:42.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:42.044" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197", 
    "Key": "68719/multipartKey2"
}</msg>
<status status="PASS" starttime="20210720 20:22:42.043" endtime="20210720 20:22:42.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:42.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:42.044" endtime="20210720 20:22:42.045"/>
</kw>
<status status="PASS" starttime="20210720 20:22:41.468" endtime="20210720 20:22:42.045"/>
</kw>
<msg timestamp="20210720 20:22:42.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:41.468" endtime="20210720 20:22:42.045"/>
</kw>
<msg timestamp="20210720 20:22:42.046" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197", 
    "Key": "68719/multipartKey2"
}</msg>
<status status="PASS" starttime="20210720 20:22:41.467" endtime="20210720 20:22:42.046"/>
</kw>
<msg timestamp="20210720 20:22:42.046" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197", 
    "Key": "68719/multipartKey2"
}</msg>
<status status="PASS" starttime="20210720 20:22:41.467" endtime="20210720 20:22:42.046"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:42.049" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197", 
    "Key": "68719/multipartKey2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:42.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:42.123" level="INFO">${output} = fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197</msg>
<status status="PASS" starttime="20210720 20:22:42.047" endtime="20210720 20:22:42.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:42.125" level="INFO">fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197</msg>
<status status="PASS" starttime="20210720 20:22:42.124" endtime="20210720 20:22:42.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:42.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:42.125" endtime="20210720 20:22:42.126"/>
</kw>
<msg timestamp="20210720 20:22:42.126" level="INFO">${uploadID} = fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197</msg>
<status status="PASS" starttime="20210720 20:22:42.046" endtime="20210720 20:22:42.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:42.127" endtime="20210720 20:22:42.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:42.127" endtime="20210720 20:22:42.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:42.128" endtime="20210720 20:22:42.128"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:42.134" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20210720 20:22:42.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:42.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:42.130" endtime="20210720 20:22:42.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:42.138" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:42.137" endtime="20210720 20:22:42.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:42.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:42.138" endtime="20210720 20:22:42.139"/>
</kw>
<status status="PASS" starttime="20210720 20:22:42.129" endtime="20210720 20:22:42.139"/>
</kw>
<msg timestamp="20210720 20:22:42.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:42.129" endtime="20210720 20:22:42.139"/>
</kw>
<status status="PASS" starttime="20210720 20:22:42.128" endtime="20210720 20:22:42.140"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:42.145" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 68719/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:43.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:43.019" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:42.143" endtime="20210720 20:22:43.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:43.021" level="INFO">{
    "ETag": "/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:43.020" endtime="20210720 20:22:43.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:43.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:43.021" endtime="20210720 20:22:43.021"/>
</kw>
<status status="PASS" starttime="20210720 20:22:42.142" endtime="20210720 20:22:43.022"/>
</kw>
<msg timestamp="20210720 20:22:43.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:42.142" endtime="20210720 20:22:43.022"/>
</kw>
<msg timestamp="20210720 20:22:43.022" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:42.141" endtime="20210720 20:22:43.022"/>
</kw>
<msg timestamp="20210720 20:22:43.023" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:42.140" endtime="20210720 20:22:43.023"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:43.026" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:43.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:43.069" level="INFO">${output} = /s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-1</msg>
<status status="PASS" starttime="20210720 20:22:43.023" endtime="20210720 20:22:43.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:43.071" level="INFO">/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-1</msg>
<status status="PASS" starttime="20210720 20:22:43.070" endtime="20210720 20:22:43.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:43.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:43.071" endtime="20210720 20:22:43.071"/>
</kw>
<msg timestamp="20210720 20:22:43.072" level="INFO">${eTag1} = /s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-1</msg>
<status status="PASS" starttime="20210720 20:22:43.023" endtime="20210720 20:22:43.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:43.072" endtime="20210720 20:22:43.073"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:43.077" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210720 20:22:43.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:43.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:43.074" endtime="20210720 20:22:43.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:43.080" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:43.079" endtime="20210720 20:22:43.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:43.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:43.080" endtime="20210720 20:22:43.081"/>
</kw>
<status status="PASS" starttime="20210720 20:22:43.074" endtime="20210720 20:22:43.081"/>
</kw>
<msg timestamp="20210720 20:22:43.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:43.073" endtime="20210720 20:22:43.081"/>
</kw>
<status status="PASS" starttime="20210720 20:22:43.073" endtime="20210720 20:22:43.082"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:43.086" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 68719/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:43.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:43.848" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:43.084" endtime="20210720 20:22:43.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:43.849" level="INFO">{
    "ETag": "/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:43.849" endtime="20210720 20:22:43.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:43.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:43.850" endtime="20210720 20:22:43.855"/>
</kw>
<status status="PASS" starttime="20210720 20:22:43.083" endtime="20210720 20:22:43.856"/>
</kw>
<msg timestamp="20210720 20:22:43.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:43.083" endtime="20210720 20:22:43.856"/>
</kw>
<msg timestamp="20210720 20:22:43.856" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:43.083" endtime="20210720 20:22:43.856"/>
</kw>
<msg timestamp="20210720 20:22:43.857" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:43.082" endtime="20210720 20:22:43.857"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:43.861" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:43.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:43.905" level="INFO">${output} = /s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-2</msg>
<status status="PASS" starttime="20210720 20:22:43.859" endtime="20210720 20:22:43.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:43.907" level="INFO">/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-2</msg>
<status status="PASS" starttime="20210720 20:22:43.906" endtime="20210720 20:22:43.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:43.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:43.907" endtime="20210720 20:22:43.908"/>
</kw>
<msg timestamp="20210720 20:22:43.908" level="INFO">${eTag2} = /s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-2</msg>
<status status="PASS" starttime="20210720 20:22:43.857" endtime="20210720 20:22:43.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:43.909" endtime="20210720 20:22:43.909"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:43.914" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197 --bucket bucket-78407 --key 68719/multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-1,PartNumber=1},{ETag=/s3v/bucket-78407/68719/multipartKey2-fa022b89-fcd3-4d62-8754-e2b8bb6658f3-106614788060807197-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:44.457" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:44.457" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20210720 20:22:43.911" endtime="20210720 20:22:44.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:44.459" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20210720 20:22:44.458" endtime="20210720 20:22:44.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:44.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:44.459" endtime="20210720 20:22:44.460"/>
</kw>
<msg timestamp="20210720 20:22:44.460" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20210720 20:22:43.910" endtime="20210720 20:22:44.460"/>
</kw>
<msg timestamp="20210720 20:22:44.461" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20210720 20:22:43.909" endtime="20210720 20:22:44.461"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:44.461" endtime="20210720 20:22:44.461"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:41.464" endtime="20210720 20:22:44.462"/>
</test>
<test id="s1-s3-s7-t4" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:44.465" level="INFO">${random} = 35107</msg>
<status status="PASS" starttime="20210720 20:22:44.464" endtime="20210720 20:22:44.465"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:44.466" level="INFO">${PREFIX} = 35107</msg>
<status status="PASS" starttime="20210720 20:22:44.465" endtime="20210720 20:22:44.466"/>
</kw>
<status status="PASS" starttime="20210720 20:22:44.464" endtime="20210720 20:22:44.466"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:44.471" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 35107/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:45.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:45.012" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016", 
    "Key": "35107/multipartKey3"
}</msg>
<status status="PASS" starttime="20210720 20:22:44.469" endtime="20210720 20:22:45.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:45.013" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016", 
    "Key": "35107/multipartKey3"
}</msg>
<status status="PASS" starttime="20210720 20:22:45.012" endtime="20210720 20:22:45.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:45.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:45.013" endtime="20210720 20:22:45.014"/>
</kw>
<status status="PASS" starttime="20210720 20:22:44.468" endtime="20210720 20:22:45.014"/>
</kw>
<msg timestamp="20210720 20:22:45.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:44.468" endtime="20210720 20:22:45.014"/>
</kw>
<msg timestamp="20210720 20:22:45.015" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016", 
    "Key": "35107/multipartKey3"
}</msg>
<status status="PASS" starttime="20210720 20:22:44.467" endtime="20210720 20:22:45.015"/>
</kw>
<msg timestamp="20210720 20:22:45.015" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016", 
    "Key": "35107/multipartKey3"
}</msg>
<status status="PASS" starttime="20210720 20:22:44.467" endtime="20210720 20:22:45.015"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:45.019" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016", 
    "Key": "35107/multipartKey3"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:45.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:45.065" level="INFO">${output} = 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016</msg>
<status status="PASS" starttime="20210720 20:22:45.016" endtime="20210720 20:22:45.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:45.067" level="INFO">2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016</msg>
<status status="PASS" starttime="20210720 20:22:45.066" endtime="20210720 20:22:45.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:45.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:45.067" endtime="20210720 20:22:45.068"/>
</kw>
<msg timestamp="20210720 20:22:45.068" level="INFO">${uploadID} = 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016</msg>
<status status="PASS" starttime="20210720 20:22:45.015" endtime="20210720 20:22:45.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:45.069" endtime="20210720 20:22:45.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:45.069" endtime="20210720 20:22:45.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:45.071" endtime="20210720 20:22:45.071"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:45.076" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016 --bucket bucket-78407 --key 35107/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:45.638" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:45.638" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:45.073" endtime="20210720 20:22:45.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:45.640" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210720 20:22:45.639" endtime="20210720 20:22:45.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:45.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:45.640" endtime="20210720 20:22:45.641"/>
</kw>
<msg timestamp="20210720 20:22:45.641" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:45.072" endtime="20210720 20:22:45.641"/>
</kw>
<msg timestamp="20210720 20:22:45.641" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:45.071" endtime="20210720 20:22:45.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:45.642" endtime="20210720 20:22:45.642"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:45.647" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016 --bucket bucket-78407 --key 35107/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:46.217" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:46.217" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:45.644" endtime="20210720 20:22:46.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:46.219" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210720 20:22:46.218" endtime="20210720 20:22:46.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:46.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:46.219" endtime="20210720 20:22:46.220"/>
</kw>
<msg timestamp="20210720 20:22:46.220" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:45.644" endtime="20210720 20:22:46.220"/>
</kw>
<msg timestamp="20210720 20:22:46.220" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:45.642" endtime="20210720 20:22:46.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:46.221" endtime="20210720 20:22:46.221"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:46.227" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:46.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:46.273" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0424899 s, 123 MB/s</msg>
<status status="PASS" starttime="20210720 20:22:46.224" endtime="20210720 20:22:46.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:46.274" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0424899 s, 123 MB/s</msg>
<status status="PASS" starttime="20210720 20:22:46.273" endtime="20210720 20:22:46.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:46.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:46.274" endtime="20210720 20:22:46.275"/>
</kw>
<status status="PASS" starttime="20210720 20:22:46.223" endtime="20210720 20:22:46.275"/>
</kw>
<msg timestamp="20210720 20:22:46.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:46.223" endtime="20210720 20:22:46.275"/>
</kw>
<status status="PASS" starttime="20210720 20:22:46.222" endtime="20210720 20:22:46.276"/>
</kw>
<status status="PASS" starttime="20210720 20:22:46.222" endtime="20210720 20:22:46.276"/>
</kw>
<status status="PASS" starttime="20210720 20:22:46.221" endtime="20210720 20:22:46.276"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:46.281" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 35107/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:47.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:47.391" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:46.278" endtime="20210720 20:22:47.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:47.392" level="INFO">{
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:47.392" endtime="20210720 20:22:47.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:47.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:47.393" endtime="20210720 20:22:47.393"/>
</kw>
<status status="PASS" starttime="20210720 20:22:46.278" endtime="20210720 20:22:47.395"/>
</kw>
<msg timestamp="20210720 20:22:47.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:46.278" endtime="20210720 20:22:47.395"/>
</kw>
<msg timestamp="20210720 20:22:47.395" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:46.277" endtime="20210720 20:22:47.395"/>
</kw>
<msg timestamp="20210720 20:22:47.396" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:46.276" endtime="20210720 20:22:47.396"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:47.399" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:47.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:47.440" level="INFO">${output} = /s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1</msg>
<status status="PASS" starttime="20210720 20:22:47.397" endtime="20210720 20:22:47.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:47.442" level="INFO">/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1</msg>
<status status="PASS" starttime="20210720 20:22:47.441" endtime="20210720 20:22:47.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:47.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:47.442" endtime="20210720 20:22:47.443"/>
</kw>
<msg timestamp="20210720 20:22:47.443" level="INFO">${eTag1} = /s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1</msg>
<status status="PASS" starttime="20210720 20:22:47.396" endtime="20210720 20:22:47.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:47.443" endtime="20210720 20:22:47.444"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:47.449" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 35107/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:50.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:50.881" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:47.447" endtime="20210720 20:22:50.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:50.882" level="INFO">{
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:50.881" endtime="20210720 20:22:50.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:50.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:50.882" endtime="20210720 20:22:50.883"/>
</kw>
<status status="PASS" starttime="20210720 20:22:47.446" endtime="20210720 20:22:50.883"/>
</kw>
<msg timestamp="20210720 20:22:50.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:47.445" endtime="20210720 20:22:50.883"/>
</kw>
<msg timestamp="20210720 20:22:50.884" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:47.445" endtime="20210720 20:22:50.884"/>
</kw>
<msg timestamp="20210720 20:22:50.884" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:47.444" endtime="20210720 20:22:50.884"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:50.887" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:50.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:50.932" level="INFO">${output} = /s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-2</msg>
<status status="PASS" starttime="20210720 20:22:50.885" endtime="20210720 20:22:50.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:50.934" level="INFO">/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-2</msg>
<status status="PASS" starttime="20210720 20:22:50.933" endtime="20210720 20:22:50.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:50.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:50.934" endtime="20210720 20:22:50.935"/>
</kw>
<msg timestamp="20210720 20:22:50.935" level="INFO">${eTag2} = /s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-2</msg>
<status status="PASS" starttime="20210720 20:22:50.884" endtime="20210720 20:22:50.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:50.935" endtime="20210720 20:22:50.936"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:50.941" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20210720 20:22:50.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:50.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:50.938" endtime="20210720 20:22:50.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:50.944" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:50.943" endtime="20210720 20:22:50.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:50.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:50.944" endtime="20210720 20:22:50.944"/>
</kw>
<status status="PASS" starttime="20210720 20:22:50.937" endtime="20210720 20:22:50.945"/>
</kw>
<msg timestamp="20210720 20:22:50.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:50.937" endtime="20210720 20:22:50.945"/>
</kw>
<status status="PASS" starttime="20210720 20:22:50.936" endtime="20210720 20:22:50.945"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:50.950" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 35107/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:51.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:51.664" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-3"
}</msg>
<status status="PASS" starttime="20210720 20:22:50.947" endtime="20210720 20:22:51.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:51.666" level="INFO">{
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-3"
}</msg>
<status status="PASS" starttime="20210720 20:22:51.666" endtime="20210720 20:22:51.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:51.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:51.667" endtime="20210720 20:22:51.667"/>
</kw>
<status status="PASS" starttime="20210720 20:22:50.947" endtime="20210720 20:22:51.668"/>
</kw>
<msg timestamp="20210720 20:22:51.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:50.947" endtime="20210720 20:22:51.668"/>
</kw>
<msg timestamp="20210720 20:22:51.668" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-3"
}</msg>
<status status="PASS" starttime="20210720 20:22:50.946" endtime="20210720 20:22:51.668"/>
</kw>
<msg timestamp="20210720 20:22:51.669" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-3"
}</msg>
<status status="PASS" starttime="20210720 20:22:50.945" endtime="20210720 20:22:51.669"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:51.672" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:51.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:51.718" level="INFO">${output} = /s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-3</msg>
<status status="PASS" starttime="20210720 20:22:51.670" endtime="20210720 20:22:51.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:51.720" level="INFO">/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-3</msg>
<status status="PASS" starttime="20210720 20:22:51.719" endtime="20210720 20:22:51.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:51.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:51.720" endtime="20210720 20:22:51.721"/>
</kw>
<msg timestamp="20210720 20:22:51.721" level="INFO">${eTag3} = /s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-3</msg>
<status status="PASS" starttime="20210720 20:22:51.669" endtime="20210720 20:22:51.721"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:51.721" endtime="20210720 20:22:51.722"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:51.730" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016 --bucket bucket-78407 --key 35107/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:52.304" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:52.304" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:51.724" endtime="20210720 20:22:52.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:52.307" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210720 20:22:52.305" endtime="20210720 20:22:52.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:52.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:52.307" endtime="20210720 20:22:52.308"/>
</kw>
<msg timestamp="20210720 20:22:52.309" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:51.723" endtime="20210720 20:22:52.309"/>
</kw>
<msg timestamp="20210720 20:22:52.309" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:51.722" endtime="20210720 20:22:52.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:52.310" endtime="20210720 20:22:52.310"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:52.317" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016 --bucket bucket-78407 --key 35107/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:52.873" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:52.873" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:52.312" endtime="20210720 20:22:52.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:52.874" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210720 20:22:52.873" endtime="20210720 20:22:52.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:52.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:52.874" endtime="20210720 20:22:52.875"/>
</kw>
<msg timestamp="20210720 20:22:52.875" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:52.311" endtime="20210720 20:22:52.876"/>
</kw>
<msg timestamp="20210720 20:22:52.876" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210720 20:22:52.310" endtime="20210720 20:22:52.876"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:52.876" endtime="20210720 20:22:52.877"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:52.881" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016 --bucket bucket-78407 --key 35107/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:53.449" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:53.449" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210720 20:22:52.878" endtime="20210720 20:22:53.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:53.450" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210720 20:22:53.449" endtime="20210720 20:22:53.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:53.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:53.451" endtime="20210720 20:22:53.451"/>
</kw>
<msg timestamp="20210720 20:22:53.452" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210720 20:22:52.878" endtime="20210720 20:22:53.452"/>
</kw>
<msg timestamp="20210720 20:22:53.452" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20210720 20:22:52.877" endtime="20210720 20:22:53.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:53.452" endtime="20210720 20:22:53.453"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:53.458" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016 --bucket bucket-78407 --key 35107/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-1,PartNumber=1},{ETag=/s3v/bucket-78407/35107/multipartKey3-2a396da4-e7c8-4463-b4f5-3b1a77d069e3-106614788256170016-3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:53.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:53.993" level="INFO">${output} = {
    "ETag": "0702523f4797a9b8f0d640f4533d3993493c4eaee9afedb757b277d9af28a46d", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "35107/multipartKey3"
}</msg>
<status status="PASS" starttime="20210720 20:22:53.456" endtime="20210720 20:22:53.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:53.995" level="INFO">{
    "ETag": "0702523f4797a9b8f0d640f4533d3993493c4eaee9afedb757b277d9af28a46d", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "35107/multipartKey3"
}</msg>
<status status="PASS" starttime="20210720 20:22:53.994" endtime="20210720 20:22:53.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:53.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:53.995" endtime="20210720 20:22:53.996"/>
</kw>
<status status="PASS" starttime="20210720 20:22:53.455" endtime="20210720 20:22:53.996"/>
</kw>
<msg timestamp="20210720 20:22:53.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:53.455" endtime="20210720 20:22:53.996"/>
</kw>
<msg timestamp="20210720 20:22:53.997" level="INFO">${output} = {
    "ETag": "0702523f4797a9b8f0d640f4533d3993493c4eaee9afedb757b277d9af28a46d", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "35107/multipartKey3"
}</msg>
<status status="PASS" starttime="20210720 20:22:53.454" endtime="20210720 20:22:53.997"/>
</kw>
<msg timestamp="20210720 20:22:53.997" level="INFO">${result} = {
    "ETag": "0702523f4797a9b8f0d640f4533d3993493c4eaee9afedb757b277d9af28a46d", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "35107/multipartKey3"
}</msg>
<status status="PASS" starttime="20210720 20:22:53.453" endtime="20210720 20:22:53.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:53.997" endtime="20210720 20:22:53.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:53.998" endtime="20210720 20:22:53.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:53.999" endtime="20210720 20:22:53.999"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:54.005" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-78407 --key 35107/multipartKey3 /tmp/35107-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:54.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:54.852" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:22:53 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Tue, 20 Jul 2021 20...</msg>
<status status="PASS" starttime="20210720 20:22:54.001" endtime="20210720 20:22:54.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:54.854" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:22:53 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Tue, 20 Jul 2021 20:22:54 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:22:54.853" endtime="20210720 20:22:54.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:54.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:54.854" endtime="20210720 20:22:54.855"/>
</kw>
<status status="PASS" starttime="20210720 20:22:54.001" endtime="20210720 20:22:54.855"/>
</kw>
<msg timestamp="20210720 20:22:54.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:54.001" endtime="20210720 20:22:54.855"/>
</kw>
<msg timestamp="20210720 20:22:54.856" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:22:53 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Tue, 20 Jul 2021 20...</msg>
<status status="PASS" starttime="20210720 20:22:54.000" endtime="20210720 20:22:54.856"/>
</kw>
<msg timestamp="20210720 20:22:54.856" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:22:53 GMT", 
    "ContentLength": 5242886, 
    "Expires": "Tue, 20 Jul 2021 20...</msg>
<status status="PASS" starttime="20210720 20:22:53.999" endtime="20210720 20:22:54.856"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:54.861" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/35107-multipartKey3'.</msg>
<msg timestamp="20210720 20:22:54.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:54.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:54.858" endtime="20210720 20:22:54.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:54.878" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:54.877" endtime="20210720 20:22:54.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:54.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:54.878" endtime="20210720 20:22:54.879"/>
</kw>
<status status="PASS" starttime="20210720 20:22:54.857" endtime="20210720 20:22:54.879"/>
</kw>
<msg timestamp="20210720 20:22:54.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:54.857" endtime="20210720 20:22:54.879"/>
</kw>
<status status="PASS" starttime="20210720 20:22:54.856" endtime="20210720 20:22:54.880"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:54.885" level="INFO">Running command 'md5sum /tmp/35107-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:54.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:54.902" level="INFO">${output} = d54684dfe83f0178c98a33a90cc28ca7</msg>
<status status="PASS" starttime="20210720 20:22:54.882" endtime="20210720 20:22:54.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:54.903" level="INFO">d54684dfe83f0178c98a33a90cc28ca7</msg>
<status status="PASS" starttime="20210720 20:22:54.902" endtime="20210720 20:22:54.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:54.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:54.903" endtime="20210720 20:22:54.904"/>
</kw>
<status status="PASS" starttime="20210720 20:22:54.881" endtime="20210720 20:22:54.904"/>
</kw>
<msg timestamp="20210720 20:22:54.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:54.881" endtime="20210720 20:22:54.904"/>
</kw>
<msg timestamp="20210720 20:22:54.905" level="INFO">${checksumbefore} = d54684dfe83f0178c98a33a90cc28ca7</msg>
<status status="PASS" starttime="20210720 20:22:54.881" endtime="20210720 20:22:54.905"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:54.909" level="INFO">Running command 'md5sum /tmp/35107-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:54.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:54.925" level="INFO">${output} = d54684dfe83f0178c98a33a90cc28ca7</msg>
<status status="PASS" starttime="20210720 20:22:54.906" endtime="20210720 20:22:54.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:54.926" level="INFO">d54684dfe83f0178c98a33a90cc28ca7</msg>
<status status="PASS" starttime="20210720 20:22:54.925" endtime="20210720 20:22:54.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:54.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:54.927" endtime="20210720 20:22:54.927"/>
</kw>
<status status="PASS" starttime="20210720 20:22:54.906" endtime="20210720 20:22:54.928"/>
</kw>
<msg timestamp="20210720 20:22:54.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:54.905" endtime="20210720 20:22:54.928"/>
</kw>
<msg timestamp="20210720 20:22:54.928" level="INFO">${checksumafter} = d54684dfe83f0178c98a33a90cc28ca7</msg>
<status status="PASS" starttime="20210720 20:22:54.905" endtime="20210720 20:22:54.928"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:22:54.928" endtime="20210720 20:22:54.929"/>
</kw>
<status status="PASS" starttime="20210720 20:22:54.880" endtime="20210720 20:22:54.929"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:44.462" endtime="20210720 20:22:54.930"/>
</test>
<test id="s1-s3-s7-t5" name="Test abort Multipart upload">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:54.934" level="INFO">${random} = 01123</msg>
<status status="PASS" starttime="20210720 20:22:54.933" endtime="20210720 20:22:54.935"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:54.935" level="INFO">${PREFIX} = 01123</msg>
<status status="PASS" starttime="20210720 20:22:54.935" endtime="20210720 20:22:54.935"/>
</kw>
<status status="PASS" starttime="20210720 20:22:54.933" endtime="20210720 20:22:54.936"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:54.942" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 01123/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:55.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:55.480" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "994fbc3b-52a6-4e84-bb2f-02365aa24fba-106614788942069796", 
    "Key": "01123/multipartKey4"
}</msg>
<status status="PASS" starttime="20210720 20:22:54.939" endtime="20210720 20:22:55.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:55.482" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "994fbc3b-52a6-4e84-bb2f-02365aa24fba-106614788942069796", 
    "Key": "01123/multipartKey4"
}</msg>
<status status="PASS" starttime="20210720 20:22:55.481" endtime="20210720 20:22:55.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:55.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:55.482" endtime="20210720 20:22:55.483"/>
</kw>
<status status="PASS" starttime="20210720 20:22:54.938" endtime="20210720 20:22:55.484"/>
</kw>
<msg timestamp="20210720 20:22:55.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:54.937" endtime="20210720 20:22:55.484"/>
</kw>
<msg timestamp="20210720 20:22:55.484" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "994fbc3b-52a6-4e84-bb2f-02365aa24fba-106614788942069796", 
    "Key": "01123/multipartKey4"
}</msg>
<status status="PASS" starttime="20210720 20:22:54.937" endtime="20210720 20:22:55.484"/>
</kw>
<msg timestamp="20210720 20:22:55.485" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "994fbc3b-52a6-4e84-bb2f-02365aa24fba-106614788942069796", 
    "Key": "01123/multipartKey4"
}</msg>
<status status="PASS" starttime="20210720 20:22:54.936" endtime="20210720 20:22:55.485"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:55.488" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "994fbc3b-52a6-4e84-bb2f-02365aa24fba-106614788942069796", 
    "Key": "01123/multipartKey4"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:55.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:55.533" level="INFO">${output} = 994fbc3b-52a6-4e84-bb2f-02365aa24fba-106614788942069796</msg>
<status status="PASS" starttime="20210720 20:22:55.486" endtime="20210720 20:22:55.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:55.535" level="INFO">994fbc3b-52a6-4e84-bb2f-02365aa24fba-106614788942069796</msg>
<status status="PASS" starttime="20210720 20:22:55.534" endtime="20210720 20:22:55.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:55.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:55.535" endtime="20210720 20:22:55.536"/>
</kw>
<msg timestamp="20210720 20:22:55.536" level="INFO">${uploadID} = 994fbc3b-52a6-4e84-bb2f-02365aa24fba-106614788942069796</msg>
<status status="PASS" starttime="20210720 20:22:55.485" endtime="20210720 20:22:55.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:55.537" endtime="20210720 20:22:55.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:55.537" endtime="20210720 20:22:55.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:55.538" endtime="20210720 20:22:55.538"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:55.542" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-78407 --key 01123/multipartKey4 --upload-id 994fbc3b-52a6-4e84-bb2f-02365aa24fba-106614788942069796 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:56.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:56.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:55.540" endtime="20210720 20:22:56.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:56.104" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:56.104" endtime="20210720 20:22:56.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:56.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:56.105" endtime="20210720 20:22:56.105"/>
</kw>
<msg timestamp="20210720 20:22:56.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:55.539" endtime="20210720 20:22:56.106"/>
</kw>
<msg timestamp="20210720 20:22:56.106" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:22:55.538" endtime="20210720 20:22:56.106"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:54.932" endtime="20210720 20:22:56.106"/>
</test>
<test id="s1-s3-s7-t6" name="Test abort Multipart upload with invalid uploadId">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:56.110" level="INFO">${random} = 25983</msg>
<status status="PASS" starttime="20210720 20:22:56.109" endtime="20210720 20:22:56.110"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:56.111" level="INFO">${PREFIX} = 25983</msg>
<status status="PASS" starttime="20210720 20:22:56.110" endtime="20210720 20:22:56.111"/>
</kw>
<status status="PASS" starttime="20210720 20:22:56.109" endtime="20210720 20:22:56.111"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:56.115" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-78407 --key 25983/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:56.653" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:56.653" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210720 20:22:56.112" endtime="20210720 20:22:56.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:56.655" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20210720 20:22:56.654" endtime="20210720 20:22:56.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:56.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:56.655" endtime="20210720 20:22:56.656"/>
</kw>
<msg timestamp="20210720 20:22:56.656" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210720 20:22:56.112" endtime="20210720 20:22:56.656"/>
</kw>
<msg timestamp="20210720 20:22:56.657" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210720 20:22:56.111" endtime="20210720 20:22:56.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:56.108" endtime="20210720 20:22:56.657"/>
</test>
<test id="s1-s3-s7-t7" name="Upload part with Incorrect uploadID">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:56.661" level="INFO">${random} = 49796</msg>
<status status="PASS" starttime="20210720 20:22:56.660" endtime="20210720 20:22:56.661"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:56.662" level="INFO">${PREFIX} = 49796</msg>
<status status="PASS" starttime="20210720 20:22:56.661" endtime="20210720 20:22:56.662"/>
</kw>
<status status="PASS" starttime="20210720 20:22:56.659" endtime="20210720 20:22:56.662"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:56.667" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210720 20:22:56.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:56.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:56.664" endtime="20210720 20:22:56.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:56.670" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:56.670" endtime="20210720 20:22:56.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:56.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:56.671" endtime="20210720 20:22:56.672"/>
</kw>
<status status="PASS" starttime="20210720 20:22:56.663" endtime="20210720 20:22:56.672"/>
</kw>
<msg timestamp="20210720 20:22:56.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:56.662" endtime="20210720 20:22:56.672"/>
</kw>
<status status="PASS" starttime="20210720 20:22:56.662" endtime="20210720 20:22:56.672"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:56.677" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 49796/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:57.263" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:22:57.263" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210720 20:22:56.674" endtime="20210720 20:22:57.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:57.265" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20210720 20:22:57.264" endtime="20210720 20:22:57.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:57.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:57.265" endtime="20210720 20:22:57.266"/>
</kw>
<msg timestamp="20210720 20:22:57.266" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210720 20:22:56.673" endtime="20210720 20:22:57.266"/>
</kw>
<msg timestamp="20210720 20:22:57.267" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210720 20:22:56.673" endtime="20210720 20:22:57.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:57.267" endtime="20210720 20:22:57.267"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:56.658" endtime="20210720 20:22:57.267"/>
</test>
<test id="s1-s3-s7-t8" name="Test list parts">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:22:57.272" level="INFO">${random} = 92273</msg>
<status status="PASS" starttime="20210720 20:22:57.272" endtime="20210720 20:22:57.272"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:22:57.273" level="INFO">${PREFIX} = 92273</msg>
<status status="PASS" starttime="20210720 20:22:57.272" endtime="20210720 20:22:57.273"/>
</kw>
<status status="PASS" starttime="20210720 20:22:57.271" endtime="20210720 20:22:57.273"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:57.279" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 92273/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:57.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:57.828" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718", 
    "Key": "92273/multipartKey5"
}</msg>
<status status="PASS" starttime="20210720 20:22:57.276" endtime="20210720 20:22:57.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:57.829" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718", 
    "Key": "92273/multipartKey5"
}</msg>
<status status="PASS" starttime="20210720 20:22:57.828" endtime="20210720 20:22:57.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:57.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:57.829" endtime="20210720 20:22:57.830"/>
</kw>
<status status="PASS" starttime="20210720 20:22:57.275" endtime="20210720 20:22:57.830"/>
</kw>
<msg timestamp="20210720 20:22:57.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:57.275" endtime="20210720 20:22:57.830"/>
</kw>
<msg timestamp="20210720 20:22:57.831" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718", 
    "Key": "92273/multipartKey5"
}</msg>
<status status="PASS" starttime="20210720 20:22:57.274" endtime="20210720 20:22:57.831"/>
</kw>
<msg timestamp="20210720 20:22:57.831" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718", 
    "Key": "92273/multipartKey5"
}</msg>
<status status="PASS" starttime="20210720 20:22:57.273" endtime="20210720 20:22:57.831"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:57.834" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718", 
    "Key": "92273/multipartKey5"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:57.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:57.880" level="INFO">${output} = cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718</msg>
<status status="PASS" starttime="20210720 20:22:57.832" endtime="20210720 20:22:57.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:57.881" level="INFO">cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718</msg>
<status status="PASS" starttime="20210720 20:22:57.881" endtime="20210720 20:22:57.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:57.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:57.882" endtime="20210720 20:22:57.883"/>
</kw>
<msg timestamp="20210720 20:22:57.883" level="INFO">${uploadID} = cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718</msg>
<status status="PASS" starttime="20210720 20:22:57.831" endtime="20210720 20:22:57.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:57.883" endtime="20210720 20:22:57.884"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:57.884" endtime="20210720 20:22:57.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:57.885" endtime="20210720 20:22:57.885"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:57.891" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:57.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:57.940" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0451338 s, 116 MB/s</msg>
<status status="PASS" starttime="20210720 20:22:57.888" endtime="20210720 20:22:57.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:57.942" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0451338 s, 116 MB/s</msg>
<status status="PASS" starttime="20210720 20:22:57.941" endtime="20210720 20:22:57.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:57.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:57.942" endtime="20210720 20:22:57.943"/>
</kw>
<status status="PASS" starttime="20210720 20:22:57.887" endtime="20210720 20:22:57.944"/>
</kw>
<msg timestamp="20210720 20:22:57.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:57.887" endtime="20210720 20:22:57.944"/>
</kw>
<status status="PASS" starttime="20210720 20:22:57.886" endtime="20210720 20:22:57.945"/>
</kw>
<status status="PASS" starttime="20210720 20:22:57.886" endtime="20210720 20:22:57.945"/>
</kw>
<status status="PASS" starttime="20210720 20:22:57.885" endtime="20210720 20:22:57.945"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:57.950" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 92273/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:58.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:58.961" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:57.948" endtime="20210720 20:22:58.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:58.963" level="INFO">{
    "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:58.962" endtime="20210720 20:22:58.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:58.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:58.963" endtime="20210720 20:22:58.964"/>
</kw>
<status status="PASS" starttime="20210720 20:22:57.947" endtime="20210720 20:22:58.964"/>
</kw>
<msg timestamp="20210720 20:22:58.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:57.947" endtime="20210720 20:22:58.964"/>
</kw>
<msg timestamp="20210720 20:22:58.965" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:57.946" endtime="20210720 20:22:58.965"/>
</kw>
<msg timestamp="20210720 20:22:58.965" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1"
}</msg>
<status status="PASS" starttime="20210720 20:22:57.945" endtime="20210720 20:22:58.965"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:58.969" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:22:59.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:59.016" level="INFO">${output} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1</msg>
<status status="PASS" starttime="20210720 20:22:58.966" endtime="20210720 20:22:59.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:59.018" level="INFO">/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1</msg>
<status status="PASS" starttime="20210720 20:22:59.017" endtime="20210720 20:22:59.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:59.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:59.018" endtime="20210720 20:22:59.019"/>
</kw>
<msg timestamp="20210720 20:22:59.019" level="INFO">${eTag1} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1</msg>
<status status="PASS" starttime="20210720 20:22:58.965" endtime="20210720 20:22:59.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:22:59.019" endtime="20210720 20:22:59.020"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:59.024" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20210720 20:22:59.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:22:59.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:22:59.022" endtime="20210720 20:22:59.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:22:59.027" level="INFO"/>
<status status="PASS" starttime="20210720 20:22:59.027" endtime="20210720 20:22:59.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:22:59.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:22:59.028" endtime="20210720 20:22:59.028"/>
</kw>
<status status="PASS" starttime="20210720 20:22:59.021" endtime="20210720 20:22:59.029"/>
</kw>
<msg timestamp="20210720 20:22:59.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:59.021" endtime="20210720 20:22:59.029"/>
</kw>
<status status="PASS" starttime="20210720 20:22:59.020" endtime="20210720 20:22:59.029"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:22:59.037" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket bucket-78407 --key 92273/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:02.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:02.214" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:59.034" endtime="20210720 20:23:02.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:02.216" level="INFO">{
    "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2"
}</msg>
<status status="PASS" starttime="20210720 20:23:02.215" endtime="20210720 20:23:02.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:02.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:02.216" endtime="20210720 20:23:02.217"/>
</kw>
<status status="PASS" starttime="20210720 20:22:59.034" endtime="20210720 20:23:02.217"/>
</kw>
<msg timestamp="20210720 20:23:02.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:22:59.033" endtime="20210720 20:23:02.217"/>
</kw>
<msg timestamp="20210720 20:23:02.218" level="INFO">${output} = {
    "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:59.032" endtime="20210720 20:23:02.218"/>
</kw>
<msg timestamp="20210720 20:23:02.218" level="INFO">${result} = {
    "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2"
}</msg>
<status status="PASS" starttime="20210720 20:22:59.029" endtime="20210720 20:23:02.218"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:02.221" level="INFO">Running command 'echo '{
    "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:02.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:02.263" level="INFO">${output} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2</msg>
<status status="PASS" starttime="20210720 20:23:02.219" endtime="20210720 20:23:02.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:02.264" level="INFO">/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2</msg>
<status status="PASS" starttime="20210720 20:23:02.263" endtime="20210720 20:23:02.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:02.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:02.264" endtime="20210720 20:23:02.265"/>
</kw>
<msg timestamp="20210720 20:23:02.265" level="INFO">${eTag2} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2</msg>
<status status="PASS" starttime="20210720 20:23:02.218" endtime="20210720 20:23:02.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:02.266" endtime="20210720 20:23:02.266"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:02.271" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-78407 --key 92273/multipartKey5 --upload-id cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:02.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:02.797" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/922...</msg>
<status status="PASS" starttime="20210720 20:23:02.268" endtime="20210720 20:23:02.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:02.799" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-07-20T20:23:02.142Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20210720 20:23:02.798" endtime="20210720 20:23:02.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:02.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:02.799" endtime="20210720 20:23:02.800"/>
</kw>
<status status="PASS" starttime="20210720 20:23:02.268" endtime="20210720 20:23:02.800"/>
</kw>
<msg timestamp="20210720 20:23:02.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:02.267" endtime="20210720 20:23:02.801"/>
</kw>
<msg timestamp="20210720 20:23:02.801" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/922...</msg>
<status status="PASS" starttime="20210720 20:23:02.267" endtime="20210720 20:23:02.801"/>
</kw>
<msg timestamp="20210720 20:23:02.801" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/922...</msg>
<status status="PASS" starttime="20210720 20:23:02.266" endtime="20210720 20:23:02.801"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:02.805" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-07-20T20:23:02.142Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:02.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:02.847" level="INFO">${output} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1</msg>
<status status="PASS" starttime="20210720 20:23:02.802" endtime="20210720 20:23:02.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:02.849" level="INFO">/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1</msg>
<status status="PASS" starttime="20210720 20:23:02.848" endtime="20210720 20:23:02.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:02.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:02.849" endtime="20210720 20:23:02.849"/>
</kw>
<msg timestamp="20210720 20:23:02.850" level="INFO">${part1} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1</msg>
<status status="PASS" starttime="20210720 20:23:02.801" endtime="20210720 20:23:02.850"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:02.853" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1", 
            "Size": 5242880
        }, 
        {
            "LastModified": "2021-07-20T20:23:02.142Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:02.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:02.895" level="INFO">${output} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2</msg>
<status status="PASS" starttime="20210720 20:23:02.851" endtime="20210720 20:23:02.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:02.896" level="INFO">/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2</msg>
<status status="PASS" starttime="20210720 20:23:02.895" endtime="20210720 20:23:02.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:02.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:02.896" endtime="20210720 20:23:02.897"/>
</kw>
<msg timestamp="20210720 20:23:02.897" level="INFO">${part2} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2</msg>
<status status="PASS" starttime="20210720 20:23:02.850" endtime="20210720 20:23:02.897"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:23:02.898" endtime="20210720 20:23:02.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:02.898" endtime="20210720 20:23:02.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:02.899" endtime="20210720 20:23:02.899"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:02.904" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-78407 --key 92273/multipartKey5 --upload-id cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:03.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:03.411" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/922...</msg>
<status status="PASS" starttime="20210720 20:23:02.901" endtime="20210720 20:23:03.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:03.413" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20210720 20:23:03.412" endtime="20210720 20:23:03.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:03.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:03.413" endtime="20210720 20:23:03.414"/>
</kw>
<status status="PASS" starttime="20210720 20:23:02.901" endtime="20210720 20:23:03.414"/>
</kw>
<msg timestamp="20210720 20:23:03.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:02.901" endtime="20210720 20:23:03.414"/>
</kw>
<msg timestamp="20210720 20:23:03.415" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/922...</msg>
<status status="PASS" starttime="20210720 20:23:02.900" endtime="20210720 20:23:03.415"/>
</kw>
<msg timestamp="20210720 20:23:03.415" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/922...</msg>
<status status="PASS" starttime="20210720 20:23:02.899" endtime="20210720 20:23:03.415"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:03.418" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:03.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:03.461" level="INFO">${output} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1</msg>
<status status="PASS" starttime="20210720 20:23:03.416" endtime="20210720 20:23:03.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:03.462" level="INFO">/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1</msg>
<status status="PASS" starttime="20210720 20:23:03.461" endtime="20210720 20:23:03.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:03.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:03.463" endtime="20210720 20:23:03.463"/>
</kw>
<msg timestamp="20210720 20:23:03.464" level="INFO">${part1} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1</msg>
<status status="PASS" starttime="20210720 20:23:03.415" endtime="20210720 20:23:03.464"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:03.467" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:22:58.850Z", 
            "PartNumber": 1, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-1", 
            "Size": 5242880
        }
    ], 
    "NextToken": "eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=", 
    "StorageClass": "STANDARD"
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:03.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:03.510" level="INFO">${output} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20210720 20:23:03.465" endtime="20210720 20:23:03.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:03.511" level="INFO">eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20210720 20:23:03.510" endtime="20210720 20:23:03.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:03.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:03.511" endtime="20210720 20:23:03.512"/>
</kw>
<msg timestamp="20210720 20:23:03.512" level="INFO">${token} = eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0=</msg>
<status status="PASS" starttime="20210720 20:23:03.464" endtime="20210720 20:23:03.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:23:03.512" endtime="20210720 20:23:03.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:03.513" endtime="20210720 20:23:03.513"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:03.518" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket bucket-78407 --key 92273/multipartKey5 --upload-id cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718 --max-items 1 --starting-token eyJib3RvX3RydW5jYXRlX2Ftb3VudCI6IDEsICJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbH0= 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:04.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:04.025" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:23:02.142Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-78407/922...</msg>
<status status="PASS" starttime="20210720 20:23:03.516" endtime="20210720 20:23:04.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:04.026" level="INFO">{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:23:02.142Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20210720 20:23:04.025" endtime="20210720 20:23:04.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:04.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:04.026" endtime="20210720 20:23:04.027"/>
</kw>
<status status="PASS" starttime="20210720 20:23:03.515" endtime="20210720 20:23:04.027"/>
</kw>
<msg timestamp="20210720 20:23:04.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:03.515" endtime="20210720 20:23:04.027"/>
</kw>
<msg timestamp="20210720 20:23:04.028" level="INFO">${output} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:23:02.142Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-78407/922...</msg>
<status status="PASS" starttime="20210720 20:23:03.514" endtime="20210720 20:23:04.028"/>
</kw>
<msg timestamp="20210720 20:23:04.028" level="INFO">${result} = {
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:23:02.142Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-78407/922...</msg>
<status status="PASS" starttime="20210720 20:23:03.514" endtime="20210720 20:23:04.028"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:04.032" level="INFO">Running command 'echo '{
    "Owner": null, 
    "Initiator": null, 
    "Parts": [
        {
            "LastModified": "2021-07-20T20:23:02.142Z", 
            "PartNumber": 2, 
            "ETag": "/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2", 
            "Size": 6
        }
    ], 
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:04.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:04.074" level="INFO">${output} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2</msg>
<status status="PASS" starttime="20210720 20:23:04.029" endtime="20210720 20:23:04.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:04.075" level="INFO">/s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2</msg>
<status status="PASS" starttime="20210720 20:23:04.075" endtime="20210720 20:23:04.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:04.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:04.076" endtime="20210720 20:23:04.076"/>
</kw>
<msg timestamp="20210720 20:23:04.077" level="INFO">${part2} = /s3v/bucket-78407/92273/multipartKey5-cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718-2</msg>
<status status="PASS" starttime="20210720 20:23:04.029" endtime="20210720 20:23:04.077"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:23:04.077" endtime="20210720 20:23:04.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:04.078" endtime="20210720 20:23:04.078"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:04.082" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-78407 --key 92273/multipartKey5 --upload-id cd513a16-1b39-49fd-b374-8cd8bb9c424b-106614789095751718 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:04.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:04.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:04.079" endtime="20210720 20:23:04.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:04.597" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:04.596" endtime="20210720 20:23:04.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:04.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:04.597" endtime="20210720 20:23:04.598"/>
</kw>
<msg timestamp="20210720 20:23:04.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:04.079" endtime="20210720 20:23:04.598"/>
</kw>
<msg timestamp="20210720 20:23:04.598" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:23:04.078" endtime="20210720 20:23:04.599"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:22:57.269" endtime="20210720 20:23:04.599"/>
</test>
<test id="s1-s3-s7-t9" name="Test Multipart Upload with the simplified aws s3 cp API">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:23:04.603" level="INFO">${random} = 62987</msg>
<status status="PASS" starttime="20210720 20:23:04.602" endtime="20210720 20:23:04.603"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:23:04.603" level="INFO">${PREFIX} = 62987</msg>
<status status="PASS" starttime="20210720 20:23:04.603" endtime="20210720 20:23:04.603"/>
</kw>
<status status="PASS" starttime="20210720 20:23:04.601" endtime="20210720 20:23:04.604"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:04.608" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:04.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:04.785" level="INFO">${output} = 22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.172299 s, 134 MB/s</msg>
<status status="PASS" starttime="20210720 20:23:04.605" endtime="20210720 20:23:04.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:04.786" level="INFO">22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.172299 s, 134 MB/s</msg>
<status status="PASS" starttime="20210720 20:23:04.785" endtime="20210720 20:23:04.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:04.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:04.787" endtime="20210720 20:23:04.787"/>
</kw>
<status status="PASS" starttime="20210720 20:23:04.605" endtime="20210720 20:23:04.788"/>
</kw>
<msg timestamp="20210720 20:23:04.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:04.605" endtime="20210720 20:23:04.788"/>
</kw>
<status status="PASS" starttime="20210720 20:23:04.604" endtime="20210720 20:23:04.788"/>
</kw>
<status status="PASS" starttime="20210720 20:23:04.604" endtime="20210720 20:23:04.788"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:04.793" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://bucket-78407/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:09.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:09.512" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210720 20:23:04.791" endtime="20210720 20:23:09.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:09.514" level="INFO">Completed 256.0 KiB/22.0 MiB (1.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (3.9 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (6.7 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (9.4 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (10.0 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (10.9 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (11.7 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (12.5 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (13.4 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (14.2 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (15.1 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (15.9 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (16.8 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (17.6 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (18.4 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (19.3 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (20.1 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (20.4 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (21.2 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (22.0 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (22.8 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (21.4 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (22.1 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (22.9 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (23.6 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (22.5 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (23.2 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (23.8 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (21.6 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (22.2 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (22.7 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (23.3 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (23.8 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (24.4 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (24.9 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (25.4 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (26.0 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (26.5 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (27.0 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (27.6 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (28.1 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (28.7 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (29.2 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (29.7 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (30.2 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (30.3 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (30.8 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (31.3 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (31.8 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (32.3 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (32.7 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (33.2 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (33.7 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (34.1 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (34.7 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (35.1 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (35.6 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (36.1 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (36.6 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (37.1 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (37.6 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (37.9 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (38.4 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (38.9 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (39.2 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (39.7 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (40.2 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (40.7 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (41.2 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (41.4 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (41.8 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (40.6 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (41.1 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (41.5 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (42.0 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (42.4 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (42.8 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (43.3 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (43.7 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (44.2 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (44.6 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (45.1 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://bucket-78407/mpyawscli           </msg>
<status status="PASS" starttime="20210720 20:23:09.513" endtime="20210720 20:23:09.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:09.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:09.514" endtime="20210720 20:23:09.514"/>
</kw>
<status status="PASS" starttime="20210720 20:23:04.790" endtime="20210720 20:23:09.515"/>
</kw>
<msg timestamp="20210720 20:23:09.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:04.790" endtime="20210720 20:23:09.515"/>
</kw>
<msg timestamp="20210720 20:23:09.515" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.5 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210720 20:23:04.789" endtime="20210720 20:23:09.515"/>
</kw>
<status status="PASS" starttime="20210720 20:23:04.788" endtime="20210720 20:23:09.516"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:09.521" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://bucket-78407/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:11.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:11.064" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.2 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210720 20:23:09.518" endtime="20210720 20:23:11.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:11.066" level="INFO">Completed 256.0 KiB/22.0 MiB (1.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.2 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (9.6 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (10.5 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (10.0 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (10.8 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (11.5 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (12.3 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (12.9 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (13.7 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (14.2 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (14.7 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (14.5 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (15.2 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (15.5 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (16.0 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (16.5 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (17.0 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (17.6 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (18.2 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (18.6 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (19.2 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (19.7 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (20.3 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (17.9 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (18.4 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (18.9 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (19.2 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (19.0 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (19.5 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (19.8 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (20.3 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (19.6 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (20.0 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (20.2 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (20.6 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (20.9 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (21.2 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (21.2 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (21.0 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (21.4 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (21.7 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (22.1 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (22.0 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (22.4 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (22.8 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (23.1 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (23.5 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (23.6 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (23.6 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (23.7 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (23.9 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (23.9 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (24.1 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (24.5 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (24.8 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (24.2 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (24.5 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (24.8 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (25.0 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (24.2 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (23.8 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (24.0 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (24.3 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (24.6 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (24.9 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (25.2 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (25.4 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (24.6 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (24.8 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (25.1 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (25.4 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (23.8 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (24.0 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (24.2 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (24.4 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (23.0 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (23.3 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (23.5 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (23.8 MiB/s) with 1 file(s) remaining
download: s3://bucket-78407/mpyawscli to ../../tmp/part1.result  </msg>
<status status="PASS" starttime="20210720 20:23:11.065" endtime="20210720 20:23:11.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:11.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:11.066" endtime="20210720 20:23:11.067"/>
</kw>
<status status="PASS" starttime="20210720 20:23:09.517" endtime="20210720 20:23:11.067"/>
</kw>
<msg timestamp="20210720 20:23:11.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:09.517" endtime="20210720 20:23:11.068"/>
</kw>
<msg timestamp="20210720 20:23:11.068" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (3.2 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210720 20:23:09.517" endtime="20210720 20:23:11.068"/>
</kw>
<status status="PASS" starttime="20210720 20:23:09.516" endtime="20210720 20:23:11.068"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:11.074" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://bucket-78407/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:11.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:11.750" level="INFO">${output} = delete: s3://bucket-78407/mpyawscli</msg>
<status status="PASS" starttime="20210720 20:23:11.071" endtime="20210720 20:23:11.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:11.751" level="INFO">delete: s3://bucket-78407/mpyawscli</msg>
<status status="PASS" starttime="20210720 20:23:11.750" endtime="20210720 20:23:11.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:11.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:11.753" endtime="20210720 20:23:11.754"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.071" endtime="20210720 20:23:11.755"/>
</kw>
<msg timestamp="20210720 20:23:11.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:11.070" endtime="20210720 20:23:11.756"/>
</kw>
<msg timestamp="20210720 20:23:11.756" level="INFO">${output} = delete: s3://bucket-78407/mpyawscli</msg>
<status status="PASS" starttime="20210720 20:23:11.069" endtime="20210720 20:23:11.756"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.068" endtime="20210720 20:23:11.756"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:11.767" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:11.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:11.833" level="INFO">${output} = 6a2988ad7d706e488e003830170ddf0a</msg>
<status status="PASS" starttime="20210720 20:23:11.763" endtime="20210720 20:23:11.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:11.834" level="INFO">6a2988ad7d706e488e003830170ddf0a</msg>
<status status="PASS" starttime="20210720 20:23:11.833" endtime="20210720 20:23:11.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:11.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:11.834" endtime="20210720 20:23:11.835"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.762" endtime="20210720 20:23:11.835"/>
</kw>
<msg timestamp="20210720 20:23:11.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:11.759" endtime="20210720 20:23:11.836"/>
</kw>
<msg timestamp="20210720 20:23:11.836" level="INFO">${checksumbefore} = 6a2988ad7d706e488e003830170ddf0a</msg>
<status status="PASS" starttime="20210720 20:23:11.759" endtime="20210720 20:23:11.836"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:11.840" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:11.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:11.904" level="INFO">${output} = 6a2988ad7d706e488e003830170ddf0a</msg>
<status status="PASS" starttime="20210720 20:23:11.838" endtime="20210720 20:23:11.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:11.906" level="INFO">6a2988ad7d706e488e003830170ddf0a</msg>
<status status="PASS" starttime="20210720 20:23:11.905" endtime="20210720 20:23:11.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:11.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:11.906" endtime="20210720 20:23:11.907"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.837" endtime="20210720 20:23:11.907"/>
</kw>
<msg timestamp="20210720 20:23:11.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:11.837" endtime="20210720 20:23:11.907"/>
</kw>
<msg timestamp="20210720 20:23:11.908" level="INFO">${checksumafter} = 6a2988ad7d706e488e003830170ddf0a</msg>
<status status="PASS" starttime="20210720 20:23:11.836" endtime="20210720 20:23:11.908"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:23:11.908" endtime="20210720 20:23:11.909"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.756" endtime="20210720 20:23:11.909"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:23:04.600" endtime="20210720 20:23:11.909"/>
</test>
<test id="s1-s3-s7-t10" name="Test Multipart Upload Put With Copy">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:23:11.912" level="INFO">${random} = 08882</msg>
<status status="PASS" starttime="20210720 20:23:11.912" endtime="20210720 20:23:11.912"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:23:11.913" level="INFO">${PREFIX} = 08882</msg>
<status status="PASS" starttime="20210720 20:23:11.912" endtime="20210720 20:23:11.913"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.911" endtime="20210720 20:23:11.913"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:11.919" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:11.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:11.967" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0410198 s, 128 MB/s</msg>
<status status="PASS" starttime="20210720 20:23:11.916" endtime="20210720 20:23:11.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:11.969" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0410198 s, 128 MB/s</msg>
<status status="PASS" starttime="20210720 20:23:11.968" endtime="20210720 20:23:11.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:11.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:11.973" endtime="20210720 20:23:11.981"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.915" endtime="20210720 20:23:11.981"/>
</kw>
<msg timestamp="20210720 20:23:11.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:11.915" endtime="20210720 20:23:11.982"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.914" endtime="20210720 20:23:11.982"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.914" endtime="20210720 20:23:11.982"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.913" endtime="20210720 20:23:11.982"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:11.990" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-78407 --key 08882/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:15.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:15.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:11.985" endtime="20210720 20:23:15.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:15.381" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:15.380" endtime="20210720 20:23:15.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:15.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:15.381" endtime="20210720 20:23:15.382"/>
</kw>
<status status="PASS" starttime="20210720 20:23:11.984" endtime="20210720 20:23:15.382"/>
</kw>
<msg timestamp="20210720 20:23:15.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:11.984" endtime="20210720 20:23:15.382"/>
</kw>
<msg timestamp="20210720 20:23:15.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:11.983" endtime="20210720 20:23:15.383"/>
</kw>
<msg timestamp="20210720 20:23:15.383" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:23:11.982" endtime="20210720 20:23:15.383"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:15.388" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 08882/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:16.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:16.268" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934", 
    "Key": "08882/copytest/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:15.385" endtime="20210720 20:23:16.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:16.269" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934", 
    "Key": "08882/copytest/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:16.269" endtime="20210720 20:23:16.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:16.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:16.270" endtime="20210720 20:23:16.271"/>
</kw>
<status status="PASS" starttime="20210720 20:23:15.385" endtime="20210720 20:23:16.271"/>
</kw>
<msg timestamp="20210720 20:23:16.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:15.385" endtime="20210720 20:23:16.271"/>
</kw>
<msg timestamp="20210720 20:23:16.271" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934", 
    "Key": "08882/copytest/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:15.384" endtime="20210720 20:23:16.271"/>
</kw>
<msg timestamp="20210720 20:23:16.272" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934", 
    "Key": "08882/copytest/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:15.383" endtime="20210720 20:23:16.272"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:16.275" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934", 
    "Key": "08882/copytest/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:16.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:16.320" level="INFO">${output} = 8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934</msg>
<status status="PASS" starttime="20210720 20:23:16.273" endtime="20210720 20:23:16.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:16.321" level="INFO">8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934</msg>
<status status="PASS" starttime="20210720 20:23:16.320" endtime="20210720 20:23:16.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:16.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:16.321" endtime="20210720 20:23:16.322"/>
</kw>
<msg timestamp="20210720 20:23:16.323" level="INFO">${uploadID} = 8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934</msg>
<status status="PASS" starttime="20210720 20:23:16.272" endtime="20210720 20:23:16.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:16.323" endtime="20210720 20:23:16.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:16.323" endtime="20210720 20:23:16.324"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:16.329" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-78407 --key 08882/copytest/destination --upload-id 8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934 --part-number 1 --copy-source bucket-78407/08882/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:17.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:17.243" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:17.163Z", 
        "ETag": "/s3v/bucket-78407/08882/copytest/destination-8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934-1"
...</msg>
<status status="PASS" starttime="20210720 20:23:16.327" endtime="20210720 20:23:17.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:17.244" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:17.163Z", 
        "ETag": "/s3v/bucket-78407/08882/copytest/destination-8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934-1"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:17.243" endtime="20210720 20:23:17.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:17.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:17.245" endtime="20210720 20:23:17.246"/>
</kw>
<status status="PASS" starttime="20210720 20:23:16.326" endtime="20210720 20:23:17.246"/>
</kw>
<msg timestamp="20210720 20:23:17.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:16.325" endtime="20210720 20:23:17.246"/>
</kw>
<msg timestamp="20210720 20:23:17.247" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:17.163Z", 
        "ETag": "/s3v/bucket-78407/08882/copytest/destination-8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934-1"
...</msg>
<status status="PASS" starttime="20210720 20:23:16.325" endtime="20210720 20:23:17.247"/>
</kw>
<msg timestamp="20210720 20:23:17.247" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:17.163Z", 
        "ETag": "/s3v/bucket-78407/08882/copytest/destination-8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934-1"
...</msg>
<status status="PASS" starttime="20210720 20:23:16.324" endtime="20210720 20:23:17.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:17.248" endtime="20210720 20:23:17.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:17.248" endtime="20210720 20:23:17.249"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:17.253" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:17.163Z", 
        "ETag": "/s3v/bucket-78407/08882/copytest/destination-8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934-1"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:17.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:17.300" level="INFO">${output} = /s3v/bucket-78407/08882/copytest/destination-8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934-1</msg>
<status status="PASS" starttime="20210720 20:23:17.250" endtime="20210720 20:23:17.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:17.302" level="INFO">/s3v/bucket-78407/08882/copytest/destination-8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934-1</msg>
<status status="PASS" starttime="20210720 20:23:17.301" endtime="20210720 20:23:17.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:17.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:17.302" endtime="20210720 20:23:17.303"/>
</kw>
<msg timestamp="20210720 20:23:17.303" level="INFO">${eTag1} = /s3v/bucket-78407/08882/copytest/destination-8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934-1</msg>
<status status="PASS" starttime="20210720 20:23:17.249" endtime="20210720 20:23:17.303"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:17.309" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934 --bucket bucket-78407 --key 08882/copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-78407/08882/copytest/destination-8830c6c2-71ac-4d61-af6d-a92d47ce5893-106614790282149934-1,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:17.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:17.959" level="INFO">${output} = {
    "ETag": "e0b8b9edab224d63faa48379c01e561a61bf764a6dfcaff2b087ecb6e0e31e43", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "08882/copytest/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:17.307" endtime="20210720 20:23:17.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:17.961" level="INFO">{
    "ETag": "e0b8b9edab224d63faa48379c01e561a61bf764a6dfcaff2b087ecb6e0e31e43", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "08882/copytest/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:17.959" endtime="20210720 20:23:17.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:17.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:17.961" endtime="20210720 20:23:17.962"/>
</kw>
<status status="PASS" starttime="20210720 20:23:17.306" endtime="20210720 20:23:17.962"/>
</kw>
<msg timestamp="20210720 20:23:17.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:17.306" endtime="20210720 20:23:17.962"/>
</kw>
<msg timestamp="20210720 20:23:17.963" level="INFO">${output} = {
    "ETag": "e0b8b9edab224d63faa48379c01e561a61bf764a6dfcaff2b087ecb6e0e31e43", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "08882/copytest/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:17.305" endtime="20210720 20:23:17.963"/>
</kw>
<status status="PASS" starttime="20210720 20:23:17.304" endtime="20210720 20:23:17.963"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:17.968" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-78407 --key 08882/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:18.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:18.699" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:23:17 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Tue, 20 Jul 2021 20...</msg>
<status status="PASS" starttime="20210720 20:23:17.966" endtime="20210720 20:23:18.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:18.700" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:23:17 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Tue, 20 Jul 2021 20:23:18 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:23:18.700" endtime="20210720 20:23:18.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:18.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:18.701" endtime="20210720 20:23:18.701"/>
</kw>
<status status="PASS" starttime="20210720 20:23:17.965" endtime="20210720 20:23:18.702"/>
</kw>
<msg timestamp="20210720 20:23:18.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:17.965" endtime="20210720 20:23:18.702"/>
</kw>
<msg timestamp="20210720 20:23:18.702" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:23:17 GMT", 
    "ContentLength": 5242880, 
    "Expires": "Tue, 20 Jul 2021 20...</msg>
<status status="PASS" starttime="20210720 20:23:17.964" endtime="20210720 20:23:18.702"/>
</kw>
<status status="PASS" starttime="20210720 20:23:17.963" endtime="20210720 20:23:18.703"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:18.708" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:18.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:18.727" level="INFO">${output} = d98ae50ec8ae60c767b51d221a2ace0d</msg>
<status status="PASS" starttime="20210720 20:23:18.705" endtime="20210720 20:23:18.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:18.728" level="INFO">d98ae50ec8ae60c767b51d221a2ace0d</msg>
<status status="PASS" starttime="20210720 20:23:18.728" endtime="20210720 20:23:18.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:18.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:18.729" endtime="20210720 20:23:18.729"/>
</kw>
<status status="PASS" starttime="20210720 20:23:18.704" endtime="20210720 20:23:18.730"/>
</kw>
<msg timestamp="20210720 20:23:18.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:18.704" endtime="20210720 20:23:18.730"/>
</kw>
<msg timestamp="20210720 20:23:18.730" level="INFO">${checksumbefore} = d98ae50ec8ae60c767b51d221a2ace0d</msg>
<status status="PASS" starttime="20210720 20:23:18.704" endtime="20210720 20:23:18.730"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:18.735" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:18.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:18.754" level="INFO">${output} = d98ae50ec8ae60c767b51d221a2ace0d</msg>
<status status="PASS" starttime="20210720 20:23:18.733" endtime="20210720 20:23:18.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:18.756" level="INFO">d98ae50ec8ae60c767b51d221a2ace0d</msg>
<status status="PASS" starttime="20210720 20:23:18.755" endtime="20210720 20:23:18.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:18.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:18.756" endtime="20210720 20:23:18.757"/>
</kw>
<status status="PASS" starttime="20210720 20:23:18.732" endtime="20210720 20:23:18.757"/>
</kw>
<msg timestamp="20210720 20:23:18.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:18.731" endtime="20210720 20:23:18.757"/>
</kw>
<msg timestamp="20210720 20:23:18.758" level="INFO">${checksumafter} = d98ae50ec8ae60c767b51d221a2ace0d</msg>
<status status="PASS" starttime="20210720 20:23:18.730" endtime="20210720 20:23:18.758"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:23:18.758" endtime="20210720 20:23:18.759"/>
</kw>
<status status="PASS" starttime="20210720 20:23:18.703" endtime="20210720 20:23:18.759"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:23:11.910" endtime="20210720 20:23:18.759"/>
</test>
<test id="s1-s3-s7-t11" name="Test Multipart Upload Put With Copy and range">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:23:18.762" level="INFO">${random} = 36596</msg>
<status status="PASS" starttime="20210720 20:23:18.762" endtime="20210720 20:23:18.762"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:23:18.763" level="INFO">${PREFIX} = 36596</msg>
<status status="PASS" starttime="20210720 20:23:18.763" endtime="20210720 20:23:18.763"/>
</kw>
<status status="PASS" starttime="20210720 20:23:18.761" endtime="20210720 20:23:18.763"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:18.769" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:18.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:18.864" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0897466 s, 117 MB/s</msg>
<status status="PASS" starttime="20210720 20:23:18.766" endtime="20210720 20:23:18.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:18.866" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0897466 s, 117 MB/s</msg>
<status status="PASS" starttime="20210720 20:23:18.865" endtime="20210720 20:23:18.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:18.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:18.867" endtime="20210720 20:23:18.867"/>
</kw>
<status status="PASS" starttime="20210720 20:23:18.765" endtime="20210720 20:23:18.868"/>
</kw>
<msg timestamp="20210720 20:23:18.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:18.765" endtime="20210720 20:23:18.868"/>
</kw>
<status status="PASS" starttime="20210720 20:23:18.764" endtime="20210720 20:23:18.868"/>
</kw>
<status status="PASS" starttime="20210720 20:23:18.764" endtime="20210720 20:23:18.868"/>
</kw>
<status status="PASS" starttime="20210720 20:23:18.763" endtime="20210720 20:23:18.869"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:18.874" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-78407 --key 36596/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:22.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:22.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:18.871" endtime="20210720 20:23:22.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:22.450" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:22.449" endtime="20210720 20:23:22.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:22.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:22.451" endtime="20210720 20:23:22.451"/>
</kw>
<status status="PASS" starttime="20210720 20:23:18.871" endtime="20210720 20:23:22.452"/>
</kw>
<msg timestamp="20210720 20:23:22.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:18.870" endtime="20210720 20:23:22.452"/>
</kw>
<msg timestamp="20210720 20:23:22.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:18.870" endtime="20210720 20:23:22.452"/>
</kw>
<msg timestamp="20210720 20:23:22.453" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:23:18.869" endtime="20210720 20:23:22.453"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:22.458" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 36596/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:22.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:22.968" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521", 
    "Key": "36596/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:22.456" endtime="20210720 20:23:22.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:22.969" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521", 
    "Key": "36596/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:22.969" endtime="20210720 20:23:22.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:22.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:22.970" endtime="20210720 20:23:22.970"/>
</kw>
<status status="PASS" starttime="20210720 20:23:22.455" endtime="20210720 20:23:22.970"/>
</kw>
<msg timestamp="20210720 20:23:22.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:22.455" endtime="20210720 20:23:22.971"/>
</kw>
<msg timestamp="20210720 20:23:22.971" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521", 
    "Key": "36596/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:22.454" endtime="20210720 20:23:22.971"/>
</kw>
<msg timestamp="20210720 20:23:22.971" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521", 
    "Key": "36596/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:22.453" endtime="20210720 20:23:22.971"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:22.975" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521", 
    "Key": "36596/copyrange/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:23.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:23.021" level="INFO">${output} = 0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521</msg>
<status status="PASS" starttime="20210720 20:23:22.972" endtime="20210720 20:23:23.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:23.022" level="INFO">0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521</msg>
<status status="PASS" starttime="20210720 20:23:23.022" endtime="20210720 20:23:23.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:23.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:23.023" endtime="20210720 20:23:23.023"/>
</kw>
<msg timestamp="20210720 20:23:23.024" level="INFO">${uploadID} = 0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521</msg>
<status status="PASS" starttime="20210720 20:23:22.972" endtime="20210720 20:23:23.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:23.024" endtime="20210720 20:23:23.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:23.025" endtime="20210720 20:23:23.025"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:23.031" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-78407 --key 36596/copyrange/destination --upload-id 0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521 --part-number 1 --copy-source bucket-78407/36596/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:26.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:26.893" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:26.806Z", 
        "ETag": "/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-1"...</msg>
<status status="PASS" starttime="20210720 20:23:23.028" endtime="20210720 20:23:26.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:26.894" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:26.806Z", 
        "ETag": "/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-1"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:26.893" endtime="20210720 20:23:26.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:26.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:26.895" endtime="20210720 20:23:26.895"/>
</kw>
<status status="PASS" starttime="20210720 20:23:23.027" endtime="20210720 20:23:26.896"/>
</kw>
<msg timestamp="20210720 20:23:26.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:23.027" endtime="20210720 20:23:26.896"/>
</kw>
<msg timestamp="20210720 20:23:26.896" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:26.806Z", 
        "ETag": "/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-1"...</msg>
<status status="PASS" starttime="20210720 20:23:23.026" endtime="20210720 20:23:26.896"/>
</kw>
<msg timestamp="20210720 20:23:26.896" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:26.806Z", 
        "ETag": "/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-1"...</msg>
<status status="PASS" starttime="20210720 20:23:23.025" endtime="20210720 20:23:26.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:26.897" endtime="20210720 20:23:26.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:26.897" endtime="20210720 20:23:26.898"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:26.901" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:26.806Z", 
        "ETag": "/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-1"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:26.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:26.946" level="INFO">${output} = /s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-1</msg>
<status status="PASS" starttime="20210720 20:23:26.899" endtime="20210720 20:23:26.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:26.947" level="INFO">/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-1</msg>
<status status="PASS" starttime="20210720 20:23:26.947" endtime="20210720 20:23:26.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:26.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:26.948" endtime="20210720 20:23:26.948"/>
</kw>
<msg timestamp="20210720 20:23:26.949" level="INFO">${eTag1} = /s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-1</msg>
<status status="PASS" starttime="20210720 20:23:26.898" endtime="20210720 20:23:26.949"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:26.955" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-78407 --key 36596/copyrange/destination --upload-id 0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521 --part-number 2 --copy-source bucket-78407/36596/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:27.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:27.803" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:27.746Z", 
        "ETag": "/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-2"...</msg>
<status status="PASS" starttime="20210720 20:23:26.953" endtime="20210720 20:23:27.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:27.804" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:27.746Z", 
        "ETag": "/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-2"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:27.803" endtime="20210720 20:23:27.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:27.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:27.804" endtime="20210720 20:23:27.805"/>
</kw>
<status status="PASS" starttime="20210720 20:23:26.952" endtime="20210720 20:23:27.806"/>
</kw>
<msg timestamp="20210720 20:23:27.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:26.952" endtime="20210720 20:23:27.806"/>
</kw>
<msg timestamp="20210720 20:23:27.806" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:27.746Z", 
        "ETag": "/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-2"...</msg>
<status status="PASS" starttime="20210720 20:23:26.950" endtime="20210720 20:23:27.806"/>
</kw>
<msg timestamp="20210720 20:23:27.807" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:27.746Z", 
        "ETag": "/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-2"...</msg>
<status status="PASS" starttime="20210720 20:23:26.949" endtime="20210720 20:23:27.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:27.807" endtime="20210720 20:23:27.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:27.808" endtime="20210720 20:23:27.808"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:27.811" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:27.746Z", 
        "ETag": "/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-2"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:27.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:27.858" level="INFO">${output} = /s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-2</msg>
<status status="PASS" starttime="20210720 20:23:27.809" endtime="20210720 20:23:27.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:27.859" level="INFO">/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-2</msg>
<status status="PASS" starttime="20210720 20:23:27.858" endtime="20210720 20:23:27.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:27.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:27.859" endtime="20210720 20:23:27.860"/>
</kw>
<msg timestamp="20210720 20:23:27.860" level="INFO">${eTag2} = /s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-2</msg>
<status status="PASS" starttime="20210720 20:23:27.808" endtime="20210720 20:23:27.860"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:27.866" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521 --bucket bucket-78407 --key 36596/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-1,PartNumber=1},{ETag=/s3v/bucket-78407/36596/copyrange/destination-0003f430-cd0e-4b47-925e-5a061d87fe3a-106614790743785521-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:28.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:28.418" level="INFO">${output} = {
    "ETag": "e8f2db69e08e345e303116bbd96011b979723e2acd825ef64a1d8cd456a35b45", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "36596/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:27.863" endtime="20210720 20:23:28.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:28.419" level="INFO">{
    "ETag": "e8f2db69e08e345e303116bbd96011b979723e2acd825ef64a1d8cd456a35b45", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "36596/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:28.418" endtime="20210720 20:23:28.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:28.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:28.420" endtime="20210720 20:23:28.420"/>
</kw>
<status status="PASS" starttime="20210720 20:23:27.863" endtime="20210720 20:23:28.420"/>
</kw>
<msg timestamp="20210720 20:23:28.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:27.862" endtime="20210720 20:23:28.421"/>
</kw>
<msg timestamp="20210720 20:23:28.421" level="INFO">${output} = {
    "ETag": "e8f2db69e08e345e303116bbd96011b979723e2acd825ef64a1d8cd456a35b45", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "36596/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:27.862" endtime="20210720 20:23:28.421"/>
</kw>
<status status="PASS" starttime="20210720 20:23:27.861" endtime="20210720 20:23:28.421"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:28.427" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-78407 --key 36596/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:29.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:29.331" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:23:28 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Tue, 20 Jul 2021 2...</msg>
<status status="PASS" starttime="20210720 20:23:28.424" endtime="20210720 20:23:29.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:29.333" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:23:28 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Tue, 20 Jul 2021 20:23:28 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:23:29.332" endtime="20210720 20:23:29.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:29.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:29.333" endtime="20210720 20:23:29.334"/>
</kw>
<status status="PASS" starttime="20210720 20:23:28.423" endtime="20210720 20:23:29.334"/>
</kw>
<msg timestamp="20210720 20:23:29.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:28.423" endtime="20210720 20:23:29.334"/>
</kw>
<msg timestamp="20210720 20:23:29.335" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:23:28 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Tue, 20 Jul 2021 2...</msg>
<status status="PASS" starttime="20210720 20:23:28.422" endtime="20210720 20:23:29.335"/>
</kw>
<status status="PASS" starttime="20210720 20:23:28.422" endtime="20210720 20:23:29.335"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:29.342" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:29.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:29.370" level="INFO">${output} = c3188262ce549d09ecdfbe38f43b540c</msg>
<status status="PASS" starttime="20210720 20:23:29.338" endtime="20210720 20:23:29.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:29.371" level="INFO">c3188262ce549d09ecdfbe38f43b540c</msg>
<status status="PASS" starttime="20210720 20:23:29.370" endtime="20210720 20:23:29.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:29.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:29.371" endtime="20210720 20:23:29.372"/>
</kw>
<status status="PASS" starttime="20210720 20:23:29.337" endtime="20210720 20:23:29.372"/>
</kw>
<msg timestamp="20210720 20:23:29.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:29.336" endtime="20210720 20:23:29.374"/>
</kw>
<msg timestamp="20210720 20:23:29.374" level="INFO">${checksumbefore} = c3188262ce549d09ecdfbe38f43b540c</msg>
<status status="PASS" starttime="20210720 20:23:29.336" endtime="20210720 20:23:29.374"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:29.378" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:29.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:29.418" level="INFO">${output} = c3188262ce549d09ecdfbe38f43b540c</msg>
<status status="PASS" starttime="20210720 20:23:29.376" endtime="20210720 20:23:29.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:29.419" level="INFO">c3188262ce549d09ecdfbe38f43b540c</msg>
<status status="PASS" starttime="20210720 20:23:29.418" endtime="20210720 20:23:29.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:29.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:29.419" endtime="20210720 20:23:29.420"/>
</kw>
<status status="PASS" starttime="20210720 20:23:29.375" endtime="20210720 20:23:29.420"/>
</kw>
<msg timestamp="20210720 20:23:29.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:29.375" endtime="20210720 20:23:29.421"/>
</kw>
<msg timestamp="20210720 20:23:29.421" level="INFO">${checksumafter} = c3188262ce549d09ecdfbe38f43b540c</msg>
<status status="PASS" starttime="20210720 20:23:29.374" endtime="20210720 20:23:29.421"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:23:29.421" endtime="20210720 20:23:29.421"/>
</kw>
<status status="PASS" starttime="20210720 20:23:29.335" endtime="20210720 20:23:29.422"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:23:18.760" endtime="20210720 20:23:29.422"/>
</test>
<test id="s1-s3-s7-t12" name="Test Multipart Upload Put With Copy and range with IfModifiedSince">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:23:29.425" level="INFO">${random} = 55850</msg>
<status status="PASS" starttime="20210720 20:23:29.424" endtime="20210720 20:23:29.425"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:23:29.425" level="INFO">${PREFIX} = 55850</msg>
<status status="PASS" starttime="20210720 20:23:29.425" endtime="20210720 20:23:29.425"/>
</kw>
<status status="PASS" starttime="20210720 20:23:29.424" endtime="20210720 20:23:29.426"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:29.431" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:29.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:29.519" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0830785 s, 126 MB/s</msg>
<status status="PASS" starttime="20210720 20:23:29.429" endtime="20210720 20:23:29.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:29.521" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0830785 s, 126 MB/s</msg>
<status status="PASS" starttime="20210720 20:23:29.520" endtime="20210720 20:23:29.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:29.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:29.521" endtime="20210720 20:23:29.522"/>
</kw>
<status status="PASS" starttime="20210720 20:23:29.428" endtime="20210720 20:23:29.522"/>
</kw>
<msg timestamp="20210720 20:23:29.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:29.428" endtime="20210720 20:23:29.522"/>
</kw>
<status status="PASS" starttime="20210720 20:23:29.427" endtime="20210720 20:23:29.522"/>
</kw>
<status status="PASS" starttime="20210720 20:23:29.426" endtime="20210720 20:23:29.523"/>
</kw>
<status status="PASS" starttime="20210720 20:23:29.426" endtime="20210720 20:23:29.523"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210720 20:23:29.523" level="INFO">${curDate} = 2021-07-20 20:23:29.523</msg>
<status status="PASS" starttime="20210720 20:23:29.523" endtime="20210720 20:23:29.523"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20210720 20:23:29.572" level="INFO">${beforeCreate} = 2021-07-19 20:23:29.523</msg>
<status status="PASS" starttime="20210720 20:23:29.524" endtime="20210720 20:23:29.572"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20210720 20:23:29.573" level="INFO">${afterCreate} = 2021-07-21 20:23:29.523</msg>
<status status="PASS" starttime="20210720 20:23:29.573" endtime="20210720 20:23:29.573"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:29.579" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-78407 --key 55850/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:30.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:30.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:29.576" endtime="20210720 20:23:30.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:30.714" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:30.713" endtime="20210720 20:23:30.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:30.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:30.714" endtime="20210720 20:23:30.715"/>
</kw>
<status status="PASS" starttime="20210720 20:23:29.575" endtime="20210720 20:23:30.715"/>
</kw>
<msg timestamp="20210720 20:23:30.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:29.575" endtime="20210720 20:23:30.716"/>
</kw>
<msg timestamp="20210720 20:23:30.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:29.574" endtime="20210720 20:23:30.716"/>
</kw>
<msg timestamp="20210720 20:23:30.716" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:23:29.574" endtime="20210720 20:23:30.716"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:30.721" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 55850/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:31.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:31.281" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861", 
    "Key": "55850/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:30.718" endtime="20210720 20:23:31.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:31.282" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861", 
    "Key": "55850/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:31.282" endtime="20210720 20:23:31.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:31.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:31.283" endtime="20210720 20:23:31.284"/>
</kw>
<status status="PASS" starttime="20210720 20:23:30.718" endtime="20210720 20:23:31.284"/>
</kw>
<msg timestamp="20210720 20:23:31.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:30.718" endtime="20210720 20:23:31.284"/>
</kw>
<msg timestamp="20210720 20:23:31.285" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861", 
    "Key": "55850/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:30.717" endtime="20210720 20:23:31.285"/>
</kw>
<msg timestamp="20210720 20:23:31.285" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861", 
    "Key": "55850/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:30.716" endtime="20210720 20:23:31.285"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:31.289" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861", 
    "Key": "55850/copyrange/destination"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:31.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:31.331" level="INFO">${output} = 65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861</msg>
<status status="PASS" starttime="20210720 20:23:31.287" endtime="20210720 20:23:31.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:31.332" level="INFO">65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861</msg>
<status status="PASS" starttime="20210720 20:23:31.331" endtime="20210720 20:23:31.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:31.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:31.332" endtime="20210720 20:23:31.333"/>
</kw>
<msg timestamp="20210720 20:23:31.333" level="INFO">${uploadID} = 65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861</msg>
<status status="PASS" starttime="20210720 20:23:31.285" endtime="20210720 20:23:31.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:31.334" endtime="20210720 20:23:31.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:31.334" endtime="20210720 20:23:31.335"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:31.339" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-78407 --key 55850/copyrange/destination --upload-id 65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861 --part-number 1 --copy-source bucket-78407/55850/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2021-07-21 20:23:29.523' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:31.911" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:23:31.912" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210720 20:23:31.337" endtime="20210720 20:23:31.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:31.913" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210720 20:23:31.912" endtime="20210720 20:23:31.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:31.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:31.913" endtime="20210720 20:23:31.914"/>
</kw>
<msg timestamp="20210720 20:23:31.914" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210720 20:23:31.336" endtime="20210720 20:23:31.914"/>
</kw>
<msg timestamp="20210720 20:23:31.915" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210720 20:23:31.335" endtime="20210720 20:23:31.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:31.915" endtime="20210720 20:23:31.915"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:31.920" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-78407 --key 55850/copyrange/destination --upload-id 65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861 --part-number 2 --copy-source bucket-78407/55850/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2021-07-19 20:23:29.523' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:32.444" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:23:32.444" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210720 20:23:31.918" endtime="20210720 20:23:32.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:32.445" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210720 20:23:32.444" endtime="20210720 20:23:32.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:32.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:32.446" endtime="20210720 20:23:32.446"/>
</kw>
<msg timestamp="20210720 20:23:32.447" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210720 20:23:31.917" endtime="20210720 20:23:32.447"/>
</kw>
<msg timestamp="20210720 20:23:32.447" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20210720 20:23:31.915" endtime="20210720 20:23:32.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:32.447" endtime="20210720 20:23:32.448"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:32.452" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-78407 --key 55850/copyrange/destination --upload-id 65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861 --part-number 1 --copy-source bucket-78407/55850/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2021-07-19 20:23:29.523' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:36.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:36.734" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:36.650Z", 
        "ETag": "/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-1"...</msg>
<status status="PASS" starttime="20210720 20:23:32.450" endtime="20210720 20:23:36.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:36.736" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:36.650Z", 
        "ETag": "/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-1"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:36.735" endtime="20210720 20:23:36.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:36.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:36.736" endtime="20210720 20:23:36.737"/>
</kw>
<msg timestamp="20210720 20:23:36.737" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:36.650Z", 
        "ETag": "/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-1"...</msg>
<status status="PASS" starttime="20210720 20:23:32.449" endtime="20210720 20:23:36.737"/>
</kw>
<msg timestamp="20210720 20:23:36.737" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:36.650Z", 
        "ETag": "/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-1"...</msg>
<status status="PASS" starttime="20210720 20:23:32.448" endtime="20210720 20:23:36.737"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:36.740" endtime="20210720 20:23:36.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:36.740" endtime="20210720 20:23:36.741"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:36.746" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:36.650Z", 
        "ETag": "/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-1"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:36.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:36.789" level="INFO">${output} = /s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-1</msg>
<status status="PASS" starttime="20210720 20:23:36.742" endtime="20210720 20:23:36.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:36.791" level="INFO">/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-1</msg>
<status status="PASS" starttime="20210720 20:23:36.790" endtime="20210720 20:23:36.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:36.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:36.791" endtime="20210720 20:23:36.792"/>
</kw>
<msg timestamp="20210720 20:23:36.792" level="INFO">${eTag1} = /s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-1</msg>
<status status="PASS" starttime="20210720 20:23:36.741" endtime="20210720 20:23:36.792"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:36.797" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket bucket-78407 --key 55850/copyrange/destination --upload-id 65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861 --part-number 2 --copy-source bucket-78407/55850/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2021-07-21 20:23:29.523' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:37.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:37.600" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:37.549Z", 
        "ETag": "/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-2"...</msg>
<status status="PASS" starttime="20210720 20:23:36.795" endtime="20210720 20:23:37.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:37.602" level="INFO">{
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:37.549Z", 
        "ETag": "/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-2"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:37.601" endtime="20210720 20:23:37.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:37.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:37.602" endtime="20210720 20:23:37.603"/>
</kw>
<msg timestamp="20210720 20:23:37.603" level="INFO">${output} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:37.549Z", 
        "ETag": "/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-2"...</msg>
<status status="PASS" starttime="20210720 20:23:36.794" endtime="20210720 20:23:37.603"/>
</kw>
<msg timestamp="20210720 20:23:37.604" level="INFO">${result} = {
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:37.549Z", 
        "ETag": "/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-2"...</msg>
<status status="PASS" starttime="20210720 20:23:36.793" endtime="20210720 20:23:37.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:37.604" endtime="20210720 20:23:37.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:37.605" endtime="20210720 20:23:37.605"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:37.608" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "LastModified": "2021-07-20T20:23:37.549Z", 
        "ETag": "/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-2"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:37.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:37.662" level="INFO">${output} = /s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-2</msg>
<status status="PASS" starttime="20210720 20:23:37.606" endtime="20210720 20:23:37.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:37.664" level="INFO">/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-2</msg>
<status status="PASS" starttime="20210720 20:23:37.663" endtime="20210720 20:23:37.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:37.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:37.665" endtime="20210720 20:23:37.665"/>
</kw>
<msg timestamp="20210720 20:23:37.666" level="INFO">${eTag2} = /s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-2</msg>
<status status="PASS" starttime="20210720 20:23:37.605" endtime="20210720 20:23:37.666"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:37.672" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861 --bucket bucket-78407 --key 55850/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-1,PartNumber=1},{ETag=/s3v/bucket-78407/55850/copyrange/destination-65cd5923-aeda-4e91-9d41-22fbeb251ba0-106614791287799861-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:38.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:38.365" level="INFO">${output} = {
    "ETag": "2b585a306ebce588334b3a998f488f408ff50efe05a572800a03e7bfcd3d8ed3", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "55850/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:37.669" endtime="20210720 20:23:38.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:38.366" level="INFO">{
    "ETag": "2b585a306ebce588334b3a998f488f408ff50efe05a572800a03e7bfcd3d8ed3", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "55850/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:38.365" endtime="20210720 20:23:38.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:38.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:38.366" endtime="20210720 20:23:38.367"/>
</kw>
<status status="PASS" starttime="20210720 20:23:37.668" endtime="20210720 20:23:38.367"/>
</kw>
<msg timestamp="20210720 20:23:38.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:37.668" endtime="20210720 20:23:38.367"/>
</kw>
<msg timestamp="20210720 20:23:38.368" level="INFO">${output} = {
    "ETag": "2b585a306ebce588334b3a998f488f408ff50efe05a572800a03e7bfcd3d8ed3", 
    "Bucket": "bucket-78407", 
    "Location": "bucket-78407", 
    "Key": "55850/copyrange/destination"
}</msg>
<status status="PASS" starttime="20210720 20:23:37.668" endtime="20210720 20:23:38.368"/>
</kw>
<status status="PASS" starttime="20210720 20:23:37.666" endtime="20210720 20:23:38.368"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:38.373" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-78407 --key 55850/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:39.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:39.144" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:23:38 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Tue, 20 Jul 2021 2...</msg>
<status status="PASS" starttime="20210720 20:23:38.371" endtime="20210720 20:23:39.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:39.146" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:23:38 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Tue, 20 Jul 2021 20:23:38 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:23:39.145" endtime="20210720 20:23:39.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:39.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:39.146" endtime="20210720 20:23:39.147"/>
</kw>
<status status="PASS" starttime="20210720 20:23:38.370" endtime="20210720 20:23:39.147"/>
</kw>
<msg timestamp="20210720 20:23:39.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:38.370" endtime="20210720 20:23:39.148"/>
</kw>
<msg timestamp="20210720 20:23:39.148" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:23:38 GMT", 
    "ContentLength": 10485760, 
    "Expires": "Tue, 20 Jul 2021 2...</msg>
<status status="PASS" starttime="20210720 20:23:38.369" endtime="20210720 20:23:39.148"/>
</kw>
<status status="PASS" starttime="20210720 20:23:38.368" endtime="20210720 20:23:39.148"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:39.153" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:39.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:39.187" level="INFO">${output} = b1f2a99b91dd8b221dc3167d28b98eb2</msg>
<status status="PASS" starttime="20210720 20:23:39.150" endtime="20210720 20:23:39.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:39.189" level="INFO">b1f2a99b91dd8b221dc3167d28b98eb2</msg>
<status status="PASS" starttime="20210720 20:23:39.188" endtime="20210720 20:23:39.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:39.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:39.189" endtime="20210720 20:23:39.190"/>
</kw>
<status status="PASS" starttime="20210720 20:23:39.150" endtime="20210720 20:23:39.190"/>
</kw>
<msg timestamp="20210720 20:23:39.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:39.149" endtime="20210720 20:23:39.190"/>
</kw>
<msg timestamp="20210720 20:23:39.191" level="INFO">${checksumbefore} = b1f2a99b91dd8b221dc3167d28b98eb2</msg>
<status status="PASS" starttime="20210720 20:23:39.149" endtime="20210720 20:23:39.191"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:39.195" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:39.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:39.224" level="INFO">${output} = b1f2a99b91dd8b221dc3167d28b98eb2</msg>
<status status="PASS" starttime="20210720 20:23:39.193" endtime="20210720 20:23:39.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:39.226" level="INFO">b1f2a99b91dd8b221dc3167d28b98eb2</msg>
<status status="PASS" starttime="20210720 20:23:39.225" endtime="20210720 20:23:39.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:39.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:39.226" endtime="20210720 20:23:39.227"/>
</kw>
<status status="PASS" starttime="20210720 20:23:39.192" endtime="20210720 20:23:39.227"/>
</kw>
<msg timestamp="20210720 20:23:39.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:39.192" endtime="20210720 20:23:39.227"/>
</kw>
<msg timestamp="20210720 20:23:39.227" level="INFO">${checksumafter} = b1f2a99b91dd8b221dc3167d28b98eb2</msg>
<status status="PASS" starttime="20210720 20:23:39.191" endtime="20210720 20:23:39.228"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:23:39.228" endtime="20210720 20:23:39.228"/>
</kw>
<status status="PASS" starttime="20210720 20:23:39.148" endtime="20210720 20:23:39.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:23:29.423" endtime="20210720 20:23:39.229"/>
</test>
<test id="s1-s3-s7-t13" name="Test Multipart Upload list">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:23:39.232" level="INFO">${random} = 32651</msg>
<status status="PASS" starttime="20210720 20:23:39.232" endtime="20210720 20:23:39.232"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:23:39.233" level="INFO">${PREFIX} = 32651</msg>
<status status="PASS" starttime="20210720 20:23:39.232" endtime="20210720 20:23:39.233"/>
</kw>
<status status="PASS" starttime="20210720 20:23:39.231" endtime="20210720 20:23:39.233"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:39.238" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 32651/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:39.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:39.794" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "10a34270-fd79-4719-a12d-e1ba4fd263fc-106614791845380154", 
    "Key": "32651/listtest/key1"
}</msg>
<status status="PASS" starttime="20210720 20:23:39.236" endtime="20210720 20:23:39.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:39.796" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "10a34270-fd79-4719-a12d-e1ba4fd263fc-106614791845380154", 
    "Key": "32651/listtest/key1"
}</msg>
<status status="PASS" starttime="20210720 20:23:39.794" endtime="20210720 20:23:39.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:39.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:39.796" endtime="20210720 20:23:39.797"/>
</kw>
<status status="PASS" starttime="20210720 20:23:39.235" endtime="20210720 20:23:39.797"/>
</kw>
<msg timestamp="20210720 20:23:39.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:39.235" endtime="20210720 20:23:39.798"/>
</kw>
<msg timestamp="20210720 20:23:39.798" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "10a34270-fd79-4719-a12d-e1ba4fd263fc-106614791845380154", 
    "Key": "32651/listtest/key1"
}</msg>
<status status="PASS" starttime="20210720 20:23:39.234" endtime="20210720 20:23:39.798"/>
</kw>
<msg timestamp="20210720 20:23:39.798" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "10a34270-fd79-4719-a12d-e1ba4fd263fc-106614791845380154", 
    "Key": "32651/listtest/key1"
}</msg>
<status status="PASS" starttime="20210720 20:23:39.233" endtime="20210720 20:23:39.799"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:39.802" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "10a34270-fd79-4719-a12d-e1ba4fd263fc-106614791845380154", 
    "Key": "32651/listtest/key1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:39.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:39.845" level="INFO">${output} = 10a34270-fd79-4719-a12d-e1ba4fd263fc-106614791845380154</msg>
<status status="PASS" starttime="20210720 20:23:39.799" endtime="20210720 20:23:39.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:39.846" level="INFO">10a34270-fd79-4719-a12d-e1ba4fd263fc-106614791845380154</msg>
<status status="PASS" starttime="20210720 20:23:39.846" endtime="20210720 20:23:39.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:39.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:39.847" endtime="20210720 20:23:39.847"/>
</kw>
<msg timestamp="20210720 20:23:39.848" level="INFO">${uploadID1} = 10a34270-fd79-4719-a12d-e1ba4fd263fc-106614791845380154</msg>
<status status="PASS" starttime="20210720 20:23:39.799" endtime="20210720 20:23:39.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:39.848" endtime="20210720 20:23:39.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:39.849" endtime="20210720 20:23:39.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:39.849" endtime="20210720 20:23:39.850"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:39.855" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-78407 --key 32651/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:40.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:40.368" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "7c3fb276-785c-4c71-b1eb-ac5485341896-106614791884636219", 
    "Key": "32651/listtest/key2"
}</msg>
<status status="PASS" starttime="20210720 20:23:39.852" endtime="20210720 20:23:40.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:40.369" level="INFO">{
    "Bucket": "bucket-78407", 
    "UploadId": "7c3fb276-785c-4c71-b1eb-ac5485341896-106614791884636219", 
    "Key": "32651/listtest/key2"
}</msg>
<status status="PASS" starttime="20210720 20:23:40.369" endtime="20210720 20:23:40.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:40.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:40.370" endtime="20210720 20:23:40.371"/>
</kw>
<status status="PASS" starttime="20210720 20:23:39.852" endtime="20210720 20:23:40.371"/>
</kw>
<msg timestamp="20210720 20:23:40.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:39.851" endtime="20210720 20:23:40.371"/>
</kw>
<msg timestamp="20210720 20:23:40.372" level="INFO">${output} = {
    "Bucket": "bucket-78407", 
    "UploadId": "7c3fb276-785c-4c71-b1eb-ac5485341896-106614791884636219", 
    "Key": "32651/listtest/key2"
}</msg>
<status status="PASS" starttime="20210720 20:23:39.851" endtime="20210720 20:23:40.372"/>
</kw>
<msg timestamp="20210720 20:23:40.372" level="INFO">${result} = {
    "Bucket": "bucket-78407", 
    "UploadId": "7c3fb276-785c-4c71-b1eb-ac5485341896-106614791884636219", 
    "Key": "32651/listtest/key2"
}</msg>
<status status="PASS" starttime="20210720 20:23:39.850" endtime="20210720 20:23:40.372"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:40.375" level="INFO">Running command 'echo '{
    "Bucket": "bucket-78407", 
    "UploadId": "7c3fb276-785c-4c71-b1eb-ac5485341896-106614791884636219", 
    "Key": "32651/listtest/key2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:40.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:40.421" level="INFO">${output} = 7c3fb276-785c-4c71-b1eb-ac5485341896-106614791884636219</msg>
<status status="PASS" starttime="20210720 20:23:40.373" endtime="20210720 20:23:40.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:40.422" level="INFO">7c3fb276-785c-4c71-b1eb-ac5485341896-106614791884636219</msg>
<status status="PASS" starttime="20210720 20:23:40.421" endtime="20210720 20:23:40.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:40.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:40.422" endtime="20210720 20:23:40.423"/>
</kw>
<msg timestamp="20210720 20:23:40.423" level="INFO">${uploadID2} = 7c3fb276-785c-4c71-b1eb-ac5485341896-106614791884636219</msg>
<status status="PASS" starttime="20210720 20:23:40.372" endtime="20210720 20:23:40.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:40.424" endtime="20210720 20:23:40.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:40.424" endtime="20210720 20:23:40.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:40.425" endtime="20210720 20:23:40.425"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:40.430" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket bucket-78407 --prefix 32651/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:40.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:40.956" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-20T20:2...</msg>
<status status="PASS" starttime="20210720 20:23:40.428" endtime="20210720 20:23:40.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:40.958" level="INFO">{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-20T20:23:39.711Z", 
            "UploadId": "10a34270-fd79-4719-a12d-e1ba4fd263fc-106614791845380154", 
            "StorageClass": "STANDARD", 
            "Key": "32651/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-20T20:23:40.310Z", 
            "UploadId": "7c3fb276-785c-4c71-b1eb-ac5485341896-106614791884636219", 
            "StorageClass": "STANDARD", 
            "Key": "32651/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20210720 20:23:40.957" endtime="20210720 20:23:40.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:40.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:40.958" endtime="20210720 20:23:40.959"/>
</kw>
<status status="PASS" starttime="20210720 20:23:40.427" endtime="20210720 20:23:40.959"/>
</kw>
<msg timestamp="20210720 20:23:40.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:40.427" endtime="20210720 20:23:40.960"/>
</kw>
<msg timestamp="20210720 20:23:40.960" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-20T20:2...</msg>
<status status="PASS" starttime="20210720 20:23:40.426" endtime="20210720 20:23:40.960"/>
</kw>
<msg timestamp="20210720 20:23:40.960" level="INFO">${result} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-20T20:2...</msg>
<status status="PASS" starttime="20210720 20:23:40.425" endtime="20210720 20:23:40.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:40.960" endtime="20210720 20:23:40.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:40.961" endtime="20210720 20:23:40.962"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:40.965" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-20T20:23:39.711Z", 
            "UploadId": "10a34270-fd79-4719-a12d-e1ba4fd263fc-106614791845380154", 
            "StorageClass": "STANDARD", 
            "Key": "32651/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-07-20T20:23:40.310Z", 
            "UploadId": "7c3fb276-785c-4c71-b1eb-ac5485341896-106614791884636219", 
            "StorageClass": "STANDARD", 
            "Key": "32651/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:41.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:41.011" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20210720 20:23:40.962" endtime="20210720 20:23:41.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:41.012" level="INFO">2</msg>
<status status="PASS" starttime="20210720 20:23:41.012" endtime="20210720 20:23:41.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:41.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:41.013" endtime="20210720 20:23:41.013"/>
</kw>
<msg timestamp="20210720 20:23:41.014" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20210720 20:23:40.962" endtime="20210720 20:23:41.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:23:41.014" endtime="20210720 20:23:41.015"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:23:39.230" endtime="20210720 20:23:41.015"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210720 20:22:22.435" endtime="20210720 20:23:41.017"/>
</suite>
<suite id="s1-s3-s8" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:23:41.032" level="INFO">${random} = 00923</msg>
<status status="PASS" starttime="20210720 20:23:41.032" endtime="20210720 20:23:41.032"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:23:41.034" level="INFO">${PREFIX} = 00923</msg>
<status status="PASS" starttime="20210720 20:23:41.033" endtime="20210720 20:23:41.034"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.032" endtime="20210720 20:23:41.034"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.031" endtime="20210720 20:23:41.035"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:41.037" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:41.040" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:23:41.040" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:23:41.035" endtime="20210720 20:23:41.040"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:23:41.040" endtime="20210720 20:23:41.041"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:41.043" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:41.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:41.198" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:23:41.041" endtime="20210720 20:23:41.198"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:41.204" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:41.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:41.671" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:23:41.201" endtime="20210720 20:23:41.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:41.676" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:23:41.675" endtime="20210720 20:23:41.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:41.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:41.676" endtime="20210720 20:23:41.677"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.201" endtime="20210720 20:23:41.677"/>
</kw>
<msg timestamp="20210720 20:23:41.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:41.201" endtime="20210720 20:23:41.678"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.200" endtime="20210720 20:23:41.678"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.200" endtime="20210720 20:23:41.678"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.199" endtime="20210720 20:23:41.678"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.035" endtime="20210720 20:23:41.678"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.035" endtime="20210720 20:23:41.678"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:41.685" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:41.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:41.689" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:23:41.683" endtime="20210720 20:23:41.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:41.690" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:23:41.689" endtime="20210720 20:23:41.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:41.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:41.690" endtime="20210720 20:23:41.690"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.683" endtime="20210720 20:23:41.691"/>
</kw>
<msg timestamp="20210720 20:23:41.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:41.682" endtime="20210720 20:23:41.691"/>
</kw>
<msg timestamp="20210720 20:23:41.692" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:23:41.682" endtime="20210720 20:23:41.692"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:23:41.694" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:23:41.692" endtime="20210720 20:23:41.694"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:41.698" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:41.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:41.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:41.696" endtime="20210720 20:23:41.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:41.751" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:41.750" endtime="20210720 20:23:41.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:41.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:41.751" endtime="20210720 20:23:41.752"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.695" endtime="20210720 20:23:41.752"/>
</kw>
<msg timestamp="20210720 20:23:41.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:41.695" endtime="20210720 20:23:41.752"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.694" endtime="20210720 20:23:41.753"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.694" endtime="20210720 20:23:41.753"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.681" endtime="20210720 20:23:41.753"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.681" endtime="20210720 20:23:41.753"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:41.758" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:45.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:45.523" level="INFO">${output} = 2021-07-20 20:23:44,867 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:23:41.755" endtime="20210720 20:23:45.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:45.524" level="INFO">2021-07-20 20:23:44,867 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:23:45.524" endtime="20210720 20:23:45.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:45.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:45.525" endtime="20210720 20:23:45.525"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.755" endtime="20210720 20:23:45.526"/>
</kw>
<msg timestamp="20210720 20:23:45.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:41.754" endtime="20210720 20:23:45.526"/>
</kw>
<msg timestamp="20210720 20:23:45.526" level="INFO">${result} = 2021-07-20 20:23:44,867 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:23:41.754" endtime="20210720 20:23:45.526"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:23:45.527" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:23:45.526" endtime="20210720 20:23:45.527"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:23:45.527" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:23:45.527" endtime="20210720 20:23:45.527"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:23:45.528" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:23:45.528" endtime="20210720 20:23:45.528"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:23:45.529" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:23:45.528" endtime="20210720 20:23:45.529"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:23:45.531" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:23:45.530" endtime="20210720 20:23:45.531"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:45.538" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:45.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:45.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:45.535" endtime="20210720 20:23:45.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:45.912" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:45.912" endtime="20210720 20:23:45.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:45.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:45.913" endtime="20210720 20:23:45.913"/>
</kw>
<status status="PASS" starttime="20210720 20:23:45.534" endtime="20210720 20:23:45.914"/>
</kw>
<msg timestamp="20210720 20:23:45.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:45.534" endtime="20210720 20:23:45.914"/>
</kw>
<status status="PASS" starttime="20210720 20:23:45.531" endtime="20210720 20:23:45.915"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:45.919" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:46.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:46.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:45.916" endtime="20210720 20:23:46.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:46.279" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:46.278" endtime="20210720 20:23:46.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:46.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:46.279" endtime="20210720 20:23:46.279"/>
</kw>
<status status="PASS" starttime="20210720 20:23:45.916" endtime="20210720 20:23:46.280"/>
</kw>
<msg timestamp="20210720 20:23:46.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:45.915" endtime="20210720 20:23:46.280"/>
</kw>
<status status="PASS" starttime="20210720 20:23:45.915" endtime="20210720 20:23:46.280"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:46.284" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:46.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:46.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:46.282" endtime="20210720 20:23:46.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:46.628" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:46.627" endtime="20210720 20:23:46.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:46.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:46.628" endtime="20210720 20:23:46.628"/>
</kw>
<status status="PASS" starttime="20210720 20:23:46.281" endtime="20210720 20:23:46.629"/>
</kw>
<msg timestamp="20210720 20:23:46.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:46.281" endtime="20210720 20:23:46.629"/>
</kw>
<status status="PASS" starttime="20210720 20:23:46.280" endtime="20210720 20:23:46.629"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:46.633" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:46.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:46.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:46.631" endtime="20210720 20:23:46.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:46.990" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:46.990" endtime="20210720 20:23:46.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:46.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:46.991" endtime="20210720 20:23:46.991"/>
</kw>
<status status="PASS" starttime="20210720 20:23:46.630" endtime="20210720 20:23:46.991"/>
</kw>
<msg timestamp="20210720 20:23:46.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:46.630" endtime="20210720 20:23:46.992"/>
</kw>
<status status="PASS" starttime="20210720 20:23:46.629" endtime="20210720 20:23:46.992"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.754" endtime="20210720 20:23:46.992"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.753" endtime="20210720 20:23:46.992"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:23:46.992" endtime="20210720 20:23:46.993"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.680" endtime="20210720 20:23:46.993"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.679" endtime="20210720 20:23:46.993"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:23:46.994" level="INFO">${postfix} = 03754</msg>
<status status="PASS" starttime="20210720 20:23:46.994" endtime="20210720 20:23:46.994"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:23:46.995" level="INFO">${bucket} = bucket-03754</msg>
<status status="PASS" starttime="20210720 20:23:46.995" endtime="20210720 20:23:46.995"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:47.000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-03754 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:47.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:47.506" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-03754"
}</msg>
<status status="PASS" starttime="20210720 20:23:46.997" endtime="20210720 20:23:47.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:47.508" level="INFO">{
    "Location": "http://s3g:9878/bucket-03754"
}</msg>
<status status="PASS" starttime="20210720 20:23:47.507" endtime="20210720 20:23:47.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:47.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:47.508" endtime="20210720 20:23:47.509"/>
</kw>
<status status="PASS" starttime="20210720 20:23:46.997" endtime="20210720 20:23:47.509"/>
</kw>
<msg timestamp="20210720 20:23:47.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:46.997" endtime="20210720 20:23:47.509"/>
</kw>
<msg timestamp="20210720 20:23:47.509" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-03754"
}</msg>
<status status="PASS" starttime="20210720 20:23:46.996" endtime="20210720 20:23:47.509"/>
</kw>
<msg timestamp="20210720 20:23:47.510" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-03754"
}</msg>
<status status="PASS" starttime="20210720 20:23:46.996" endtime="20210720 20:23:47.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:47.510" endtime="20210720 20:23:47.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:47.511" endtime="20210720 20:23:47.511"/>
</kw>
<status status="PASS" starttime="20210720 20:23:46.995" endtime="20210720 20:23:47.512"/>
</kw>
<status status="PASS" starttime="20210720 20:23:46.994" endtime="20210720 20:23:47.512"/>
</kw>
<msg timestamp="20210720 20:23:47.512" level="INFO">${BUCKET} = bucket-03754</msg>
<status status="PASS" starttime="20210720 20:23:46.993" endtime="20210720 20:23:47.512"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:23:47.513" level="INFO">${BUCKET} = bucket-03754</msg>
<status status="PASS" starttime="20210720 20:23:47.512" endtime="20210720 20:23:47.513"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:23:47.513" endtime="20210720 20:23:47.513"/>
</kw>
<status status="PASS" starttime="20210720 20:23:41.031" endtime="20210720 20:23:47.513"/>
</kw>
<test id="s1-s3-s8-t1" name="Copy Object Happy Scenario">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:23:47.516" level="INFO">${postfix} = 35084</msg>
<status status="PASS" starttime="20210720 20:23:47.515" endtime="20210720 20:23:47.516"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:23:47.517" level="INFO">${DESTBUCKET} = destbucket-35084</msg>
<status status="PASS" starttime="20210720 20:23:47.516" endtime="20210720 20:23:47.517"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:47.521" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-35084 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:48.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:48.065" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-35084"
}</msg>
<status status="PASS" starttime="20210720 20:23:47.519" endtime="20210720 20:23:48.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:48.066" level="INFO">{
    "Location": "http://s3g:9878/destbucket-35084"
}</msg>
<status status="PASS" starttime="20210720 20:23:48.065" endtime="20210720 20:23:48.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:48.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:48.066" endtime="20210720 20:23:48.071"/>
</kw>
<status status="PASS" starttime="20210720 20:23:47.518" endtime="20210720 20:23:48.071"/>
</kw>
<msg timestamp="20210720 20:23:48.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:47.518" endtime="20210720 20:23:48.071"/>
</kw>
<msg timestamp="20210720 20:23:48.072" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-35084"
}</msg>
<status status="PASS" starttime="20210720 20:23:47.517" endtime="20210720 20:23:48.072"/>
</kw>
<status status="PASS" starttime="20210720 20:23:47.517" endtime="20210720 20:23:48.072"/>
</kw>
<status status="PASS" starttime="20210720 20:23:47.515" endtime="20210720 20:23:48.072"/>
</kw>
<status status="PASS" starttime="20210720 20:23:47.515" endtime="20210720 20:23:48.072"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:48.077" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20210720 20:23:48.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:48.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:48.074" endtime="20210720 20:23:48.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:48.083" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:48.082" endtime="20210720 20:23:48.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:48.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:48.084" endtime="20210720 20:23:48.084"/>
</kw>
<status status="PASS" starttime="20210720 20:23:48.073" endtime="20210720 20:23:48.085"/>
</kw>
<msg timestamp="20210720 20:23:48.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:48.073" endtime="20210720 20:23:48.085"/>
</kw>
<status status="PASS" starttime="20210720 20:23:48.072" endtime="20210720 20:23:48.085"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:48.090" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-03754 --key 00923/copyobject/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:51.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:51.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:48.088" endtime="20210720 20:23:51.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:51.347" level="INFO"/>
<status status="PASS" starttime="20210720 20:23:51.346" endtime="20210720 20:23:51.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:51.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:51.347" endtime="20210720 20:23:51.348"/>
</kw>
<status status="PASS" starttime="20210720 20:23:48.087" endtime="20210720 20:23:51.348"/>
</kw>
<msg timestamp="20210720 20:23:51.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:48.087" endtime="20210720 20:23:51.348"/>
</kw>
<msg timestamp="20210720 20:23:51.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:23:48.086" endtime="20210720 20:23:51.349"/>
</kw>
<msg timestamp="20210720 20:23:51.349" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:23:48.085" endtime="20210720 20:23:51.349"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:51.354" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-03754 --prefix 00923/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:51.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:51.877" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:51.265Z", 
            "ETag": "2021-07-20T20:23:51.265Z", 
            "StorageClass": "STANDARD", 
            "Key": "009...</msg>
<status status="PASS" starttime="20210720 20:23:51.352" endtime="20210720 20:23:51.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:51.879" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:51.265Z", 
            "ETag": "2021-07-20T20:23:51.265Z", 
            "StorageClass": "STANDARD", 
            "Key": "00923/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210720 20:23:51.878" endtime="20210720 20:23:51.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:51.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:51.879" endtime="20210720 20:23:51.880"/>
</kw>
<status status="PASS" starttime="20210720 20:23:51.351" endtime="20210720 20:23:51.880"/>
</kw>
<msg timestamp="20210720 20:23:51.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:51.351" endtime="20210720 20:23:51.880"/>
</kw>
<msg timestamp="20210720 20:23:51.880" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:51.265Z", 
            "ETag": "2021-07-20T20:23:51.265Z", 
            "StorageClass": "STANDARD", 
            "Key": "009...</msg>
<status status="PASS" starttime="20210720 20:23:51.350" endtime="20210720 20:23:51.881"/>
</kw>
<msg timestamp="20210720 20:23:51.881" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:51.265Z", 
            "ETag": "2021-07-20T20:23:51.265Z", 
            "StorageClass": "STANDARD", 
            "Key": "009...</msg>
<status status="PASS" starttime="20210720 20:23:51.350" endtime="20210720 20:23:51.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:51.881" endtime="20210720 20:23:51.881"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:51.886" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-35084 --key 00923/copyobject/f1 --copy-source bucket-03754/00923/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:55.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:55.062" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:23:54.979Z", 
        "ETag": "1571de91-cd8c-47d9-95ae-cbddac8c2e62"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:51.884" endtime="20210720 20:23:55.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:55.064" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:23:54.979Z", 
        "ETag": "1571de91-cd8c-47d9-95ae-cbddac8c2e62"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:55.063" endtime="20210720 20:23:55.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:55.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:55.064" endtime="20210720 20:23:55.065"/>
</kw>
<status status="PASS" starttime="20210720 20:23:51.883" endtime="20210720 20:23:55.065"/>
</kw>
<msg timestamp="20210720 20:23:55.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:51.883" endtime="20210720 20:23:55.065"/>
</kw>
<msg timestamp="20210720 20:23:55.066" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:23:54.979Z", 
        "ETag": "1571de91-cd8c-47d9-95ae-cbddac8c2e62"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:51.882" endtime="20210720 20:23:55.066"/>
</kw>
<msg timestamp="20210720 20:23:55.066" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:23:54.979Z", 
        "ETag": "1571de91-cd8c-47d9-95ae-cbddac8c2e62"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:51.882" endtime="20210720 20:23:55.066"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:55.072" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-35084 --prefix 00923/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:55.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:55.588" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:54.979Z", 
            "ETag": "2021-07-20T20:23:54.979Z", 
            "StorageClass": "STANDARD", 
            "Key": "009...</msg>
<status status="PASS" starttime="20210720 20:23:55.070" endtime="20210720 20:23:55.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:55.589" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:54.979Z", 
            "ETag": "2021-07-20T20:23:54.979Z", 
            "StorageClass": "STANDARD", 
            "Key": "00923/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210720 20:23:55.588" endtime="20210720 20:23:55.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:55.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:55.589" endtime="20210720 20:23:55.590"/>
</kw>
<status status="PASS" starttime="20210720 20:23:55.069" endtime="20210720 20:23:55.590"/>
</kw>
<msg timestamp="20210720 20:23:55.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:55.067" endtime="20210720 20:23:55.590"/>
</kw>
<msg timestamp="20210720 20:23:55.591" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:54.979Z", 
            "ETag": "2021-07-20T20:23:54.979Z", 
            "StorageClass": "STANDARD", 
            "Key": "009...</msg>
<status status="PASS" starttime="20210720 20:23:55.067" endtime="20210720 20:23:55.591"/>
</kw>
<msg timestamp="20210720 20:23:55.591" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:54.979Z", 
            "ETag": "2021-07-20T20:23:54.979Z", 
            "StorageClass": "STANDARD", 
            "Key": "009...</msg>
<status status="PASS" starttime="20210720 20:23:55.066" endtime="20210720 20:23:55.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:55.592" endtime="20210720 20:23:55.592"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:55.597" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-35084 --key 00923/copyobject/f1 --copy-source bucket-03754/00923/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:58.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:58.847" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:23:58.769Z", 
        "ETag": "c896e56a-0c90-4287-8bf8-460078b67a80"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:55.595" endtime="20210720 20:23:58.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:58.848" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:23:58.769Z", 
        "ETag": "c896e56a-0c90-4287-8bf8-460078b67a80"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:58.848" endtime="20210720 20:23:58.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:58.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:58.849" endtime="20210720 20:23:58.849"/>
</kw>
<status status="PASS" starttime="20210720 20:23:55.594" endtime="20210720 20:23:58.850"/>
</kw>
<msg timestamp="20210720 20:23:58.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:55.594" endtime="20210720 20:23:58.850"/>
</kw>
<msg timestamp="20210720 20:23:58.850" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:23:58.769Z", 
        "ETag": "c896e56a-0c90-4287-8bf8-460078b67a80"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:55.593" endtime="20210720 20:23:58.850"/>
</kw>
<msg timestamp="20210720 20:23:58.850" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:23:58.769Z", 
        "ETag": "c896e56a-0c90-4287-8bf8-460078b67a80"
    }
}</msg>
<status status="PASS" starttime="20210720 20:23:55.592" endtime="20210720 20:23:58.851"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:58.855" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-35084 --prefix 00923/copyobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:59.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:23:59.355" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:58.769Z", 
            "ETag": "2021-07-20T20:23:58.769Z", 
            "StorageClass": "STANDARD", 
            "Key": "009...</msg>
<status status="PASS" starttime="20210720 20:23:58.853" endtime="20210720 20:23:59.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:59.357" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:58.769Z", 
            "ETag": "2021-07-20T20:23:58.769Z", 
            "StorageClass": "STANDARD", 
            "Key": "00923/copyobject/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210720 20:23:59.356" endtime="20210720 20:23:59.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:59.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:59.357" endtime="20210720 20:23:59.358"/>
</kw>
<status status="PASS" starttime="20210720 20:23:58.852" endtime="20210720 20:23:59.358"/>
</kw>
<msg timestamp="20210720 20:23:59.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:23:58.852" endtime="20210720 20:23:59.359"/>
</kw>
<msg timestamp="20210720 20:23:59.359" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:58.769Z", 
            "ETag": "2021-07-20T20:23:58.769Z", 
            "StorageClass": "STANDARD", 
            "Key": "009...</msg>
<status status="PASS" starttime="20210720 20:23:58.851" endtime="20210720 20:23:59.359"/>
</kw>
<msg timestamp="20210720 20:23:59.360" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:23:58.769Z", 
            "ETag": "2021-07-20T20:23:58.769Z", 
            "StorageClass": "STANDARD", 
            "Key": "009...</msg>
<status status="PASS" starttime="20210720 20:23:58.851" endtime="20210720 20:23:59.360"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:59.360" endtime="20210720 20:23:59.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:23:47.514" endtime="20210720 20:23:59.361"/>
</test>
<test id="s1-s3-s8-t2" name="Copy Object Where Bucket is not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:59.368" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key 00923/copyobject/f1 --copy-source bucket-03754/00923/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:23:59.898" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:23:59.898" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:23:59.365" endtime="20210720 20:23:59.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:23:59.899" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:23:59.899" endtime="20210720 20:23:59.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:23:59.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:23:59.900" endtime="20210720 20:23:59.900"/>
</kw>
<msg timestamp="20210720 20:23:59.901" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:23:59.364" endtime="20210720 20:23:59.901"/>
</kw>
<msg timestamp="20210720 20:23:59.901" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:23:59.363" endtime="20210720 20:23:59.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:23:59.901" endtime="20210720 20:23:59.902"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:23:59.907" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-35084 --key 00923/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/00923/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:00.430" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:24:00.430" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:23:59.904" endtime="20210720 20:24:00.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:00.431" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:24:00.430" endtime="20210720 20:24:00.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:00.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:00.432" endtime="20210720 20:24:00.432"/>
</kw>
<msg timestamp="20210720 20:24:00.433" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:23:59.903" endtime="20210720 20:24:00.433"/>
</kw>
<msg timestamp="20210720 20:24:00.433" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:23:59.902" endtime="20210720 20:24:00.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:00.433" endtime="20210720 20:24:00.433"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:23:59.362" endtime="20210720 20:24:00.434"/>
</test>
<test id="s1-s3-s8-t3" name="Copy Object Where both source and dest are same with change to storageclass">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:00.440" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-35084 --key 00923/copyobject/f1 --copy-source destbucket-35084/00923/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:00.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:00.991" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:24:00.948Z", 
        "ETag": "df47347b-d1ee-44cc-a5c4-02251ddf6553"
    }
}</msg>
<status status="PASS" starttime="20210720 20:24:00.438" endtime="20210720 20:24:00.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:00.992" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:24:00.948Z", 
        "ETag": "df47347b-d1ee-44cc-a5c4-02251ddf6553"
    }
}</msg>
<status status="PASS" starttime="20210720 20:24:00.991" endtime="20210720 20:24:00.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:00.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:00.992" endtime="20210720 20:24:00.993"/>
</kw>
<status status="PASS" starttime="20210720 20:24:00.437" endtime="20210720 20:24:00.993"/>
</kw>
<msg timestamp="20210720 20:24:00.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:00.437" endtime="20210720 20:24:00.994"/>
</kw>
<msg timestamp="20210720 20:24:00.994" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:24:00.948Z", 
        "ETag": "df47347b-d1ee-44cc-a5c4-02251ddf6553"
    }
}</msg>
<status status="PASS" starttime="20210720 20:24:00.436" endtime="20210720 20:24:00.994"/>
</kw>
<msg timestamp="20210720 20:24:00.994" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-07-20T20:24:00.948Z", 
        "ETag": "df47347b-d1ee-44cc-a5c4-02251ddf6553"
    }
}</msg>
<status status="PASS" starttime="20210720 20:24:00.435" endtime="20210720 20:24:00.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:00.994" endtime="20210720 20:24:00.995"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:24:00.434" endtime="20210720 20:24:00.995"/>
</test>
<test id="s1-s3-s8-t4" name="Copy Object Where Key not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:01.001" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-35084 --key 00923/copyobject/f1 --copy-source bucket-03754/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:01.534" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:24:01.534" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210720 20:24:00.999" endtime="20210720 20:24:01.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:01.535" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210720 20:24:01.534" endtime="20210720 20:24:01.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:01.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:01.535" endtime="20210720 20:24:01.536"/>
</kw>
<msg timestamp="20210720 20:24:01.536" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210720 20:24:00.998" endtime="20210720 20:24:01.536"/>
</kw>
<msg timestamp="20210720 20:24:01.537" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210720 20:24:00.997" endtime="20210720 20:24:01.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:01.537" endtime="20210720 20:24:01.537"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:24:00.996" endtime="20210720 20:24:01.538"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210720 20:23:41.021" endtime="20210720 20:24:01.539"/>
</suite>
<suite id="s1-s3-s9" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:24:01.552" level="INFO">${random} = 31840</msg>
<status status="PASS" starttime="20210720 20:24:01.551" endtime="20210720 20:24:01.552"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:24:01.553" level="INFO">${PREFIX} = 31840</msg>
<status status="PASS" starttime="20210720 20:24:01.552" endtime="20210720 20:24:01.553"/>
</kw>
<status status="PASS" starttime="20210720 20:24:01.551" endtime="20210720 20:24:01.554"/>
</kw>
<status status="PASS" starttime="20210720 20:24:01.551" endtime="20210720 20:24:01.554"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:01.556" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:01.559" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:24:01.559" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:24:01.554" endtime="20210720 20:24:01.559"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:24:01.559" endtime="20210720 20:24:01.560"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:01.562" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:01.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:01.711" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:24:01.560" endtime="20210720 20:24:01.711"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:01.717" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:02.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:02.133" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:24:01.714" endtime="20210720 20:24:02.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:02.134" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:24:02.134" endtime="20210720 20:24:02.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:02.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:02.135" endtime="20210720 20:24:02.135"/>
</kw>
<status status="PASS" starttime="20210720 20:24:01.714" endtime="20210720 20:24:02.136"/>
</kw>
<msg timestamp="20210720 20:24:02.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:01.713" endtime="20210720 20:24:02.136"/>
</kw>
<status status="PASS" starttime="20210720 20:24:01.713" endtime="20210720 20:24:02.136"/>
</kw>
<status status="PASS" starttime="20210720 20:24:01.712" endtime="20210720 20:24:02.137"/>
</kw>
<status status="PASS" starttime="20210720 20:24:01.711" endtime="20210720 20:24:02.137"/>
</kw>
<status status="PASS" starttime="20210720 20:24:01.554" endtime="20210720 20:24:02.137"/>
</kw>
<status status="PASS" starttime="20210720 20:24:01.554" endtime="20210720 20:24:02.137"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:02.143" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:02.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:02.147" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:24:02.140" endtime="20210720 20:24:02.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:02.148" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:24:02.147" endtime="20210720 20:24:02.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:02.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:02.148" endtime="20210720 20:24:02.148"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.139" endtime="20210720 20:24:02.149"/>
</kw>
<msg timestamp="20210720 20:24:02.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:02.139" endtime="20210720 20:24:02.149"/>
</kw>
<msg timestamp="20210720 20:24:02.149" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:24:02.139" endtime="20210720 20:24:02.149"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:24:02.152" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:24:02.149" endtime="20210720 20:24:02.152"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:02.156" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:02.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:02.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:02.154" endtime="20210720 20:24:02.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:02.164" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:02.163" endtime="20210720 20:24:02.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:02.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:02.164" endtime="20210720 20:24:02.165"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.153" endtime="20210720 20:24:02.165"/>
</kw>
<msg timestamp="20210720 20:24:02.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:02.153" endtime="20210720 20:24:02.165"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.152" endtime="20210720 20:24:02.165"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.152" endtime="20210720 20:24:02.166"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.138" endtime="20210720 20:24:02.166"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.138" endtime="20210720 20:24:02.166"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:02.171" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:05.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:05.828" level="INFO">${output} = 2021-07-20 20:24:05,121 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:24:02.168" endtime="20210720 20:24:05.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:05.829" level="INFO">2021-07-20 20:24:05,121 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:24:05.828" endtime="20210720 20:24:05.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:05.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:05.829" endtime="20210720 20:24:05.830"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.168" endtime="20210720 20:24:05.830"/>
</kw>
<msg timestamp="20210720 20:24:05.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:02.168" endtime="20210720 20:24:05.830"/>
</kw>
<msg timestamp="20210720 20:24:05.831" level="INFO">${result} = 2021-07-20 20:24:05,121 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:24:02.167" endtime="20210720 20:24:05.831"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:24:05.831" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:24:05.831" endtime="20210720 20:24:05.831"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:24:05.832" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:24:05.832" endtime="20210720 20:24:05.832"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:24:05.833" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:24:05.832" endtime="20210720 20:24:05.833"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:24:05.834" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:24:05.833" endtime="20210720 20:24:05.834"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:24:05.835" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:24:05.834" endtime="20210720 20:24:05.835"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:05.839" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:06.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:06.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:05.837" endtime="20210720 20:24:06.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:06.175" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:06.175" endtime="20210720 20:24:06.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:06.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:06.176" endtime="20210720 20:24:06.176"/>
</kw>
<status status="PASS" starttime="20210720 20:24:05.836" endtime="20210720 20:24:06.176"/>
</kw>
<msg timestamp="20210720 20:24:06.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:05.836" endtime="20210720 20:24:06.177"/>
</kw>
<status status="PASS" starttime="20210720 20:24:05.835" endtime="20210720 20:24:06.177"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:06.181" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:06.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:06.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:06.178" endtime="20210720 20:24:06.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:06.523" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:06.523" endtime="20210720 20:24:06.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:06.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:06.523" endtime="20210720 20:24:06.524"/>
</kw>
<status status="PASS" starttime="20210720 20:24:06.178" endtime="20210720 20:24:06.524"/>
</kw>
<msg timestamp="20210720 20:24:06.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:06.178" endtime="20210720 20:24:06.525"/>
</kw>
<status status="PASS" starttime="20210720 20:24:06.177" endtime="20210720 20:24:06.525"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:06.529" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:06.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:06.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:06.526" endtime="20210720 20:24:06.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:06.880" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:06.879" endtime="20210720 20:24:06.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:06.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:06.881" endtime="20210720 20:24:06.881"/>
</kw>
<status status="PASS" starttime="20210720 20:24:06.526" endtime="20210720 20:24:06.882"/>
</kw>
<msg timestamp="20210720 20:24:06.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:06.526" endtime="20210720 20:24:06.882"/>
</kw>
<status status="PASS" starttime="20210720 20:24:06.525" endtime="20210720 20:24:06.882"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:06.887" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:07.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:07.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:06.885" endtime="20210720 20:24:07.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:07.259" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:07.259" endtime="20210720 20:24:07.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:07.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:07.260" endtime="20210720 20:24:07.260"/>
</kw>
<status status="PASS" starttime="20210720 20:24:06.883" endtime="20210720 20:24:07.261"/>
</kw>
<msg timestamp="20210720 20:24:07.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:06.883" endtime="20210720 20:24:07.261"/>
</kw>
<status status="PASS" starttime="20210720 20:24:06.882" endtime="20210720 20:24:07.261"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.166" endtime="20210720 20:24:07.261"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.166" endtime="20210720 20:24:07.261"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:24:07.261" endtime="20210720 20:24:07.262"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.138" endtime="20210720 20:24:07.262"/>
</kw>
<status status="PASS" starttime="20210720 20:24:02.137" endtime="20210720 20:24:07.262"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:24:07.263" level="INFO">${postfix} = 54438</msg>
<status status="PASS" starttime="20210720 20:24:07.263" endtime="20210720 20:24:07.264"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:24:07.264" level="INFO">${bucket} = bucket-54438</msg>
<status status="PASS" starttime="20210720 20:24:07.264" endtime="20210720 20:24:07.264"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:07.269" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-54438 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:07.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:07.811" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-54438"
}</msg>
<status status="PASS" starttime="20210720 20:24:07.266" endtime="20210720 20:24:07.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:07.813" level="INFO">{
    "Location": "http://s3g:9878/bucket-54438"
}</msg>
<status status="PASS" starttime="20210720 20:24:07.812" endtime="20210720 20:24:07.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:07.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:07.813" endtime="20210720 20:24:07.814"/>
</kw>
<status status="PASS" starttime="20210720 20:24:07.266" endtime="20210720 20:24:07.814"/>
</kw>
<msg timestamp="20210720 20:24:07.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:07.266" endtime="20210720 20:24:07.814"/>
</kw>
<msg timestamp="20210720 20:24:07.814" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-54438"
}</msg>
<status status="PASS" starttime="20210720 20:24:07.265" endtime="20210720 20:24:07.814"/>
</kw>
<msg timestamp="20210720 20:24:07.815" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-54438"
}</msg>
<status status="PASS" starttime="20210720 20:24:07.265" endtime="20210720 20:24:07.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:07.815" endtime="20210720 20:24:07.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:07.815" endtime="20210720 20:24:07.816"/>
</kw>
<status status="PASS" starttime="20210720 20:24:07.264" endtime="20210720 20:24:07.816"/>
</kw>
<status status="PASS" starttime="20210720 20:24:07.263" endtime="20210720 20:24:07.816"/>
</kw>
<msg timestamp="20210720 20:24:07.817" level="INFO">${BUCKET} = bucket-54438</msg>
<status status="PASS" starttime="20210720 20:24:07.262" endtime="20210720 20:24:07.817"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:24:07.817" level="INFO">${BUCKET} = bucket-54438</msg>
<status status="PASS" starttime="20210720 20:24:07.817" endtime="20210720 20:24:07.818"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:24:07.818" endtime="20210720 20:24:07.818"/>
</kw>
<status status="PASS" starttime="20210720 20:24:01.550" endtime="20210720 20:24:07.818"/>
</kw>
<test id="s1-s3-s9-t1" name="Delete file with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:07.824" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210720 20:24:07.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:07.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:07.821" endtime="20210720 20:24:07.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:07.829" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:07.828" endtime="20210720 20:24:07.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:07.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:07.830" endtime="20210720 20:24:07.830"/>
</kw>
<status status="PASS" starttime="20210720 20:24:07.821" endtime="20210720 20:24:07.831"/>
</kw>
<msg timestamp="20210720 20:24:07.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:07.820" endtime="20210720 20:24:07.831"/>
</kw>
<status status="PASS" starttime="20210720 20:24:07.820" endtime="20210720 20:24:07.831"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:07.836" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-54438 --key 31840/deletetestapi/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:11.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:11.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:07.834" endtime="20210720 20:24:11.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:11.091" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:11.090" endtime="20210720 20:24:11.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:11.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:11.091" endtime="20210720 20:24:11.092"/>
</kw>
<status status="PASS" starttime="20210720 20:24:07.833" endtime="20210720 20:24:11.092"/>
</kw>
<msg timestamp="20210720 20:24:11.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:07.832" endtime="20210720 20:24:11.093"/>
</kw>
<msg timestamp="20210720 20:24:11.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:07.832" endtime="20210720 20:24:11.093"/>
</kw>
<msg timestamp="20210720 20:24:11.093" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:24:07.831" endtime="20210720 20:24:11.093"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:11.098" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-54438 --prefix 31840/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:11.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:11.602" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:24:11.027Z", 
            "ETag": "2021-07-20T20:24:11.027Z", 
            "StorageClass": "STANDARD", 
            "Key": "318...</msg>
<status status="PASS" starttime="20210720 20:24:11.096" endtime="20210720 20:24:11.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:11.604" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-20T20:24:11.027Z", 
            "ETag": "2021-07-20T20:24:11.027Z", 
            "StorageClass": "STANDARD", 
            "Key": "31840/deletetestapi/f1", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210720 20:24:11.603" endtime="20210720 20:24:11.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:11.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:11.604" endtime="20210720 20:24:11.605"/>
</kw>
<status status="PASS" starttime="20210720 20:24:11.095" endtime="20210720 20:24:11.605"/>
</kw>
<msg timestamp="20210720 20:24:11.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:11.095" endtime="20210720 20:24:11.605"/>
</kw>
<msg timestamp="20210720 20:24:11.606" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:24:11.027Z", 
            "ETag": "2021-07-20T20:24:11.027Z", 
            "StorageClass": "STANDARD", 
            "Key": "318...</msg>
<status status="PASS" starttime="20210720 20:24:11.094" endtime="20210720 20:24:11.606"/>
</kw>
<msg timestamp="20210720 20:24:11.606" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:24:11.027Z", 
            "ETag": "2021-07-20T20:24:11.027Z", 
            "StorageClass": "STANDARD", 
            "Key": "318...</msg>
<status status="PASS" starttime="20210720 20:24:11.093" endtime="20210720 20:24:11.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:11.606" endtime="20210720 20:24:11.607"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:11.611" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-54438 --key 31840/deletetestapi/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:12.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:12.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:11.609" endtime="20210720 20:24:12.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:12.148" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:12.147" endtime="20210720 20:24:12.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:12.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:12.148" endtime="20210720 20:24:12.149"/>
</kw>
<status status="PASS" starttime="20210720 20:24:11.608" endtime="20210720 20:24:12.149"/>
</kw>
<msg timestamp="20210720 20:24:12.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:11.608" endtime="20210720 20:24:12.149"/>
</kw>
<msg timestamp="20210720 20:24:12.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:11.608" endtime="20210720 20:24:12.150"/>
</kw>
<msg timestamp="20210720 20:24:12.150" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:24:11.607" endtime="20210720 20:24:12.150"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:12.155" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-54438 --prefix 31840/deletetestapi/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:12.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:12.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:12.153" endtime="20210720 20:24:12.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:12.650" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:12.649" endtime="20210720 20:24:12.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:12.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:12.650" endtime="20210720 20:24:12.651"/>
</kw>
<status status="PASS" starttime="20210720 20:24:12.152" endtime="20210720 20:24:12.651"/>
</kw>
<msg timestamp="20210720 20:24:12.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:12.152" endtime="20210720 20:24:12.652"/>
</kw>
<msg timestamp="20210720 20:24:12.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:12.151" endtime="20210720 20:24:12.652"/>
</kw>
<msg timestamp="20210720 20:24:12.652" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:24:12.150" endtime="20210720 20:24:12.652"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:12.653" endtime="20210720 20:24:12.653"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>500</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:12.653" endtime="20210720 20:24:12.653"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:24:07.819" endtime="20210720 20:24:12.654"/>
</test>
<test id="s1-s3-s9-t2" name="Delete file with s3api, file doesn't exist">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:12.660" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-54438/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:13.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:13.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:12.658" endtime="20210720 20:24:13.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:13.149" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:13.149" endtime="20210720 20:24:13.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:13.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:13.150" endtime="20210720 20:24:13.150"/>
</kw>
<status status="PASS" starttime="20210720 20:24:12.657" endtime="20210720 20:24:13.151"/>
</kw>
<msg timestamp="20210720 20:24:13.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:12.657" endtime="20210720 20:24:13.151"/>
</kw>
<msg timestamp="20210720 20:24:13.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:12.656" endtime="20210720 20:24:13.151"/>
</kw>
<msg timestamp="20210720 20:24:13.152" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:24:12.656" endtime="20210720 20:24:13.152"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:13.152" endtime="20210720 20:24:13.152"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:13.157" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-54438 --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:13.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:13.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:13.154" endtime="20210720 20:24:13.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:13.653" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:13.653" endtime="20210720 20:24:13.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:13.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:13.654" endtime="20210720 20:24:13.654"/>
</kw>
<status status="PASS" starttime="20210720 20:24:13.154" endtime="20210720 20:24:13.654"/>
</kw>
<msg timestamp="20210720 20:24:13.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:13.154" endtime="20210720 20:24:13.655"/>
</kw>
<msg timestamp="20210720 20:24:13.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:13.153" endtime="20210720 20:24:13.655"/>
</kw>
<msg timestamp="20210720 20:24:13.655" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:24:13.152" endtime="20210720 20:24:13.655"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:13.661" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-54438/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:14.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:14.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:13.658" endtime="20210720 20:24:14.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:14.137" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:14.136" endtime="20210720 20:24:14.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:14.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:14.137" endtime="20210720 20:24:14.137"/>
</kw>
<status status="PASS" starttime="20210720 20:24:13.657" endtime="20210720 20:24:14.138"/>
</kw>
<msg timestamp="20210720 20:24:14.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:13.657" endtime="20210720 20:24:14.138"/>
</kw>
<msg timestamp="20210720 20:24:14.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:13.656" endtime="20210720 20:24:14.138"/>
</kw>
<msg timestamp="20210720 20:24:14.139" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:24:13.656" endtime="20210720 20:24:14.139"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:14.139" endtime="20210720 20:24:14.139"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:24:12.654" endtime="20210720 20:24:14.139"/>
</test>
<test id="s1-s3-s9-t3" name="Delete dir with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:14.145" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210720 20:24:14.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:14.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:14.143" endtime="20210720 20:24:14.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:14.149" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:14.148" endtime="20210720 20:24:14.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:14.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:14.149" endtime="20210720 20:24:14.150"/>
</kw>
<status status="PASS" starttime="20210720 20:24:14.142" endtime="20210720 20:24:14.150"/>
</kw>
<msg timestamp="20210720 20:24:14.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:14.142" endtime="20210720 20:24:14.150"/>
</kw>
<status status="PASS" starttime="20210720 20:24:14.141" endtime="20210720 20:24:14.151"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:14.155" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-54438/31840/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:17.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:17.287" level="INFO">${output} = Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-54438/31840/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210720 20:24:14.153" endtime="20210720 20:24:17.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:17.288" level="INFO">Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-54438/31840/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210720 20:24:17.287" endtime="20210720 20:24:17.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:17.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:17.289" endtime="20210720 20:24:17.289"/>
</kw>
<status status="PASS" starttime="20210720 20:24:14.152" endtime="20210720 20:24:17.290"/>
</kw>
<msg timestamp="20210720 20:24:17.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:14.152" endtime="20210720 20:24:17.290"/>
</kw>
<msg timestamp="20210720 20:24:17.290" level="INFO">${output} = Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-54438/31840/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210720 20:24:14.151" endtime="20210720 20:24:17.290"/>
</kw>
<msg timestamp="20210720 20:24:17.290" level="INFO">${result} = Completed 29 Bytes/29 Bytes (10 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-54438/31840/deletetestapidir/f1</msg>
<status status="PASS" starttime="20210720 20:24:14.151" endtime="20210720 20:24:17.290"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:17.306" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-54438/31840/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:18.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:18.094" level="INFO">${output} = 2021-07-20 20:24:17         29 f1</msg>
<status status="PASS" starttime="20210720 20:24:17.294" endtime="20210720 20:24:18.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:18.098" level="INFO">2021-07-20 20:24:17         29 f1</msg>
<status status="PASS" starttime="20210720 20:24:18.094" endtime="20210720 20:24:18.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:18.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:18.099" endtime="20210720 20:24:18.099"/>
</kw>
<status status="PASS" starttime="20210720 20:24:17.293" endtime="20210720 20:24:18.100"/>
</kw>
<msg timestamp="20210720 20:24:18.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:17.293" endtime="20210720 20:24:18.100"/>
</kw>
<msg timestamp="20210720 20:24:18.100" level="INFO">${output} = 2021-07-20 20:24:17         29 f1</msg>
<status status="PASS" starttime="20210720 20:24:17.291" endtime="20210720 20:24:18.100"/>
</kw>
<msg timestamp="20210720 20:24:18.100" level="INFO">${result} = 2021-07-20 20:24:17         29 f1</msg>
<status status="PASS" starttime="20210720 20:24:17.291" endtime="20210720 20:24:18.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:18.104" endtime="20210720 20:24:18.105"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:18.117" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-54438 --key 31840/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:18.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:18.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:18.113" endtime="20210720 20:24:18.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:18.817" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:18.817" endtime="20210720 20:24:18.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:18.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:18.818" endtime="20210720 20:24:18.818"/>
</kw>
<status status="PASS" starttime="20210720 20:24:18.110" endtime="20210720 20:24:18.818"/>
</kw>
<msg timestamp="20210720 20:24:18.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:18.109" endtime="20210720 20:24:18.819"/>
</kw>
<msg timestamp="20210720 20:24:18.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:18.106" endtime="20210720 20:24:18.823"/>
</kw>
<msg timestamp="20210720 20:24:18.823" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:24:18.106" endtime="20210720 20:24:18.824"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:18.835" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-54438/31840/deletetestapidir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:19.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:19.463" level="INFO">${output} = 2021-07-20 20:24:17         29 f1</msg>
<status status="PASS" starttime="20210720 20:24:18.828" endtime="20210720 20:24:19.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:19.464" level="INFO">2021-07-20 20:24:17         29 f1</msg>
<status status="PASS" starttime="20210720 20:24:19.463" endtime="20210720 20:24:19.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:19.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:19.465" endtime="20210720 20:24:19.466"/>
</kw>
<status status="PASS" starttime="20210720 20:24:18.826" endtime="20210720 20:24:19.467"/>
</kw>
<msg timestamp="20210720 20:24:19.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:18.825" endtime="20210720 20:24:19.467"/>
</kw>
<msg timestamp="20210720 20:24:19.467" level="INFO">${output} = 2021-07-20 20:24:17         29 f1</msg>
<status status="PASS" starttime="20210720 20:24:18.824" endtime="20210720 20:24:19.467"/>
</kw>
<msg timestamp="20210720 20:24:19.468" level="INFO">${result} = 2021-07-20 20:24:17         29 f1</msg>
<status status="PASS" starttime="20210720 20:24:18.824" endtime="20210720 20:24:19.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:24:19.468" endtime="20210720 20:24:19.468"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:19.475" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-54438 --key 31840/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:24:20.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:20.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:19.470" endtime="20210720 20:24:20.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:20.063" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:20.062" endtime="20210720 20:24:20.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:20.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:20.063" endtime="20210720 20:24:20.064"/>
</kw>
<status status="PASS" starttime="20210720 20:24:19.470" endtime="20210720 20:24:20.064"/>
</kw>
<msg timestamp="20210720 20:24:20.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:19.470" endtime="20210720 20:24:20.064"/>
</kw>
<msg timestamp="20210720 20:24:20.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:19.469" endtime="20210720 20:24:20.065"/>
</kw>
<msg timestamp="20210720 20:24:20.065" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:24:19.468" endtime="20210720 20:24:20.065"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:24:14.140" endtime="20210720 20:24:20.065"/>
</test>
<test id="s1-s3-s9-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:20.072" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210720 20:24:20.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:24:20.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:24:20.069" endtime="20210720 20:24:20.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:24:20.076" level="INFO"/>
<status status="PASS" starttime="20210720 20:24:20.075" endtime="20210720 20:24:20.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:24:20.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:24:20.077" endtime="20210720 20:24:20.077"/>
</kw>
<status status="PASS" starttime="20210720 20:24:20.069" endtime="20210720 20:24:20.077"/>
</kw>
<msg timestamp="20210720 20:24:20.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:20.068" endtime="20210720 20:24:20.078"/>
</kw>
<status status="PASS" starttime="20210720 20:24:20.068" endtime="20210720 20:24:20.078"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:24:20.082" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://bucket-54438/31840/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:27.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:27.136" level="INFO">${output} = Completed 29 Bytes/29 Bytes (0 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-54438/31840/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210720 20:24:20.080" endtime="20210720 20:27:27.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:27.139" level="INFO">Completed 29 Bytes/29 Bytes (0 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-54438/31840/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210720 20:27:27.137" endtime="20210720 20:27:27.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:27.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:27.140" endtime="20210720 20:27:27.142"/>
</kw>
<status status="PASS" starttime="20210720 20:24:20.079" endtime="20210720 20:27:27.143"/>
</kw>
<msg timestamp="20210720 20:27:27.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:24:20.079" endtime="20210720 20:27:27.143"/>
</kw>
<msg timestamp="20210720 20:27:27.144" level="INFO">${output} = Completed 29 Bytes/29 Bytes (0 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-54438/31840/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210720 20:24:20.079" endtime="20210720 20:27:27.144"/>
</kw>
<msg timestamp="20210720 20:27:27.145" level="INFO">${result} = Completed 29 Bytes/29 Bytes (0 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://bucket-54438/31840/deletetestapiprefix/filefile</msg>
<status status="PASS" starttime="20210720 20:24:20.078" endtime="20210720 20:27:27.145"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:27.154" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-54438/31840/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:27.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:27.719" level="INFO">${output} = 2021-07-20 20:27:27         29 filefile</msg>
<status status="PASS" starttime="20210720 20:27:27.150" endtime="20210720 20:27:27.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:27.721" level="INFO">2021-07-20 20:27:27         29 filefile</msg>
<status status="PASS" starttime="20210720 20:27:27.720" endtime="20210720 20:27:27.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:27.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:27.721" endtime="20210720 20:27:27.722"/>
</kw>
<status status="PASS" starttime="20210720 20:27:27.149" endtime="20210720 20:27:27.722"/>
</kw>
<msg timestamp="20210720 20:27:27.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:27.148" endtime="20210720 20:27:27.722"/>
</kw>
<msg timestamp="20210720 20:27:27.722" level="INFO">${output} = 2021-07-20 20:27:27         29 filefile</msg>
<status status="PASS" starttime="20210720 20:27:27.147" endtime="20210720 20:27:27.722"/>
</kw>
<msg timestamp="20210720 20:27:27.723" level="INFO">${result} = 2021-07-20 20:27:27         29 filefile</msg>
<status status="PASS" starttime="20210720 20:27:27.145" endtime="20210720 20:27:27.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:27:27.723" endtime="20210720 20:27:27.723"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:27.729" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-54438 --key 31840/deletetestapiprefix/file 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:28.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:28.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:27.726" endtime="20210720 20:27:28.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:28.255" level="INFO"/>
<status status="PASS" starttime="20210720 20:27:28.253" endtime="20210720 20:27:28.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:28.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:28.255" endtime="20210720 20:27:28.257"/>
</kw>
<status status="PASS" starttime="20210720 20:27:27.726" endtime="20210720 20:27:28.257"/>
</kw>
<msg timestamp="20210720 20:27:28.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:27.725" endtime="20210720 20:27:28.258"/>
</kw>
<msg timestamp="20210720 20:27:28.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:27.725" endtime="20210720 20:27:28.258"/>
</kw>
<msg timestamp="20210720 20:27:28.259" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:27:27.724" endtime="20210720 20:27:28.259"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:28.268" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://bucket-54438/31840/deletetestapiprefix/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:28.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:28.880" level="INFO">${output} = 2021-07-20 20:27:27         29 filefile</msg>
<status status="PASS" starttime="20210720 20:27:28.264" endtime="20210720 20:27:28.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:28.884" level="INFO">2021-07-20 20:27:27         29 filefile</msg>
<status status="PASS" starttime="20210720 20:27:28.882" endtime="20210720 20:27:28.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:28.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:28.884" endtime="20210720 20:27:28.885"/>
</kw>
<status status="PASS" starttime="20210720 20:27:28.263" endtime="20210720 20:27:28.886"/>
</kw>
<msg timestamp="20210720 20:27:28.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:28.263" endtime="20210720 20:27:28.887"/>
</kw>
<msg timestamp="20210720 20:27:28.888" level="INFO">${output} = 2021-07-20 20:27:27         29 filefile</msg>
<status status="PASS" starttime="20210720 20:27:28.261" endtime="20210720 20:27:28.888"/>
</kw>
<msg timestamp="20210720 20:27:28.889" level="INFO">${result} = 2021-07-20 20:27:27         29 filefile</msg>
<status status="PASS" starttime="20210720 20:27:28.259" endtime="20210720 20:27:28.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:27:28.889" endtime="20210720 20:27:28.890"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:28.899" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-54438 --key 31840/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:29.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:29.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:28.895" endtime="20210720 20:27:29.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:29.502" level="INFO"/>
<status status="PASS" starttime="20210720 20:27:29.501" endtime="20210720 20:27:29.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:29.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:29.502" endtime="20210720 20:27:29.503"/>
</kw>
<status status="PASS" starttime="20210720 20:27:28.895" endtime="20210720 20:27:29.504"/>
</kw>
<msg timestamp="20210720 20:27:29.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:28.893" endtime="20210720 20:27:29.506"/>
</kw>
<msg timestamp="20210720 20:27:29.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:28.892" endtime="20210720 20:27:29.508"/>
</kw>
<msg timestamp="20210720 20:27:29.508" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:27:28.890" endtime="20210720 20:27:29.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:24:20.067" endtime="20210720 20:27:29.509"/>
</test>
<test id="s1-s3-s9-t5" name="Delete file with s3api, bucket doesn't exist">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:29.519" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-54438-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:30.181" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:27:30.181" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:27:29.516" endtime="20210720 20:27:30.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:30.182" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:27:30.181" endtime="20210720 20:27:30.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:30.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:30.182" endtime="20210720 20:27:30.183"/>
</kw>
<msg timestamp="20210720 20:27:30.183" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:27:29.515" endtime="20210720 20:27:30.183"/>
</kw>
<msg timestamp="20210720 20:27:30.184" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210720 20:27:29.513" endtime="20210720 20:27:30.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:27:30.184" endtime="20210720 20:27:30.185"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:27:29.511" endtime="20210720 20:27:30.186"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210720 20:24:01.541" endtime="20210720 20:27:30.187"/>
</suite>
<suite id="s1-s3-s10" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:27:30.211" level="INFO">${random} = 31296</msg>
<status status="PASS" starttime="20210720 20:27:30.210" endtime="20210720 20:27:30.211"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:27:30.213" level="INFO">${PREFIX} = 31296</msg>
<status status="PASS" starttime="20210720 20:27:30.211" endtime="20210720 20:27:30.213"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.210" endtime="20210720 20:27:30.213"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.210" endtime="20210720 20:27:30.213"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:30.216" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:30.219" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:27:30.220" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:27:30.214" endtime="20210720 20:27:30.220"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:27:30.221" endtime="20210720 20:27:30.222"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:30.225" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:30.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:30.379" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:27:30.223" endtime="20210720 20:27:30.379"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:30.388" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:30.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:30.842" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:27:30.384" endtime="20210720 20:27:30.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:30.844" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:27:30.843" endtime="20210720 20:27:30.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:30.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:30.844" endtime="20210720 20:27:30.844"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.383" endtime="20210720 20:27:30.845"/>
</kw>
<msg timestamp="20210720 20:27:30.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:30.383" endtime="20210720 20:27:30.845"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.382" endtime="20210720 20:27:30.845"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.381" endtime="20210720 20:27:30.845"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.380" endtime="20210720 20:27:30.846"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.213" endtime="20210720 20:27:30.846"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.213" endtime="20210720 20:27:30.846"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:30.853" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:30.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:30.859" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:27:30.850" endtime="20210720 20:27:30.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:30.860" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:27:30.859" endtime="20210720 20:27:30.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:30.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:30.861" endtime="20210720 20:27:30.861"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.849" endtime="20210720 20:27:30.862"/>
</kw>
<msg timestamp="20210720 20:27:30.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:30.848" endtime="20210720 20:27:30.862"/>
</kw>
<msg timestamp="20210720 20:27:30.863" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:27:30.848" endtime="20210720 20:27:30.863"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:27:30.866" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:27:30.863" endtime="20210720 20:27:30.866"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:30.873" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:30.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:30.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:30.870" endtime="20210720 20:27:30.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:30.883" level="INFO"/>
<status status="PASS" starttime="20210720 20:27:30.882" endtime="20210720 20:27:30.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:30.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:30.884" endtime="20210720 20:27:30.884"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.869" endtime="20210720 20:27:30.885"/>
</kw>
<msg timestamp="20210720 20:27:30.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:30.868" endtime="20210720 20:27:30.886"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.867" endtime="20210720 20:27:30.886"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.867" endtime="20210720 20:27:30.886"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.847" endtime="20210720 20:27:30.887"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.847" endtime="20210720 20:27:30.887"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:30.894" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:37.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:37.549" level="INFO">${output} = 2021-07-20 20:27:36,170 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:27:30.891" endtime="20210720 20:27:37.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:37.551" level="INFO">2021-07-20 20:27:36,170 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:27:37.550" endtime="20210720 20:27:37.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:37.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:37.552" endtime="20210720 20:27:37.553"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.890" endtime="20210720 20:27:37.554"/>
</kw>
<msg timestamp="20210720 20:27:37.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:30.890" endtime="20210720 20:27:37.555"/>
</kw>
<msg timestamp="20210720 20:27:37.555" level="INFO">${result} = 2021-07-20 20:27:36,170 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:27:30.889" endtime="20210720 20:27:37.555"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:27:37.557" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:27:37.556" endtime="20210720 20:27:37.557"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:27:37.559" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:27:37.558" endtime="20210720 20:27:37.559"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:27:37.560" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:27:37.559" endtime="20210720 20:27:37.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:27:37.563" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:27:37.561" endtime="20210720 20:27:37.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:27:37.565" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:27:37.563" endtime="20210720 20:27:37.565"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:37.571" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:37.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:37.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:37.568" endtime="20210720 20:27:37.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:37.988" level="INFO"/>
<status status="PASS" starttime="20210720 20:27:37.986" endtime="20210720 20:27:37.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:37.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:37.989" endtime="20210720 20:27:37.990"/>
</kw>
<status status="PASS" starttime="20210720 20:27:37.567" endtime="20210720 20:27:37.991"/>
</kw>
<msg timestamp="20210720 20:27:37.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:37.566" endtime="20210720 20:27:37.991"/>
</kw>
<status status="PASS" starttime="20210720 20:27:37.565" endtime="20210720 20:27:37.992"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:38.000" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:38.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:38.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:37.996" endtime="20210720 20:27:38.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:38.592" level="INFO"/>
<status status="PASS" starttime="20210720 20:27:38.591" endtime="20210720 20:27:38.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:38.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:38.593" endtime="20210720 20:27:38.595"/>
</kw>
<status status="PASS" starttime="20210720 20:27:37.995" endtime="20210720 20:27:38.596"/>
</kw>
<msg timestamp="20210720 20:27:38.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:37.994" endtime="20210720 20:27:38.597"/>
</kw>
<status status="PASS" starttime="20210720 20:27:37.993" endtime="20210720 20:27:38.597"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:38.602" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:39.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:39.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:38.599" endtime="20210720 20:27:39.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:39.015" level="INFO"/>
<status status="PASS" starttime="20210720 20:27:39.014" endtime="20210720 20:27:39.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:39.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:39.016" endtime="20210720 20:27:39.017"/>
</kw>
<status status="PASS" starttime="20210720 20:27:38.598" endtime="20210720 20:27:39.018"/>
</kw>
<msg timestamp="20210720 20:27:39.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:38.598" endtime="20210720 20:27:39.019"/>
</kw>
<status status="PASS" starttime="20210720 20:27:38.597" endtime="20210720 20:27:39.019"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:39.027" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:39.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:39.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:39.023" endtime="20210720 20:27:39.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:39.435" level="INFO"/>
<status status="PASS" starttime="20210720 20:27:39.433" endtime="20210720 20:27:39.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:39.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:39.435" endtime="20210720 20:27:39.436"/>
</kw>
<status status="PASS" starttime="20210720 20:27:39.021" endtime="20210720 20:27:39.437"/>
</kw>
<msg timestamp="20210720 20:27:39.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:39.021" endtime="20210720 20:27:39.438"/>
</kw>
<status status="PASS" starttime="20210720 20:27:39.020" endtime="20210720 20:27:39.438"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.888" endtime="20210720 20:27:39.439"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.887" endtime="20210720 20:27:39.439"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:27:39.440" endtime="20210720 20:27:39.441"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.846" endtime="20210720 20:27:39.441"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.846" endtime="20210720 20:27:39.442"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:27:39.445" level="INFO">${postfix} = 38044</msg>
<status status="PASS" starttime="20210720 20:27:39.444" endtime="20210720 20:27:39.445"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:27:39.447" level="INFO">${bucket} = bucket-38044</msg>
<status status="PASS" starttime="20210720 20:27:39.446" endtime="20210720 20:27:39.447"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:39.452" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-38044 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:39.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:39.981" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-38044"
}</msg>
<status status="PASS" starttime="20210720 20:27:39.449" endtime="20210720 20:27:39.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:39.983" level="INFO">{
    "Location": "http://s3g:9878/bucket-38044"
}</msg>
<status status="PASS" starttime="20210720 20:27:39.982" endtime="20210720 20:27:39.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:39.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:39.984" endtime="20210720 20:27:39.985"/>
</kw>
<status status="PASS" starttime="20210720 20:27:39.449" endtime="20210720 20:27:39.985"/>
</kw>
<msg timestamp="20210720 20:27:39.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:39.449" endtime="20210720 20:27:39.986"/>
</kw>
<msg timestamp="20210720 20:27:39.986" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-38044"
}</msg>
<status status="PASS" starttime="20210720 20:27:39.448" endtime="20210720 20:27:39.986"/>
</kw>
<msg timestamp="20210720 20:27:39.987" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-38044"
}</msg>
<status status="PASS" starttime="20210720 20:27:39.448" endtime="20210720 20:27:39.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:27:39.988" endtime="20210720 20:27:39.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:27:39.989" endtime="20210720 20:27:39.990"/>
</kw>
<status status="PASS" starttime="20210720 20:27:39.447" endtime="20210720 20:27:39.990"/>
</kw>
<status status="PASS" starttime="20210720 20:27:39.443" endtime="20210720 20:27:39.991"/>
</kw>
<msg timestamp="20210720 20:27:39.991" level="INFO">${BUCKET} = bucket-38044</msg>
<status status="PASS" starttime="20210720 20:27:39.442" endtime="20210720 20:27:39.991"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:27:39.992" level="INFO">${BUCKET} = bucket-38044</msg>
<status status="PASS" starttime="20210720 20:27:39.991" endtime="20210720 20:27:39.992"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:27:39.992" endtime="20210720 20:27:39.992"/>
</kw>
<status status="PASS" starttime="20210720 20:27:30.209" endtime="20210720 20:27:39.992"/>
</kw>
<test id="s1-s3-s10-t1" name="Delete file with multi delete">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:40.001" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210720 20:27:40.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:40.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:39.997" endtime="20210720 20:27:40.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:40.011" level="INFO"/>
<status status="PASS" starttime="20210720 20:27:40.009" endtime="20210720 20:27:40.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:40.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:40.011" endtime="20210720 20:27:40.012"/>
</kw>
<status status="PASS" starttime="20210720 20:27:39.995" endtime="20210720 20:27:40.013"/>
</kw>
<msg timestamp="20210720 20:27:40.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:39.995" endtime="20210720 20:27:40.013"/>
</kw>
<status status="PASS" starttime="20210720 20:27:39.994" endtime="20210720 20:27:40.014"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:40.019" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-38044 --key 31296/multidelete/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:40.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:40.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:40.017" endtime="20210720 20:27:40.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:40.688" level="INFO"/>
<status status="PASS" starttime="20210720 20:27:40.688" endtime="20210720 20:27:40.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:40.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:40.689" endtime="20210720 20:27:40.689"/>
</kw>
<status status="PASS" starttime="20210720 20:27:40.016" endtime="20210720 20:27:40.689"/>
</kw>
<msg timestamp="20210720 20:27:40.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:40.016" endtime="20210720 20:27:40.690"/>
</kw>
<msg timestamp="20210720 20:27:40.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:40.015" endtime="20210720 20:27:40.690"/>
</kw>
<msg timestamp="20210720 20:27:40.690" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:27:40.014" endtime="20210720 20:27:40.690"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:40.698" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-38044 --key 31296/multidelete/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:27:41.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:27:41.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:40.694" endtime="20210720 20:27:41.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:27:41.470" level="INFO"/>
<status status="PASS" starttime="20210720 20:27:41.468" endtime="20210720 20:27:41.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:27:41.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:27:41.470" endtime="20210720 20:27:41.472"/>
</kw>
<status status="PASS" starttime="20210720 20:27:40.693" endtime="20210720 20:27:41.472"/>
</kw>
<msg timestamp="20210720 20:27:41.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:40.692" endtime="20210720 20:27:41.472"/>
</kw>
<msg timestamp="20210720 20:27:41.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:40.691" endtime="20210720 20:27:41.473"/>
</kw>
<msg timestamp="20210720 20:27:41.473" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:27:40.691" endtime="20210720 20:27:41.473"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:27:41.478" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-38044 --key 31296/multidelete/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:45.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:45.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:41.475" endtime="20210720 20:28:45.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:45.531" level="INFO"/>
<status status="PASS" starttime="20210720 20:28:45.530" endtime="20210720 20:28:45.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:45.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:45.531" endtime="20210720 20:28:45.533"/>
</kw>
<status status="PASS" starttime="20210720 20:27:41.475" endtime="20210720 20:28:45.533"/>
</kw>
<msg timestamp="20210720 20:28:45.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:27:41.475" endtime="20210720 20:28:45.534"/>
</kw>
<msg timestamp="20210720 20:28:45.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:27:41.474" endtime="20210720 20:28:45.534"/>
</kw>
<msg timestamp="20210720 20:28:45.535" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:27:41.473" endtime="20210720 20:28:45.535"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:45.548" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-38044 --prefix 31296/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:46.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:46.089" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:27:40.619Z", 
            "ETag": "2021-07-20T20:27:40.619Z", 
            "StorageClass": "STANDARD", 
            "Key": "312...</msg>
<status status="PASS" starttime="20210720 20:28:45.540" endtime="20210720 20:28:46.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:46.091" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-20T20:27:40.619Z", 
            "ETag": "2021-07-20T20:27:40.619Z", 
            "StorageClass": "STANDARD", 
            "Key": "31296/multidelete/f1", 
            "Size": 29
        }, 
        {
            "LastModified": "2021-07-20T20:27:41.376Z", 
            "ETag": "2021-07-20T20:27:41.376Z", 
            "StorageClass": "STANDARD", 
            "Key": "31296/multidelete/f2", 
            "Size": 29
        }, 
        {
            "LastModified": "2021-07-20T20:28:45.395Z", 
            "ETag": "2021-07-20T20:28:45.395Z", 
            "StorageClass": "STANDARD", 
            "Key": "31296/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210720 20:28:46.090" endtime="20210720 20:28:46.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:46.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:46.092" endtime="20210720 20:28:46.093"/>
</kw>
<status status="PASS" starttime="20210720 20:28:45.538" endtime="20210720 20:28:46.093"/>
</kw>
<msg timestamp="20210720 20:28:46.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:45.538" endtime="20210720 20:28:46.094"/>
</kw>
<msg timestamp="20210720 20:28:46.095" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:27:40.619Z", 
            "ETag": "2021-07-20T20:27:40.619Z", 
            "StorageClass": "STANDARD", 
            "Key": "312...</msg>
<status status="PASS" starttime="20210720 20:28:45.537" endtime="20210720 20:28:46.095"/>
</kw>
<msg timestamp="20210720 20:28:46.095" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:27:40.619Z", 
            "ETag": "2021-07-20T20:27:40.619Z", 
            "StorageClass": "STANDARD", 
            "Key": "312...</msg>
<status status="PASS" starttime="20210720 20:28:45.535" endtime="20210720 20:28:46.095"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:46.096" endtime="20210720 20:28:46.097"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:46.097" endtime="20210720 20:28:46.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:46.098" endtime="20210720 20:28:46.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:46.099" endtime="20210720 20:28:46.100"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:46.100" endtime="20210720 20:28:46.101"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/f1},{Key=${PREFIX}/multidelete/f2},{Key=${PREFIX}/multidelete/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:46.109" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket bucket-38044 --delete 'Objects=[{Key=31296/multidelete/f1},{Key=31296/multidelete/f2},{Key=31296/multidelete/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:46.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:46.748" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "31296/multidelete/f1"
        }, 
        {
            "Key": "31296/multidelete/f2"
        }, 
        {
            "Key": "31296/multidelete/f4"
 ...</msg>
<status status="PASS" starttime="20210720 20:28:46.105" endtime="20210720 20:28:46.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:46.751" level="INFO">{
    "Deleted": [
        {
            "Key": "31296/multidelete/f1"
        }, 
        {
            "Key": "31296/multidelete/f2"
        }, 
        {
            "Key": "31296/multidelete/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20210720 20:28:46.749" endtime="20210720 20:28:46.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:46.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:46.751" endtime="20210720 20:28:46.753"/>
</kw>
<status status="PASS" starttime="20210720 20:28:46.104" endtime="20210720 20:28:46.754"/>
</kw>
<msg timestamp="20210720 20:28:46.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:46.104" endtime="20210720 20:28:46.754"/>
</kw>
<msg timestamp="20210720 20:28:46.755" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "31296/multidelete/f1"
        }, 
        {
            "Key": "31296/multidelete/f2"
        }, 
        {
            "Key": "31296/multidelete/f4"
 ...</msg>
<status status="PASS" starttime="20210720 20:28:46.102" endtime="20210720 20:28:46.755"/>
</kw>
<msg timestamp="20210720 20:28:46.756" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "31296/multidelete/f1"
        }, 
        {
            "Key": "31296/multidelete/f2"
        }, 
        {
            "Key": "31296/multidelete/f4"
 ...</msg>
<status status="PASS" starttime="20210720 20:28:46.101" endtime="20210720 20:28:46.756"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:46.756" endtime="20210720 20:28:46.757"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:46.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-38044 --prefix 31296/multidelete/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:47.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:47.351" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:28:45.395Z", 
            "ETag": "2021-07-20T20:28:45.395Z", 
            "StorageClass": "STANDARD", 
            "Key": "312...</msg>
<status status="PASS" starttime="20210720 20:28:46.762" endtime="20210720 20:28:47.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:47.354" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-20T20:28:45.395Z", 
            "ETag": "2021-07-20T20:28:45.395Z", 
            "StorageClass": "STANDARD", 
            "Key": "31296/multidelete/f3", 
            "Size": 29
        }
    ]
}</msg>
<status status="PASS" starttime="20210720 20:28:47.352" endtime="20210720 20:28:47.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:47.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:47.354" endtime="20210720 20:28:47.355"/>
</kw>
<status status="PASS" starttime="20210720 20:28:46.760" endtime="20210720 20:28:47.356"/>
</kw>
<msg timestamp="20210720 20:28:47.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:46.760" endtime="20210720 20:28:47.357"/>
</kw>
<msg timestamp="20210720 20:28:47.358" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:28:45.395Z", 
            "ETag": "2021-07-20T20:28:45.395Z", 
            "StorageClass": "STANDARD", 
            "Key": "312...</msg>
<status status="PASS" starttime="20210720 20:28:46.759" endtime="20210720 20:28:47.358"/>
</kw>
<msg timestamp="20210720 20:28:47.358" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:28:45.395Z", 
            "ETag": "2021-07-20T20:28:45.395Z", 
            "StorageClass": "STANDARD", 
            "Key": "312...</msg>
<status status="PASS" starttime="20210720 20:28:46.757" endtime="20210720 20:28:47.359"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:47.359" endtime="20210720 20:28:47.360"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:47.361" endtime="20210720 20:28:47.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:47.361" endtime="20210720 20:28:47.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:47.363" endtime="20210720 20:28:47.364"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:47.364" endtime="20210720 20:28:47.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:27:39.993" endtime="20210720 20:28:47.365"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210720 20:27:30.190" endtime="20210720 20:28:47.367"/>
</suite>
<suite id="s1-s3-s11" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:28:47.390" level="INFO">${random} = 35342</msg>
<status status="PASS" starttime="20210720 20:28:47.389" endtime="20210720 20:28:47.390"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:28:47.392" level="INFO">${PREFIX} = 35342</msg>
<status status="PASS" starttime="20210720 20:28:47.390" endtime="20210720 20:28:47.392"/>
</kw>
<status status="PASS" starttime="20210720 20:28:47.388" endtime="20210720 20:28:47.392"/>
</kw>
<status status="PASS" starttime="20210720 20:28:47.387" endtime="20210720 20:28:47.392"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:47.396" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:47.398" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:28:47.398" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:28:47.393" endtime="20210720 20:28:47.398"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:28:47.399" endtime="20210720 20:28:47.400"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:47.402" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:47.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:47.575" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:28:47.400" endtime="20210720 20:28:47.576"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:47.585" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:48.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:48.101" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:28:47.582" endtime="20210720 20:28:48.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:48.102" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:28:48.101" endtime="20210720 20:28:48.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:48.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:48.102" endtime="20210720 20:28:48.103"/>
</kw>
<status status="PASS" starttime="20210720 20:28:47.581" endtime="20210720 20:28:48.103"/>
</kw>
<msg timestamp="20210720 20:28:48.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:47.580" endtime="20210720 20:28:48.103"/>
</kw>
<status status="PASS" starttime="20210720 20:28:47.579" endtime="20210720 20:28:48.104"/>
</kw>
<status status="PASS" starttime="20210720 20:28:47.578" endtime="20210720 20:28:48.104"/>
</kw>
<status status="PASS" starttime="20210720 20:28:47.576" endtime="20210720 20:28:48.104"/>
</kw>
<status status="PASS" starttime="20210720 20:28:47.393" endtime="20210720 20:28:48.104"/>
</kw>
<status status="PASS" starttime="20210720 20:28:47.392" endtime="20210720 20:28:48.105"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:48.111" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:48.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:48.117" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:28:48.108" endtime="20210720 20:28:48.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:48.119" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:28:48.118" endtime="20210720 20:28:48.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:48.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:48.119" endtime="20210720 20:28:48.121"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.107" endtime="20210720 20:28:48.121"/>
</kw>
<msg timestamp="20210720 20:28:48.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:48.107" endtime="20210720 20:28:48.122"/>
</kw>
<msg timestamp="20210720 20:28:48.122" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:28:48.107" endtime="20210720 20:28:48.123"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:28:48.126" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:28:48.123" endtime="20210720 20:28:48.126"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:48.133" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:48.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:48.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:28:48.130" endtime="20210720 20:28:48.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:48.189" level="INFO"/>
<status status="PASS" starttime="20210720 20:28:48.189" endtime="20210720 20:28:48.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:48.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:48.189" endtime="20210720 20:28:48.190"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.129" endtime="20210720 20:28:48.190"/>
</kw>
<msg timestamp="20210720 20:28:48.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:48.129" endtime="20210720 20:28:48.191"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.128" endtime="20210720 20:28:48.191"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.127" endtime="20210720 20:28:48.191"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.106" endtime="20210720 20:28:48.191"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.106" endtime="20210720 20:28:48.191"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:48.197" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:55.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:55.571" level="INFO">${output} = 2021-07-20 20:28:54,384 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:28:48.194" endtime="20210720 20:28:55.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:55.573" level="INFO">2021-07-20 20:28:54,384 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:28:55.572" endtime="20210720 20:28:55.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:55.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:55.573" endtime="20210720 20:28:55.574"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.193" endtime="20210720 20:28:55.574"/>
</kw>
<msg timestamp="20210720 20:28:55.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:48.193" endtime="20210720 20:28:55.574"/>
</kw>
<msg timestamp="20210720 20:28:55.575" level="INFO">${result} = 2021-07-20 20:28:54,384 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:28:48.192" endtime="20210720 20:28:55.575"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:28:55.575" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:28:55.575" endtime="20210720 20:28:55.575"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:28:55.576" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:28:55.576" endtime="20210720 20:28:55.576"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:28:55.577" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:28:55.577" endtime="20210720 20:28:55.577"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:28:55.579" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:28:55.577" endtime="20210720 20:28:55.579"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:28:55.580" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:28:55.579" endtime="20210720 20:28:55.580"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:55.584" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:55.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:55.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:28:55.582" endtime="20210720 20:28:55.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:55.987" level="INFO"/>
<status status="PASS" starttime="20210720 20:28:55.987" endtime="20210720 20:28:55.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:55.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:55.987" endtime="20210720 20:28:55.988"/>
</kw>
<status status="PASS" starttime="20210720 20:28:55.581" endtime="20210720 20:28:55.988"/>
</kw>
<msg timestamp="20210720 20:28:55.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:55.581" endtime="20210720 20:28:55.989"/>
</kw>
<status status="PASS" starttime="20210720 20:28:55.580" endtime="20210720 20:28:55.989"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:55.994" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:56.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:56.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:28:55.991" endtime="20210720 20:28:56.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:56.411" level="INFO"/>
<status status="PASS" starttime="20210720 20:28:56.410" endtime="20210720 20:28:56.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:56.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:56.412" endtime="20210720 20:28:56.413"/>
</kw>
<status status="PASS" starttime="20210720 20:28:55.991" endtime="20210720 20:28:56.414"/>
</kw>
<msg timestamp="20210720 20:28:56.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:55.990" endtime="20210720 20:28:56.414"/>
</kw>
<status status="PASS" starttime="20210720 20:28:55.989" endtime="20210720 20:28:56.415"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:56.422" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:56.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:56.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:28:56.418" endtime="20210720 20:28:56.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:56.827" level="INFO"/>
<status status="PASS" starttime="20210720 20:28:56.826" endtime="20210720 20:28:56.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:56.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:56.828" endtime="20210720 20:28:56.829"/>
</kw>
<status status="PASS" starttime="20210720 20:28:56.417" endtime="20210720 20:28:56.829"/>
</kw>
<msg timestamp="20210720 20:28:56.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:56.416" endtime="20210720 20:28:56.830"/>
</kw>
<status status="PASS" starttime="20210720 20:28:56.415" endtime="20210720 20:28:56.830"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:56.837" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:57.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:57.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:28:56.833" endtime="20210720 20:28:57.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:57.201" level="INFO"/>
<status status="PASS" starttime="20210720 20:28:57.198" endtime="20210720 20:28:57.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:57.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:57.202" endtime="20210720 20:28:57.202"/>
</kw>
<status status="PASS" starttime="20210720 20:28:56.832" endtime="20210720 20:28:57.203"/>
</kw>
<msg timestamp="20210720 20:28:57.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:56.832" endtime="20210720 20:28:57.203"/>
</kw>
<status status="PASS" starttime="20210720 20:28:56.831" endtime="20210720 20:28:57.203"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.192" endtime="20210720 20:28:57.203"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.191" endtime="20210720 20:28:57.203"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:28:57.204" endtime="20210720 20:28:57.204"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.105" endtime="20210720 20:28:57.204"/>
</kw>
<status status="PASS" starttime="20210720 20:28:48.105" endtime="20210720 20:28:57.204"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:28:57.206" level="INFO">${postfix} = 99470</msg>
<status status="PASS" starttime="20210720 20:28:57.205" endtime="20210720 20:28:57.206"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:28:57.206" level="INFO">${bucket} = bucket-99470</msg>
<status status="PASS" starttime="20210720 20:28:57.206" endtime="20210720 20:28:57.206"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:57.214" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-99470 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:28:57.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:57.861" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-99470"
}</msg>
<status status="PASS" starttime="20210720 20:28:57.211" endtime="20210720 20:28:57.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:57.864" level="INFO">{
    "Location": "http://s3g:9878/bucket-99470"
}</msg>
<status status="PASS" starttime="20210720 20:28:57.862" endtime="20210720 20:28:57.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:57.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:57.867" endtime="20210720 20:28:57.869"/>
</kw>
<status status="PASS" starttime="20210720 20:28:57.209" endtime="20210720 20:28:57.869"/>
</kw>
<msg timestamp="20210720 20:28:57.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:57.209" endtime="20210720 20:28:57.869"/>
</kw>
<msg timestamp="20210720 20:28:57.870" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-99470"
}</msg>
<status status="PASS" starttime="20210720 20:28:57.208" endtime="20210720 20:28:57.871"/>
</kw>
<msg timestamp="20210720 20:28:57.872" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-99470"
}</msg>
<status status="PASS" starttime="20210720 20:28:57.207" endtime="20210720 20:28:57.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:57.873" endtime="20210720 20:28:57.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:28:57.874" endtime="20210720 20:28:57.875"/>
</kw>
<status status="PASS" starttime="20210720 20:28:57.206" endtime="20210720 20:28:57.876"/>
</kw>
<status status="PASS" starttime="20210720 20:28:57.205" endtime="20210720 20:28:57.876"/>
</kw>
<msg timestamp="20210720 20:28:57.876" level="INFO">${BUCKET} = bucket-99470</msg>
<status status="PASS" starttime="20210720 20:28:57.204" endtime="20210720 20:28:57.877"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:28:57.878" level="INFO">${BUCKET} = bucket-99470</msg>
<status status="PASS" starttime="20210720 20:28:57.877" endtime="20210720 20:28:57.878"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:28:57.879" endtime="20210720 20:28:57.879"/>
</kw>
<status status="PASS" starttime="20210720 20:28:47.387" endtime="20210720 20:28:57.879"/>
</kw>
<test id="s1-s3-s11-t1" name="Put object to s3">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:57.888" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210720 20:28:57.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:28:57.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:28:57.884" endtime="20210720 20:28:57.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:28:57.896" level="INFO"/>
<status status="PASS" starttime="20210720 20:28:57.895" endtime="20210720 20:28:57.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:28:57.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:28:57.897" endtime="20210720 20:28:57.902"/>
</kw>
<status status="PASS" starttime="20210720 20:28:57.883" endtime="20210720 20:28:57.902"/>
</kw>
<msg timestamp="20210720 20:28:57.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:57.882" endtime="20210720 20:28:57.903"/>
</kw>
<status status="PASS" starttime="20210720 20:28:57.882" endtime="20210720 20:28:57.903"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:28:57.909" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-99470 --key 35342/putobject/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:01.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:01.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:28:57.906" endtime="20210720 20:32:01.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:01.106" level="INFO"/>
<status status="PASS" starttime="20210720 20:32:01.105" endtime="20210720 20:32:01.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:01.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:01.106" endtime="20210720 20:32:01.107"/>
</kw>
<status status="PASS" starttime="20210720 20:28:57.905" endtime="20210720 20:32:01.107"/>
</kw>
<msg timestamp="20210720 20:32:01.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:28:57.905" endtime="20210720 20:32:01.107"/>
</kw>
<msg timestamp="20210720 20:32:01.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:28:57.904" endtime="20210720 20:32:01.112"/>
</kw>
<msg timestamp="20210720 20:32:01.114" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:28:57.903" endtime="20210720 20:32:01.114"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:01.129" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-99470 --prefix 35342/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:01.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:01.849" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:32:00.906Z", 
            "ETag": "2021-07-20T20:32:00.906Z", 
            "StorageClass": "STANDARD", 
            "Key": "353...</msg>
<status status="PASS" starttime="20210720 20:32:01.125" endtime="20210720 20:32:01.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:01.851" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-20T20:32:00.906Z", 
            "ETag": "2021-07-20T20:32:00.906Z", 
            "StorageClass": "STANDARD", 
            "Key": "35342/putobject/f1", 
            "Size": 11
        }
    ]
}</msg>
<status status="PASS" starttime="20210720 20:32:01.850" endtime="20210720 20:32:01.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:01.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:01.851" endtime="20210720 20:32:01.852"/>
</kw>
<status status="PASS" starttime="20210720 20:32:01.118" endtime="20210720 20:32:01.853"/>
</kw>
<msg timestamp="20210720 20:32:01.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:01.118" endtime="20210720 20:32:01.853"/>
</kw>
<msg timestamp="20210720 20:32:01.854" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:32:00.906Z", 
            "ETag": "2021-07-20T20:32:00.906Z", 
            "StorageClass": "STANDARD", 
            "Key": "353...</msg>
<status status="PASS" starttime="20210720 20:32:01.117" endtime="20210720 20:32:01.854"/>
</kw>
<msg timestamp="20210720 20:32:01.854" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:32:00.906Z", 
            "ETag": "2021-07-20T20:32:00.906Z", 
            "StorageClass": "STANDARD", 
            "Key": "353...</msg>
<status status="PASS" starttime="20210720 20:32:01.114" endtime="20210720 20:32:01.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:01.854" endtime="20210720 20:32:01.855"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:01.862" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:01.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:01.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:32:01.858" endtime="20210720 20:32:01.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:01.868" level="INFO"/>
<status status="PASS" starttime="20210720 20:32:01.867" endtime="20210720 20:32:01.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:01.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:01.868" endtime="20210720 20:32:01.869"/>
</kw>
<status status="PASS" starttime="20210720 20:32:01.857" endtime="20210720 20:32:01.869"/>
</kw>
<msg timestamp="20210720 20:32:01.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:01.857" endtime="20210720 20:32:01.870"/>
</kw>
<status status="PASS" starttime="20210720 20:32:01.855" endtime="20210720 20:32:01.870"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:01.875" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-99470 --key 35342/putobject/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:02.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:02.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:32:01.873" endtime="20210720 20:32:02.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:02.518" level="INFO"/>
<status status="PASS" starttime="20210720 20:32:02.517" endtime="20210720 20:32:02.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:02.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:02.518" endtime="20210720 20:32:02.518"/>
</kw>
<status status="PASS" starttime="20210720 20:32:01.872" endtime="20210720 20:32:02.519"/>
</kw>
<msg timestamp="20210720 20:32:02.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:01.872" endtime="20210720 20:32:02.519"/>
</kw>
<msg timestamp="20210720 20:32:02.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:32:01.871" endtime="20210720 20:32:02.519"/>
</kw>
<msg timestamp="20210720 20:32:02.520" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210720 20:32:01.870" endtime="20210720 20:32:02.520"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:02.527" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket bucket-99470 --prefix 35342/putobject/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:03.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:03.094" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:32:00.906Z", 
            "ETag": "2021-07-20T20:32:00.906Z", 
            "StorageClass": "STANDARD", 
            "Key": "353...</msg>
<status status="PASS" starttime="20210720 20:32:02.523" endtime="20210720 20:32:03.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:03.096" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-07-20T20:32:00.906Z", 
            "ETag": "2021-07-20T20:32:00.906Z", 
            "StorageClass": "STANDARD", 
            "Key": "35342/putobject/f1", 
            "Size": 11
        }, 
        {
            "LastModified": "2021-07-20T20:32:02.422Z", 
            "ETag": "2021-07-20T20:32:02.422Z", 
            "StorageClass": "STANDARD", 
            "Key": "35342/putobject/zerobyte", 
            "Size": 0
        }
    ]
}</msg>
<status status="PASS" starttime="20210720 20:32:03.095" endtime="20210720 20:32:03.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:03.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:03.096" endtime="20210720 20:32:03.097"/>
</kw>
<status status="PASS" starttime="20210720 20:32:02.522" endtime="20210720 20:32:03.097"/>
</kw>
<msg timestamp="20210720 20:32:03.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:02.522" endtime="20210720 20:32:03.097"/>
</kw>
<msg timestamp="20210720 20:32:03.098" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:32:00.906Z", 
            "ETag": "2021-07-20T20:32:00.906Z", 
            "StorageClass": "STANDARD", 
            "Key": "353...</msg>
<status status="PASS" starttime="20210720 20:32:02.521" endtime="20210720 20:32:03.098"/>
</kw>
<msg timestamp="20210720 20:32:03.098" level="INFO">${result} = {
    "Contents": [
        {
            "LastModified": "2021-07-20T20:32:00.906Z", 
            "ETag": "2021-07-20T20:32:00.906Z", 
            "StorageClass": "STANDARD", 
            "Key": "353...</msg>
<status status="PASS" starttime="20210720 20:32:02.520" endtime="20210720 20:32:03.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:03.098" endtime="20210720 20:32:03.099"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:28:57.880" endtime="20210720 20:32:03.099"/>
</test>
<test id="s1-s3-s11-t2" name="Get object from s3">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:03.107" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:03.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:03.687" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:0...</msg>
<status status="PASS" starttime="20210720 20:32:03.104" endtime="20210720 20:32:03.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:03.690" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:03 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:03.688" endtime="20210720 20:32:03.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:03.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:03.690" endtime="20210720 20:32:03.691"/>
</kw>
<status status="PASS" starttime="20210720 20:32:03.102" endtime="20210720 20:32:03.691"/>
</kw>
<msg timestamp="20210720 20:32:03.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:03.102" endtime="20210720 20:32:03.692"/>
</kw>
<msg timestamp="20210720 20:32:03.695" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:0...</msg>
<status status="PASS" starttime="20210720 20:32:03.101" endtime="20210720 20:32:03.695"/>
</kw>
<msg timestamp="20210720 20:32:03.696" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:0...</msg>
<status status="PASS" starttime="20210720 20:32:03.101" endtime="20210720 20:32:03.696"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:03.701" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:03.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:03.704" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210720 20:32:03.698" endtime="20210720 20:32:03.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:03.705" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210720 20:32:03.705" endtime="20210720 20:32:03.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:03.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:03.706" endtime="20210720 20:32:03.706"/>
</kw>
<status status="PASS" starttime="20210720 20:32:03.697" endtime="20210720 20:32:03.707"/>
</kw>
<msg timestamp="20210720 20:32:03.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:03.697" endtime="20210720 20:32:03.707"/>
</kw>
<msg timestamp="20210720 20:32:03.707" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210720 20:32:03.696" endtime="20210720 20:32:03.707"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:03.713" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:03.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:03.715" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210720 20:32:03.709" endtime="20210720 20:32:03.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:03.716" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210720 20:32:03.716" endtime="20210720 20:32:03.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:03.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:03.717" endtime="20210720 20:32:03.717"/>
</kw>
<status status="PASS" starttime="20210720 20:32:03.708" endtime="20210720 20:32:03.718"/>
</kw>
<msg timestamp="20210720 20:32:03.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:03.708" endtime="20210720 20:32:03.718"/>
</kw>
<msg timestamp="20210720 20:32:03.718" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20210720 20:32:03.707" endtime="20210720 20:32:03.718"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:03.718" endtime="20210720 20:32:03.719"/>
</kw>
<status status="PASS" starttime="20210720 20:32:03.696" endtime="20210720 20:32:03.719"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:03.100" endtime="20210720 20:32:03.719"/>
</test>
<test id="s1-s3-s11-t3" name="Get Partial object from s3 with both start and endoffset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:03.727" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:04.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:04.289" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:03.724" endtime="20210720 20:32:04.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:04.291" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Tue, 20 Jul 2021 20:32:04 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 5, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:04.290" endtime="20210720 20:32:04.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:04.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:04.291" endtime="20210720 20:32:04.292"/>
</kw>
<status status="PASS" starttime="20210720 20:32:03.723" endtime="20210720 20:32:04.292"/>
</kw>
<msg timestamp="20210720 20:32:04.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:03.723" endtime="20210720 20:32:04.292"/>
</kw>
<msg timestamp="20210720 20:32:04.293" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:03.722" endtime="20210720 20:32:04.293"/>
</kw>
<msg timestamp="20210720 20:32:04.293" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-4/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:03.722" endtime="20210720 20:32:04.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:04.293" endtime="20210720 20:32:04.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:04.294" endtime="20210720 20:32:04.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:04.294" endtime="20210720 20:32:04.295"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:04.301" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20210720 20:32:04.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:04.304" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20210720 20:32:04.299" endtime="20210720 20:32:04.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:04.305" level="INFO">Rando</msg>
<status status="PASS" starttime="20210720 20:32:04.304" endtime="20210720 20:32:04.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:04.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:04.305" endtime="20210720 20:32:04.306"/>
</kw>
<status status="PASS" starttime="20210720 20:32:04.296" endtime="20210720 20:32:04.306"/>
</kw>
<msg timestamp="20210720 20:32:04.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:04.296" endtime="20210720 20:32:04.306"/>
</kw>
<msg timestamp="20210720 20:32:04.307" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20210720 20:32:04.295" endtime="20210720 20:32:04.307"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:04.310" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:04.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:04.313" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20210720 20:32:04.308" endtime="20210720 20:32:04.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:04.314" level="INFO">Rando</msg>
<status status="PASS" starttime="20210720 20:32:04.313" endtime="20210720 20:32:04.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:04.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:04.314" endtime="20210720 20:32:04.315"/>
</kw>
<status status="PASS" starttime="20210720 20:32:04.308" endtime="20210720 20:32:04.315"/>
</kw>
<msg timestamp="20210720 20:32:04.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:04.307" endtime="20210720 20:32:04.315"/>
</kw>
<msg timestamp="20210720 20:32:04.316" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20210720 20:32:04.307" endtime="20210720 20:32:04.316"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:04.316" endtime="20210720 20:32:04.316"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:04.321" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:04.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:04.838" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:04.319" endtime="20210720 20:32:04.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:04.840" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Tue, 20 Jul 2021 20:32:04 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 3, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:04.839" endtime="20210720 20:32:04.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:04.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:04.840" endtime="20210720 20:32:04.841"/>
</kw>
<status status="PASS" starttime="20210720 20:32:04.318" endtime="20210720 20:32:04.841"/>
</kw>
<msg timestamp="20210720 20:32:04.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:04.318" endtime="20210720 20:32:04.842"/>
</kw>
<msg timestamp="20210720 20:32:04.842" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:04.317" endtime="20210720 20:32:04.842"/>
</kw>
<msg timestamp="20210720 20:32:04.842" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 2-4/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:04.317" endtime="20210720 20:32:04.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:04.842" endtime="20210720 20:32:04.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:04.843" endtime="20210720 20:32:04.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:04.843" endtime="20210720 20:32:04.844"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:04.848" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20210720 20:32:04.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:04.851" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20210720 20:32:04.846" endtime="20210720 20:32:04.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:04.852" level="INFO">ndo</msg>
<status status="PASS" starttime="20210720 20:32:04.851" endtime="20210720 20:32:04.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:04.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:04.852" endtime="20210720 20:32:04.853"/>
</kw>
<status status="PASS" starttime="20210720 20:32:04.845" endtime="20210720 20:32:04.853"/>
</kw>
<msg timestamp="20210720 20:32:04.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:04.845" endtime="20210720 20:32:04.853"/>
</kw>
<msg timestamp="20210720 20:32:04.853" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20210720 20:32:04.844" endtime="20210720 20:32:04.853"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:04.857" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:04.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:04.860" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20210720 20:32:04.855" endtime="20210720 20:32:04.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:04.861" level="INFO">ndo</msg>
<status status="PASS" starttime="20210720 20:32:04.860" endtime="20210720 20:32:04.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:04.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:04.861" endtime="20210720 20:32:04.862"/>
</kw>
<status status="PASS" starttime="20210720 20:32:04.855" endtime="20210720 20:32:04.862"/>
</kw>
<msg timestamp="20210720 20:32:04.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:04.854" endtime="20210720 20:32:04.862"/>
</kw>
<msg timestamp="20210720 20:32:04.863" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20210720 20:32:04.854" endtime="20210720 20:32:04.863"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:04.863" endtime="20210720 20:32:04.863"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:04.868" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:05.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:05.455" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:04.866" endtime="20210720 20:32:05.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:05.457" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Tue, 20 Jul 2021 20:32:05 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 9, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:05.455" endtime="20210720 20:32:05.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:05.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:05.458" endtime="20210720 20:32:05.460"/>
</kw>
<status status="PASS" starttime="20210720 20:32:04.865" endtime="20210720 20:32:05.460"/>
</kw>
<msg timestamp="20210720 20:32:05.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:04.865" endtime="20210720 20:32:05.461"/>
</kw>
<msg timestamp="20210720 20:32:05.462" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:04.864" endtime="20210720 20:32:05.462"/>
</kw>
<msg timestamp="20210720 20:32:05.463" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 2-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:04.863" endtime="20210720 20:32:05.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:05.464" endtime="20210720 20:32:05.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:05.465" endtime="20210720 20:32:05.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:05.466" endtime="20210720 20:32:05.466"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:05.475" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20210720 20:32:05.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:05.479" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20210720 20:32:05.471" endtime="20210720 20:32:05.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:05.482" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20210720 20:32:05.480" endtime="20210720 20:32:05.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:05.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:05.482" endtime="20210720 20:32:05.484"/>
</kw>
<status status="PASS" starttime="20210720 20:32:05.470" endtime="20210720 20:32:05.485"/>
</kw>
<msg timestamp="20210720 20:32:05.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:05.469" endtime="20210720 20:32:05.485"/>
</kw>
<msg timestamp="20210720 20:32:05.485" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20210720 20:32:05.467" endtime="20210720 20:32:05.485"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:05.493" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:05.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:05.497" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20210720 20:32:05.487" endtime="20210720 20:32:05.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:05.502" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20210720 20:32:05.501" endtime="20210720 20:32:05.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:05.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:05.502" endtime="20210720 20:32:05.503"/>
</kw>
<status status="PASS" starttime="20210720 20:32:05.486" endtime="20210720 20:32:05.503"/>
</kw>
<msg timestamp="20210720 20:32:05.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:05.486" endtime="20210720 20:32:05.504"/>
</kw>
<msg timestamp="20210720 20:32:05.505" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20210720 20:32:05.485" endtime="20210720 20:32:05.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:05.505" endtime="20210720 20:32:05.505"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:03.721" endtime="20210720 20:32:05.506"/>
</test>
<test id="s1-s3-s11-t4" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:05.520" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:06.319" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:32:06.320" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:05.516" endtime="20210720 20:32:06.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:06.324" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:06.323" endtime="20210720 20:32:06.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:06.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:06.325" endtime="20210720 20:32:06.331"/>
</kw>
<msg timestamp="20210720 20:32:06.331" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:05.513" endtime="20210720 20:32:06.332"/>
</kw>
<msg timestamp="20210720 20:32:06.333" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:05.512" endtime="20210720 20:32:06.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:06.333" endtime="20210720 20:32:06.335"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:05.508" endtime="20210720 20:32:06.335"/>
</test>
<test id="s1-s3-s11-t5" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:06.347" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:07.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:07.036" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:06.342" endtime="20210720 20:32:07.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:07.037" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul 2021 20:32:06 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:07.037" endtime="20210720 20:32:07.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:07.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:07.038" endtime="20210720 20:32:07.039"/>
</kw>
<status status="PASS" starttime="20210720 20:32:06.341" endtime="20210720 20:32:07.040"/>
</kw>
<msg timestamp="20210720 20:32:07.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:06.341" endtime="20210720 20:32:07.040"/>
</kw>
<msg timestamp="20210720 20:32:07.041" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:06.341" endtime="20210720 20:32:07.041"/>
</kw>
<msg timestamp="20210720 20:32:07.042" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:06.339" endtime="20210720 20:32:07.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:07.042" endtime="20210720 20:32:07.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:07.043" endtime="20210720 20:32:07.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:07.045" endtime="20210720 20:32:07.046"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:07.053" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:07.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:07.057" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.049" endtime="20210720 20:32:07.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:07.060" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.058" endtime="20210720 20:32:07.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:07.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:07.061" endtime="20210720 20:32:07.062"/>
</kw>
<status status="PASS" starttime="20210720 20:32:07.048" endtime="20210720 20:32:07.063"/>
</kw>
<msg timestamp="20210720 20:32:07.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:07.047" endtime="20210720 20:32:07.063"/>
</kw>
<msg timestamp="20210720 20:32:07.064" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.046" endtime="20210720 20:32:07.064"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:07.070" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:07.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:07.074" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.067" endtime="20210720 20:32:07.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:07.077" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.075" endtime="20210720 20:32:07.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:07.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:07.077" endtime="20210720 20:32:07.079"/>
</kw>
<status status="PASS" starttime="20210720 20:32:07.066" endtime="20210720 20:32:07.080"/>
</kw>
<msg timestamp="20210720 20:32:07.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:07.065" endtime="20210720 20:32:07.080"/>
</kw>
<msg timestamp="20210720 20:32:07.081" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.064" endtime="20210720 20:32:07.081"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:07.081" endtime="20210720 20:32:07.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:06.337" endtime="20210720 20:32:07.083"/>
</test>
<test id="s1-s3-s11-t6" name="Get Partial object from s3 with only start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:07.091" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:07.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:07.719" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:07.088" endtime="20210720 20:32:07.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:07.720" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul 2021 20:32:07 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:07.719" endtime="20210720 20:32:07.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:07.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:07.720" endtime="20210720 20:32:07.721"/>
</kw>
<status status="PASS" starttime="20210720 20:32:07.087" endtime="20210720 20:32:07.722"/>
</kw>
<msg timestamp="20210720 20:32:07.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:07.087" endtime="20210720 20:32:07.722"/>
</kw>
<msg timestamp="20210720 20:32:07.723" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:07.086" endtime="20210720 20:32:07.723"/>
</kw>
<msg timestamp="20210720 20:32:07.723" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:07.086" endtime="20210720 20:32:07.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:07.724" endtime="20210720 20:32:07.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:07.724" endtime="20210720 20:32:07.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:07.726" endtime="20210720 20:32:07.726"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:07.731" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:07.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:07.736" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.728" endtime="20210720 20:32:07.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:07.737" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.736" endtime="20210720 20:32:07.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:07.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:07.738" endtime="20210720 20:32:07.738"/>
</kw>
<status status="PASS" starttime="20210720 20:32:07.728" endtime="20210720 20:32:07.739"/>
</kw>
<msg timestamp="20210720 20:32:07.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:07.727" endtime="20210720 20:32:07.739"/>
</kw>
<msg timestamp="20210720 20:32:07.740" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.726" endtime="20210720 20:32:07.740"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:07.745" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:07.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:07.748" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.742" endtime="20210720 20:32:07.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:07.750" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.749" endtime="20210720 20:32:07.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:07.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:07.750" endtime="20210720 20:32:07.752"/>
</kw>
<status status="PASS" starttime="20210720 20:32:07.741" endtime="20210720 20:32:07.752"/>
</kw>
<msg timestamp="20210720 20:32:07.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:07.741" endtime="20210720 20:32:07.752"/>
</kw>
<msg timestamp="20210720 20:32:07.753" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:07.740" endtime="20210720 20:32:07.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:07.753" endtime="20210720 20:32:07.753"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:07.084" endtime="20210720 20:32:07.754"/>
</test>
<test id="s1-s3-s11-t7" name="Get Partial object from s3 with both start and endoffset which are equal">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:07.762" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:08.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:08.517" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:07.759" endtime="20210720 20:32:08.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:08.520" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Tue, 20 Jul 2021 20:32:08 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:08.518" endtime="20210720 20:32:08.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:08.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:08.520" endtime="20210720 20:32:08.522"/>
</kw>
<status status="PASS" starttime="20210720 20:32:07.759" endtime="20210720 20:32:08.522"/>
</kw>
<msg timestamp="20210720 20:32:08.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:07.758" endtime="20210720 20:32:08.523"/>
</kw>
<msg timestamp="20210720 20:32:08.523" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:07.758" endtime="20210720 20:32:08.524"/>
</kw>
<msg timestamp="20210720 20:32:08.525" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-0/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:07.756" endtime="20210720 20:32:08.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:08.525" endtime="20210720 20:32:08.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:08.527" endtime="20210720 20:32:08.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:08.528" endtime="20210720 20:32:08.529"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:08.539" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210720 20:32:08.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:08.545" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20210720 20:32:08.535" endtime="20210720 20:32:08.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:08.547" level="INFO">R</msg>
<status status="PASS" starttime="20210720 20:32:08.546" endtime="20210720 20:32:08.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:08.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:08.548" endtime="20210720 20:32:08.549"/>
</kw>
<status status="PASS" starttime="20210720 20:32:08.534" endtime="20210720 20:32:08.550"/>
</kw>
<msg timestamp="20210720 20:32:08.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:08.531" endtime="20210720 20:32:08.551"/>
</kw>
<msg timestamp="20210720 20:32:08.552" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20210720 20:32:08.530" endtime="20210720 20:32:08.552"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:08.564" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:08.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:08.567" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20210720 20:32:08.560" endtime="20210720 20:32:08.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:08.568" level="INFO">R</msg>
<status status="PASS" starttime="20210720 20:32:08.567" endtime="20210720 20:32:08.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:08.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:08.569" endtime="20210720 20:32:08.569"/>
</kw>
<status status="PASS" starttime="20210720 20:32:08.554" endtime="20210720 20:32:08.570"/>
</kw>
<msg timestamp="20210720 20:32:08.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:08.553" endtime="20210720 20:32:08.570"/>
</kw>
<msg timestamp="20210720 20:32:08.570" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20210720 20:32:08.552" endtime="20210720 20:32:08.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:08.570" endtime="20210720 20:32:08.571"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:08.577" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:09.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:09.223" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:08.574" endtime="20210720 20:32:09.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:09.225" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Tue, 20 Jul 2021 20:32:09 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 1, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:09.224" endtime="20210720 20:32:09.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:09.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:09.225" endtime="20210720 20:32:09.226"/>
</kw>
<status status="PASS" starttime="20210720 20:32:08.573" endtime="20210720 20:32:09.226"/>
</kw>
<msg timestamp="20210720 20:32:09.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:08.573" endtime="20210720 20:32:09.227"/>
</kw>
<msg timestamp="20210720 20:32:09.227" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:08.572" endtime="20210720 20:32:09.228"/>
</kw>
<msg timestamp="20210720 20:32:09.228" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 4-4/11", 
    "Expires": "Tue, 20 Jul 2...</msg>
<status status="PASS" starttime="20210720 20:32:08.571" endtime="20210720 20:32:09.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:09.228" endtime="20210720 20:32:09.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:09.230" endtime="20210720 20:32:09.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:09.230" endtime="20210720 20:32:09.231"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:09.235" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20210720 20:32:09.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:09.239" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20210720 20:32:09.233" endtime="20210720 20:32:09.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:09.240" level="INFO">o</msg>
<status status="PASS" starttime="20210720 20:32:09.240" endtime="20210720 20:32:09.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:09.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:09.241" endtime="20210720 20:32:09.241"/>
</kw>
<status status="PASS" starttime="20210720 20:32:09.232" endtime="20210720 20:32:09.242"/>
</kw>
<msg timestamp="20210720 20:32:09.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:09.231" endtime="20210720 20:32:09.242"/>
</kw>
<msg timestamp="20210720 20:32:09.242" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20210720 20:32:09.231" endtime="20210720 20:32:09.242"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:09.247" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:09.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:09.250" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20210720 20:32:09.244" endtime="20210720 20:32:09.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:09.252" level="INFO">o</msg>
<status status="PASS" starttime="20210720 20:32:09.251" endtime="20210720 20:32:09.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:09.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:09.253" endtime="20210720 20:32:09.253"/>
</kw>
<status status="PASS" starttime="20210720 20:32:09.244" endtime="20210720 20:32:09.254"/>
</kw>
<msg timestamp="20210720 20:32:09.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:09.243" endtime="20210720 20:32:09.254"/>
</kw>
<msg timestamp="20210720 20:32:09.255" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20210720 20:32:09.243" endtime="20210720 20:32:09.255"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:09.255" endtime="20210720 20:32:09.255"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:07.755" endtime="20210720 20:32:09.256"/>
</test>
<test id="s1-s3-s11-t8" name="Get Partial object from s3 to get last n bytes">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:09.264" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:10.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:10.057" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:09.262" endtime="20210720 20:32:10.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:10.064" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Tue, 20 Jul 2021 20:32:09 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 4, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:10.058" endtime="20210720 20:32:10.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:10.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:10.064" endtime="20210720 20:32:10.065"/>
</kw>
<status status="PASS" starttime="20210720 20:32:09.261" endtime="20210720 20:32:10.066"/>
</kw>
<msg timestamp="20210720 20:32:10.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:09.260" endtime="20210720 20:32:10.066"/>
</kw>
<msg timestamp="20210720 20:32:10.066" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:09.259" endtime="20210720 20:32:10.066"/>
</kw>
<msg timestamp="20210720 20:32:10.066" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 7-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:09.259" endtime="20210720 20:32:10.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:10.067" endtime="20210720 20:32:10.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:10.067" endtime="20210720 20:32:10.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:10.072" endtime="20210720 20:32:10.075"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:10.086" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20210720 20:32:10.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:10.093" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20210720 20:32:10.084" endtime="20210720 20:32:10.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:10.094" level="INFO">ext</msg>
<status status="PASS" starttime="20210720 20:32:10.093" endtime="20210720 20:32:10.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:10.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:10.094" endtime="20210720 20:32:10.095"/>
</kw>
<status status="PASS" starttime="20210720 20:32:10.083" endtime="20210720 20:32:10.097"/>
</kw>
<msg timestamp="20210720 20:32:10.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:10.079" endtime="20210720 20:32:10.097"/>
</kw>
<msg timestamp="20210720 20:32:10.098" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20210720 20:32:10.075" endtime="20210720 20:32:10.098"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:10.108" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:10.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:10.112" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20210720 20:32:10.103" endtime="20210720 20:32:10.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:10.113" level="INFO">ext</msg>
<status status="PASS" starttime="20210720 20:32:10.113" endtime="20210720 20:32:10.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:10.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:10.114" endtime="20210720 20:32:10.114"/>
</kw>
<status status="PASS" starttime="20210720 20:32:10.099" endtime="20210720 20:32:10.114"/>
</kw>
<msg timestamp="20210720 20:32:10.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:10.099" endtime="20210720 20:32:10.115"/>
</kw>
<msg timestamp="20210720 20:32:10.115" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20210720 20:32:10.098" endtime="20210720 20:32:10.115"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:10.115" endtime="20210720 20:32:10.118"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:10.126" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:10.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:10.809" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:10.121" endtime="20210720 20:32:10.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:10.812" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul 2021 20:32:10 GMT", 
    "CacheControl": "no-cache", 
    "ContentLength": 11, 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:10.810" endtime="20210720 20:32:10.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:10.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:10.813" endtime="20210720 20:32:10.814"/>
</kw>
<status status="PASS" starttime="20210720 20:32:10.121" endtime="20210720 20:32:10.815"/>
</kw>
<msg timestamp="20210720 20:32:10.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:10.121" endtime="20210720 20:32:10.816"/>
</kw>
<msg timestamp="20210720 20:32:10.817" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:10.120" endtime="20210720 20:32:10.817"/>
</kw>
<msg timestamp="20210720 20:32:10.817" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentRange": "bytes 0-10/11", 
    "Expires": "Tue, 20 Jul ...</msg>
<status status="PASS" starttime="20210720 20:32:10.118" endtime="20210720 20:32:10.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:10.818" endtime="20210720 20:32:10.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:10.819" endtime="20210720 20:32:10.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:10.820" endtime="20210720 20:32:10.821"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:10.828" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:10.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:10.831" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:10.824" endtime="20210720 20:32:10.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:10.833" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:10.832" endtime="20210720 20:32:10.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:10.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:10.834" endtime="20210720 20:32:10.835"/>
</kw>
<status status="PASS" starttime="20210720 20:32:10.823" endtime="20210720 20:32:10.835"/>
</kw>
<msg timestamp="20210720 20:32:10.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:10.823" endtime="20210720 20:32:10.836"/>
</kw>
<msg timestamp="20210720 20:32:10.836" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:10.821" endtime="20210720 20:32:10.836"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:10.843" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:10.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:10.846" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:10.840" endtime="20210720 20:32:10.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:10.848" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:10.847" endtime="20210720 20:32:10.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:10.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:10.848" endtime="20210720 20:32:10.849"/>
</kw>
<status status="PASS" starttime="20210720 20:32:10.839" endtime="20210720 20:32:10.849"/>
</kw>
<msg timestamp="20210720 20:32:10.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:10.838" endtime="20210720 20:32:10.850"/>
</kw>
<msg timestamp="20210720 20:32:10.850" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:10.837" endtime="20210720 20:32:10.850"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:10.851" endtime="20210720 20:32:10.851"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:09.258" endtime="20210720 20:32:10.852"/>
</test>
<test id="s1-s3-s11-t9" name="Incorrect values for end and start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:10.861" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:11.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:11.469" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:1...</msg>
<status status="PASS" starttime="20210720 20:32:10.858" endtime="20210720 20:32:11.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:11.472" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:11 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:11.471" endtime="20210720 20:32:11.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:11.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:11.474" endtime="20210720 20:32:11.475"/>
</kw>
<status status="PASS" starttime="20210720 20:32:10.857" endtime="20210720 20:32:11.477"/>
</kw>
<msg timestamp="20210720 20:32:11.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:10.857" endtime="20210720 20:32:11.477"/>
</kw>
<msg timestamp="20210720 20:32:11.477" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:1...</msg>
<status status="PASS" starttime="20210720 20:32:10.856" endtime="20210720 20:32:11.477"/>
</kw>
<msg timestamp="20210720 20:32:11.477" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:1...</msg>
<status status="PASS" starttime="20210720 20:32:10.854" endtime="20210720 20:32:11.477"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:11.478" endtime="20210720 20:32:11.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:11.478" endtime="20210720 20:32:11.479"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:11.487" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:11.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:11.492" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:11.483" endtime="20210720 20:32:11.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:11.494" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:11.493" endtime="20210720 20:32:11.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:11.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:11.494" endtime="20210720 20:32:11.495"/>
</kw>
<status status="PASS" starttime="20210720 20:32:11.480" endtime="20210720 20:32:11.495"/>
</kw>
<msg timestamp="20210720 20:32:11.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:11.479" endtime="20210720 20:32:11.495"/>
</kw>
<msg timestamp="20210720 20:32:11.495" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:11.479" endtime="20210720 20:32:11.495"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:11.504" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:11.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:11.508" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:11.500" endtime="20210720 20:32:11.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:11.510" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:11.509" endtime="20210720 20:32:11.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:11.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:11.510" endtime="20210720 20:32:11.511"/>
</kw>
<status status="PASS" starttime="20210720 20:32:11.499" endtime="20210720 20:32:11.511"/>
</kw>
<msg timestamp="20210720 20:32:11.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:11.498" endtime="20210720 20:32:11.511"/>
</kw>
<msg timestamp="20210720 20:32:11.513" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:11.496" endtime="20210720 20:32:11.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:11.514" endtime="20210720 20:32:11.515"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:11.523" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:12.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:12.149" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:1...</msg>
<status status="PASS" starttime="20210720 20:32:11.520" endtime="20210720 20:32:12.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:12.152" level="INFO">{
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:11 GMT", 
    "CacheControl": "no-cache", 
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20210720 20:32:12.151" endtime="20210720 20:32:12.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:12.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:12.153" endtime="20210720 20:32:12.158"/>
</kw>
<status status="PASS" starttime="20210720 20:32:11.519" endtime="20210720 20:32:12.158"/>
</kw>
<msg timestamp="20210720 20:32:12.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:11.518" endtime="20210720 20:32:12.158"/>
</kw>
<msg timestamp="20210720 20:32:12.158" level="INFO">${output} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:1...</msg>
<status status="PASS" starttime="20210720 20:32:11.517" endtime="20210720 20:32:12.158"/>
</kw>
<msg timestamp="20210720 20:32:12.159" level="INFO">${result} = {
    "AcceptRanges": "bytes", 
    "ContentType": "application/octet-stream", 
    "LastModified": "Tue, 20 Jul 2021 20:32:00 GMT", 
    "ContentLength": 11, 
    "Expires": "Tue, 20 Jul 2021 20:32:1...</msg>
<status status="PASS" starttime="20210720 20:32:11.516" endtime="20210720 20:32:12.159"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:12.159" endtime="20210720 20:32:12.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:12.160" endtime="20210720 20:32:12.160"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:12.173" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:12.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:12.175" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:12.166" endtime="20210720 20:32:12.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:12.177" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:12.176" endtime="20210720 20:32:12.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:12.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:12.177" endtime="20210720 20:32:12.178"/>
</kw>
<status status="PASS" starttime="20210720 20:32:12.165" endtime="20210720 20:32:12.178"/>
</kw>
<msg timestamp="20210720 20:32:12.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:12.161" endtime="20210720 20:32:12.178"/>
</kw>
<msg timestamp="20210720 20:32:12.179" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:12.160" endtime="20210720 20:32:12.179"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:12.183" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:12.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:12.186" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:12.181" endtime="20210720 20:32:12.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:12.188" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:12.187" endtime="20210720 20:32:12.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:12.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:12.188" endtime="20210720 20:32:12.189"/>
</kw>
<status status="PASS" starttime="20210720 20:32:12.181" endtime="20210720 20:32:12.189"/>
</kw>
<msg timestamp="20210720 20:32:12.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:12.180" endtime="20210720 20:32:12.189"/>
</kw>
<msg timestamp="20210720 20:32:12.190" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20210720 20:32:12.179" endtime="20210720 20:32:12.190"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210720 20:32:12.190" endtime="20210720 20:32:12.191"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:10.853" endtime="20210720 20:32:12.191"/>
</test>
<test id="s1-s3-s11-t10" name="Zero byte file">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:12.197" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:12.758" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:32:12.758" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:12.194" endtime="20210720 20:32:12.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:12.761" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:12.760" endtime="20210720 20:32:12.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:12.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:12.762" endtime="20210720 20:32:12.763"/>
</kw>
<msg timestamp="20210720 20:32:12.764" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:12.194" endtime="20210720 20:32:12.764"/>
</kw>
<msg timestamp="20210720 20:32:12.765" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:12.193" endtime="20210720 20:32:12.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:12.765" endtime="20210720 20:32:12.766"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:12.773" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:13.351" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:32:13.351" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:12.770" endtime="20210720 20:32:13.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:13.352" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:13.352" endtime="20210720 20:32:13.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:13.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:13.353" endtime="20210720 20:32:13.353"/>
</kw>
<msg timestamp="20210720 20:32:13.354" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:12.768" endtime="20210720 20:32:13.354"/>
</kw>
<msg timestamp="20210720 20:32:13.354" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:12.766" endtime="20210720 20:32:13.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:13.354" endtime="20210720 20:32:13.355"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:13.362" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket bucket-99470 --key 35342/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:13.951" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:32:13.951" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:13.358" endtime="20210720 20:32:13.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:13.953" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:13.952" endtime="20210720 20:32:13.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:13.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:13.953" endtime="20210720 20:32:13.954"/>
</kw>
<msg timestamp="20210720 20:32:13.954" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:13.357" endtime="20210720 20:32:13.954"/>
</kw>
<msg timestamp="20210720 20:32:13.954" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20210720 20:32:13.355" endtime="20210720 20:32:13.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:13.954" endtime="20210720 20:32:13.955"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:12.192" endtime="20210720 20:32:13.955"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210720 20:28:47.369" endtime="20210720 20:32:13.958"/>
</suite>
<suite id="s1-s3-s12" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:32:13.973" level="INFO">${random} = 99942</msg>
<status status="PASS" starttime="20210720 20:32:13.972" endtime="20210720 20:32:13.973"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:32:13.975" level="INFO">${PREFIX} = 99942</msg>
<status status="PASS" starttime="20210720 20:32:13.973" endtime="20210720 20:32:13.975"/>
</kw>
<status status="PASS" starttime="20210720 20:32:13.972" endtime="20210720 20:32:13.975"/>
</kw>
<status status="PASS" starttime="20210720 20:32:13.971" endtime="20210720 20:32:13.975"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:13.978" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:13.981" level="INFO">${rc} = 1</msg>
<msg timestamp="20210720 20:32:13.981" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210720 20:32:13.976" endtime="20210720 20:32:13.981"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:32:13.982" endtime="20210720 20:32:13.983"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:13.985" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:14.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:14.156" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.002'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210720 20:32:13.983" endtime="20210720 20:32:14.156"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:14.170" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:14.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:14.618" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advanced...</msg>
<status status="PASS" starttime="20210720 20:32:14.162" endtime="20210720 20:32:14.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:14.621" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: mirror.vcu.edu
 * extras: packages.oit.ncsu.edu
 * updates: mirrors.advancedhosters.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210720 20:32:14.619" endtime="20210720 20:32:14.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:14.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:14.621" endtime="20210720 20:32:14.623"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.161" endtime="20210720 20:32:14.623"/>
</kw>
<msg timestamp="20210720 20:32:14.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:14.161" endtime="20210720 20:32:14.624"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.161" endtime="20210720 20:32:14.624"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.160" endtime="20210720 20:32:14.624"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.157" endtime="20210720 20:32:14.625"/>
</kw>
<status status="PASS" starttime="20210720 20:32:13.975" endtime="20210720 20:32:14.625"/>
</kw>
<status status="PASS" starttime="20210720 20:32:13.975" endtime="20210720 20:32:14.625"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:14.634" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:14.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:14.641" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:32:14.630" endtime="20210720 20:32:14.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:14.643" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:32:14.641" endtime="20210720 20:32:14.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:14.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:14.643" endtime="20210720 20:32:14.644"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.630" endtime="20210720 20:32:14.645"/>
</kw>
<msg timestamp="20210720 20:32:14.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:14.629" endtime="20210720 20:32:14.646"/>
</kw>
<msg timestamp="20210720 20:32:14.646" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:32:14.629" endtime="20210720 20:32:14.646"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:32:14.650" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:32:14.647" endtime="20210720 20:32:14.650"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:14.656" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:14.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:14.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:32:14.654" endtime="20210720 20:32:14.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:14.668" level="INFO"/>
<status status="PASS" starttime="20210720 20:32:14.667" endtime="20210720 20:32:14.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:14.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:14.668" endtime="20210720 20:32:14.669"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.653" endtime="20210720 20:32:14.670"/>
</kw>
<msg timestamp="20210720 20:32:14.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:14.652" endtime="20210720 20:32:14.670"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.651" endtime="20210720 20:32:14.671"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.650" endtime="20210720 20:32:14.671"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.628" endtime="20210720 20:32:14.671"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.627" endtime="20210720 20:32:14.671"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:14.678" level="INFO">Running command 'ozone s3 getsecret --om-service-id=id1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:21.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:21.334" level="INFO">${output} = 2021-07-20 20:32:20,104 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:32:14.675" endtime="20210720 20:32:21.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:21.336" level="INFO">2021-07-20 20:32:20,104 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy18.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:32:21.335" endtime="20210720 20:32:21.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:21.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:21.336" endtime="20210720 20:32:21.337"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.675" endtime="20210720 20:32:21.337"/>
</kw>
<msg timestamp="20210720 20:32:21.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:14.674" endtime="20210720 20:32:21.337"/>
</kw>
<msg timestamp="20210720 20:32:21.338" level="INFO">${result} = 2021-07-20 20:32:20,104 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException...</msg>
<status status="PASS" starttime="20210720 20:32:14.674" endtime="20210720 20:32:21.338"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:32:21.339" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:32:21.338" endtime="20210720 20:32:21.339"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210720 20:32:21.340" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210720 20:32:21.340" endtime="20210720 20:32:21.340"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210720 20:32:21.341" level="INFO">${secret} = ['ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c']</msg>
<status status="PASS" starttime="20210720 20:32:21.341" endtime="20210720 20:32:21.341"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:32:21.344" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:32:21.342" endtime="20210720 20:32:21.344"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:32:21.346" level="INFO">${secret} = ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c</msg>
<status status="PASS" starttime="20210720 20:32:21.345" endtime="20210720 20:32:21.346"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:21.351" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:21.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:21.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:32:21.348" endtime="20210720 20:32:21.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:21.777" level="INFO"/>
<status status="PASS" starttime="20210720 20:32:21.776" endtime="20210720 20:32:21.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:21.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:21.778" endtime="20210720 20:32:21.779"/>
</kw>
<status status="PASS" starttime="20210720 20:32:21.347" endtime="20210720 20:32:21.780"/>
</kw>
<msg timestamp="20210720 20:32:21.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:21.347" endtime="20210720 20:32:21.781"/>
</kw>
<status status="PASS" starttime="20210720 20:32:21.346" endtime="20210720 20:32:21.782"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:21.788" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:22.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:22.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:32:21.785" endtime="20210720 20:32:22.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:22.163" level="INFO"/>
<status status="PASS" starttime="20210720 20:32:22.163" endtime="20210720 20:32:22.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:22.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:22.164" endtime="20210720 20:32:22.164"/>
</kw>
<status status="PASS" starttime="20210720 20:32:21.784" endtime="20210720 20:32:22.165"/>
</kw>
<msg timestamp="20210720 20:32:22.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:21.783" endtime="20210720 20:32:22.165"/>
</kw>
<status status="PASS" starttime="20210720 20:32:21.782" endtime="20210720 20:32:22.165"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:22.169" level="INFO">Running command 'aws configure set aws_secret_access_key ffd69f488ab851094d857b670260b96e524ab20f838818e7cf706dc5e5189d5c 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:22.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:22.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:32:22.166" endtime="20210720 20:32:22.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:22.528" level="INFO"/>
<status status="PASS" starttime="20210720 20:32:22.527" endtime="20210720 20:32:22.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:22.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:22.529" endtime="20210720 20:32:22.530"/>
</kw>
<status status="PASS" starttime="20210720 20:32:22.166" endtime="20210720 20:32:22.531"/>
</kw>
<msg timestamp="20210720 20:32:22.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:22.166" endtime="20210720 20:32:22.531"/>
</kw>
<status status="PASS" starttime="20210720 20:32:22.165" endtime="20210720 20:32:22.532"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:22.538" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:22.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:22.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:32:22.535" endtime="20210720 20:32:22.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:22.911" level="INFO"/>
<status status="PASS" starttime="20210720 20:32:22.910" endtime="20210720 20:32:22.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:22.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:22.912" endtime="20210720 20:32:22.914"/>
</kw>
<status status="PASS" starttime="20210720 20:32:22.534" endtime="20210720 20:32:22.915"/>
</kw>
<msg timestamp="20210720 20:32:22.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:22.533" endtime="20210720 20:32:22.915"/>
</kw>
<status status="PASS" starttime="20210720 20:32:22.532" endtime="20210720 20:32:22.916"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.673" endtime="20210720 20:32:22.916"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.672" endtime="20210720 20:32:22.916"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:32:22.916" endtime="20210720 20:32:22.917"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.627" endtime="20210720 20:32:22.918"/>
</kw>
<status status="PASS" starttime="20210720 20:32:14.626" endtime="20210720 20:32:22.918"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210720 20:32:22.920" level="INFO">${postfix} = 58498</msg>
<status status="PASS" starttime="20210720 20:32:22.919" endtime="20210720 20:32:22.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210720 20:32:22.921" level="INFO">${bucket} = bucket-58498</msg>
<status status="PASS" starttime="20210720 20:32:22.920" endtime="20210720 20:32:22.921"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:22.928" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-58498 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:23.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:23.530" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-58498"
}</msg>
<status status="PASS" starttime="20210720 20:32:22.924" endtime="20210720 20:32:23.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:23.533" level="INFO">{
    "Location": "http://s3g:9878/bucket-58498"
}</msg>
<status status="PASS" starttime="20210720 20:32:23.532" endtime="20210720 20:32:23.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:23.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:23.534" endtime="20210720 20:32:23.535"/>
</kw>
<status status="PASS" starttime="20210720 20:32:22.923" endtime="20210720 20:32:23.536"/>
</kw>
<msg timestamp="20210720 20:32:23.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:22.923" endtime="20210720 20:32:23.536"/>
</kw>
<msg timestamp="20210720 20:32:23.537" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-58498"
}</msg>
<status status="PASS" starttime="20210720 20:32:22.922" endtime="20210720 20:32:23.537"/>
</kw>
<msg timestamp="20210720 20:32:23.537" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-58498"
}</msg>
<status status="PASS" starttime="20210720 20:32:22.921" endtime="20210720 20:32:23.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:23.538" endtime="20210720 20:32:23.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:23.539" endtime="20210720 20:32:23.539"/>
</kw>
<status status="PASS" starttime="20210720 20:32:22.921" endtime="20210720 20:32:23.539"/>
</kw>
<status status="PASS" starttime="20210720 20:32:22.919" endtime="20210720 20:32:23.540"/>
</kw>
<msg timestamp="20210720 20:32:23.540" level="INFO">${BUCKET} = bucket-58498</msg>
<status status="PASS" starttime="20210720 20:32:22.918" endtime="20210720 20:32:23.540"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:32:23.541" level="INFO">${BUCKET} = bucket-58498</msg>
<status status="PASS" starttime="20210720 20:32:23.540" endtime="20210720 20:32:23.541"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210720 20:32:23.541" endtime="20210720 20:32:23.541"/>
</kw>
<status status="PASS" starttime="20210720 20:32:13.971" endtime="20210720 20:32:23.542"/>
</kw>
<test id="s1-s3-s12-t1" name="S3 Gateway Web UI">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:23.549" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:23.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:23.555" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:32:23.546" endtime="20210720 20:32:23.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:23.557" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:32:23.556" endtime="20210720 20:32:23.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:23.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:23.558" endtime="20210720 20:32:23.559"/>
</kw>
<status status="PASS" starttime="20210720 20:32:23.545" endtime="20210720 20:32:23.559"/>
</kw>
<msg timestamp="20210720 20:32:23.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:23.544" endtime="20210720 20:32:23.559"/>
</kw>
<msg timestamp="20210720 20:32:23.560" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210720 20:32:23.544" endtime="20210720 20:32:23.560"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:23.567" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:23.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:23.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:32:23.563" endtime="20210720 20:32:23.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:23.575" level="INFO"/>
<status status="PASS" starttime="20210720 20:32:23.574" endtime="20210720 20:32:23.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:23.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:23.575" endtime="20210720 20:32:23.575"/>
</kw>
<status status="PASS" starttime="20210720 20:32:23.563" endtime="20210720 20:32:23.576"/>
</kw>
<msg timestamp="20210720 20:32:23.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:23.562" endtime="20210720 20:32:23.576"/>
</kw>
<status status="PASS" starttime="20210720 20:32:23.561" endtime="20210720 20:32:23.576"/>
</kw>
<status status="PASS" starttime="20210720 20:32:23.560" endtime="20210720 20:32:23.576"/>
</kw>
<status status="PASS" starttime="20210720 20:32:23.543" endtime="20210720 20:32:23.577"/>
</kw>
<status status="PASS" starttime="20210720 20:32:23.543" endtime="20210720 20:32:23.577"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:23.581" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:23.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:23.598" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210720 20:32:23.578" endtime="20210720 20:32:23.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:23.600" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.25.0.114...
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Tue, 20 Jul 2021 20:32:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 20 Jul 2021 20:32:23 GMT
&lt; Date: Tue, 20 Jul 2021 20:32:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20210720 20:32:23.599" endtime="20210720 20:32:23.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:23.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:23.600" endtime="20210720 20:32:23.602"/>
</kw>
<status status="PASS" starttime="20210720 20:32:23.578" endtime="20210720 20:32:23.602"/>
</kw>
<msg timestamp="20210720 20:32:23.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:23.577" endtime="20210720 20:32:23.602"/>
</kw>
<msg timestamp="20210720 20:32:23.603" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210720 20:32:23.577" endtime="20210720 20:32:23.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:23.603" endtime="20210720 20:32:23.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:23.604" endtime="20210720 20:32:23.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:23.609" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:23.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:23.761" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210720 20:32:23.607" endtime="20210720 20:32:23.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:23.763" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.25.0.114...
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 459
&lt; 
* Ignoring the response-body
{ [data not shown]

100   459  100   459    0     0  23951      0 --:--:-- --:--:-- --:--:-- 24157
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/static/index.html'
* Found bundle for host s3g: 0x1e51f50
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET /static/index.html HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggECGtIeFDXOtbFMvKGycQZmxwJ3iy3Y/97K+WHA4HRQGre4oVdxxDr8Mav8xTa+33i/gZbCJH49z+9sKyERAmZkfEfjPnie8gkqHiXnmX9q4n4RAT1O0TOi3TKKz6LmKhsbI9LPim02eztre1gMRSUEYbwiom93HiKiGyv5Im/gdvWQW8kaFCYXpD5wRtqPn2KmO5wmF2Hw6uI623DeCI0k/HIQ33ht+xUatxDaYn8gQ7QnGKrZzNzWfXhfRPFB9gcDfyx/b8K9hUjKqbyzuvQOWVrimoNo3INyZqs8PdC/z41w6vRkagrPQIh6b57PzXS0lw1dFyU0A85sBpCyObXuVvcLpIHSMIHPoAMCARKigccEgcQq7XQN7yGbiT7n4wZl/XwJzZ2mHjXCVpw75Ko0hBWL5UZpjc9Cj/ea65sLa6N7IPBuQ0A8xYPgBIvc0m0mH3PntNRwl4hNuC2ISJb0AFJSrS5x8fW0rjrTXGUG0+hiSg53FZnXt9nW+4+lpsUebfpupzjhRdvx+4hT1PmW1zTJNaLoS7EtKye4dsIDcL5/XNWtYlnw0y/yIOqgkDOnOummGPwo14f6IoLEZZzKJaQmugIOy3ikRjVEJDzMdefXIdNTdYcu
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 20 Jul 2021 20:32:23 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCq9QUKlCEm7BxGDIjEAkAmBm5sMkjst0eCljgT+erW+M/cQZVAqzXS3u/RBkycxFFeRKLBq/8a9HSjoQ2Nuatus9C
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1626849143749&amp;s=v29ElHk4E4kPgj4h+RAx7c0LgD0P4e/iIIYAtb8lFwU="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 20 Jul 2021 19:11:02 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0  21747      0 --:--:-- --:--:-- --:--:-- 21747
* Closing connection 0
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20210720 20:32:23.762" endtime="20210720 20:32:23.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:23.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:23.764" endtime="20210720 20:32:23.765"/>
</kw>
<status status="PASS" starttime="20210720 20:32:23.606" endtime="20210720 20:32:23.766"/>
</kw>
<msg timestamp="20210720 20:32:23.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:23.605" endtime="20210720 20:32:23.766"/>
</kw>
<msg timestamp="20210720 20:32:23.767" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210720 20:32:23.605" endtime="20210720 20:32:23.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:23.767" endtime="20210720 20:32:23.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:23.542" endtime="20210720 20:32:23.769"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20210720 20:32:13.961" endtime="20210720 20:32:23.770"/>
</suite>
<status status="PASS" starttime="20210720 20:20:50.540" endtime="20210720 20:32:23.776"/>
</suite>
<suite id="s1-s4" name="Admincli" source="/opt/hadoop/smoketest/admincli">
<suite id="s1-s4-s1" name="Admin" source="/opt/hadoop/smoketest/admincli/admin.robot">
<test id="s1-s4-s1-t1" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:31.611" level="INFO">Running command 'ozone admin 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:36.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:36.367" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20210720 20:32:31.606" endtime="20210720 20:32:36.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:36.368" level="INFO">Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configurationPath&gt;

  -D, --set=&lt;String=String&gt;

  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
      --verbose   More verbose output. Show the stack trace of the errors.
Commands:
  containerbalancer   ContainerBalancer specific operations
  replicationmanager  ReplicationManager specific operations
  safemode            Safe mode specific operations
  printTopology       Print a tree of the network topology as reported by SCM
  cert                Certificate related operations
  container           Container specific operations
  datanode            Datanode specific operations
  pipeline            Pipeline specific operations
  om                  Ozone Manager specific admin operations
  scm                 Ozone Storage Container Manager specific admin operations</msg>
<status status="PASS" starttime="20210720 20:32:36.368" endtime="20210720 20:32:36.369"/>
</kw>
<msg timestamp="20210720 20:32:36.369" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20210720 20:32:31.606" endtime="20210720 20:32:36.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:36.369" endtime="20210720 20:32:36.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>container</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:36.370" endtime="20210720 20:32:36.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:36.370" endtime="20210720 20:32:36.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:36.371" endtime="20210720 20:32:36.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>pipeline</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:36.371" endtime="20210720 20:32:36.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>replicationmanager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:36.372" endtime="20210720 20:32:36.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>safemode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:36.372" endtime="20210720 20:32:36.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>printTopology</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:32:36.373" endtime="20210720 20:32:36.373"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:32:31.604" endtime="20210720 20:32:36.374"/>
</test>
<doc>Test ozone admin command</doc>
<status status="PASS" starttime="20210720 20:32:31.570" endtime="20210720 20:32:36.375"/>
</suite>
<suite id="s1-s4-s2" name="Container" source="/opt/hadoop/smoketest/admincli/container.robot">
<kw name="Create test data" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:36.387" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:36.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:36.391" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:32:36.385" endtime="20210720 20:32:36.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:36.392" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:32:36.392" endtime="20210720 20:32:36.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:36.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:36.392" endtime="20210720 20:32:36.393"/>
</kw>
<status status="PASS" starttime="20210720 20:32:36.385" endtime="20210720 20:32:36.393"/>
</kw>
<msg timestamp="20210720 20:32:36.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:36.384" endtime="20210720 20:32:36.393"/>
</kw>
<msg timestamp="20210720 20:32:36.394" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:32:36.384" endtime="20210720 20:32:36.394"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:32:36.396" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:32:36.394" endtime="20210720 20:32:36.396"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:36.400" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:32:36.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:32:36.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:32:36.398" endtime="20210720 20:32:36.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:32:36.408" level="INFO"/>
<status status="PASS" starttime="20210720 20:32:36.407" endtime="20210720 20:32:36.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:32:36.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:32:36.408" endtime="20210720 20:32:36.409"/>
</kw>
<status status="PASS" starttime="20210720 20:32:36.397" endtime="20210720 20:32:36.409"/>
</kw>
<msg timestamp="20210720 20:32:36.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:36.397" endtime="20210720 20:32:36.409"/>
</kw>
<status status="PASS" starttime="20210720 20:32:36.396" endtime="20210720 20:32:36.410"/>
</kw>
<status status="PASS" starttime="20210720 20:32:36.396" endtime="20210720 20:32:36.410"/>
</kw>
<status status="PASS" starttime="20210720 20:32:36.384" endtime="20210720 20:32:36.410"/>
</kw>
<status status="PASS" starttime="20210720 20:32:36.383" endtime="20210720 20:32:36.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone freon ockg -n1 -t1 -p container</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:32:36.413" level="INFO">Running command 'ozone freon ockg -n1 -t1 -p container 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:35:48.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:35:48.058" level="INFO">${output} = 2021-07-20 20:32:38,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:32:39,300 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:32:36.411" endtime="20210720 20:35:48.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:35:48.060" level="INFO">2021-07-20 20:32:38,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:32:39,300 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-20 20:32:39,301 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-20 20:32:39,803 [main] INFO freon.BaseFreonGenerator: Executing test with prefix container
2021-07-20 20:32:39,994 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:41,000 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:41,972 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:32:42,000 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:43,004 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:44,008 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:44,943 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-20 20:32:45,009 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:45,711 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-20 20:32:45,711 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-C561C5FB7156-&gt;5a23a414-9886-4450-950a-ec3d59209c22
2021-07-20 20:32:45,712 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-20 20:32:46,010 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:47,010 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:48,011 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:49,011 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:50,011 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:51,012 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:52,012 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:53,013 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:54,013 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:55,014 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:56,014 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:57,014 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:58,015 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:32:59,015 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:00,016 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:01,016 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:02,016 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:03,017 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:04,017 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:05,018 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:06,018 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:07,018 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:08,019 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:09,019 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:10,020 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:11,020 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:12,020 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:13,021 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:14,021 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:15,022 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:16,022 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:17,022 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:18,023 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:19,023 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:20,023 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:21,024 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:22,027 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:23,027 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:24,028 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:25,028 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:26,028 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:27,029 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:28,029 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:29,029 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:30,030 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:31,031 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:32,031 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:33,031 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:34,032 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:35,032 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:36,032 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:37,033 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:38,033 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:39,034 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:40,035 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:41,035 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:42,036 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:43,036 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:44,036 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:45,037 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:46,037 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:47,037 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:48,038 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:49,038 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:50,038 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:51,039 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:52,039 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:53,039 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:54,040 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:55,040 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:56,041 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:57,041 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:58,041 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:33:59,042 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:00,042 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:01,042 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:02,043 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:03,043 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:04,043 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:05,044 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:06,044 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:07,045 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:08,046 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:09,046 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:10,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:11,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:12,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:13,048 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:14,048 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:15,049 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:16,049 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:17,049 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:18,050 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:19,050 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:20,050 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:21,051 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:22,051 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:23,052 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:24,052 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:25,053 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:26,053 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:27,053 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:28,054 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:29,054 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:30,054 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:31,055 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:32,055 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:33,056 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:34,056 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:35,056 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:36,057 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:37,057 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:38,058 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:39,058 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:40,059 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:41,059 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:42,059 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:43,060 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:44,060 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:45,060 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:46,061 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:47,061 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:48,061 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:49,062 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:50,062 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:51,062 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:52,063 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:53,063 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:54,063 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:55,064 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:56,064 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:57,064 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:58,065 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:34:59,065 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:00,065 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:01,066 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:02,066 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:03,066 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:04,067 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:05,067 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:06,067 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:07,068 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:08,068 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:09,068 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:10,069 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:11,069 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:12,069 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:13,070 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:14,070 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:15,070 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:16,071 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:17,071 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:18,072 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:19,072 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:20,072 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:21,073 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:22,073 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:23,073 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:24,073 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:25,074 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:26,074 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:27,074 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:28,075 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:29,075 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:30,075 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:31,076 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:32,076 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:33,077 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:34,077 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:35,078 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:36,078 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:37,078 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:38,078 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:39,079 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:40,079 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:41,080 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:42,080 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:43,080 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:44,081 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:45,081 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:46,081 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:35:46,777 [pool-2-thread-1] WARN scm.XceiverClientRatis: 3 way commit failed on pipeline Pipeline[ Id: 8b105480-3262-484c-b193-a91466c768e6, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.707Z[UTC]]
java.util.concurrent.ExecutionException: org.apache.ratis.protocol.exceptions.TimeoutIOException: Request #3 timeout 180s
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:395)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1999)
	at org.apache.hadoop.hdds.scm.XceiverClientRatis.watchForCommit(XceiverClientRatis.java:263)
	at org.apache.hadoop.hdds.scm.storage.CommitWatcher.watchForCommit(CommitWatcher.java:199)
	at org.apache.hadoop.hdds.scm.storage.CommitWatcher.watchOnLastIndex(CommitWatcher.java:166)
	at org.apache.hadoop.hdds.scm.storage.BlockOutputStream.watchForCommit(BlockOutputStream.java:381)
	at org.apache.hadoop.hdds.scm.storage.BlockOutputStream.handleFlush(BlockOutputStream.java:533)
	at org.apache.hadoop.hdds.scm.storage.BlockOutputStream.close(BlockOutputStream.java:547)
	at org.apache.hadoop.ozone.client.io.BlockOutputStreamEntry.close(BlockOutputStreamEntry.java:129)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleStreamAction(KeyOutputStream.java:503)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.handleFlushOrClose(KeyOutputStream.java:477)
	at org.apache.hadoop.ozone.client.io.KeyOutputStream.close(KeyOutputStream.java:530)
	at org.apache.hadoop.ozone.client.io.OzoneOutputStream.close(OzoneOutputStream.java:61)
	at org.apache.hadoop.ozone.freon.OzoneClientKeyGenerator.lambda$createKey$0(OzoneClientKeyGenerator.java:118)
	at com.codahale.metrics.Timer.time(Timer.java:101)
	at org.apache.hadoop.ozone.freon.OzoneClientKeyGenerator.createKey(OzoneClientKeyGenerator.java:113)
	at org.apache.hadoop.ozone.freon.BaseFreonGenerator.tryNextTask(BaseFreonGenerator.java:182)
	at org.apache.hadoop.ozone.freon.BaseFreonGenerator.taskLoop(BaseFreonGenerator.java:162)
	at org.apache.hadoop.ozone.freon.BaseFreonGenerator.lambda$startTaskRunners$0(BaseFreonGenerator.java:145)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.ratis.protocol.exceptions.TimeoutIOException: Request #3 timeout 180s
	at org.apache.ratis.grpc.client.GrpcClientProtocolClient$AsyncStreamObservers.lambda$timeoutCheck$5(GrpcClientProtocolClient.java:367)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at org.apache.ratis.grpc.client.GrpcClientProtocolClient$AsyncStreamObservers.handleReplyFuture(GrpcClientProtocolClient.java:372)
	at org.apache.ratis.grpc.client.GrpcClientProtocolClient$AsyncStreamObservers.timeoutCheck(GrpcClientProtocolClient.java:367)
	at org.apache.ratis.grpc.client.GrpcClientProtocolClient$AsyncStreamObservers.lambda$onNext$1(GrpcClientProtocolClient.java:356)
	at org.apache.ratis.util.TimeoutScheduler.lambda$onTimeout$0(TimeoutScheduler.java:141)
	at org.apache.ratis.util.TimeoutScheduler.lambda$onTimeout$1(TimeoutScheduler.java:155)
	at org.apache.ratis.util.LogUtils.runAndLog(LogUtils.java:38)
	at org.apache.ratis.util.LogUtils$1.run(LogUtils.java:79)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	... 3 more
2021-07-20 20:35:46,798 [pool-2-thread-1] INFO scm.XceiverClientRatis: Could not commit index 157 on pipeline Pipeline[ Id: 8b105480-3262-484c-b193-a91466c768e6, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.707Z[UTC]] to all the nodes. Server 07a05cf4-dc30-473b-837b-17c4c6f914d0 has failed. Committed by majority.
2021-07-20 20:35:46,810 [pool-2-thread-1] WARN storage.BlockOutputStream: Failed to commit BlockId conID: 1 locID: 107544261427200060 bcsId: 157 on Pipeline[ Id: 8b105480-3262-484c-b193-a91466c768e6, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.707Z[UTC]]. Failed nodes: [07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: null, host: null, ports: [], networkLocation: /default-rack, certSerialId: null, persistedOpState: null, persistedOpStateExpiryEpochSec: 0}]
2021-07-20 20:35:47,082 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-20 20:35:47,687 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=183510.877137, max=183510.877137, mean=183510.877137, stddev=0.0, median=183510.877137, p75=183510.877137, p95=183510.877137, p98=183510.877137, p99=183510.877137, p999=183510.877137, mean_rate=0.005427261206808046, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-20 20:35:47,688 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 188
2021-07-20 20:35:47,691 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-20 20:35:47,691 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210720 20:35:48.059" endtime="20210720 20:35:48.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:35:48.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:35:48.061" endtime="20210720 20:35:48.062"/>
</kw>
<status status="PASS" starttime="20210720 20:32:36.411" endtime="20210720 20:35:48.063"/>
</kw>
<msg timestamp="20210720 20:35:48.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:32:36.410" endtime="20210720 20:35:48.063"/>
</kw>
<status status="PASS" starttime="20210720 20:32:36.410" endtime="20210720 20:35:48.064"/>
</kw>
<status status="PASS" starttime="20210720 20:32:36.383" endtime="20210720 20:35:48.065"/>
</kw>
<test id="s1-s4-s2-t1" name="Create container">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:35:48.075" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:35:57.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:35:57.826" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20210720 20:35:48.071" endtime="20210720 20:35:57.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:35:57.827" level="INFO">Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20210720 20:35:57.827" endtime="20210720 20:35:57.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:35:57.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:35:57.828" endtime="20210720 20:35:57.828"/>
</kw>
<status status="PASS" starttime="20210720 20:35:48.070" endtime="20210720 20:35:57.828"/>
</kw>
<msg timestamp="20210720 20:35:57.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:35:48.068" endtime="20210720 20:35:57.829"/>
</kw>
<msg timestamp="20210720 20:35:57.829" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20210720 20:35:48.066" endtime="20210720 20:35:57.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:35:57.829" endtime="20210720 20:35:57.830"/>
</kw>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>echo "${output}" | grep 'is created' | cut -f2 -d' '</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:35:57.833" level="INFO">Running command 'echo "Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created." | grep 'is created' | cut -f2 -d' ' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:35:57.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:35:57.837" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210720 20:35:57.831" endtime="20210720 20:35:57.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:35:57.838" level="INFO">3</msg>
<status status="PASS" starttime="20210720 20:35:57.838" endtime="20210720 20:35:57.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:35:57.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:35:57.839" endtime="20210720 20:35:57.839"/>
</kw>
<status status="PASS" starttime="20210720 20:35:57.831" endtime="20210720 20:35:57.840"/>
</kw>
<msg timestamp="20210720 20:35:57.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:35:57.830" endtime="20210720 20:35:57.840"/>
</kw>
<msg timestamp="20210720 20:35:57.840" level="INFO">${container} = 3</msg>
<status status="PASS" starttime="20210720 20:35:57.830" endtime="20210720 20:35:57.840"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${CONTAINER}</arg>
<arg>${container}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:35:57.841" level="INFO">${CONTAINER} = 3</msg>
<status status="PASS" starttime="20210720 20:35:57.840" endtime="20210720 20:35:57.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:35:48.065" endtime="20210720 20:35:57.841"/>
</test>
<test id="s1-s4-s2-t2" name="List containers">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:35:57.848" level="INFO">Running command 'ozone admin container list 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:36:03.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:36:03.611" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:3...</msg>
<status status="PASS" starttime="20210720 20:35:57.845" endtime="20210720 20:36:03.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:36:03.614" level="INFO">{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:36:03.282Z",
  "stateEnterTime" : "2021-07-20T20:15:43.458Z",
  "owner" : "om3",
  "containerID" : 1,
  "deleteTransactionId" : 9,
  "sequenceId" : 157,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 51402785,
  "numberOfKeys" : 24,
  "lastUsed" : "2021-07-20T20:36:03.282Z",
  "stateEnterTime" : "2021-07-20T20:15:56.153Z",
  "owner" : "om3",
  "containerID" : 2,
  "deleteTransactionId" : 11,
  "sequenceId" : 108,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-20T20:36:03.284Z",
  "stateEnterTime" : "2021-07-20T20:35:54.382Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}</msg>
<status status="PASS" starttime="20210720 20:36:03.612" endtime="20210720 20:36:03.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:36:03.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:36:03.615" endtime="20210720 20:36:03.615"/>
</kw>
<status status="PASS" starttime="20210720 20:35:57.844" endtime="20210720 20:36:03.616"/>
</kw>
<msg timestamp="20210720 20:36:03.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:35:57.843" endtime="20210720 20:36:03.616"/>
</kw>
<msg timestamp="20210720 20:36:03.617" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:3...</msg>
<status status="PASS" starttime="20210720 20:35:57.843" endtime="20210720 20:36:03.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:36:03.617" endtime="20210720 20:36:03.618"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:35:57.842" endtime="20210720 20:36:03.618"/>
</test>
<test id="s1-s4-s2-t3" name="List containers with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:36:03.626" level="INFO">Running command 'ozone admin container list --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:36:10.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:36:10.985" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:3...</msg>
<status status="PASS" starttime="20210720 20:36:03.623" endtime="20210720 20:36:10.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:36:10.986" level="INFO">{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:36:10.724Z",
  "stateEnterTime" : "2021-07-20T20:15:43.458Z",
  "owner" : "om3",
  "containerID" : 1,
  "deleteTransactionId" : 9,
  "sequenceId" : 157,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 51402785,
  "numberOfKeys" : 24,
  "lastUsed" : "2021-07-20T20:36:10.724Z",
  "stateEnterTime" : "2021-07-20T20:15:56.153Z",
  "owner" : "om3",
  "containerID" : 2,
  "deleteTransactionId" : 11,
  "sequenceId" : 108,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-20T20:36:10.726Z",
  "stateEnterTime" : "2021-07-20T20:35:54.382Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}</msg>
<status status="PASS" starttime="20210720 20:36:10.986" endtime="20210720 20:36:10.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:36:10.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:36:10.987" endtime="20210720 20:36:10.987"/>
</kw>
<status status="PASS" starttime="20210720 20:36:03.622" endtime="20210720 20:36:10.988"/>
</kw>
<msg timestamp="20210720 20:36:10.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:36:03.622" endtime="20210720 20:36:10.988"/>
</kw>
<msg timestamp="20210720 20:36:10.989" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:3...</msg>
<status status="PASS" starttime="20210720 20:36:03.620" endtime="20210720 20:36:10.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:36:10.989" endtime="20210720 20:36:10.990"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:36:03.619" endtime="20210720 20:36:10.991"/>
</test>
<test id="s1-s4-s2-t4" name="List containers with container state">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state=CLOSED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:36:10.999" level="INFO">Running command 'ozone admin container list --state=CLOSED 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:36:19.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:36:19.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:36:10.996" endtime="20210720 20:36:19.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:36:19.125" level="INFO"/>
<status status="PASS" starttime="20210720 20:36:19.125" endtime="20210720 20:36:19.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:36:19.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:36:19.126" endtime="20210720 20:36:19.126"/>
</kw>
<status status="PASS" starttime="20210720 20:36:10.995" endtime="20210720 20:36:19.127"/>
</kw>
<msg timestamp="20210720 20:36:19.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:36:10.994" endtime="20210720 20:36:19.127"/>
</kw>
<msg timestamp="20210720 20:36:19.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:36:10.993" endtime="20210720 20:36:19.129"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:36:19.129" endtime="20210720 20:36:19.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:36:10.992" endtime="20210720 20:36:19.130"/>
</test>
<test id="s1-s4-s2-t5" name="Container info">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:36:19.143" level="INFO">Running command 'ozone admin container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:36:26.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:36:26.978" level="INFO">${output} = Container id: 3
Pipeline id: b0d8c806-7e95-4959-b8e2-7a69a2122163
Container State: OPEN
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:36:19.139" endtime="20210720 20:36:26.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:36:26.980" level="INFO">Container id: 3
Pipeline id: b0d8c806-7e95-4959-b8e2-7a69a2122163
Container State: OPEN
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:36:26.978" endtime="20210720 20:36:26.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:36:26.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:36:26.981" endtime="20210720 20:36:26.983"/>
</kw>
<status status="PASS" starttime="20210720 20:36:19.137" endtime="20210720 20:36:26.983"/>
</kw>
<msg timestamp="20210720 20:36:26.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:36:19.136" endtime="20210720 20:36:26.983"/>
</kw>
<msg timestamp="20210720 20:36:26.984" level="INFO">${output} = Container id: 3
Pipeline id: b0d8c806-7e95-4959-b8e2-7a69a2122163
Container State: OPEN
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:36:19.135" endtime="20210720 20:36:26.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container id: ${CONTAINER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:36:26.985" endtime="20210720 20:36:26.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline id</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:36:26.986" endtime="20210720 20:36:26.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:36:26.986" endtime="20210720 20:36:26.987"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:36:19.133" endtime="20210720 20:36:26.987"/>
</test>
<test id="s1-s4-s2-t6" name="Verbose container info">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin --verbose container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:36:26.998" level="INFO">Running command 'ozone admin --verbose container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:36:32.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:36:32.338" level="INFO">${output} = Container id: 3
Pipeline Info: Pipeline[ Id: b0d8c806-7e95-4959-b8e2-7a69a2122163, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_n...</msg>
<status status="PASS" starttime="20210720 20:36:26.992" endtime="20210720 20:36:32.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:36:32.339" level="INFO">Container id: 3
Pipeline Info: Pipeline[ Id: b0d8c806-7e95-4959-b8e2-7a69a2122163, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:35:54.362Z[UTC]]
Container State: OPEN
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:36:32.338" endtime="20210720 20:36:32.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:36:32.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:36:32.340" endtime="20210720 20:36:32.341"/>
</kw>
<status status="PASS" starttime="20210720 20:36:26.991" endtime="20210720 20:36:32.341"/>
</kw>
<msg timestamp="20210720 20:36:32.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:36:26.991" endtime="20210720 20:36:32.342"/>
</kw>
<msg timestamp="20210720 20:36:32.342" level="INFO">${output} = Container id: 3
Pipeline Info: Pipeline[ Id: b0d8c806-7e95-4959-b8e2-7a69a2122163, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_n...</msg>
<status status="PASS" starttime="20210720 20:36:26.990" endtime="20210720 20:36:32.342"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline Info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:36:32.342" endtime="20210720 20:36:32.343"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:36:26.989" endtime="20210720 20:36:32.343"/>
</test>
<test id="s1-s4-s2-t7" name="Close container">
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:36:32.350" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:36:40.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:36:40.001" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20210720 20:36:32.347" endtime="20210720 20:36:40.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:36:40.003" level="INFO">2</msg>
<status status="PASS" starttime="20210720 20:36:40.002" endtime="20210720 20:36:40.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:36:40.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:36:40.004" endtime="20210720 20:36:40.005"/>
</kw>
<status status="PASS" starttime="20210720 20:36:32.346" endtime="20210720 20:36:40.006"/>
</kw>
<msg timestamp="20210720 20:36:40.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:36:32.346" endtime="20210720 20:36:40.006"/>
</kw>
<msg timestamp="20210720 20:36:40.006" level="INFO">${container} = 2</msg>
<status status="PASS" starttime="20210720 20:36:32.345" endtime="20210720 20:36:40.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone admin container close "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:36:40.011" level="INFO">Running command 'ozone admin container close "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:36:47.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:36:47.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:36:40.008" endtime="20210720 20:36:47.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:36:47.009" level="INFO"/>
<status status="PASS" starttime="20210720 20:36:47.009" endtime="20210720 20:36:47.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:36:47.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:36:47.010" endtime="20210720 20:36:47.010"/>
</kw>
<status status="PASS" starttime="20210720 20:36:40.007" endtime="20210720 20:36:47.011"/>
</kw>
<msg timestamp="20210720 20:36:47.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:36:40.007" endtime="20210720 20:36:47.011"/>
</kw>
<status status="PASS" starttime="20210720 20:36:40.006" endtime="20210720 20:36:47.011"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:36:47.018" level="INFO">Running command 'ozone admin container info "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:36:54.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:36:54.211" level="INFO">${output} = Container id: 2
Pipeline id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343
Container State: CLOSING
Datanodes: [e1c7a26b-9ce9-41be-88e7-0d70ea915ff0/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
5a23a41...</msg>
<status status="PASS" starttime="20210720 20:36:47.014" endtime="20210720 20:36:54.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:36:54.214" level="INFO">Container id: 2
Pipeline id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343
Container State: CLOSING
Datanodes: [e1c7a26b-9ce9-41be-88e7-0d70ea915ff0/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
07a05cf4-dc30-473b-837b-17c4c6f914d0/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:36:54.212" endtime="20210720 20:36:54.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:36:54.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:36:54.214" endtime="20210720 20:36:54.215"/>
</kw>
<status status="PASS" starttime="20210720 20:36:47.013" endtime="20210720 20:36:54.215"/>
</kw>
<msg timestamp="20210720 20:36:54.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:36:47.013" endtime="20210720 20:36:54.215"/>
</kw>
<msg timestamp="20210720 20:36:54.216" level="INFO">${output} = Container id: 2
Pipeline id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343
Container State: CLOSING
Datanodes: [e1c7a26b-9ce9-41be-88e7-0d70ea915ff0/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
5a23a41...</msg>
<status status="PASS" starttime="20210720 20:36:47.011" endtime="20210720 20:36:54.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:36:54.216" endtime="20210720 20:36:54.216"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Container is closed</arg>
<arg>${container}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Container is closed">
<arg>${container}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:36:54.225" level="INFO">Running command 'ozone admin container info "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:00.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:37:00.857" level="INFO">${output} = Container id: 2
Pipeline id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343
Container State: CLOSING
Datanodes: [e1c7a26b-9ce9-41be-88e7-0d70ea915ff0/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
5a23a41...</msg>
<status status="PASS" starttime="20210720 20:36:54.222" endtime="20210720 20:37:00.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:00.861" level="INFO">Container id: 2
Pipeline id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343
Container State: CLOSING
Datanodes: [e1c7a26b-9ce9-41be-88e7-0d70ea915ff0/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
07a05cf4-dc30-473b-837b-17c4c6f914d0/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:37:00.860" endtime="20210720 20:37:00.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:37:00.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:37:00.861" endtime="20210720 20:37:00.862"/>
</kw>
<status status="PASS" starttime="20210720 20:36:54.222" endtime="20210720 20:37:00.862"/>
</kw>
<msg timestamp="20210720 20:37:00.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:36:54.220" endtime="20210720 20:37:00.862"/>
</kw>
<msg timestamp="20210720 20:37:00.863" level="INFO">${output} = Container id: 2
Pipeline id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343
Container State: CLOSING
Datanodes: [e1c7a26b-9ce9-41be-88e7-0d70ea915ff0/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
5a23a41...</msg>
<status status="PASS" starttime="20210720 20:36:54.220" endtime="20210720 20:37:00.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210720 20:37:00.863" level="FAIL">'Container id: 2
Pipeline id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343
Container State: CLOSING
Datanodes: [e1c7a26b-9ce9-41be-88e7-0d70ea915ff0/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
07a05cf4-dc30-473b-837b-17c4c6f914d0/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]' does not contain 'CLOSED'</msg>
<status status="FAIL" starttime="20210720 20:37:00.863" endtime="20210720 20:37:00.864"/>
</kw>
<status status="FAIL" starttime="20210720 20:36:54.219" endtime="20210720 20:37:00.864"/>
</kw>
<kw name="Container is closed">
<arg>${container}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:10.869" level="INFO">Running command 'ozone admin container info "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:17.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:37:17.881" level="INFO">${output} = Container id: 2
Pipeline id: 04a61dd4-1bad-4c19-9884-07301c90ef13
Container State: CLOSED
Datanodes: [07a05cf4-dc30-473b-837b-17c4c6f914d0/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
5a23a414...</msg>
<status status="PASS" starttime="20210720 20:37:10.867" endtime="20210720 20:37:17.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:17.884" level="INFO">Container id: 2
Pipeline id: 04a61dd4-1bad-4c19-9884-07301c90ef13
Container State: CLOSED
Datanodes: [07a05cf4-dc30-473b-837b-17c4c6f914d0/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
e1c7a26b-9ce9-41be-88e7-0d70ea915ff0/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:37:17.882" endtime="20210720 20:37:17.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:37:17.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:37:17.885" endtime="20210720 20:37:17.887"/>
</kw>
<status status="PASS" starttime="20210720 20:37:10.866" endtime="20210720 20:37:17.887"/>
</kw>
<msg timestamp="20210720 20:37:17.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:37:10.866" endtime="20210720 20:37:17.888"/>
</kw>
<msg timestamp="20210720 20:37:17.888" level="INFO">${output} = Container id: 2
Pipeline id: 04a61dd4-1bad-4c19-9884-07301c90ef13
Container State: CLOSED
Datanodes: [07a05cf4-dc30-473b-837b-17c4c6f914d0/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
5a23a414...</msg>
<status status="PASS" starttime="20210720 20:37:10.865" endtime="20210720 20:37:17.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:17.889" endtime="20210720 20:37:17.890"/>
</kw>
<status status="PASS" starttime="20210720 20:37:10.864" endtime="20210720 20:37:17.890"/>
</kw>
<status status="PASS" starttime="20210720 20:36:54.216" endtime="20210720 20:37:17.890"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:36:32.344" endtime="20210720 20:37:17.891"/>
</test>
<test id="s1-s4-s2-t8" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin container</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:17.899" level="INFO">Running command 'ozone admin container 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:22.554" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:37:22.554" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20210720 20:37:17.896" endtime="20210720 20:37:22.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:22.555" level="INFO">Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list    List containers
  info    Show information about a specific container
  delete  Delete container
  create  Create container
  close   close container</msg>
<status status="PASS" starttime="20210720 20:37:22.555" endtime="20210720 20:37:22.555"/>
</kw>
<msg timestamp="20210720 20:37:22.556" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20210720 20:37:17.895" endtime="20210720 20:37:22.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:22.556" endtime="20210720 20:37:22.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:22.557" endtime="20210720 20:37:22.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:22.558" endtime="20210720 20:37:22.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>delete</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:22.559" endtime="20210720 20:37:22.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:22.559" endtime="20210720 20:37:22.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:22.560" endtime="20210720 20:37:22.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:37:17.893" endtime="20210720 20:37:22.562"/>
</test>
<test id="s1-s4-s2-t9" name="Cannot close container without admin privilege">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container close "${CONTAINER}"</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20210720 20:37:22.566" endtime="20210720 20:37:22.567"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:22.572" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:22.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:37:22.577" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:37:22.569" endtime="20210720 20:37:22.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:22.578" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:37:22.578" endtime="20210720 20:37:22.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:37:22.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:37:22.579" endtime="20210720 20:37:22.580"/>
</kw>
<status status="PASS" starttime="20210720 20:37:22.569" endtime="20210720 20:37:22.580"/>
</kw>
<msg timestamp="20210720 20:37:22.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:37:22.568" endtime="20210720 20:37:22.581"/>
</kw>
<msg timestamp="20210720 20:37:22.581" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:37:22.568" endtime="20210720 20:37:22.581"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:37:22.582" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:37:22.581" endtime="20210720 20:37:22.582"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:22.587" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:22.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:37:22.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:37:22.585" endtime="20210720 20:37:22.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:22.724" level="INFO"/>
<status status="PASS" starttime="20210720 20:37:22.723" endtime="20210720 20:37:22.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:37:22.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:37:22.724" endtime="20210720 20:37:22.725"/>
</kw>
<status status="PASS" starttime="20210720 20:37:22.584" endtime="20210720 20:37:22.725"/>
</kw>
<msg timestamp="20210720 20:37:22.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:37:22.584" endtime="20210720 20:37:22.725"/>
</kw>
<status status="PASS" starttime="20210720 20:37:22.583" endtime="20210720 20:37:22.726"/>
</kw>
<status status="PASS" starttime="20210720 20:37:22.582" endtime="20210720 20:37:22.726"/>
</kw>
<status status="PASS" starttime="20210720 20:37:22.567" endtime="20210720 20:37:22.726"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:22.730" level="INFO">Running command 'ozone admin container close "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:29.142" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:37:29.143" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:37:22.727" endtime="20210720 20:37:29.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:29.145" level="INFO">Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:37:29.144" endtime="20210720 20:37:29.146"/>
</kw>
<msg timestamp="20210720 20:37:29.146" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:37:22.727" endtime="20210720 20:37:29.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:29.147" endtime="20210720 20:37:29.147"/>
</kw>
<status status="PASS" starttime="20210720 20:37:22.726" endtime="20210720 20:37:29.148"/>
</kw>
<status status="PASS" starttime="20210720 20:37:22.565" endtime="20210720 20:37:29.148"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:37:22.564" endtime="20210720 20:37:29.149"/>
</test>
<test id="s1-s4-s2-t10" name="Cannot create container without admin privilege">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container create</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20210720 20:37:29.154" endtime="20210720 20:37:29.155"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:29.164" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:29.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:37:29.168" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:37:29.161" endtime="20210720 20:37:29.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:29.169" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:37:29.168" endtime="20210720 20:37:29.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:37:29.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:37:29.169" endtime="20210720 20:37:29.170"/>
</kw>
<status status="PASS" starttime="20210720 20:37:29.160" endtime="20210720 20:37:29.170"/>
</kw>
<msg timestamp="20210720 20:37:29.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:37:29.160" endtime="20210720 20:37:29.170"/>
</kw>
<msg timestamp="20210720 20:37:29.171" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:37:29.156" endtime="20210720 20:37:29.171"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:37:29.171" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:37:29.171" endtime="20210720 20:37:29.172"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:29.177" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:29.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:37:29.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:37:29.174" endtime="20210720 20:37:29.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:29.184" level="INFO"/>
<status status="PASS" starttime="20210720 20:37:29.184" endtime="20210720 20:37:29.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:37:29.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:37:29.185" endtime="20210720 20:37:29.186"/>
</kw>
<status status="PASS" starttime="20210720 20:37:29.173" endtime="20210720 20:37:29.186"/>
</kw>
<msg timestamp="20210720 20:37:29.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:37:29.173" endtime="20210720 20:37:29.186"/>
</kw>
<status status="PASS" starttime="20210720 20:37:29.172" endtime="20210720 20:37:29.187"/>
</kw>
<status status="PASS" starttime="20210720 20:37:29.172" endtime="20210720 20:37:29.187"/>
</kw>
<status status="PASS" starttime="20210720 20:37:29.155" endtime="20210720 20:37:29.187"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:29.191" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:36.145" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:37:36.146" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:37:29.188" endtime="20210720 20:37:36.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:36.149" level="INFO">Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:37:36.147" endtime="20210720 20:37:36.149"/>
</kw>
<msg timestamp="20210720 20:37:36.150" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:37:29.188" endtime="20210720 20:37:36.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:36.150" endtime="20210720 20:37:36.151"/>
</kw>
<status status="PASS" starttime="20210720 20:37:29.187" endtime="20210720 20:37:36.151"/>
</kw>
<status status="PASS" starttime="20210720 20:37:29.153" endtime="20210720 20:37:36.152"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:37:29.151" endtime="20210720 20:37:36.152"/>
</test>
<test id="s1-s4-s2-t11" name="Cannot delete container without admin privilege">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container delete "${CONTAINER}"</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20210720 20:37:36.155" endtime="20210720 20:37:36.156"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:36.165" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:36.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:37:36.170" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:37:36.160" endtime="20210720 20:37:36.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:36.172" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:37:36.171" endtime="20210720 20:37:36.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:37:36.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:37:36.172" endtime="20210720 20:37:36.173"/>
</kw>
<status status="PASS" starttime="20210720 20:37:36.159" endtime="20210720 20:37:36.173"/>
</kw>
<msg timestamp="20210720 20:37:36.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:37:36.158" endtime="20210720 20:37:36.173"/>
</kw>
<msg timestamp="20210720 20:37:36.174" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:37:36.157" endtime="20210720 20:37:36.174"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:37:36.175" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:37:36.174" endtime="20210720 20:37:36.175"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:36.180" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:36.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:37:36.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:37:36.178" endtime="20210720 20:37:36.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:36.195" level="INFO"/>
<status status="PASS" starttime="20210720 20:37:36.193" endtime="20210720 20:37:36.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:37:36.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:37:36.195" endtime="20210720 20:37:36.196"/>
</kw>
<status status="PASS" starttime="20210720 20:37:36.177" endtime="20210720 20:37:36.196"/>
</kw>
<msg timestamp="20210720 20:37:36.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:37:36.177" endtime="20210720 20:37:36.197"/>
</kw>
<status status="PASS" starttime="20210720 20:37:36.176" endtime="20210720 20:37:36.197"/>
</kw>
<status status="PASS" starttime="20210720 20:37:36.175" endtime="20210720 20:37:36.197"/>
</kw>
<status status="PASS" starttime="20210720 20:37:36.156" endtime="20210720 20:37:36.198"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:36.202" level="INFO">Running command 'ozone admin container delete "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:42.473" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:37:42.473" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:37:36.199" endtime="20210720 20:37:42.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:42.476" level="INFO">Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:37:42.474" endtime="20210720 20:37:42.476"/>
</kw>
<msg timestamp="20210720 20:37:42.477" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:37:36.199" endtime="20210720 20:37:42.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:42.478" endtime="20210720 20:37:42.479"/>
</kw>
<status status="PASS" starttime="20210720 20:37:36.198" endtime="20210720 20:37:42.479"/>
</kw>
<status status="PASS" starttime="20210720 20:37:36.154" endtime="20210720 20:37:42.479"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:37:36.153" endtime="20210720 20:37:42.480"/>
</test>
<doc>Test ozone admin container command</doc>
<status status="PASS" starttime="20210720 20:32:36.376" endtime="20210720 20:37:42.481"/>
</suite>
<suite id="s1-s4-s3" name="Datanode" source="/opt/hadoop/smoketest/admincli/datanode.robot">
<test id="s1-s4-s3-t1" name="List datanodes">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:42.500" level="INFO">Running command 'ozone admin datanode list 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:47.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:37:47.602" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:37:42.497" endtime="20210720 20:37:47.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:47.603" level="INFO">Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
76e2c7a6-d4fe-4a1a-baf7-86fa3590384e/RATIS/ONE/RATIS/OPEN/Leader
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower

Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default-rack/172.25.0.104/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Leader
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower
e48b3e7d-5a59-4d17-a902-31c9be149619/RATIS/ONE/RATIS/OPEN/Leader

Datanode: 5a23a414-9886-4450-950a-ec3d59209c22 (/default-rack/172.25.0.102/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Leader
b0d8c806-7e95-4959-b8e2-7a69a2122163/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
3cae1542-1313-4dad-86c5-58ed7bc3f7c0/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20210720 20:37:47.602" endtime="20210720 20:37:47.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:37:47.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:37:47.604" endtime="20210720 20:37:47.605"/>
</kw>
<status status="PASS" starttime="20210720 20:37:42.497" endtime="20210720 20:37:47.605"/>
</kw>
<msg timestamp="20210720 20:37:47.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:37:42.496" endtime="20210720 20:37:47.605"/>
</kw>
<msg timestamp="20210720 20:37:47.606" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:37:42.496" endtime="20210720 20:37:47.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:47.606" endtime="20210720 20:37:47.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Related pipelines:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:37:47.606" endtime="20210720 20:37:47.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:37:42.495" endtime="20210720 20:37:47.607"/>
</test>
<test id="s1-s4-s3-t2" name="Filter list by UUID">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:47.612" level="INFO">Running command 'ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:37:54.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:37:54.266" level="INFO">${output} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:37:47.610" endtime="20210720 20:37:54.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:37:54.273" level="INFO">e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:37:54.272" endtime="20210720 20:37:54.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:37:54.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:37:54.273" endtime="20210720 20:37:54.274"/>
</kw>
<status status="PASS" starttime="20210720 20:37:47.610" endtime="20210720 20:37:54.274"/>
</kw>
<msg timestamp="20210720 20:37:54.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:37:47.609" endtime="20210720 20:37:54.275"/>
</kw>
<msg timestamp="20210720 20:37:54.277" level="INFO">${uuid} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:37:47.609" endtime="20210720 20:37:54.277"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --id "${uuid}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:37:54.283" level="INFO">Running command 'ozone admin datanode list --id "e1c7a26b-9ce9-41be-88e7-0d70ea915ff0" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:01.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:01.379" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:37:54.278" endtime="20210720 20:38:01.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:01.380" level="INFO">Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
76e2c7a6-d4fe-4a1a-baf7-86fa3590384e/RATIS/ONE/RATIS/OPEN/Leader
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower
</msg>
<status status="PASS" starttime="20210720 20:38:01.379" endtime="20210720 20:38:01.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:01.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:01.380" endtime="20210720 20:38:01.381"/>
</kw>
<status status="PASS" starttime="20210720 20:37:54.278" endtime="20210720 20:38:01.381"/>
</kw>
<msg timestamp="20210720 20:38:01.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:37:54.278" endtime="20210720 20:38:01.382"/>
</kw>
<msg timestamp="20210720 20:38:01.382" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:37:54.277" endtime="20210720 20:38:01.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:38:01.382" endtime="20210720 20:38:01.383"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20210720 20:38:01.383" level="INFO">1 out of 7 lines matched</msg>
<msg timestamp="20210720 20:38:01.383" level="INFO">${datanodes} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)</msg>
<status status="PASS" starttime="20210720 20:38:01.383" endtime="20210720 20:38:01.383"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20210720 20:38:01.384" level="INFO">1 lines returned</msg>
<msg timestamp="20210720 20:38:01.384" level="INFO">@{lines} = [ Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) ]</msg>
<status status="PASS" starttime="20210720 20:38:01.383" endtime="20210720 20:38:01.384"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210720 20:38:01.384" level="INFO">Length is 1</msg>
<msg timestamp="20210720 20:38:01.385" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20210720 20:38:01.384" endtime="20210720 20:38:01.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:01.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:01.385" endtime="20210720 20:38:01.385"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:37:47.608" endtime="20210720 20:38:01.386"/>
</test>
<test id="s1-s4-s3-t3" name="Filter list by NodeOperationalState">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:01.394" level="INFO">Running command 'ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:08.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:08.274" level="INFO">${output} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:38:01.390" endtime="20210720 20:38:08.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:08.275" level="INFO">e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:38:08.274" endtime="20210720 20:38:08.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:08.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:08.276" endtime="20210720 20:38:08.277"/>
</kw>
<status status="PASS" starttime="20210720 20:38:01.390" endtime="20210720 20:38:08.277"/>
</kw>
<msg timestamp="20210720 20:38:08.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:01.390" endtime="20210720 20:38:08.278"/>
</kw>
<msg timestamp="20210720 20:38:08.278" level="INFO">${uuid} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:38:01.389" endtime="20210720 20:38:08.278"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:08.282" level="INFO">Running command 'ozone admin datanode list --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:15.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:15.245" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:38:08.280" endtime="20210720 20:38:15.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:15.248" level="INFO">Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
76e2c7a6-d4fe-4a1a-baf7-86fa3590384e/RATIS/ONE/RATIS/OPEN/Leader
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower

Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default-rack/172.25.0.104/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Leader
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower
e48b3e7d-5a59-4d17-a902-31c9be149619/RATIS/ONE/RATIS/OPEN/Leader

Datanode: 5a23a414-9886-4450-950a-ec3d59209c22 (/default-rack/172.25.0.102/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Leader
b0d8c806-7e95-4959-b8e2-7a69a2122163/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
3cae1542-1313-4dad-86c5-58ed7bc3f7c0/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20210720 20:38:15.246" endtime="20210720 20:38:15.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:15.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:15.248" endtime="20210720 20:38:15.249"/>
</kw>
<status status="PASS" starttime="20210720 20:38:08.279" endtime="20210720 20:38:15.250"/>
</kw>
<msg timestamp="20210720 20:38:15.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:08.279" endtime="20210720 20:38:15.250"/>
</kw>
<msg timestamp="20210720 20:38:15.251" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:38:08.278" endtime="20210720 20:38:15.251"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:38:15.251" endtime="20210720 20:38:15.252"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20210720 20:38:15.254" level="INFO">3 out of 24 lines matched</msg>
<msg timestamp="20210720 20:38:15.254" level="INFO">${datanodes} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default-rac...</msg>
<status status="PASS" starttime="20210720 20:38:15.252" endtime="20210720 20:38:15.254"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20210720 20:38:15.255" level="INFO">3 lines returned</msg>
<msg timestamp="20210720 20:38:15.255" level="INFO">@{lines} = [ Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) | Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default...</msg>
<status status="PASS" starttime="20210720 20:38:15.254" endtime="20210720 20:38:15.255"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210720 20:38:15.257" level="INFO">Length is 3</msg>
<msg timestamp="20210720 20:38:15.257" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20210720 20:38:15.256" endtime="20210720 20:38:15.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:15.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:15.257" endtime="20210720 20:38:15.258"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:38:01.387" endtime="20210720 20:38:15.258"/>
</test>
<test id="s1-s4-s3-t4" name="Filter list by NodeState">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:15.267" level="INFO">Running command 'ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:21.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:21.510" level="INFO">${output} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:38:15.264" endtime="20210720 20:38:21.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:21.511" level="INFO">e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:38:21.510" endtime="20210720 20:38:21.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:21.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:21.511" endtime="20210720 20:38:21.513"/>
</kw>
<status status="PASS" starttime="20210720 20:38:15.263" endtime="20210720 20:38:21.513"/>
</kw>
<msg timestamp="20210720 20:38:21.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:15.263" endtime="20210720 20:38:21.514"/>
</kw>
<msg timestamp="20210720 20:38:21.514" level="INFO">${uuid} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:38:15.261" endtime="20210720 20:38:21.514"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:21.521" level="INFO">Running command 'ozone admin datanode list --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:28.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:28.479" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:38:21.517" endtime="20210720 20:38:28.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:28.481" level="INFO">Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
76e2c7a6-d4fe-4a1a-baf7-86fa3590384e/RATIS/ONE/RATIS/OPEN/Leader
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower

Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default-rack/172.25.0.104/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Leader
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower
e48b3e7d-5a59-4d17-a902-31c9be149619/RATIS/ONE/RATIS/OPEN/Leader

Datanode: 5a23a414-9886-4450-950a-ec3d59209c22 (/default-rack/172.25.0.102/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Leader
b0d8c806-7e95-4959-b8e2-7a69a2122163/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
3cae1542-1313-4dad-86c5-58ed7bc3f7c0/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20210720 20:38:28.480" endtime="20210720 20:38:28.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:28.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:28.482" endtime="20210720 20:38:28.483"/>
</kw>
<status status="PASS" starttime="20210720 20:38:21.516" endtime="20210720 20:38:28.484"/>
</kw>
<msg timestamp="20210720 20:38:28.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:21.515" endtime="20210720 20:38:28.484"/>
</kw>
<msg timestamp="20210720 20:38:28.485" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:38:21.515" endtime="20210720 20:38:28.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:38:28.485" endtime="20210720 20:38:28.486"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20210720 20:38:28.488" level="INFO">3 out of 24 lines matched</msg>
<msg timestamp="20210720 20:38:28.488" level="INFO">${datanodes} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default-rac...</msg>
<status status="PASS" starttime="20210720 20:38:28.487" endtime="20210720 20:38:28.488"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20210720 20:38:28.489" level="INFO">3 lines returned</msg>
<msg timestamp="20210720 20:38:28.489" level="INFO">@{lines} = [ Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) | Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default...</msg>
<status status="PASS" starttime="20210720 20:38:28.488" endtime="20210720 20:38:28.490"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210720 20:38:28.491" level="INFO">Length is 3</msg>
<msg timestamp="20210720 20:38:28.491" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20210720 20:38:28.490" endtime="20210720 20:38:28.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:28.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:28.491" endtime="20210720 20:38:28.492"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:38:15.260" endtime="20210720 20:38:28.493"/>
</test>
<test id="s1-s4-s3-t5" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin datanode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:28.508" level="INFO">Running command 'ozone admin datanode 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:32.994" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:38:32.994" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210720 20:38:28.503" endtime="20210720 20:38:32.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:32.996" level="INFO">Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list          List info of datanodes
  decommission  Decommission a datanode
  maintenance   Put a datanode into Maintenance Mode
  recommission  Return a datanode to service
  usageinfo     List usage information (such as Capacity, SCMUsed, Remaining)
                  of a datanode by IP address or UUID</msg>
<status status="PASS" starttime="20210720 20:38:32.995" endtime="20210720 20:38:32.996"/>
</kw>
<msg timestamp="20210720 20:38:32.996" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210720 20:38:28.501" endtime="20210720 20:38:32.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:38:32.996" endtime="20210720 20:38:32.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:38:32.997" endtime="20210720 20:38:32.997"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:38:28.500" endtime="20210720 20:38:32.997"/>
</test>
<doc>Test ozone admin datanode command</doc>
<status status="PASS" starttime="20210720 20:37:42.486" endtime="20210720 20:38:32.999"/>
</suite>
<suite id="s1-s4-s4" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:33.013" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:33.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:33.017" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:38:33.011" endtime="20210720 20:38:33.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:33.019" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:38:33.018" endtime="20210720 20:38:33.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:33.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:33.019" endtime="20210720 20:38:33.020"/>
</kw>
<status status="PASS" starttime="20210720 20:38:33.010" endtime="20210720 20:38:33.021"/>
</kw>
<msg timestamp="20210720 20:38:33.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:33.010" endtime="20210720 20:38:33.021"/>
</kw>
<msg timestamp="20210720 20:38:33.021" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:38:33.010" endtime="20210720 20:38:33.021"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:38:33.023" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:38:33.021" endtime="20210720 20:38:33.024"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:33.028" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:33.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:33.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:38:33.026" endtime="20210720 20:38:33.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:33.040" level="INFO"/>
<status status="PASS" starttime="20210720 20:38:33.039" endtime="20210720 20:38:33.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:33.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:33.041" endtime="20210720 20:38:33.042"/>
</kw>
<status status="PASS" starttime="20210720 20:38:33.025" endtime="20210720 20:38:33.042"/>
</kw>
<msg timestamp="20210720 20:38:33.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:33.025" endtime="20210720 20:38:33.042"/>
</kw>
<status status="PASS" starttime="20210720 20:38:33.024" endtime="20210720 20:38:33.043"/>
</kw>
<status status="PASS" starttime="20210720 20:38:33.024" endtime="20210720 20:38:33.043"/>
</kw>
<status status="PASS" starttime="20210720 20:38:33.009" endtime="20210720 20:38:33.043"/>
</kw>
<status status="PASS" starttime="20210720 20:38:33.008" endtime="20210720 20:38:33.043"/>
</kw>
<test id="s1-s4-s4-t1" name="Create pipeline">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:33.048" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:39.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:39.766" level="INFO">${output} = PipelineID=18cab4fb-e592-4d7e-890e-89dcda5bc25a is created. Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datan...</msg>
<status status="PASS" starttime="20210720 20:38:33.046" endtime="20210720 20:38:39.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:39.769" level="INFO">PipelineID=18cab4fb-e592-4d7e-890e-89dcda5bc25a is created. Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:38:39.145Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:38:39.768" endtime="20210720 20:38:39.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:39.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:39.769" endtime="20210720 20:38:39.770"/>
</kw>
<status status="PASS" starttime="20210720 20:38:33.045" endtime="20210720 20:38:39.771"/>
</kw>
<msg timestamp="20210720 20:38:39.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:33.045" endtime="20210720 20:38:39.771"/>
</kw>
<msg timestamp="20210720 20:38:39.772" level="INFO">${output} = PipelineID=18cab4fb-e592-4d7e-890e-89dcda5bc25a is created. Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datan...</msg>
<status status="PASS" starttime="20210720 20:38:33.044" endtime="20210720 20:38:39.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:38:39.772" endtime="20210720 20:38:39.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:38:39.773" endtime="20210720 20:38:39.774"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:39.781" level="INFO">Running command 'echo "PipelineID=18cab4fb-e592-4d7e-890e-89dcda5bc25a is created. Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:38:39.145Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:39.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:39.787" level="INFO">${output} = 18cab4fb-e592-4d7e-890e-89dcda5bc25a</msg>
<status status="PASS" starttime="20210720 20:38:39.778" endtime="20210720 20:38:39.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:39.789" level="INFO">18cab4fb-e592-4d7e-890e-89dcda5bc25a</msg>
<status status="PASS" starttime="20210720 20:38:39.788" endtime="20210720 20:38:39.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:39.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:39.789" endtime="20210720 20:38:39.790"/>
</kw>
<status status="PASS" starttime="20210720 20:38:39.776" endtime="20210720 20:38:39.790"/>
</kw>
<msg timestamp="20210720 20:38:39.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:39.776" endtime="20210720 20:38:39.791"/>
</kw>
<msg timestamp="20210720 20:38:39.791" level="INFO">${pipeline} = 18cab4fb-e592-4d7e-890e-89dcda5bc25a</msg>
<status status="PASS" starttime="20210720 20:38:39.774" endtime="20210720 20:38:39.791"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:38:39.792" level="INFO">${PIPELINE} = 18cab4fb-e592-4d7e-890e-89dcda5bc25a</msg>
<status status="PASS" starttime="20210720 20:38:39.791" endtime="20210720 20:38:39.792"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:38:33.043" endtime="20210720 20:38:39.792"/>
</test>
<test id="s1-s4-s4-t2" name="List pipelines">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:39.801" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:46.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:46.078" level="INFO">${output} = Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:38:39.798" endtime="20210720 20:38:46.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:46.080" level="INFO">Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e1c7a26b-9ce9-41be-88e7-0d70ea915ff0, CreationTimestamp2021-07-20T20:14:42.492Z[UTC]]
Pipeline[ Id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:07a05cf4-dc30-473b-837b-17c4c6f914d0, CreationTimestamp2021-07-20T20:14:42.815Z[UTC]]
Pipeline[ Id: 8b105480-3262-484c-b193-a91466c768e6, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.707Z[UTC]]
Pipeline[ Id: b0d8c806-7e95-4959-b8e2-7a69a2122163, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:35:54.362Z[UTC]]
Pipeline[ Id: 3cae1542-1313-4dad-86c5-58ed7bc3f7c0, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.127Z[UTC]]
Pipeline[ Id: e48b3e7d-5a59-4d17-a902-31c9be149619, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:07a05cf4-dc30-473b-837b-17c4c6f914d0, CreationTimestamp2021-07-20T20:14:41.474Z[UTC]]
Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:38:39.145Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:38:46.079" endtime="20210720 20:38:46.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:46.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:46.081" endtime="20210720 20:38:46.082"/>
</kw>
<status status="PASS" starttime="20210720 20:38:39.797" endtime="20210720 20:38:46.082"/>
</kw>
<msg timestamp="20210720 20:38:46.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:39.796" endtime="20210720 20:38:46.082"/>
</kw>
<msg timestamp="20210720 20:38:46.083" level="INFO">${output} = Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:38:39.795" endtime="20210720 20:38:46.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:38:46.083" endtime="20210720 20:38:46.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:38:39.793" endtime="20210720 20:38:46.083"/>
</test>
<test id="s1-s4-s4-t3" name="List pipelines with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:46.093" level="INFO">Running command 'ozone admin pipeline list --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:38:53.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:38:53.229" level="INFO">${output} = Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:38:46.090" endtime="20210720 20:38:53.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:38:53.232" level="INFO">Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e1c7a26b-9ce9-41be-88e7-0d70ea915ff0, CreationTimestamp2021-07-20T20:14:42.492Z[UTC]]
Pipeline[ Id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:07a05cf4-dc30-473b-837b-17c4c6f914d0, CreationTimestamp2021-07-20T20:14:42.815Z[UTC]]
Pipeline[ Id: 8b105480-3262-484c-b193-a91466c768e6, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.707Z[UTC]]
Pipeline[ Id: b0d8c806-7e95-4959-b8e2-7a69a2122163, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:35:54.362Z[UTC]]
Pipeline[ Id: 3cae1542-1313-4dad-86c5-58ed7bc3f7c0, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.127Z[UTC]]
Pipeline[ Id: e48b3e7d-5a59-4d17-a902-31c9be149619, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:07a05cf4-dc30-473b-837b-17c4c6f914d0, CreationTimestamp2021-07-20T20:14:41.474Z[UTC]]
Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:38:39.145Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:38:53.231" endtime="20210720 20:38:53.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:38:53.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:38:53.233" endtime="20210720 20:38:53.234"/>
</kw>
<status status="PASS" starttime="20210720 20:38:46.090" endtime="20210720 20:38:53.235"/>
</kw>
<msg timestamp="20210720 20:38:53.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:46.089" endtime="20210720 20:38:53.235"/>
</kw>
<msg timestamp="20210720 20:38:53.237" level="INFO">${output} = Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:38:46.089" endtime="20210720 20:38:53.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:38:53.237" endtime="20210720 20:38:53.238"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:38:46.087" endtime="20210720 20:38:53.238"/>
</test>
<test id="s1-s4-s4-t4" name="Deactivate pipeline">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:38:53.246" level="INFO">Running command 'ozone admin pipeline deactivate "18cab4fb-e592-4d7e-890e-89dcda5bc25a" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:00.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:00.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:38:53.243" endtime="20210720 20:39:00.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:00.475" level="INFO"/>
<status status="PASS" starttime="20210720 20:39:00.474" endtime="20210720 20:39:00.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:00.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:00.475" endtime="20210720 20:39:00.476"/>
</kw>
<status status="PASS" starttime="20210720 20:38:53.242" endtime="20210720 20:39:00.476"/>
</kw>
<msg timestamp="20210720 20:39:00.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:38:53.242" endtime="20210720 20:39:00.477"/>
</kw>
<status status="PASS" starttime="20210720 20:38:53.241" endtime="20210720 20:39:00.477"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:00.482" level="INFO">Running command 'ozone admin pipeline list | grep "18cab4fb-e592-4d7e-890e-89dcda5bc25a" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:08.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:08.025" level="INFO">${output} = Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:39:00.479" endtime="20210720 20:39:08.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:08.027" level="INFO">Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2021-07-20T20:38:39.145Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:39:08.025" endtime="20210720 20:39:08.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:08.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:08.027" endtime="20210720 20:39:08.028"/>
</kw>
<status status="PASS" starttime="20210720 20:39:00.479" endtime="20210720 20:39:08.028"/>
</kw>
<msg timestamp="20210720 20:39:08.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:00.478" endtime="20210720 20:39:08.028"/>
</kw>
<msg timestamp="20210720 20:39:08.028" level="INFO">${output} = Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:39:00.477" endtime="20210720 20:39:08.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:08.029" endtime="20210720 20:39:08.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:38:53.240" endtime="20210720 20:39:08.033"/>
</test>
<test id="s1-s4-s4-t5" name="Activate pipeline">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:08.038" level="INFO">Running command 'ozone admin pipeline activate "18cab4fb-e592-4d7e-890e-89dcda5bc25a" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:12.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:12.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:39:08.035" endtime="20210720 20:39:12.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:12.571" level="INFO"/>
<status status="PASS" starttime="20210720 20:39:12.570" endtime="20210720 20:39:12.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:12.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:12.571" endtime="20210720 20:39:12.572"/>
</kw>
<status status="PASS" starttime="20210720 20:39:08.035" endtime="20210720 20:39:12.573"/>
</kw>
<msg timestamp="20210720 20:39:12.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:08.035" endtime="20210720 20:39:12.573"/>
</kw>
<status status="PASS" starttime="20210720 20:39:08.034" endtime="20210720 20:39:12.573"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:12.579" level="INFO">Running command 'ozone admin pipeline list | grep "18cab4fb-e592-4d7e-890e-89dcda5bc25a" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:19.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:19.523" level="INFO">${output} = Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:39:12.576" endtime="20210720 20:39:19.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:19.525" level="INFO">Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:38:39.145Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:39:19.524" endtime="20210720 20:39:19.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:19.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:19.526" endtime="20210720 20:39:19.528"/>
</kw>
<status status="PASS" starttime="20210720 20:39:12.575" endtime="20210720 20:39:19.528"/>
</kw>
<msg timestamp="20210720 20:39:19.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:12.575" endtime="20210720 20:39:19.529"/>
</kw>
<msg timestamp="20210720 20:39:19.529" level="INFO">${output} = Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:39:12.574" endtime="20210720 20:39:19.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:19.530" endtime="20210720 20:39:19.531"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:39:08.033" endtime="20210720 20:39:19.532"/>
</test>
<test id="s1-s4-s4-t6" name="Close pipeline">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:19.542" level="INFO">Running command 'ozone admin pipeline close "18cab4fb-e592-4d7e-890e-89dcda5bc25a" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:27.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:27.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:39:19.537" endtime="20210720 20:39:27.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:27.002" level="INFO"/>
<status status="PASS" starttime="20210720 20:39:27.001" endtime="20210720 20:39:27.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:27.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:27.002" endtime="20210720 20:39:27.003"/>
</kw>
<status status="PASS" starttime="20210720 20:39:19.535" endtime="20210720 20:39:27.003"/>
</kw>
<msg timestamp="20210720 20:39:27.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:19.535" endtime="20210720 20:39:27.003"/>
</kw>
<status status="PASS" starttime="20210720 20:39:19.533" endtime="20210720 20:39:27.004"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:27.009" level="INFO">Running command 'ozone admin pipeline list | grep "18cab4fb-e592-4d7e-890e-89dcda5bc25a" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:33.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:33.938" level="INFO">${output} = Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:39:27.005" endtime="20210720 20:39:33.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:33.939" level="INFO">Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2021-07-20T20:38:39.145Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:39:33.938" endtime="20210720 20:39:33.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:33.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:33.939" endtime="20210720 20:39:33.941"/>
</kw>
<status status="PASS" starttime="20210720 20:39:27.005" endtime="20210720 20:39:33.941"/>
</kw>
<msg timestamp="20210720 20:39:33.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:27.005" endtime="20210720 20:39:33.941"/>
</kw>
<msg timestamp="20210720 20:39:33.942" level="INFO">${output} = Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:39:27.004" endtime="20210720 20:39:33.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:33.942" endtime="20210720 20:39:33.942"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:39:19.532" endtime="20210720 20:39:33.942"/>
</test>
<test id="s1-s4-s4-t7" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:33.950" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:38.546" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:39:38.547" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210720 20:39:33.946" endtime="20210720 20:39:38.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:38.549" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20210720 20:39:38.547" endtime="20210720 20:39:38.549"/>
</kw>
<msg timestamp="20210720 20:39:38.550" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210720 20:39:33.945" endtime="20210720 20:39:38.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:38.550" endtime="20210720 20:39:38.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:38.551" endtime="20210720 20:39:38.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:38.552" endtime="20210720 20:39:38.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:38.554" endtime="20210720 20:39:38.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:38.555" endtime="20210720 20:39:38.555"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:39:33.944" endtime="20210720 20:39:38.556"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20210720 20:38:33.002" endtime="20210720 20:39:38.557"/>
</suite>
<suite id="s1-s4-s5" name="Replicationmanager" source="/opt/hadoop/smoketest/admincli/replicationmanager.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:38.579" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:38.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:38.583" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:39:38.575" endtime="20210720 20:39:38.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:38.585" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:39:38.584" endtime="20210720 20:39:38.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:38.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:38.586" endtime="20210720 20:39:38.587"/>
</kw>
<status status="PASS" starttime="20210720 20:39:38.575" endtime="20210720 20:39:38.587"/>
</kw>
<msg timestamp="20210720 20:39:38.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:38.574" endtime="20210720 20:39:38.588"/>
</kw>
<msg timestamp="20210720 20:39:38.588" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:39:38.573" endtime="20210720 20:39:38.588"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:39:38.591" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:39:38.588" endtime="20210720 20:39:38.591"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:38.597" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:38.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:38.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:39:38.594" endtime="20210720 20:39:38.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:38.607" level="INFO"/>
<status status="PASS" starttime="20210720 20:39:38.606" endtime="20210720 20:39:38.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:38.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:38.607" endtime="20210720 20:39:38.608"/>
</kw>
<status status="PASS" starttime="20210720 20:39:38.594" endtime="20210720 20:39:38.609"/>
</kw>
<msg timestamp="20210720 20:39:38.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:38.593" endtime="20210720 20:39:38.609"/>
</kw>
<status status="PASS" starttime="20210720 20:39:38.592" endtime="20210720 20:39:38.610"/>
</kw>
<status status="PASS" starttime="20210720 20:39:38.591" endtime="20210720 20:39:38.610"/>
</kw>
<status status="PASS" starttime="20210720 20:39:38.573" endtime="20210720 20:39:38.610"/>
</kw>
<status status="PASS" starttime="20210720 20:39:38.572" endtime="20210720 20:39:38.610"/>
</kw>
<test id="s1-s4-s5-t1" name="Check replicationmanager">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:38.616" level="INFO">Running command 'ozone admin replicationmanager status 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:45.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:45.560" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:39:38.614" endtime="20210720 20:39:45.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:45.562" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:39:45.561" endtime="20210720 20:39:45.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:45.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:45.562" endtime="20210720 20:39:45.563"/>
</kw>
<status status="PASS" starttime="20210720 20:39:38.613" endtime="20210720 20:39:45.563"/>
</kw>
<msg timestamp="20210720 20:39:45.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:38.613" endtime="20210720 20:39:45.563"/>
</kw>
<msg timestamp="20210720 20:39:45.563" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:39:38.612" endtime="20210720 20:39:45.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:45.564" endtime="20210720 20:39:45.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:45.565" endtime="20210720 20:39:45.566"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:39:38.611" endtime="20210720 20:39:45.567"/>
</test>
<test id="s1-s4-s5-t2" name="Check replicationmanager with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:45.577" level="INFO">Running command 'ozone admin replicationmanager status --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:50.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:50.727" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:39:45.573" endtime="20210720 20:39:50.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:50.729" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:39:50.728" endtime="20210720 20:39:50.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:50.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:50.729" endtime="20210720 20:39:50.730"/>
</kw>
<status status="PASS" starttime="20210720 20:39:45.572" endtime="20210720 20:39:50.730"/>
</kw>
<msg timestamp="20210720 20:39:50.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:45.571" endtime="20210720 20:39:50.730"/>
</kw>
<msg timestamp="20210720 20:39:50.730" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:39:45.570" endtime="20210720 20:39:50.730"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:50.731" endtime="20210720 20:39:50.731"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:50.731" endtime="20210720 20:39:50.732"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:39:45.569" endtime="20210720 20:39:50.732"/>
</test>
<test id="s1-s4-s5-t3" name="Stop replicationmanager">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager stop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:50.737" level="INFO">Running command 'ozone admin replicationmanager stop 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:39:58.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:39:58.560" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20210720 20:39:50.735" endtime="20210720 20:39:58.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:39:58.561" level="INFO">Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20210720 20:39:58.560" endtime="20210720 20:39:58.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:39:58.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:39:58.561" endtime="20210720 20:39:58.562"/>
</kw>
<status status="PASS" starttime="20210720 20:39:50.734" endtime="20210720 20:39:58.562"/>
</kw>
<msg timestamp="20210720 20:39:58.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:50.734" endtime="20210720 20:39:58.563"/>
</kw>
<msg timestamp="20210720 20:39:58.563" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20210720 20:39:50.734" endtime="20210720 20:39:58.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Stopping ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:39:58.564" endtime="20210720 20:39:58.564"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:39:58.570" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Not Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:40:05.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:40:05.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:39:58.567" endtime="20210720 20:40:05.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:40:05.491" level="INFO"/>
<status status="PASS" starttime="20210720 20:40:05.491" endtime="20210720 20:40:05.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:40:05.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:40:05.492" endtime="20210720 20:40:05.493"/>
</kw>
<status status="PASS" starttime="20210720 20:39:58.566" endtime="20210720 20:40:05.493"/>
</kw>
<msg timestamp="20210720 20:40:05.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:39:58.566" endtime="20210720 20:40:05.493"/>
</kw>
<status status="PASS" starttime="20210720 20:39:58.565" endtime="20210720 20:40:05.494"/>
</kw>
<status status="PASS" starttime="20210720 20:39:58.565" endtime="20210720 20:40:05.494"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:39:50.733" endtime="20210720 20:40:05.494"/>
</test>
<test id="s1-s4-s5-t4" name="Start replicationmanager">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager start</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:40:05.501" level="INFO">Running command 'ozone admin replicationmanager start 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:40:10.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:40:10.129" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20210720 20:40:05.498" endtime="20210720 20:40:10.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:40:10.131" level="INFO">Starting ReplicationManager...</msg>
<status status="PASS" starttime="20210720 20:40:10.130" endtime="20210720 20:40:10.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:40:10.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:40:10.131" endtime="20210720 20:40:10.132"/>
</kw>
<status status="PASS" starttime="20210720 20:40:05.498" endtime="20210720 20:40:10.132"/>
</kw>
<msg timestamp="20210720 20:40:10.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:40:05.498" endtime="20210720 20:40:10.132"/>
</kw>
<msg timestamp="20210720 20:40:10.133" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20210720 20:40:05.497" endtime="20210720 20:40:10.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Starting ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:10.133" endtime="20210720 20:40:10.133"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:40:10.138" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:40:17.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:40:17.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:40:10.135" endtime="20210720 20:40:17.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:40:17.458" level="INFO"/>
<status status="PASS" starttime="20210720 20:40:17.456" endtime="20210720 20:40:17.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:40:17.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:40:17.458" endtime="20210720 20:40:17.460"/>
</kw>
<status status="PASS" starttime="20210720 20:40:10.135" endtime="20210720 20:40:17.460"/>
</kw>
<msg timestamp="20210720 20:40:17.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:40:10.134" endtime="20210720 20:40:17.460"/>
</kw>
<status status="PASS" starttime="20210720 20:40:10.134" endtime="20210720 20:40:17.461"/>
</kw>
<status status="PASS" starttime="20210720 20:40:10.133" endtime="20210720 20:40:17.461"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:40:05.495" endtime="20210720 20:40:17.461"/>
</test>
<test id="s1-s4-s5-t5" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:40:17.467" level="INFO">Running command 'ozone admin replicationmanager 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:40:21.968" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:40:21.968" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20210720 20:40:17.464" endtime="20210720 20:40:21.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:40:21.969" level="INFO">Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  start   Start ReplicationManager
  stop    Stop ReplicationManager
  status  Check if ReplicationManager is running or not</msg>
<status status="PASS" starttime="20210720 20:40:21.968" endtime="20210720 20:40:21.969"/>
</kw>
<msg timestamp="20210720 20:40:21.970" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20210720 20:40:17.463" endtime="20210720 20:40:21.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:21.970" endtime="20210720 20:40:21.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>start</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:21.970" endtime="20210720 20:40:21.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>stop</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:21.972" endtime="20210720 20:40:21.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:21.972" endtime="20210720 20:40:21.973"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:40:17.462" endtime="20210720 20:40:21.973"/>
</test>
<doc>Test ozone admin replicationmanager command</doc>
<status status="PASS" starttime="20210720 20:39:38.561" endtime="20210720 20:40:21.975"/>
</suite>
<suite id="s1-s4-s6" name="Safemode" source="/opt/hadoop/smoketest/admincli/safemode.robot">
<test id="s1-s4-s6-t1" name="Check safemode">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:40:22.003" level="INFO">Running command 'ozone admin safemode status 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:40:28.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:40:28.967" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:40:22.001" endtime="20210720 20:40:28.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:40:28.969" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:40:28.968" endtime="20210720 20:40:28.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:40:28.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:40:28.970" endtime="20210720 20:40:28.970"/>
</kw>
<status status="PASS" starttime="20210720 20:40:22.000" endtime="20210720 20:40:28.971"/>
</kw>
<msg timestamp="20210720 20:40:28.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:40:21.999" endtime="20210720 20:40:28.971"/>
</kw>
<msg timestamp="20210720 20:40:28.971" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:40:21.998" endtime="20210720 20:40:28.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:28.972" endtime="20210720 20:40:28.972"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:40:21.997" endtime="20210720 20:40:28.973"/>
</test>
<test id="s1-s4-s6-t2" name="Check safemode with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:40:28.982" level="INFO">Running command 'ozone admin safemode status --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:40:35.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:40:35.193" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:40:28.980" endtime="20210720 20:40:35.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:40:35.195" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:40:35.194" endtime="20210720 20:40:35.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:40:35.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:40:35.196" endtime="20210720 20:40:35.197"/>
</kw>
<status status="PASS" starttime="20210720 20:40:28.977" endtime="20210720 20:40:35.198"/>
</kw>
<msg timestamp="20210720 20:40:35.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:40:28.977" endtime="20210720 20:40:35.198"/>
</kw>
<msg timestamp="20210720 20:40:35.199" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:40:28.976" endtime="20210720 20:40:35.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:35.199" endtime="20210720 20:40:35.200"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:40:28.974" endtime="20210720 20:40:35.201"/>
</test>
<test id="s1-s4-s6-t3" name="Wait for safemode exit">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode wait -t 2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:40:35.211" level="INFO">Running command 'ozone admin safemode wait -t 2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:40:40.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:40:40.065" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:40:35.207" endtime="20210720 20:40:40.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:40:40.068" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:40:40.067" endtime="20210720 20:40:40.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:40:40.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:40:40.069" endtime="20210720 20:40:40.070"/>
</kw>
<status status="PASS" starttime="20210720 20:40:35.206" endtime="20210720 20:40:40.071"/>
</kw>
<msg timestamp="20210720 20:40:40.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:40:35.206" endtime="20210720 20:40:40.071"/>
</kw>
<msg timestamp="20210720 20:40:40.072" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:40:35.205" endtime="20210720 20:40:40.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:40.072" endtime="20210720 20:40:40.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:40:35.203" endtime="20210720 20:40:40.074"/>
</test>
<test id="s1-s4-s6-t4" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin safemode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:40:40.079" level="INFO">Running command 'ozone admin safemode 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:40:44.398" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:40:44.399" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20210720 20:40:40.077" endtime="20210720 20:40:44.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:40:44.400" level="INFO">Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  status  Check if SCM is in safe mode
  exit    Force SCM out of safe mode
  wait    Wait until the scm is out from the safe mode.</msg>
<status status="PASS" starttime="20210720 20:40:44.399" endtime="20210720 20:40:44.400"/>
</kw>
<msg timestamp="20210720 20:40:44.400" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20210720 20:40:40.076" endtime="20210720 20:40:44.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:44.401" endtime="20210720 20:40:44.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:44.401" endtime="20210720 20:40:44.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>exit</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:44.402" endtime="20210720 20:40:44.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>wait</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:40:44.403" endtime="20210720 20:40:44.403"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:40:40.075" endtime="20210720 20:40:44.403"/>
</test>
<doc>Test ozone admin safemode command</doc>
<status status="PASS" starttime="20210720 20:40:21.979" endtime="20210720 20:40:44.406"/>
</suite>
<suite id="s1-s4-s7" name="Scmha" source="/opt/hadoop/smoketest/admincli/scmha.robot">
<test id="s1-s4-s7-t1" name="Run scm roles">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin scm roles</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:40:44.420" level="INFO">Running command 'ozone admin scm roles 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:40:51.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:40:51.301" level="INFO">${output} = [scm3.org:9894:FOLLOWER, scm1.org:9894:LEADER, scm2.org:9894:FOLLOWER]</msg>
<status status="PASS" starttime="20210720 20:40:44.418" endtime="20210720 20:40:51.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:40:51.304" level="INFO">[scm3.org:9894:FOLLOWER, scm1.org:9894:LEADER, scm2.org:9894:FOLLOWER]</msg>
<status status="PASS" starttime="20210720 20:40:51.303" endtime="20210720 20:40:51.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:40:51.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:40:51.305" endtime="20210720 20:40:51.308"/>
</kw>
<status status="PASS" starttime="20210720 20:40:44.418" endtime="20210720 20:40:51.308"/>
</kw>
<msg timestamp="20210720 20:40:51.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:40:44.417" endtime="20210720 20:40:51.308"/>
</kw>
<msg timestamp="20210720 20:40:51.308" level="INFO">${output} = [scm3.org:9894:FOLLOWER, scm1.org:9894:LEADER, scm2.org:9894:FOLLOWER]</msg>
<status status="PASS" starttime="20210720 20:40:44.416" endtime="20210720 20:40:51.308"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>[scm:9894(:LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210720 20:40:51.309" endtime="20210720 20:40:51.310"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:40:44.415" endtime="20210720 20:40:51.310"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 20:40:44.408" endtime="20210720 20:40:51.313"/>
</suite>
<status status="PASS" starttime="20210720 20:32:31.540" endtime="20210720 20:40:51.319"/>
</suite>
<suite id="s1-s5" name="Admincli" source="/opt/hadoop/smoketest/admincli">
<suite id="s1-s5-s1" name="Admin" source="/opt/hadoop/smoketest/admincli/admin.robot">
<test id="s1-s5-s1-t1" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:40:58.737" level="INFO">Running command 'ozone admin 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:41:03.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:41:03.293" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20210720 20:40:58.733" endtime="20210720 20:41:03.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:41:03.295" level="INFO">Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configurationPath&gt;

  -D, --set=&lt;String=String&gt;

  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
      --verbose   More verbose output. Show the stack trace of the errors.
Commands:
  containerbalancer   ContainerBalancer specific operations
  replicationmanager  ReplicationManager specific operations
  safemode            Safe mode specific operations
  printTopology       Print a tree of the network topology as reported by SCM
  cert                Certificate related operations
  container           Container specific operations
  datanode            Datanode specific operations
  pipeline            Pipeline specific operations
  om                  Ozone Manager specific admin operations
  scm                 Ozone Storage Container Manager specific admin operations</msg>
<status status="PASS" starttime="20210720 20:41:03.294" endtime="20210720 20:41:03.295"/>
</kw>
<msg timestamp="20210720 20:41:03.295" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20210720 20:40:58.733" endtime="20210720 20:41:03.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:03.296" endtime="20210720 20:41:03.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>container</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:03.296" endtime="20210720 20:41:03.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:03.297" endtime="20210720 20:41:03.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:03.298" endtime="20210720 20:41:03.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>pipeline</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:03.298" endtime="20210720 20:41:03.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>replicationmanager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:03.300" endtime="20210720 20:41:03.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>safemode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:03.302" endtime="20210720 20:41:03.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>printTopology</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:03.302" endtime="20210720 20:41:03.303"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:40:58.731" endtime="20210720 20:41:03.303"/>
</test>
<doc>Test ozone admin command</doc>
<status status="PASS" starttime="20210720 20:40:58.702" endtime="20210720 20:41:03.306"/>
</suite>
<suite id="s1-s5-s2" name="Container" source="/opt/hadoop/smoketest/admincli/container.robot">
<kw name="Create test data" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:41:03.329" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:41:03.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:41:03.344" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:41:03.326" endtime="20210720 20:41:03.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:41:03.345" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:41:03.344" endtime="20210720 20:41:03.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:41:03.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:41:03.346" endtime="20210720 20:41:03.347"/>
</kw>
<status status="PASS" starttime="20210720 20:41:03.325" endtime="20210720 20:41:03.347"/>
</kw>
<msg timestamp="20210720 20:41:03.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:41:03.325" endtime="20210720 20:41:03.348"/>
</kw>
<msg timestamp="20210720 20:41:03.348" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:41:03.324" endtime="20210720 20:41:03.348"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:41:03.352" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:41:03.349" endtime="20210720 20:41:03.352"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:41:03.359" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:41:03.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:41:03.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:41:03.356" endtime="20210720 20:41:03.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:41:03.370" level="INFO"/>
<status status="PASS" starttime="20210720 20:41:03.370" endtime="20210720 20:41:03.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:41:03.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:41:03.371" endtime="20210720 20:41:03.371"/>
</kw>
<status status="PASS" starttime="20210720 20:41:03.355" endtime="20210720 20:41:03.372"/>
</kw>
<msg timestamp="20210720 20:41:03.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:41:03.355" endtime="20210720 20:41:03.372"/>
</kw>
<status status="PASS" starttime="20210720 20:41:03.354" endtime="20210720 20:41:03.372"/>
</kw>
<status status="PASS" starttime="20210720 20:41:03.352" endtime="20210720 20:41:03.372"/>
</kw>
<status status="PASS" starttime="20210720 20:41:03.323" endtime="20210720 20:41:03.372"/>
</kw>
<status status="PASS" starttime="20210720 20:41:03.322" endtime="20210720 20:41:03.373"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone freon ockg -n1 -t1 -p container</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:41:03.377" level="INFO">Running command 'ozone freon ockg -n1 -t1 -p container 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:41:16.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:41:16.719" level="INFO">${output} = 2021-07-20 20:41:07,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:41:07,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210720 20:41:03.375" endtime="20210720 20:41:16.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:41:16.721" level="INFO">2021-07-20 20:41:07,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-07-20 20:41:07,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-07-20 20:41:07,584 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-07-20 20:41:07,988 [main] INFO freon.BaseFreonGenerator: Executing test with prefix container
2021-07-20 20:41:08,142 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:41:09,154 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:41:10,154 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:41:10,513 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:214)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:201)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:194)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:134)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy22.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-07-20 20:41:11,155 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:41:12,156 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:41:12,730 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-07-20 20:41:13,156 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:41:13,332 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-07-20 20:41:13,333 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-0E1030010C46-&gt;07a05cf4-dc30-473b-837b-17c4c6f914d0
2021-07-20 20:41:13,336 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-07-20 20:41:14,157 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:41:15,158 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-07-20 20:41:16,158 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-07-20 20:41:16,235 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3638.821424, max=3638.821424, mean=3638.821424, stddev=0.0, median=3638.821424, p75=3638.821424, p95=3638.821424, p98=3638.821424, p99=3638.821424, p999=3638.821424, mean_rate=0.21241154719851965, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-07-20 20:41:16,238 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2021-07-20 20:41:16,245 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2021-07-20 20:41:16,245 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210720 20:41:16.720" endtime="20210720 20:41:16.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:41:16.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:41:16.721" endtime="20210720 20:41:16.722"/>
</kw>
<status status="PASS" starttime="20210720 20:41:03.374" endtime="20210720 20:41:16.722"/>
</kw>
<msg timestamp="20210720 20:41:16.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:41:03.373" endtime="20210720 20:41:16.722"/>
</kw>
<status status="PASS" starttime="20210720 20:41:03.373" endtime="20210720 20:41:16.723"/>
</kw>
<status status="PASS" starttime="20210720 20:41:03.322" endtime="20210720 20:41:16.723"/>
</kw>
<test id="s1-s5-s2-t1" name="Create container">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:41:16.730" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:41:28.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:41:28.852" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 5 is created.</msg>
<status status="PASS" starttime="20210720 20:41:16.727" endtime="20210720 20:41:28.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:41:28.853" level="INFO">Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 5 is created.</msg>
<status status="PASS" starttime="20210720 20:41:28.853" endtime="20210720 20:41:28.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:41:28.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:41:28.854" endtime="20210720 20:41:28.854"/>
</kw>
<status status="PASS" starttime="20210720 20:41:16.727" endtime="20210720 20:41:28.855"/>
</kw>
<msg timestamp="20210720 20:41:28.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:41:16.726" endtime="20210720 20:41:28.855"/>
</kw>
<msg timestamp="20210720 20:41:28.855" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 5 is created.</msg>
<status status="PASS" starttime="20210720 20:41:16.725" endtime="20210720 20:41:28.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:28.855" endtime="20210720 20:41:28.856"/>
</kw>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>echo "${output}" | grep 'is created' | cut -f2 -d' '</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:41:28.861" level="INFO">Running command 'echo "Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 5 is created." | grep 'is created' | cut -f2 -d' ' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:41:28.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:41:28.866" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20210720 20:41:28.859" endtime="20210720 20:41:28.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:41:28.867" level="INFO">5</msg>
<status status="PASS" starttime="20210720 20:41:28.867" endtime="20210720 20:41:28.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:41:28.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:41:28.868" endtime="20210720 20:41:28.869"/>
</kw>
<status status="PASS" starttime="20210720 20:41:28.858" endtime="20210720 20:41:28.869"/>
</kw>
<msg timestamp="20210720 20:41:28.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:41:28.857" endtime="20210720 20:41:28.869"/>
</kw>
<msg timestamp="20210720 20:41:28.869" level="INFO">${container} = 5</msg>
<status status="PASS" starttime="20210720 20:41:28.856" endtime="20210720 20:41:28.869"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${CONTAINER}</arg>
<arg>${container}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:41:28.870" level="INFO">${CONTAINER} = 5</msg>
<status status="PASS" starttime="20210720 20:41:28.870" endtime="20210720 20:41:28.870"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:41:16.723" endtime="20210720 20:41:28.870"/>
</test>
<test id="s1-s5-s2-t2" name="List containers">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:41:28.877" level="INFO">Running command 'ozone admin container list 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:41:35.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:41:35.834" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:4...</msg>
<status status="PASS" starttime="20210720 20:41:28.875" endtime="20210720 20:41:35.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:41:35.836" level="INFO">{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:41:35.629Z",
  "stateEnterTime" : "2021-07-20T20:15:43.458Z",
  "owner" : "om3",
  "containerID" : 1,
  "deleteTransactionId" : 9,
  "sequenceId" : 157,
  "open" : true
}
{
  "state" : "CLOSED",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 51402785,
  "numberOfKeys" : 24,
  "lastUsed" : "2021-07-20T20:41:35.629Z",
  "stateEnterTime" : "2021-07-20T20:15:56.153Z",
  "owner" : "om3",
  "containerID" : 2,
  "deleteTransactionId" : 11,
  "sequenceId" : 108,
  "open" : false
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-20T20:41:35.630Z",
  "stateEnterTime" : "2021-07-20T20:35:54.382Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-20T20:41:35.630Z",
  "stateEnterTime" : "2021-07-20T20:41:11.650Z",
  "owner" : "om3",
  "containerID" : 4,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-20T20:41:35.630Z",
  "stateEnterTime" : "2021-07-20T20:41:24.780Z",
  "owner" : "OZONE",
  "containerID" : 5,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}</msg>
<status status="PASS" starttime="20210720 20:41:35.835" endtime="20210720 20:41:35.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:41:35.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:41:35.837" endtime="20210720 20:41:35.838"/>
</kw>
<status status="PASS" starttime="20210720 20:41:28.874" endtime="20210720 20:41:35.838"/>
</kw>
<msg timestamp="20210720 20:41:35.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:41:28.874" endtime="20210720 20:41:35.839"/>
</kw>
<msg timestamp="20210720 20:41:35.839" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:4...</msg>
<status status="PASS" starttime="20210720 20:41:28.873" endtime="20210720 20:41:35.839"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:35.839" endtime="20210720 20:41:35.840"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:41:28.872" endtime="20210720 20:41:35.840"/>
</test>
<test id="s1-s5-s2-t3" name="List containers with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:41:35.848" level="INFO">Running command 'ozone admin container list --scm scm2.org 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:41:42.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:41:42.600" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:4...</msg>
<status status="PASS" starttime="20210720 20:41:35.845" endtime="20210720 20:41:42.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:41:42.602" level="INFO">{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:41:42.296Z",
  "stateEnterTime" : "2021-07-20T20:15:43.458Z",
  "owner" : "om3",
  "containerID" : 1,
  "deleteTransactionId" : 9,
  "sequenceId" : 157,
  "open" : true
}
{
  "state" : "CLOSED",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 51402785,
  "numberOfKeys" : 24,
  "lastUsed" : "2021-07-20T20:41:42.296Z",
  "stateEnterTime" : "2021-07-20T20:15:56.153Z",
  "owner" : "om3",
  "containerID" : 2,
  "deleteTransactionId" : 11,
  "sequenceId" : 108,
  "open" : false
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-20T20:41:42.297Z",
  "stateEnterTime" : "2021-07-20T20:35:54.382Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-20T20:41:42.297Z",
  "stateEnterTime" : "2021-07-20T20:41:11.650Z",
  "owner" : "om3",
  "containerID" : 4,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}
{
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2021-07-20T20:41:42.297Z",
  "stateEnterTime" : "2021-07-20T20:41:24.780Z",
  "owner" : "OZONE",
  "containerID" : 5,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true
}</msg>
<status status="PASS" starttime="20210720 20:41:42.601" endtime="20210720 20:41:42.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:41:42.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:41:42.603" endtime="20210720 20:41:42.605"/>
</kw>
<status status="PASS" starttime="20210720 20:41:35.844" endtime="20210720 20:41:42.605"/>
</kw>
<msg timestamp="20210720 20:41:42.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:41:35.844" endtime="20210720 20:41:42.605"/>
</kw>
<msg timestamp="20210720 20:41:42.606" level="INFO">${output} = {
  "state" : "OPEN",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 97550335,
  "numberOfKeys" : 26,
  "lastUsed" : "2021-07-20T20:4...</msg>
<status status="PASS" starttime="20210720 20:41:35.843" endtime="20210720 20:41:42.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:42.607" endtime="20210720 20:41:42.607"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:41:35.842" endtime="20210720 20:41:42.610"/>
</test>
<test id="s1-s5-s2-t4" name="List containers with container state">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state=CLOSED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:41:42.617" level="INFO">Running command 'ozone admin container list --state=CLOSED 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:41:50.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:41:50.126" level="INFO">${output} = {
  "state" : "CLOSED",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 51402785,
  "numberOfKeys" : 24,
  "lastUsed" : "2021-07-20T20...</msg>
<status status="PASS" starttime="20210720 20:41:42.614" endtime="20210720 20:41:50.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:41:50.128" level="INFO">{
  "state" : "CLOSED",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 51402785,
  "numberOfKeys" : 24,
  "lastUsed" : "2021-07-20T20:41:49.957Z",
  "stateEnterTime" : "2021-07-20T20:15:56.153Z",
  "owner" : "om3",
  "containerID" : 2,
  "deleteTransactionId" : 11,
  "sequenceId" : 108,
  "open" : false
}</msg>
<status status="PASS" starttime="20210720 20:41:50.126" endtime="20210720 20:41:50.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:41:50.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:41:50.128" endtime="20210720 20:41:50.129"/>
</kw>
<status status="PASS" starttime="20210720 20:41:42.614" endtime="20210720 20:41:50.129"/>
</kw>
<msg timestamp="20210720 20:41:50.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:41:42.613" endtime="20210720 20:41:50.129"/>
</kw>
<msg timestamp="20210720 20:41:50.130" level="INFO">${output} = {
  "state" : "CLOSED",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 51402785,
  "numberOfKeys" : 24,
  "lastUsed" : "2021-07-20T20...</msg>
<status status="PASS" starttime="20210720 20:41:42.613" endtime="20210720 20:41:50.130"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:50.130" endtime="20210720 20:41:50.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:41:42.611" endtime="20210720 20:41:50.130"/>
</test>
<test id="s1-s5-s2-t5" name="Container info">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:41:50.137" level="INFO">Running command 'ozone admin container info "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:41:56.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:41:56.689" level="INFO">${output} = Container id: 5
Pipeline id: b0d8c806-7e95-4959-b8e2-7a69a2122163
Container State: OPEN
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:41:50.134" endtime="20210720 20:41:56.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:41:56.693" level="INFO">Container id: 5
Pipeline id: b0d8c806-7e95-4959-b8e2-7a69a2122163
Container State: OPEN
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:41:56.691" endtime="20210720 20:41:56.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:41:56.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:41:56.694" endtime="20210720 20:41:56.695"/>
</kw>
<status status="PASS" starttime="20210720 20:41:50.134" endtime="20210720 20:41:56.696"/>
</kw>
<msg timestamp="20210720 20:41:56.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:41:50.133" endtime="20210720 20:41:56.696"/>
</kw>
<msg timestamp="20210720 20:41:56.696" level="INFO">${output} = Container id: 5
Pipeline id: b0d8c806-7e95-4959-b8e2-7a69a2122163
Container State: OPEN
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:41:50.133" endtime="20210720 20:41:56.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container id: ${CONTAINER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:56.697" endtime="20210720 20:41:56.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline id</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:56.697" endtime="20210720 20:41:56.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:41:56.698" endtime="20210720 20:41:56.698"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:41:50.131" endtime="20210720 20:41:56.698"/>
</test>
<test id="s1-s5-s2-t6" name="Verbose container info">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin --verbose container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:41:56.708" level="INFO">Running command 'ozone admin --verbose container info "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:04.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:04.183" level="INFO">${output} = Container id: 5
Pipeline Info: Pipeline[ Id: b0d8c806-7e95-4959-b8e2-7a69a2122163, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_n...</msg>
<status status="PASS" starttime="20210720 20:41:56.703" endtime="20210720 20:42:04.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:04.187" level="INFO">Container id: 5
Pipeline Info: Pipeline[ Id: b0d8c806-7e95-4959-b8e2-7a69a2122163, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:35:54.362Z[UTC]]
Container State: OPEN
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:42:04.185" endtime="20210720 20:42:04.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:04.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:04.189" endtime="20210720 20:42:04.190"/>
</kw>
<status status="PASS" starttime="20210720 20:41:56.702" endtime="20210720 20:42:04.191"/>
</kw>
<msg timestamp="20210720 20:42:04.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:41:56.701" endtime="20210720 20:42:04.191"/>
</kw>
<msg timestamp="20210720 20:42:04.192" level="INFO">${output} = Container id: 5
Pipeline Info: Pipeline[ Id: b0d8c806-7e95-4959-b8e2-7a69a2122163, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_n...</msg>
<status status="PASS" starttime="20210720 20:41:56.700" endtime="20210720 20:42:04.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline Info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:04.193" endtime="20210720 20:42:04.193"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:41:56.699" endtime="20210720 20:42:04.194"/>
</test>
<test id="s1-s5-s2-t7" name="Close container">
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:04.204" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:11.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:11.125" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20210720 20:42:04.200" endtime="20210720 20:42:11.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:11.127" level="INFO">1</msg>
<status status="PASS" starttime="20210720 20:42:11.126" endtime="20210720 20:42:11.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:11.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:11.128" endtime="20210720 20:42:11.129"/>
</kw>
<status status="PASS" starttime="20210720 20:42:04.199" endtime="20210720 20:42:11.130"/>
</kw>
<msg timestamp="20210720 20:42:11.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:04.198" endtime="20210720 20:42:11.130"/>
</kw>
<msg timestamp="20210720 20:42:11.131" level="INFO">${container} = 1</msg>
<status status="PASS" starttime="20210720 20:42:04.197" endtime="20210720 20:42:11.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone admin container close "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:11.139" level="INFO">Running command 'ozone admin container close "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:18.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:18.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:42:11.134" endtime="20210720 20:42:18.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:18.296" level="INFO"/>
<status status="PASS" starttime="20210720 20:42:18.295" endtime="20210720 20:42:18.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:18.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:18.297" endtime="20210720 20:42:18.298"/>
</kw>
<status status="PASS" starttime="20210720 20:42:11.133" endtime="20210720 20:42:18.299"/>
</kw>
<msg timestamp="20210720 20:42:18.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:11.133" endtime="20210720 20:42:18.299"/>
</kw>
<status status="PASS" starttime="20210720 20:42:11.131" endtime="20210720 20:42:18.300"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:18.308" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:25.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:25.619" level="INFO">${output} = Container id: 1
Pipeline id: 8b105480-3262-484c-b193-a91466c768e6
Container State: CLOSING
Datanodes: [07a05cf4-dc30-473b-837b-17c4c6f914d0/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
5a23a41...</msg>
<status status="PASS" starttime="20210720 20:42:18.303" endtime="20210720 20:42:25.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:25.621" level="INFO">Container id: 1
Pipeline id: 8b105480-3262-484c-b193-a91466c768e6
Container State: CLOSING
Datanodes: [07a05cf4-dc30-473b-837b-17c4c6f914d0/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
e1c7a26b-9ce9-41be-88e7-0d70ea915ff0/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:42:25.620" endtime="20210720 20:42:25.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:25.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:25.621" endtime="20210720 20:42:25.621"/>
</kw>
<status status="PASS" starttime="20210720 20:42:18.302" endtime="20210720 20:42:25.622"/>
</kw>
<msg timestamp="20210720 20:42:25.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:18.302" endtime="20210720 20:42:25.622"/>
</kw>
<msg timestamp="20210720 20:42:25.623" level="INFO">${output} = Container id: 1
Pipeline id: 8b105480-3262-484c-b193-a91466c768e6
Container State: CLOSING
Datanodes: [07a05cf4-dc30-473b-837b-17c4c6f914d0/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
5a23a41...</msg>
<status status="PASS" starttime="20210720 20:42:18.300" endtime="20210720 20:42:25.623"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:25.623" endtime="20210720 20:42:25.624"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Container is closed</arg>
<arg>${container}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Container is closed">
<arg>${container}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:25.630" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:33.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:33.010" level="INFO">${output} = Container id: 1
Pipeline id: a0e2e760-206a-4271-a2bf-10a6681b47ba
Container State: CLOSED
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
e1c7a26b...</msg>
<status status="PASS" starttime="20210720 20:42:25.627" endtime="20210720 20:42:33.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:33.013" level="INFO">Container id: 1
Pipeline id: a0e2e760-206a-4271-a2bf-10a6681b47ba
Container State: CLOSED
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
e1c7a26b-9ce9-41be-88e7-0d70ea915ff0/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
07a05cf4-dc30-473b-837b-17c4c6f914d0/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20210720 20:42:33.012" endtime="20210720 20:42:33.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:33.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:33.014" endtime="20210720 20:42:33.016"/>
</kw>
<status status="PASS" starttime="20210720 20:42:25.626" endtime="20210720 20:42:33.017"/>
</kw>
<msg timestamp="20210720 20:42:33.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:25.626" endtime="20210720 20:42:33.017"/>
</kw>
<msg timestamp="20210720 20:42:33.018" level="INFO">${output} = Container id: 1
Pipeline id: a0e2e760-206a-4271-a2bf-10a6681b47ba
Container State: CLOSED
Datanodes: [5a23a414-9886-4450-950a-ec3d59209c22/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
e1c7a26b...</msg>
<status status="PASS" starttime="20210720 20:42:25.625" endtime="20210720 20:42:33.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:33.019" endtime="20210720 20:42:33.020"/>
</kw>
<status status="PASS" starttime="20210720 20:42:25.625" endtime="20210720 20:42:33.021"/>
</kw>
<status status="PASS" starttime="20210720 20:42:25.624" endtime="20210720 20:42:33.021"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:42:04.195" endtime="20210720 20:42:33.021"/>
</test>
<test id="s1-s5-s2-t8" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin container</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:33.030" level="INFO">Running command 'ozone admin container 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:37.608" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:42:37.608" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20210720 20:42:33.026" endtime="20210720 20:42:37.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:37.609" level="INFO">Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list    List containers
  info    Show information about a specific container
  delete  Delete container
  create  Create container
  close   close container</msg>
<status status="PASS" starttime="20210720 20:42:37.609" endtime="20210720 20:42:37.610"/>
</kw>
<msg timestamp="20210720 20:42:37.610" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20210720 20:42:33.025" endtime="20210720 20:42:37.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:37.610" endtime="20210720 20:42:37.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:37.611" endtime="20210720 20:42:37.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:37.611" endtime="20210720 20:42:37.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>delete</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:37.612" endtime="20210720 20:42:37.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:37.613" endtime="20210720 20:42:37.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:37.615" endtime="20210720 20:42:37.615"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:42:33.023" endtime="20210720 20:42:37.616"/>
</test>
<test id="s1-s5-s2-t9" name="Cannot close container without admin privilege">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container close "${CONTAINER}"</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20210720 20:42:37.619" endtime="20210720 20:42:37.620"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:37.626" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:37.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:37.631" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:42:37.623" endtime="20210720 20:42:37.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:37.633" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:42:37.632" endtime="20210720 20:42:37.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:37.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:37.634" endtime="20210720 20:42:37.635"/>
</kw>
<status status="PASS" starttime="20210720 20:42:37.622" endtime="20210720 20:42:37.636"/>
</kw>
<msg timestamp="20210720 20:42:37.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:37.622" endtime="20210720 20:42:37.636"/>
</kw>
<msg timestamp="20210720 20:42:37.637" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:42:37.621" endtime="20210720 20:42:37.637"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:42:37.639" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:42:37.637" endtime="20210720 20:42:37.639"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:37.648" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:37.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:37.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:42:37.644" endtime="20210720 20:42:37.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:37.706" level="INFO"/>
<status status="PASS" starttime="20210720 20:42:37.705" endtime="20210720 20:42:37.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:37.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:37.706" endtime="20210720 20:42:37.707"/>
</kw>
<status status="PASS" starttime="20210720 20:42:37.643" endtime="20210720 20:42:37.707"/>
</kw>
<msg timestamp="20210720 20:42:37.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:37.642" endtime="20210720 20:42:37.707"/>
</kw>
<status status="PASS" starttime="20210720 20:42:37.640" endtime="20210720 20:42:37.708"/>
</kw>
<status status="PASS" starttime="20210720 20:42:37.639" endtime="20210720 20:42:37.708"/>
</kw>
<status status="PASS" starttime="20210720 20:42:37.620" endtime="20210720 20:42:37.708"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:37.713" level="INFO">Running command 'ozone admin container close "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:44.408" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:42:44.409" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:42:37.709" endtime="20210720 20:42:44.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:44.411" level="INFO">Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:42:44.410" endtime="20210720 20:42:44.411"/>
</kw>
<msg timestamp="20210720 20:42:44.412" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:42:37.709" endtime="20210720 20:42:44.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:44.413" endtime="20210720 20:42:44.414"/>
</kw>
<status status="PASS" starttime="20210720 20:42:37.708" endtime="20210720 20:42:44.414"/>
</kw>
<status status="PASS" starttime="20210720 20:42:37.618" endtime="20210720 20:42:44.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:42:37.617" endtime="20210720 20:42:44.415"/>
</test>
<test id="s1-s5-s2-t10" name="Cannot create container without admin privilege">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container create</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20210720 20:42:44.418" endtime="20210720 20:42:44.419"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:44.427" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:44.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:44.433" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:42:44.423" endtime="20210720 20:42:44.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:44.436" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:42:44.434" endtime="20210720 20:42:44.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:44.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:44.437" endtime="20210720 20:42:44.438"/>
</kw>
<status status="PASS" starttime="20210720 20:42:44.422" endtime="20210720 20:42:44.439"/>
</kw>
<msg timestamp="20210720 20:42:44.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:44.421" endtime="20210720 20:42:44.439"/>
</kw>
<msg timestamp="20210720 20:42:44.440" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:42:44.420" endtime="20210720 20:42:44.440"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:42:44.441" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:42:44.440" endtime="20210720 20:42:44.441"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:44.447" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:44.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:44.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:42:44.443" endtime="20210720 20:42:44.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:44.457" level="INFO"/>
<status status="PASS" starttime="20210720 20:42:44.456" endtime="20210720 20:42:44.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:44.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:44.457" endtime="20210720 20:42:44.458"/>
</kw>
<status status="PASS" starttime="20210720 20:42:44.443" endtime="20210720 20:42:44.458"/>
</kw>
<msg timestamp="20210720 20:42:44.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:44.443" endtime="20210720 20:42:44.459"/>
</kw>
<status status="PASS" starttime="20210720 20:42:44.442" endtime="20210720 20:42:44.459"/>
</kw>
<status status="PASS" starttime="20210720 20:42:44.442" endtime="20210720 20:42:44.459"/>
</kw>
<status status="PASS" starttime="20210720 20:42:44.420" endtime="20210720 20:42:44.460"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:44.464" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:52.097" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:42:52.098" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:42:44.461" endtime="20210720 20:42:52.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:52.100" level="INFO">Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:42:52.099" endtime="20210720 20:42:52.100"/>
</kw>
<msg timestamp="20210720 20:42:52.101" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:42:44.461" endtime="20210720 20:42:52.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:52.101" endtime="20210720 20:42:52.102"/>
</kw>
<status status="PASS" starttime="20210720 20:42:44.460" endtime="20210720 20:42:52.102"/>
</kw>
<status status="PASS" starttime="20210720 20:42:44.417" endtime="20210720 20:42:52.103"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:42:44.416" endtime="20210720 20:42:52.103"/>
</test>
<test id="s1-s5-s2-t11" name="Cannot delete container without admin privilege">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container delete "${CONTAINER}"</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20210720 20:42:52.109" endtime="20210720 20:42:52.110"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:52.116" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:52.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:52.121" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:42:52.113" endtime="20210720 20:42:52.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:52.122" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:42:52.121" endtime="20210720 20:42:52.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:52.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:52.123" endtime="20210720 20:42:52.123"/>
</kw>
<status status="PASS" starttime="20210720 20:42:52.112" endtime="20210720 20:42:52.124"/>
</kw>
<msg timestamp="20210720 20:42:52.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:52.111" endtime="20210720 20:42:52.124"/>
</kw>
<msg timestamp="20210720 20:42:52.124" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:42:52.111" endtime="20210720 20:42:52.124"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:42:52.125" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:42:52.125" endtime="20210720 20:42:52.125"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:52.130" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:52.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:42:52.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:42:52.127" endtime="20210720 20:42:52.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:52.141" level="INFO"/>
<status status="PASS" starttime="20210720 20:42:52.140" endtime="20210720 20:42:52.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:42:52.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:42:52.141" endtime="20210720 20:42:52.142"/>
</kw>
<status status="PASS" starttime="20210720 20:42:52.127" endtime="20210720 20:42:52.142"/>
</kw>
<msg timestamp="20210720 20:42:52.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:52.126" endtime="20210720 20:42:52.142"/>
</kw>
<status status="PASS" starttime="20210720 20:42:52.126" endtime="20210720 20:42:52.143"/>
</kw>
<status status="PASS" starttime="20210720 20:42:52.125" endtime="20210720 20:42:52.143"/>
</kw>
<status status="PASS" starttime="20210720 20:42:52.110" endtime="20210720 20:42:52.144"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:52.150" level="INFO">Running command 'ozone admin container delete "5" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:42:58.306" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:42:58.306" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:42:52.147" endtime="20210720 20:42:58.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:42:58.308" level="INFO">Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:42:58.307" endtime="20210720 20:42:58.308"/>
</kw>
<msg timestamp="20210720 20:42:58.308" level="INFO">${output} = Access denied for user testuser2/scm@EXAMPLE.COM. Superuser privilege is required.</msg>
<status status="PASS" starttime="20210720 20:42:52.145" endtime="20210720 20:42:58.309"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:42:58.309" endtime="20210720 20:42:58.309"/>
</kw>
<status status="PASS" starttime="20210720 20:42:52.144" endtime="20210720 20:42:58.309"/>
</kw>
<status status="PASS" starttime="20210720 20:42:52.106" endtime="20210720 20:42:58.310"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:42:52.104" endtime="20210720 20:42:58.310"/>
</test>
<doc>Test ozone admin container command</doc>
<status status="PASS" starttime="20210720 20:41:03.311" endtime="20210720 20:42:58.312"/>
</suite>
<suite id="s1-s5-s3" name="Datanode" source="/opt/hadoop/smoketest/admincli/datanode.robot">
<test id="s1-s5-s3-t1" name="List datanodes">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:42:58.329" level="INFO">Running command 'ozone admin datanode list 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:04.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:04.900" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:42:58.327" endtime="20210720 20:43:04.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:04.902" level="INFO">Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
76e2c7a6-d4fe-4a1a-baf7-86fa3590384e/RATIS/ONE/RATIS/OPEN/Leader
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower

Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default-rack/172.25.0.104/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Leader
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower
e48b3e7d-5a59-4d17-a902-31c9be149619/RATIS/ONE/RATIS/OPEN/Leader
18cab4fb-e592-4d7e-890e-89dcda5bc25a/STANDALONE/ONE/STAND_ALONE/CLOSED/Follower

Datanode: 5a23a414-9886-4450-950a-ec3d59209c22 (/default-rack/172.25.0.102/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Leader
b0d8c806-7e95-4959-b8e2-7a69a2122163/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
3cae1542-1313-4dad-86c5-58ed7bc3f7c0/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20210720 20:43:04.901" endtime="20210720 20:43:04.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:04.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:04.902" endtime="20210720 20:43:04.904"/>
</kw>
<status status="PASS" starttime="20210720 20:42:58.326" endtime="20210720 20:43:04.905"/>
</kw>
<msg timestamp="20210720 20:43:04.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:42:58.326" endtime="20210720 20:43:04.906"/>
</kw>
<msg timestamp="20210720 20:43:04.906" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:42:58.325" endtime="20210720 20:43:04.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:43:04.906" endtime="20210720 20:43:04.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Related pipelines:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:43:04.907" endtime="20210720 20:43:04.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:42:58.324" endtime="20210720 20:43:04.908"/>
</test>
<test id="s1-s5-s3-t2" name="Filter list by UUID">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:04.915" level="INFO">Running command 'ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:11.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:11.738" level="INFO">${output} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:43:04.912" endtime="20210720 20:43:11.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:11.740" level="INFO">e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:43:11.739" endtime="20210720 20:43:11.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:11.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:11.741" endtime="20210720 20:43:11.742"/>
</kw>
<status status="PASS" starttime="20210720 20:43:04.912" endtime="20210720 20:43:11.743"/>
</kw>
<msg timestamp="20210720 20:43:11.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:04.912" endtime="20210720 20:43:11.744"/>
</kw>
<msg timestamp="20210720 20:43:11.745" level="INFO">${uuid} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:43:04.911" endtime="20210720 20:43:11.745"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --id "${uuid}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:11.750" level="INFO">Running command 'ozone admin datanode list --id "e1c7a26b-9ce9-41be-88e7-0d70ea915ff0" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:18.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:18.682" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:43:11.748" endtime="20210720 20:43:18.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:18.685" level="INFO">Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
76e2c7a6-d4fe-4a1a-baf7-86fa3590384e/RATIS/ONE/RATIS/OPEN/Leader
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower
</msg>
<status status="PASS" starttime="20210720 20:43:18.683" endtime="20210720 20:43:18.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:18.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:18.686" endtime="20210720 20:43:18.687"/>
</kw>
<status status="PASS" starttime="20210720 20:43:11.747" endtime="20210720 20:43:18.688"/>
</kw>
<msg timestamp="20210720 20:43:18.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:11.747" endtime="20210720 20:43:18.688"/>
</kw>
<msg timestamp="20210720 20:43:18.689" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:43:11.745" endtime="20210720 20:43:18.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:43:18.690" endtime="20210720 20:43:18.691"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20210720 20:43:18.692" level="INFO">1 out of 7 lines matched</msg>
<msg timestamp="20210720 20:43:18.692" level="INFO">${datanodes} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)</msg>
<status status="PASS" starttime="20210720 20:43:18.691" endtime="20210720 20:43:18.692"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20210720 20:43:18.693" level="INFO">1 lines returned</msg>
<msg timestamp="20210720 20:43:18.693" level="INFO">@{lines} = [ Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) ]</msg>
<status status="PASS" starttime="20210720 20:43:18.692" endtime="20210720 20:43:18.693"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210720 20:43:18.695" level="INFO">Length is 1</msg>
<msg timestamp="20210720 20:43:18.695" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20210720 20:43:18.694" endtime="20210720 20:43:18.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:18.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:18.695" endtime="20210720 20:43:18.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:43:04.910" endtime="20210720 20:43:18.697"/>
</test>
<test id="s1-s5-s3-t3" name="Filter list by NodeOperationalState">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:18.707" level="INFO">Running command 'ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:25.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:25.795" level="INFO">${output} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:43:18.702" endtime="20210720 20:43:25.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:25.796" level="INFO">e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:43:25.795" endtime="20210720 20:43:25.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:25.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:25.796" endtime="20210720 20:43:25.797"/>
</kw>
<status status="PASS" starttime="20210720 20:43:18.701" endtime="20210720 20:43:25.798"/>
</kw>
<msg timestamp="20210720 20:43:25.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:18.701" endtime="20210720 20:43:25.798"/>
</kw>
<msg timestamp="20210720 20:43:25.798" level="INFO">${uuid} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:43:18.699" endtime="20210720 20:43:25.798"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:25.802" level="INFO">Running command 'ozone admin datanode list --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:30.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:30.906" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:43:25.799" endtime="20210720 20:43:30.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:30.907" level="INFO">Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
76e2c7a6-d4fe-4a1a-baf7-86fa3590384e/RATIS/ONE/RATIS/OPEN/Leader
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower

Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default-rack/172.25.0.104/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Leader
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower
e48b3e7d-5a59-4d17-a902-31c9be149619/RATIS/ONE/RATIS/OPEN/Leader
18cab4fb-e592-4d7e-890e-89dcda5bc25a/STANDALONE/ONE/STAND_ALONE/CLOSED/Follower

Datanode: 5a23a414-9886-4450-950a-ec3d59209c22 (/default-rack/172.25.0.102/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Leader
b0d8c806-7e95-4959-b8e2-7a69a2122163/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
3cae1542-1313-4dad-86c5-58ed7bc3f7c0/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20210720 20:43:30.906" endtime="20210720 20:43:30.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:30.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:30.907" endtime="20210720 20:43:30.908"/>
</kw>
<status status="PASS" starttime="20210720 20:43:25.799" endtime="20210720 20:43:30.909"/>
</kw>
<msg timestamp="20210720 20:43:30.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:25.799" endtime="20210720 20:43:30.909"/>
</kw>
<msg timestamp="20210720 20:43:30.910" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:43:25.798" endtime="20210720 20:43:30.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:43:30.910" endtime="20210720 20:43:30.911"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20210720 20:43:30.911" level="INFO">3 out of 25 lines matched</msg>
<msg timestamp="20210720 20:43:30.912" level="INFO">${datanodes} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default-rac...</msg>
<status status="PASS" starttime="20210720 20:43:30.911" endtime="20210720 20:43:30.912"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20210720 20:43:30.913" level="INFO">3 lines returned</msg>
<msg timestamp="20210720 20:43:30.913" level="INFO">@{lines} = [ Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) | Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default...</msg>
<status status="PASS" starttime="20210720 20:43:30.912" endtime="20210720 20:43:30.913"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210720 20:43:30.914" level="INFO">Length is 3</msg>
<msg timestamp="20210720 20:43:30.914" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20210720 20:43:30.913" endtime="20210720 20:43:30.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:30.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:30.914" endtime="20210720 20:43:30.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:43:18.698" endtime="20210720 20:43:30.915"/>
</test>
<test id="s1-s5-s3-t4" name="Filter list by NodeState">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:30.922" level="INFO">Running command 'ozone admin datanode list | grep '^Datanode:' | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:37.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:37.982" level="INFO">${output} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:43:30.919" endtime="20210720 20:43:37.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:37.983" level="INFO">e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:43:37.982" endtime="20210720 20:43:37.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:37.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:37.983" endtime="20210720 20:43:37.984"/>
</kw>
<status status="PASS" starttime="20210720 20:43:30.918" endtime="20210720 20:43:37.985"/>
</kw>
<msg timestamp="20210720 20:43:37.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:30.918" endtime="20210720 20:43:37.985"/>
</kw>
<msg timestamp="20210720 20:43:37.986" level="INFO">${uuid} = e1c7a26b-9ce9-41be-88e7-0d70ea915ff0</msg>
<status status="PASS" starttime="20210720 20:43:30.917" endtime="20210720 20:43:37.986"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:37.992" level="INFO">Running command 'ozone admin datanode list --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:45.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:45.034" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:43:37.989" endtime="20210720 20:43:45.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:45.037" level="INFO">Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
76e2c7a6-d4fe-4a1a-baf7-86fa3590384e/RATIS/ONE/RATIS/OPEN/Leader
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower

Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default-rack/172.25.0.104/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Leader
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Follower
e48b3e7d-5a59-4d17-a902-31c9be149619/RATIS/ONE/RATIS/OPEN/Leader
18cab4fb-e592-4d7e-890e-89dcda5bc25a/STANDALONE/ONE/STAND_ALONE/CLOSED/Follower

Datanode: 5a23a414-9886-4450-950a-ec3d59209c22 (/default-rack/172.25.0.102/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343/RATIS/THREE/RATIS/OPEN/Follower
8b105480-3262-484c-b193-a91466c768e6/RATIS/THREE/RATIS/OPEN/Leader
b0d8c806-7e95-4959-b8e2-7a69a2122163/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
3cae1542-1313-4dad-86c5-58ed7bc3f7c0/RATIS/ONE/RATIS/OPEN/Leader
</msg>
<status status="PASS" starttime="20210720 20:43:45.035" endtime="20210720 20:43:45.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:45.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:45.037" endtime="20210720 20:43:45.038"/>
</kw>
<status status="PASS" starttime="20210720 20:43:37.988" endtime="20210720 20:43:45.038"/>
</kw>
<msg timestamp="20210720 20:43:45.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:37.987" endtime="20210720 20:43:45.039"/>
</kw>
<msg timestamp="20210720 20:43:45.039" level="INFO">${output} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20210720 20:43:37.986" endtime="20210720 20:43:45.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:43:45.040" endtime="20210720 20:43:45.041"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20210720 20:43:45.042" level="INFO">3 out of 25 lines matched</msg>
<msg timestamp="20210720 20:43:45.043" level="INFO">${datanodes} = Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default-rac...</msg>
<status status="PASS" starttime="20210720 20:43:45.041" endtime="20210720 20:43:45.043"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20210720 20:43:45.044" level="INFO">3 lines returned</msg>
<msg timestamp="20210720 20:43:45.045" level="INFO">@{lines} = [ Datanode: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) | Datanode: 07a05cf4-dc30-473b-837b-17c4c6f914d0 (/default...</msg>
<status status="PASS" starttime="20210720 20:43:45.043" endtime="20210720 20:43:45.045"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210720 20:43:45.046" level="INFO">Length is 3</msg>
<msg timestamp="20210720 20:43:45.046" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20210720 20:43:45.045" endtime="20210720 20:43:45.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:45.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:45.047" endtime="20210720 20:43:45.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:43:30.916" endtime="20210720 20:43:45.048"/>
</test>
<test id="s1-s5-s3-t5" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin datanode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:45.056" level="INFO">Running command 'ozone admin datanode 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:49.755" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:43:49.756" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210720 20:43:45.052" endtime="20210720 20:43:49.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:49.759" level="INFO">Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list          List info of datanodes
  decommission  Decommission a datanode
  maintenance   Put a datanode into Maintenance Mode
  recommission  Return a datanode to service
  usageinfo     List usage information (such as Capacity, SCMUsed, Remaining)
                  of a datanode by IP address or UUID</msg>
<status status="PASS" starttime="20210720 20:43:49.757" endtime="20210720 20:43:49.759"/>
</kw>
<msg timestamp="20210720 20:43:49.760" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210720 20:43:45.051" endtime="20210720 20:43:49.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:43:49.760" endtime="20210720 20:43:49.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:43:49.762" endtime="20210720 20:43:49.763"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:43:45.049" endtime="20210720 20:43:49.764"/>
</test>
<doc>Test ozone admin datanode command</doc>
<status status="PASS" starttime="20210720 20:42:58.316" endtime="20210720 20:43:49.765"/>
</suite>
<suite id="s1-s5-s4" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:49.781" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:49.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:49.786" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:43:49.778" endtime="20210720 20:43:49.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:49.788" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:43:49.787" endtime="20210720 20:43:49.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:49.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:49.788" endtime="20210720 20:43:49.788"/>
</kw>
<status status="PASS" starttime="20210720 20:43:49.778" endtime="20210720 20:43:49.789"/>
</kw>
<msg timestamp="20210720 20:43:49.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:49.777" endtime="20210720 20:43:49.789"/>
</kw>
<msg timestamp="20210720 20:43:49.789" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:43:49.777" endtime="20210720 20:43:49.789"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:43:49.792" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:43:49.790" endtime="20210720 20:43:49.792"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:49.796" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:49.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:49.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:43:49.794" endtime="20210720 20:43:49.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:49.806" level="INFO"/>
<status status="PASS" starttime="20210720 20:43:49.806" endtime="20210720 20:43:49.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:49.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:49.807" endtime="20210720 20:43:49.807"/>
</kw>
<status status="PASS" starttime="20210720 20:43:49.794" endtime="20210720 20:43:49.808"/>
</kw>
<msg timestamp="20210720 20:43:49.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:49.793" endtime="20210720 20:43:49.808"/>
</kw>
<status status="PASS" starttime="20210720 20:43:49.792" endtime="20210720 20:43:49.808"/>
</kw>
<status status="PASS" starttime="20210720 20:43:49.792" endtime="20210720 20:43:49.808"/>
</kw>
<status status="PASS" starttime="20210720 20:43:49.776" endtime="20210720 20:43:49.809"/>
</kw>
<status status="PASS" starttime="20210720 20:43:49.776" endtime="20210720 20:43:49.809"/>
</kw>
<test id="s1-s5-s4-t1" name="Create pipeline">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:49.814" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:56.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:56.423" level="INFO">${output} = PipelineID=10d89982-2d94-4fb1-b8bf-f85262f88193 is created. Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datan...</msg>
<status status="PASS" starttime="20210720 20:43:49.812" endtime="20210720 20:43:56.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:56.425" level="INFO">PipelineID=10d89982-2d94-4fb1-b8bf-f85262f88193 is created. Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:43:55.987Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:43:56.424" endtime="20210720 20:43:56.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:56.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:56.426" endtime="20210720 20:43:56.427"/>
</kw>
<status status="PASS" starttime="20210720 20:43:49.811" endtime="20210720 20:43:56.427"/>
</kw>
<msg timestamp="20210720 20:43:56.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:49.811" endtime="20210720 20:43:56.427"/>
</kw>
<msg timestamp="20210720 20:43:56.427" level="INFO">${output} = PipelineID=10d89982-2d94-4fb1-b8bf-f85262f88193 is created. Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datan...</msg>
<status status="PASS" starttime="20210720 20:43:49.810" endtime="20210720 20:43:56.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:43:56.428" endtime="20210720 20:43:56.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:43:56.429" endtime="20210720 20:43:56.430"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:56.438" level="INFO">Running command 'echo "PipelineID=10d89982-2d94-4fb1-b8bf-f85262f88193 is created. Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:43:55.987Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:43:56.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:43:56.443" level="INFO">${output} = 10d89982-2d94-4fb1-b8bf-f85262f88193</msg>
<status status="PASS" starttime="20210720 20:43:56.434" endtime="20210720 20:43:56.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:43:56.444" level="INFO">10d89982-2d94-4fb1-b8bf-f85262f88193</msg>
<status status="PASS" starttime="20210720 20:43:56.443" endtime="20210720 20:43:56.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:43:56.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:43:56.444" endtime="20210720 20:43:56.445"/>
</kw>
<status status="PASS" starttime="20210720 20:43:56.433" endtime="20210720 20:43:56.445"/>
</kw>
<msg timestamp="20210720 20:43:56.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:56.432" endtime="20210720 20:43:56.445"/>
</kw>
<msg timestamp="20210720 20:43:56.445" level="INFO">${pipeline} = 10d89982-2d94-4fb1-b8bf-f85262f88193</msg>
<status status="PASS" starttime="20210720 20:43:56.430" endtime="20210720 20:43:56.446"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:43:56.447" level="INFO">${PIPELINE} = 10d89982-2d94-4fb1-b8bf-f85262f88193</msg>
<status status="PASS" starttime="20210720 20:43:56.446" endtime="20210720 20:43:56.447"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:43:49.809" endtime="20210720 20:43:56.447"/>
</test>
<test id="s1-s5-s4-t2" name="List pipelines">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:43:56.454" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:03.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:44:03.573" level="INFO">${output} = Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:43:56.452" endtime="20210720 20:44:03.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:03.577" level="INFO">Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e1c7a26b-9ce9-41be-88e7-0d70ea915ff0, CreationTimestamp2021-07-20T20:14:42.492Z[UTC]]
Pipeline[ Id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:07a05cf4-dc30-473b-837b-17c4c6f914d0, CreationTimestamp2021-07-20T20:14:42.815Z[UTC]]
Pipeline[ Id: 8b105480-3262-484c-b193-a91466c768e6, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.707Z[UTC]]
Pipeline[ Id: b0d8c806-7e95-4959-b8e2-7a69a2122163, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:35:54.362Z[UTC]]
Pipeline[ Id: 3cae1542-1313-4dad-86c5-58ed7bc3f7c0, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.127Z[UTC]]
Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:43:55.987Z[UTC]]
Pipeline[ Id: e48b3e7d-5a59-4d17-a902-31c9be149619, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:07a05cf4-dc30-473b-837b-17c4c6f914d0, CreationTimestamp2021-07-20T20:14:41.474Z[UTC]]
Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2021-07-20T20:38:39.145Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:44:03.574" endtime="20210720 20:44:03.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:44:03.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:44:03.577" endtime="20210720 20:44:03.578"/>
</kw>
<status status="PASS" starttime="20210720 20:43:56.451" endtime="20210720 20:44:03.579"/>
</kw>
<msg timestamp="20210720 20:44:03.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:43:56.450" endtime="20210720 20:44:03.580"/>
</kw>
<msg timestamp="20210720 20:44:03.581" level="INFO">${output} = Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:43:56.449" endtime="20210720 20:44:03.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:44:03.581" endtime="20210720 20:44:03.582"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:43:56.448" endtime="20210720 20:44:03.582"/>
</test>
<test id="s1-s5-s4-t3" name="List pipelines with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:03.591" level="INFO">Running command 'ozone admin pipeline list --scm scm2.org 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:10.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:44:10.551" level="INFO">${output} = Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:44:03.588" endtime="20210720 20:44:10.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:10.553" level="INFO">Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e1c7a26b-9ce9-41be-88e7-0d70ea915ff0, CreationTimestamp2021-07-20T20:14:42.492Z[UTC]]
Pipeline[ Id: f03eb1b7-6fcd-481a-b6d2-e6aa74c3a343, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:07a05cf4-dc30-473b-837b-17c4c6f914d0, CreationTimestamp2021-07-20T20:14:42.815Z[UTC]]
Pipeline[ Id: 8b105480-3262-484c-b193-a91466c768e6, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.707Z[UTC]]
Pipeline[ Id: b0d8c806-7e95-4959-b8e2-7a69a2122163, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:35:54.362Z[UTC]]
Pipeline[ Id: 3cae1542-1313-4dad-86c5-58ed7bc3f7c0, Nodes: 5a23a414-9886-4450-950a-ec3d59209c22{ip: 172.25.0.102, host: ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:5a23a414-9886-4450-950a-ec3d59209c22, CreationTimestamp2021-07-20T20:14:42.127Z[UTC]]
Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:43:55.987Z[UTC]]
Pipeline[ Id: e48b3e7d-5a59-4d17-a902-31c9be149619, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:07a05cf4-dc30-473b-837b-17c4c6f914d0, CreationTimestamp2021-07-20T20:14:41.474Z[UTC]]
Pipeline[ Id: 18cab4fb-e592-4d7e-890e-89dcda5bc25a, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2021-07-20T20:38:39.145Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:44:10.552" endtime="20210720 20:44:10.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:44:10.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:44:10.553" endtime="20210720 20:44:10.554"/>
</kw>
<status status="PASS" starttime="20210720 20:44:03.587" endtime="20210720 20:44:10.554"/>
</kw>
<msg timestamp="20210720 20:44:10.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:44:03.586" endtime="20210720 20:44:10.554"/>
</kw>
<msg timestamp="20210720 20:44:10.555" level="INFO">${output} = Pipeline[ Id: 76e2c7a6-d4fe-4a1a-baf7-86fa3590384e, Nodes: e1c7a26b-9ce9-41be-88e7-0d70ea915ff0{ip: 172.25.0.103, host: ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:44:03.585" endtime="20210720 20:44:10.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:44:10.555" endtime="20210720 20:44:10.556"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:44:03.583" endtime="20210720 20:44:10.556"/>
</test>
<test id="s1-s5-s4-t4" name="Deactivate pipeline">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:10.563" level="INFO">Running command 'ozone admin pipeline deactivate "10d89982-2d94-4fb1-b8bf-f85262f88193" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:17.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:44:17.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:44:10.560" endtime="20210720 20:44:17.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:17.263" level="INFO"/>
<status status="PASS" starttime="20210720 20:44:17.262" endtime="20210720 20:44:17.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:44:17.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:44:17.263" endtime="20210720 20:44:17.264"/>
</kw>
<status status="PASS" starttime="20210720 20:44:10.559" endtime="20210720 20:44:17.264"/>
</kw>
<msg timestamp="20210720 20:44:17.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:44:10.559" endtime="20210720 20:44:17.264"/>
</kw>
<status status="PASS" starttime="20210720 20:44:10.558" endtime="20210720 20:44:17.264"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:17.269" level="INFO">Running command 'ozone admin pipeline list | grep "10d89982-2d94-4fb1-b8bf-f85262f88193" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:24.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:44:24.311" level="INFO">${output} = Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:44:17.266" endtime="20210720 20:44:24.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:24.313" level="INFO">Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2021-07-20T20:43:55.987Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:44:24.312" endtime="20210720 20:44:24.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:44:24.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:44:24.313" endtime="20210720 20:44:24.314"/>
</kw>
<status status="PASS" starttime="20210720 20:44:17.265" endtime="20210720 20:44:24.314"/>
</kw>
<msg timestamp="20210720 20:44:24.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:44:17.265" endtime="20210720 20:44:24.315"/>
</kw>
<msg timestamp="20210720 20:44:24.315" level="INFO">${output} = Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:44:17.264" endtime="20210720 20:44:24.315"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:44:24.315" endtime="20210720 20:44:24.315"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:44:10.557" endtime="20210720 20:44:24.316"/>
</test>
<test id="s1-s5-s4-t5" name="Activate pipeline">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:24.322" level="INFO">Running command 'ozone admin pipeline activate "10d89982-2d94-4fb1-b8bf-f85262f88193" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:32.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:44:32.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:44:24.320" endtime="20210720 20:44:32.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:32.328" level="INFO"/>
<status status="PASS" starttime="20210720 20:44:32.327" endtime="20210720 20:44:32.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:44:32.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:44:32.328" endtime="20210720 20:44:32.330"/>
</kw>
<status status="PASS" starttime="20210720 20:44:24.319" endtime="20210720 20:44:32.330"/>
</kw>
<msg timestamp="20210720 20:44:32.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:44:24.318" endtime="20210720 20:44:32.331"/>
</kw>
<status status="PASS" starttime="20210720 20:44:24.317" endtime="20210720 20:44:32.332"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:32.343" level="INFO">Running command 'ozone admin pipeline list | grep "10d89982-2d94-4fb1-b8bf-f85262f88193" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:39.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:44:39.616" level="INFO">${output} = Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:44:32.335" endtime="20210720 20:44:39.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:39.618" level="INFO">Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2021-07-20T20:43:55.987Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:44:39.617" endtime="20210720 20:44:39.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:44:39.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:44:39.619" endtime="20210720 20:44:39.620"/>
</kw>
<status status="PASS" starttime="20210720 20:44:32.334" endtime="20210720 20:44:39.621"/>
</kw>
<msg timestamp="20210720 20:44:39.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:44:32.333" endtime="20210720 20:44:39.621"/>
</kw>
<msg timestamp="20210720 20:44:39.622" level="INFO">${output} = Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:44:32.332" endtime="20210720 20:44:39.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:44:39.622" endtime="20210720 20:44:39.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:44:24.316" endtime="20210720 20:44:39.623"/>
</test>
<test id="s1-s5-s4-t6" name="Close pipeline">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:39.633" level="INFO">Running command 'ozone admin pipeline close "10d89982-2d94-4fb1-b8bf-f85262f88193" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:46.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:44:46.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:44:39.629" endtime="20210720 20:44:46.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:46.182" level="INFO"/>
<status status="PASS" starttime="20210720 20:44:46.181" endtime="20210720 20:44:46.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:44:46.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:44:46.183" endtime="20210720 20:44:46.185"/>
</kw>
<status status="PASS" starttime="20210720 20:44:39.628" endtime="20210720 20:44:46.185"/>
</kw>
<msg timestamp="20210720 20:44:46.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:44:39.627" endtime="20210720 20:44:46.186"/>
</kw>
<status status="PASS" starttime="20210720 20:44:39.626" endtime="20210720 20:44:46.187"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:46.195" level="INFO">Running command 'ozone admin pipeline list | grep "10d89982-2d94-4fb1-b8bf-f85262f88193" 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:50.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:44:50.892" level="INFO">${output} = Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:44:46.190" endtime="20210720 20:44:50.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:50.894" level="INFO">Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2021-07-20T20:43:55.987Z[UTC]]</msg>
<status status="PASS" starttime="20210720 20:44:50.893" endtime="20210720 20:44:50.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:44:50.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:44:50.895" endtime="20210720 20:44:50.896"/>
</kw>
<status status="PASS" starttime="20210720 20:44:46.189" endtime="20210720 20:44:50.897"/>
</kw>
<msg timestamp="20210720 20:44:50.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:44:46.188" endtime="20210720 20:44:50.897"/>
</kw>
<msg timestamp="20210720 20:44:50.898" level="INFO">${output} = Pipeline[ Id: 10d89982-2d94-4fb1-b8bf-f85262f88193, Nodes: 07a05cf4-dc30-473b-837b-17c4c6f914d0{ip: 172.25.0.104, host: ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net, ports: [REPLICATION=9886, R...</msg>
<status status="PASS" starttime="20210720 20:44:46.187" endtime="20210720 20:44:50.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:44:50.898" endtime="20210720 20:44:50.899"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:44:39.625" endtime="20210720 20:44:50.900"/>
</test>
<test id="s1-s5-s4-t7" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:50.907" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:55.823" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:44:55.823" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210720 20:44:50.903" endtime="20210720 20:44:55.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:55.825" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20210720 20:44:55.824" endtime="20210720 20:44:55.825"/>
</kw>
<msg timestamp="20210720 20:44:55.825" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20210720 20:44:50.902" endtime="20210720 20:44:55.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:44:55.825" endtime="20210720 20:44:55.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:44:55.826" endtime="20210720 20:44:55.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:44:55.827" endtime="20210720 20:44:55.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:44:55.828" endtime="20210720 20:44:55.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:44:55.828" endtime="20210720 20:44:55.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:44:50.901" endtime="20210720 20:44:55.829"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20210720 20:43:49.768" endtime="20210720 20:44:55.831"/>
</suite>
<suite id="s1-s5-s5" name="Replicationmanager" source="/opt/hadoop/smoketest/admincli/replicationmanager.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:55.854" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:55.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:44:55.858" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:44:55.849" endtime="20210720 20:44:55.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:55.859" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:44:55.859" endtime="20210720 20:44:55.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:44:55.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:44:55.859" endtime="20210720 20:44:55.860"/>
</kw>
<status status="PASS" starttime="20210720 20:44:55.848" endtime="20210720 20:44:55.861"/>
</kw>
<msg timestamp="20210720 20:44:55.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:44:55.848" endtime="20210720 20:44:55.861"/>
</kw>
<msg timestamp="20210720 20:44:55.862" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:44:55.847" endtime="20210720 20:44:55.862"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:44:55.864" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:44:55.862" endtime="20210720 20:44:55.864"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:55.870" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:44:55.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:44:55.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:44:55.867" endtime="20210720 20:44:55.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:44:55.883" level="INFO"/>
<status status="PASS" starttime="20210720 20:44:55.882" endtime="20210720 20:44:55.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:44:55.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:44:55.883" endtime="20210720 20:44:55.884"/>
</kw>
<status status="PASS" starttime="20210720 20:44:55.866" endtime="20210720 20:44:55.884"/>
</kw>
<msg timestamp="20210720 20:44:55.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:44:55.866" endtime="20210720 20:44:55.885"/>
</kw>
<status status="PASS" starttime="20210720 20:44:55.865" endtime="20210720 20:44:55.885"/>
</kw>
<status status="PASS" starttime="20210720 20:44:55.864" endtime="20210720 20:44:55.885"/>
</kw>
<status status="PASS" starttime="20210720 20:44:55.846" endtime="20210720 20:44:55.885"/>
</kw>
<status status="PASS" starttime="20210720 20:44:55.845" endtime="20210720 20:44:55.885"/>
</kw>
<test id="s1-s5-s5-t1" name="Check replicationmanager">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:44:55.891" level="INFO">Running command 'ozone admin replicationmanager status 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:45:02.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:45:02.558" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:44:55.889" endtime="20210720 20:45:02.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:45:02.559" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:45:02.559" endtime="20210720 20:45:02.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:45:02.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:45:02.560" endtime="20210720 20:45:02.560"/>
</kw>
<status status="PASS" starttime="20210720 20:44:55.888" endtime="20210720 20:45:02.561"/>
</kw>
<msg timestamp="20210720 20:45:02.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:44:55.887" endtime="20210720 20:45:02.561"/>
</kw>
<msg timestamp="20210720 20:45:02.561" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:44:55.887" endtime="20210720 20:45:02.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:02.561" endtime="20210720 20:45:02.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:02.562" endtime="20210720 20:45:02.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:44:55.886" endtime="20210720 20:45:02.563"/>
</test>
<test id="s1-s5-s5-t2" name="Check replicationmanager with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:45:02.570" level="INFO">Running command 'ozone admin replicationmanager status --scm scm2.org 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:45:09.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:45:09.964" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:45:02.567" endtime="20210720 20:45:09.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:45:09.966" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:45:09.965" endtime="20210720 20:45:09.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:45:09.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:45:09.967" endtime="20210720 20:45:09.967"/>
</kw>
<status status="PASS" starttime="20210720 20:45:02.567" endtime="20210720 20:45:09.968"/>
</kw>
<msg timestamp="20210720 20:45:09.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:45:02.566" endtime="20210720 20:45:09.968"/>
</kw>
<msg timestamp="20210720 20:45:09.968" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20210720 20:45:02.565" endtime="20210720 20:45:09.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:09.969" endtime="20210720 20:45:09.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:09.969" endtime="20210720 20:45:09.970"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:45:02.564" endtime="20210720 20:45:09.970"/>
</test>
<test id="s1-s5-s5-t3" name="Stop replicationmanager">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager stop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:45:09.978" level="INFO">Running command 'ozone admin replicationmanager stop 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:45:16.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:45:16.953" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20210720 20:45:09.975" endtime="20210720 20:45:16.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:45:16.955" level="INFO">Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20210720 20:45:16.954" endtime="20210720 20:45:16.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:45:16.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:45:16.955" endtime="20210720 20:45:16.956"/>
</kw>
<status status="PASS" starttime="20210720 20:45:09.974" endtime="20210720 20:45:16.956"/>
</kw>
<msg timestamp="20210720 20:45:16.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:45:09.974" endtime="20210720 20:45:16.956"/>
</kw>
<msg timestamp="20210720 20:45:16.957" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20210720 20:45:09.973" endtime="20210720 20:45:16.957"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Stopping ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:16.957" endtime="20210720 20:45:16.958"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:45:16.963" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Not Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:45:24.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:45:24.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:45:16.961" endtime="20210720 20:45:24.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:45:24.463" level="INFO"/>
<status status="PASS" starttime="20210720 20:45:24.463" endtime="20210720 20:45:24.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:45:24.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:45:24.464" endtime="20210720 20:45:24.464"/>
</kw>
<status status="PASS" starttime="20210720 20:45:16.960" endtime="20210720 20:45:24.464"/>
</kw>
<msg timestamp="20210720 20:45:24.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:45:16.959" endtime="20210720 20:45:24.465"/>
</kw>
<status status="PASS" starttime="20210720 20:45:16.958" endtime="20210720 20:45:24.465"/>
</kw>
<status status="PASS" starttime="20210720 20:45:16.958" endtime="20210720 20:45:24.465"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:45:09.972" endtime="20210720 20:45:24.465"/>
</test>
<test id="s1-s5-s5-t4" name="Start replicationmanager">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager start</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:45:24.472" level="INFO">Running command 'ozone admin replicationmanager start 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:45:31.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:45:31.925" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20210720 20:45:24.468" endtime="20210720 20:45:31.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:45:31.927" level="INFO">Starting ReplicationManager...</msg>
<status status="PASS" starttime="20210720 20:45:31.926" endtime="20210720 20:45:31.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:45:31.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:45:31.927" endtime="20210720 20:45:31.928"/>
</kw>
<status status="PASS" starttime="20210720 20:45:24.468" endtime="20210720 20:45:31.928"/>
</kw>
<msg timestamp="20210720 20:45:31.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:45:24.467" endtime="20210720 20:45:31.929"/>
</kw>
<msg timestamp="20210720 20:45:31.929" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20210720 20:45:24.467" endtime="20210720 20:45:31.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Starting ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:31.929" endtime="20210720 20:45:31.929"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:45:31.935" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:45:39.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:45:39.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:45:31.932" endtime="20210720 20:45:39.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:45:39.510" level="INFO"/>
<status status="PASS" starttime="20210720 20:45:39.509" endtime="20210720 20:45:39.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:45:39.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:45:39.510" endtime="20210720 20:45:39.511"/>
</kw>
<status status="PASS" starttime="20210720 20:45:31.931" endtime="20210720 20:45:39.512"/>
</kw>
<msg timestamp="20210720 20:45:39.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:45:31.931" endtime="20210720 20:45:39.512"/>
</kw>
<status status="PASS" starttime="20210720 20:45:31.930" endtime="20210720 20:45:39.512"/>
</kw>
<status status="PASS" starttime="20210720 20:45:31.930" endtime="20210720 20:45:39.512"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:45:24.466" endtime="20210720 20:45:39.513"/>
</test>
<test id="s1-s5-s5-t5" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:45:39.519" level="INFO">Running command 'ozone admin replicationmanager 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:45:44.227" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:45:44.227" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20210720 20:45:39.516" endtime="20210720 20:45:44.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:45:44.229" level="INFO">Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  start   Start ReplicationManager
  stop    Stop ReplicationManager
  status  Check if ReplicationManager is running or not</msg>
<status status="PASS" starttime="20210720 20:45:44.228" endtime="20210720 20:45:44.229"/>
</kw>
<msg timestamp="20210720 20:45:44.229" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20210720 20:45:39.515" endtime="20210720 20:45:44.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:44.230" endtime="20210720 20:45:44.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>start</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:44.230" endtime="20210720 20:45:44.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>stop</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:44.231" endtime="20210720 20:45:44.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:44.231" endtime="20210720 20:45:44.232"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:45:39.514" endtime="20210720 20:45:44.232"/>
</test>
<doc>Test ozone admin replicationmanager command</doc>
<status status="PASS" starttime="20210720 20:44:55.835" endtime="20210720 20:45:44.234"/>
</suite>
<suite id="s1-s5-s6" name="Safemode" source="/opt/hadoop/smoketest/admincli/safemode.robot">
<test id="s1-s5-s6-t1" name="Check safemode">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:45:44.251" level="INFO">Running command 'ozone admin safemode status 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:45:50.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:45:50.748" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:45:44.248" endtime="20210720 20:45:50.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:45:50.751" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:45:50.750" endtime="20210720 20:45:50.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:45:50.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:45:50.752" endtime="20210720 20:45:50.754"/>
</kw>
<status status="PASS" starttime="20210720 20:45:44.247" endtime="20210720 20:45:50.754"/>
</kw>
<msg timestamp="20210720 20:45:50.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:45:44.247" endtime="20210720 20:45:50.755"/>
</kw>
<msg timestamp="20210720 20:45:50.756" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:45:44.246" endtime="20210720 20:45:50.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:50.756" endtime="20210720 20:45:50.757"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:45:44.245" endtime="20210720 20:45:50.758"/>
</test>
<test id="s1-s5-s6-t2" name="Check safemode with explicit host">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:45:50.767" level="INFO">Running command 'ozone admin safemode status --scm scm2.org 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:45:57.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:45:57.909" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:45:50.764" endtime="20210720 20:45:57.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:45:57.911" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:45:57.910" endtime="20210720 20:45:57.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:45:57.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:45:57.911" endtime="20210720 20:45:57.911"/>
</kw>
<status status="PASS" starttime="20210720 20:45:50.763" endtime="20210720 20:45:57.912"/>
</kw>
<msg timestamp="20210720 20:45:57.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:45:50.763" endtime="20210720 20:45:57.912"/>
</kw>
<msg timestamp="20210720 20:45:57.913" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:45:50.762" endtime="20210720 20:45:57.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:45:57.913" endtime="20210720 20:45:57.914"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:45:50.760" endtime="20210720 20:45:57.915"/>
</test>
<test id="s1-s5-s6-t3" name="Wait for safemode exit">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode wait -t 2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:45:57.926" level="INFO">Running command 'ozone admin safemode wait -t 2 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:46:02.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:46:02.639" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:45:57.923" endtime="20210720 20:46:02.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:46:02.641" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:46:02.640" endtime="20210720 20:46:02.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:46:02.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:46:02.642" endtime="20210720 20:46:02.644"/>
</kw>
<status status="PASS" starttime="20210720 20:45:57.919" endtime="20210720 20:46:02.645"/>
</kw>
<msg timestamp="20210720 20:46:02.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:45:57.918" endtime="20210720 20:46:02.645"/>
</kw>
<msg timestamp="20210720 20:46:02.645" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20210720 20:45:57.916" endtime="20210720 20:46:02.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:46:02.646" endtime="20210720 20:46:02.646"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:45:57.915" endtime="20210720 20:46:02.647"/>
</test>
<test id="s1-s5-s6-t4" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin safemode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:46:02.655" level="INFO">Running command 'ozone admin safemode 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:46:07.475" level="INFO">${rc} = 255</msg>
<msg timestamp="20210720 20:46:07.476" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20210720 20:46:02.652" endtime="20210720 20:46:07.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:46:07.477" level="INFO">Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  status  Check if SCM is in safe mode
  exit    Force SCM out of safe mode
  wait    Wait until the scm is out from the safe mode.</msg>
<status status="PASS" starttime="20210720 20:46:07.476" endtime="20210720 20:46:07.477"/>
</kw>
<msg timestamp="20210720 20:46:07.478" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20210720 20:46:02.651" endtime="20210720 20:46:07.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:46:07.478" endtime="20210720 20:46:07.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:46:07.479" endtime="20210720 20:46:07.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>exit</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:46:07.480" endtime="20210720 20:46:07.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>wait</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210720 20:46:07.481" endtime="20210720 20:46:07.481"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:46:02.649" endtime="20210720 20:46:07.482"/>
</test>
<doc>Test ozone admin safemode command</doc>
<status status="PASS" starttime="20210720 20:45:44.237" endtime="20210720 20:46:07.483"/>
</suite>
<suite id="s1-s5-s7" name="Scmha" source="/opt/hadoop/smoketest/admincli/scmha.robot">
<test id="s1-s5-s7-t1" name="Run scm roles">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin scm roles</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:46:07.501" level="INFO">Running command 'ozone admin scm roles 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:46:13.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:46:13.893" level="INFO">${output} = [scm3.org:9894:FOLLOWER, scm1.org:9894:LEADER, scm2.org:9894:FOLLOWER]</msg>
<status status="PASS" starttime="20210720 20:46:07.498" endtime="20210720 20:46:13.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:46:13.894" level="INFO">[scm3.org:9894:FOLLOWER, scm1.org:9894:LEADER, scm2.org:9894:FOLLOWER]</msg>
<status status="PASS" starttime="20210720 20:46:13.893" endtime="20210720 20:46:13.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:46:13.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:46:13.894" endtime="20210720 20:46:13.895"/>
</kw>
<status status="PASS" starttime="20210720 20:46:07.497" endtime="20210720 20:46:13.895"/>
</kw>
<msg timestamp="20210720 20:46:13.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:46:07.497" endtime="20210720 20:46:13.896"/>
</kw>
<msg timestamp="20210720 20:46:13.896" level="INFO">${output} = [scm3.org:9894:FOLLOWER, scm1.org:9894:LEADER, scm2.org:9894:FOLLOWER]</msg>
<status status="PASS" starttime="20210720 20:46:07.496" endtime="20210720 20:46:13.896"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>[scm:9894(:LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210720 20:46:13.896" endtime="20210720 20:46:13.897"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210720 20:46:07.496" endtime="20210720 20:46:13.897"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210720 20:46:07.486" endtime="20210720 20:46:13.898"/>
</suite>
<status status="PASS" starttime="20210720 20:40:58.661" endtime="20210720 20:46:13.902"/>
</suite>
<suite id="s1-s6" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s6-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:15:30.642" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:15:30.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:15:30.648" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210720 20:15:30.638" endtime="20210720 20:15:30.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:15:30.649" level="INFO">scm</msg>
<status status="PASS" starttime="20210720 20:15:30.649" endtime="20210720 20:15:30.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:15:30.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:15:30.650" endtime="20210720 20:15:30.651"/>
</kw>
<status status="PASS" starttime="20210720 20:15:30.638" endtime="20210720 20:15:30.651"/>
</kw>
<msg timestamp="20210720 20:15:30.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:15:30.638" endtime="20210720 20:15:30.651"/>
</kw>
<msg timestamp="20210720 20:15:30.652" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210720 20:15:30.637" endtime="20210720 20:15:30.652"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210720 20:15:30.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210720 20:15:30.652" endtime="20210720 20:15:30.652"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210720 20:15:30.656" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210720 20:15:30.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210720 20:15:30.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210720 20:15:30.654" endtime="20210720 20:15:30.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210720 20:15:30.666" level="INFO"/>
<status status="PASS" starttime="20210720 20:15:30.665" endtime="20210720 20:15:30.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210720 20:15:30.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210720 20:15:30.666" endtime="20210720 20:15:30.666"/>
</kw>
<status status="PASS" starttime="20210720 20:15:30.654" endtime="20210720 20:15:30.667"/>
</kw>
<msg timestamp="20210720 20:15:30.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210720 20:15:30.654" endtime="20210720 20:15:30.667"/>
</kw>
<status status="PASS" starttime="20210720 20:15:30.653" endtime="20210720 20:15:30.667"/>
</kw>
<status status="PASS" starttime="20210720 20:15:30.653" endtime="20210720 20:15:30.668"/>
</kw>
<status status="PASS" starttime="20210720 20:15:30.636" endtime="20210720 20:15:30.668"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210720 20:15:30.635" endtime="20210720 20:15:30.668"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210720 20:15:30.578" endtime="20210720 20:15:30.670"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="1807695"/>
</suite>
<statistics>
<total>
<stat pass="133" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="133" fail="0" skip="0" id="s1" name="ozonesecure-ha">ozonesecure-ha</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1" name="Freon">ozonesecure-ha.Freon</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s1" name="Generate">ozonesecure-ha.Freon.Generate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="Remove">ozonesecure-ha.Freon.Remove</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Validate">ozonesecure-ha.Freon.Validate</stat>
<stat pass="15" fail="0" skip="0" id="s1-s2" name="Links">ozonesecure-ha.Links</stat>
<stat pass="43" fail="0" skip="0" id="s1-s3" name="S3">ozonesecure-ha.S3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="Awss3">ozonesecure-ha.S3.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s2" name="Boto3">ozonesecure-ha.S3.Boto3</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s3" name="Bucketcreate">ozonesecure-ha.S3.Bucketcreate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s4" name="Bucketdelete">ozonesecure-ha.S3.Bucketdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s5" name="Buckethead">ozonesecure-ha.S3.Buckethead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s6" name="Bucketlist">ozonesecure-ha.S3.Bucketlist</stat>
<stat pass="13" fail="0" skip="0" id="s1-s3-s7" name="MultipartUpload">ozonesecure-ha.S3.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3-s8" name="Objectcopy">ozonesecure-ha.S3.Objectcopy</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3-s9" name="Objectdelete">ozonesecure-ha.S3.Objectdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s10" name="Objectmultidelete">ozonesecure-ha.S3.Objectmultidelete</stat>
<stat pass="10" fail="0" skip="0" id="s1-s3-s11" name="Objectputget">ozonesecure-ha.S3.Objectputget</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s12" name="Webui">ozonesecure-ha.S3.Webui</stat>
<stat pass="34" fail="0" skip="0" id="s1-s4" name="Admincli">ozonesecure-ha.Admincli</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s1" name="Admin">ozonesecure-ha.Admincli.Admin</stat>
<stat pass="11" fail="0" skip="0" id="s1-s4-s2" name="Container">ozonesecure-ha.Admincli.Container</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4-s3" name="Datanode">ozonesecure-ha.Admincli.Datanode</stat>
<stat pass="7" fail="0" skip="0" id="s1-s4-s4" name="Pipeline">ozonesecure-ha.Admincli.Pipeline</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4-s5" name="Replicationmanager">ozonesecure-ha.Admincli.Replicationmanager</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4-s6" name="Safemode">ozonesecure-ha.Admincli.Safemode</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s7" name="Scmha">ozonesecure-ha.Admincli.Scmha</stat>
<stat pass="34" fail="0" skip="0" id="s1-s5" name="Admincli">ozonesecure-ha.Admincli</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s1" name="Admin">ozonesecure-ha.Admincli.Admin</stat>
<stat pass="11" fail="0" skip="0" id="s1-s5-s2" name="Container">ozonesecure-ha.Admincli.Container</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5-s3" name="Datanode">ozonesecure-ha.Admincli.Datanode</stat>
<stat pass="7" fail="0" skip="0" id="s1-s5-s4" name="Pipeline">ozonesecure-ha.Admincli.Pipeline</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5-s5" name="Replicationmanager">ozonesecure-ha.Admincli.Replicationmanager</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5-s6" name="Safemode">ozonesecure-ha.Admincli.Safemode</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5-s7" name="Scmha">ozonesecure-ha.Admincli.Scmha</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Kinit">ozonesecure-ha.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
